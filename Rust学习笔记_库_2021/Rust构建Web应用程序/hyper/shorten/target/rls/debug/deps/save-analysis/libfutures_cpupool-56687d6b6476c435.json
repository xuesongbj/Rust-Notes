{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_cpupool","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"with-deprecated\"","-C","metadata=56687d6b6476c435","-C","extra-filename=-56687d6b6476c435","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","futures=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libfutures-33ca0dc351b2026d.rmeta","--extern","num_cpus=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libnum_cpus-005541aa8b75573c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libfutures_cpupool-56687d6b6476c435.rmeta"},"prelude":{"crate_id":{"name":"futures_cpupool","disambiguator":[12640163209717883140,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":18,"id":{"name":"futures","disambiguator":[15335327788532649094,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":19,"id":{"name":"num_cpus","disambiguator":[16487926303637625758,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","num":20,"id":{"name":"libc","disambiguator":[5366990215584721661,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":0,"byte_end":14692,"line_start":1,"line_end":450,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":0,"byte_end":14692,"line_start":1,"line_end":450,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":149}],"decl_id":null,"docs":" A simple crate for executing work on a thread pool, and getting back a\n future.","sig":null,"attributes":[{"value":"/ A simple crate for executing work on a thread pool, and getting back a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":75,"byte_end":86,"line_start":2,"line_end":2,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":87,"byte_end":90,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate provides a simple thread pool abstraction for running work","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":91,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ externally from the current thread that's running. An instance of `Future`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":165,"byte_end":243,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ is handed back to represent that the work may be done later, and further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":244,"byte_end":320,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ computations can be chained along with it as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":321,"byte_end":375,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":376,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":380,"byte_end":391,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ extern crate futures;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":392,"byte_end":417,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ extern crate futures_cpupool;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":418,"byte_end":451,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":452,"byte_end":455,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ use futures::Future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":456,"byte_end":480,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ use futures_cpupool::CpuPool;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":481,"byte_end":514,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":515,"byte_end":518,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # fn long_running_future(a: u32) -> Box<futures::future::Future<Item = u32, Error = ()> + Send> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":519,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":102}},{"value":"/ #     Box::new(futures::future::result(Ok(a)))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":621,"byte_end":671,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":672,"byte_end":679,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":680,"byte_end":697,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":698,"byte_end":701,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Create a worker thread pool with four threads","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":702,"byte_end":754,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ let pool = CpuPool::new(4);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":755,"byte_end":786,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":787,"byte_end":790,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Execute some work on the thread pool, optionally closing over data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":791,"byte_end":865,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ let a = pool.spawn(long_running_future(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":866,"byte_end":913,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ let b = pool.spawn(long_running_future(100));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":914,"byte_end":963,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":964,"byte_end":967,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Express some further computation once the work is completed on the thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":968,"byte_end":1048,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ // pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1049,"byte_end":1061,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ let c = a.join(b).map(|(a, b)| a + b).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1062,"byte_end":1120,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1121,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Print out the result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1125,"byte_end":1152,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ println!(\"{:?}\", c);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1153,"byte_end":1177,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1178,"byte_end":1185,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1186,"byte_end":1193,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1195,"byte_end":1217,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1218,"byte_end":1257,"line_start":38,"line_end":38,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2668,"byte_end":2675,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"CpuPool","qualname":"::CpuPool","value":"CpuPool {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A thread pool intended to run CPU intensive work.","sig":null,"attributes":[{"value":"/ A thread pool intended to run CPU intensive work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1709,"byte_end":1762,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1763,"byte_end":1766,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This thread pool will hand out futures representing the completed work","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1767,"byte_end":1841,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ that happens on the thread pool itself, and the futures can then be later","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1842,"byte_end":1919,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ composed with other work as part of an overall computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1920,"byte_end":1983,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1984,"byte_end":1987,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The worker threads associated with a thread pool are kept alive so long as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":1988,"byte_end":2066,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ there is an open handle to the `CpuPool` or there is work running on them. Once","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2067,"byte_end":2150,"line_start":62,"line_end":62,"column_start":1,"column_end":84}},{"value":"/ all work has been drained and all references have gone away the worker","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2151,"byte_end":2225,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ threads will be shut down.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2226,"byte_end":2256,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2257,"byte_end":2260,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Currently `CpuPool` implements `Clone` which just clones a new reference to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2261,"byte_end":2340,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ the underlying thread pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2341,"byte_end":2372,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2373,"byte_end":2376,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ **Note:** if you use CpuPool inside a library it's better accept a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2377,"byte_end":2447,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ `Builder` object for thread configuration rather than configuring just","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2448,"byte_end":2522,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ pool size.  This not only future proof for other settings but also allows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2523,"byte_end":2600,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ user to attach monitoring tools to lifecycle hooks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2601,"byte_end":2656,"line_start":72,"line_end":72,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2894,"byte_end":2901,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" Thread pool configuration object","sig":null,"attributes":[{"value":"/ Thread pool configuration object","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2704,"byte_end":2740,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2741,"byte_end":2744,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Builder starts with a number of workers equal to the number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2745,"byte_end":2808,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/ of CPUs on the host. But you can change it until you call `create()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":2809,"byte_end":2882,"line_start":80,"line_end":80,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4129,"byte_end":4138,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"CpuFuture","qualname":"::CpuFuture","value":"CpuFuture {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" The type of future returned from the `CpuPool::spawn` function, which\n proxies the futures running on the thread pool.","sig":null,"attributes":[{"value":"/ The type of future returned from the `CpuPool::spawn` function, which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3854,"byte_end":3927,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ proxies the futures running on the thread pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3928,"byte_end":3979,"line_start":123,"line_end":123,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3980,"byte_end":3983,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This future will resolve in the same way as the underlying future, and it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3984,"byte_end":4061,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ will propagate panics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4062,"byte_end":4088,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"must_use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4089,"byte_end":4100,"line_start":127,"line_end":127,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4879,"byte_end":4882,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<CpuPool>::new","value":"pub fn new(usize) -> CpuPool","parent":null,"children":[],"decl_id":null,"docs":" Creates a new thread pool with `size` worker threads associated with it.","sig":null,"attributes":[{"value":"/ Creates a new thread pool with `size` worker threads associated with it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4303,"byte_end":4379,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The returned handle can use `execute` to run work on this thread pool,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4392,"byte_end":4466,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ and clones can be made of it to get multiple references to the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4471,"byte_end":4542,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ thread pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4547,"byte_end":4563,"line_start":144,"line_end":144,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4568,"byte_end":4571,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4576,"byte_end":4603,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4608,"byte_end":4611,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4616,"byte_end":4627,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use futures_cpupool::{Builder, CpuPool};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4632,"byte_end":4678,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4683,"byte_end":4688,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn new(size: usize) -> CpuPool {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4693,"byte_end":4731,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ Builder::new().pool_size(size).create()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4736,"byte_end":4779,"line_start":152,"line_end":152,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4784,"byte_end":4791,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4796,"byte_end":4803,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4808,"byte_end":4811,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4816,"byte_end":4828,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4833,"byte_end":4836,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Panics if `size == 0`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4841,"byte_end":4867,"line_start":158,"line_end":158,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5305,"byte_end":5317,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"new_num_cpus","qualname":"<CpuPool>::new_num_cpus","value":"pub fn new_num_cpus() -> CpuPool","parent":null,"children":[],"decl_id":null,"docs":" Creates a new thread pool with a number of workers equal to the number\n of CPUs on the host.","sig":null,"attributes":[{"value":"/ Creates a new thread pool with a number of workers equal to the number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4968,"byte_end":5042,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ of CPUs on the host.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5047,"byte_end":5071,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5076,"byte_end":5079,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This is a shortcut for:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5084,"byte_end":5111,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5116,"byte_end":5119,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5124,"byte_end":5135,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/ # use futures_cpupool::{Builder, CpuPool};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5140,"byte_end":5186,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5191,"byte_end":5196,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ # fn new_num_cpus() -> CpuPool {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5201,"byte_end":5237,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/ Builder::new().create()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5242,"byte_end":5269,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5274,"byte_end":5281,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5286,"byte_end":5293,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6462,"byte_end":6467,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"spawn","qualname":"<CpuPool>::spawn","value":"pub fn spawn<F>(&Self, F) -> CpuFuture<F::Item, F::Error> where F: Future +\nSend + 'static, F::Item: Send + 'static, F::Error: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future to run on this thread pool, returning a future\n representing the produced value.","sig":null,"attributes":[{"value":"/ Spawns a future to run on this thread pool, returning a future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5376,"byte_end":5442,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ representing the produced value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5447,"byte_end":5483,"line_start":180,"line_end":180,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5488,"byte_end":5491,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function will execute the future `f` on the associated thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5496,"byte_end":5566,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ pool, and return a future representing the finished computation. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5571,"byte_end":5643,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ returned future serves as a proxy to the computation that `F` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5648,"byte_end":5716,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ running.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5721,"byte_end":5733,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5738,"byte_end":5741,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To simply run an arbitrary closure on a thread pool and extract the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5746,"byte_end":5817,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ result, you can use the `future::lazy` combinator to defer work to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5822,"byte_end":5892,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ executing on the thread pool itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5897,"byte_end":5937,"line_start":189,"line_end":189,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5942,"byte_end":5945,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that if the future `f` panics it will be caught by default and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":5950,"byte_end":6025,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ returned future will propagate the panic. That is, panics will not tear","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6030,"byte_end":6105,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ down the thread pool and will be propagated to the returned future's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6110,"byte_end":6182,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ `poll` method if queried.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6187,"byte_end":6216,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6221,"byte_end":6224,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the returned future is dropped then this `CpuPool` will attempt to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6229,"byte_end":6302,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ cancel the computation, if possible. That is, if the computation is in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6307,"byte_end":6381,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ the middle of working, it will be interrupted when possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":6386,"byte_end":6450,"line_start":198,"line_end":198,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7761,"byte_end":7769,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<CpuPool>::spawn_fn","value":"pub fn spawn_fn<F, R>(&Self, F) -> CpuFuture<R::Item, R::Error> where\nF: FnOnce() -> R + Send + 'static, R: IntoFuture + 'static, R::Future: Send +\n'static, R::Item: Send + 'static, R::Error: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a closure on this thread pool.","sig":null,"attributes":[{"value":"/ Spawns a closure on this thread pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7293,"byte_end":7334,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7339,"byte_end":7342,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around the `spawn` function above","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7347,"byte_end":7423,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ for running a closure wrapped in `future::lazy`. It will spawn the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7428,"byte_end":7498,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ function `f` provided onto the thread pool, and continue to run the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7503,"byte_end":7574,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ future returned by `f` on the thread pool as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7579,"byte_end":7633,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7638,"byte_end":7641,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned future will be a handle to the result produced by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7646,"byte_end":7716,"line_start":225,"line_end":225,"column_start":5,"column_end":75}},{"value":"/ future that `f` returns.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":7721,"byte_end":7749,"line_start":226,"line_end":226,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9660,"byte_end":9666,"line_start":294,"line_end":294,"column_start":12,"column_end":18},"name":"forget","qualname":"<CpuFuture<T, E>>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop this future without canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drop this future without canceling the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9383,"byte_end":9444,"line_start":289,"line_end":289,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9449,"byte_end":9452,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ When `CpuFuture` is dropped, `CpuPool` will try to abort the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9457,"byte_end":9532,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ future. This function can be used when user wants to drop but keep","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9537,"byte_end":9607,"line_start":292,"line_end":292,"column_start":5,"column_end":75}},{"value":"/ executing the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9612,"byte_end":9648,"line_start":293,"line_end":293,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11102,"byte_end":11105,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a builder a number of workers equal to the number\n of CPUs on the host.\n","sig":null,"attributes":[{"value":"/ Create a builder a number of workers equal to the number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11001,"byte_end":11061,"line_start":339,"line_end":339,"column_start":5,"column_end":65}},{"value":"/ of CPUs on the host.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11066,"byte_end":11090,"line_start":340,"line_end":340,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11446,"byte_end":11455,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"pool_size","qualname":"<Builder>::pool_size","value":"pub fn pool_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set size of a future CpuPool","sig":null,"attributes":[{"value":"/ Set size of a future CpuPool","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11320,"byte_end":11352,"line_start":351,"line_end":351,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11357,"byte_end":11360,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The size of a thread pool is the number of worker threads spawned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11365,"byte_end":11434,"line_start":353,"line_end":353,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11604,"byte_end":11614,"line_start":360,"line_end":360,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<Builder>::stack_size","value":"pub fn stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set stack size of threads in the pool.\n","sig":null,"attributes":[{"value":"/ Set stack size of threads in the pool.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11550,"byte_end":11592,"line_start":359,"line_end":359,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11960,"byte_end":11971,"line_start":369,"line_end":369,"column_start":12,"column_end":23},"name":"name_prefix","qualname":"<Builder>::name_prefix","value":"pub fn name_prefix<S: Into<String>>(&mut Self, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set thread name prefix of a future CpuPool","sig":null,"attributes":[{"value":"/ Set thread name prefix of a future CpuPool","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11722,"byte_end":11768,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11773,"byte_end":11776,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Thread name prefix is used for generating thread names. For example, if prefix is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11781,"byte_end":11866,"line_start":367,"line_end":367,"column_start":5,"column_end":90}},{"value":"/ `my-pool-`, then threads in the pool will get names like `my-pool-1` etc.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":11871,"byte_end":11948,"line_start":368,"line_end":368,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12430,"byte_end":12441,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"after_start","qualname":"<Builder>::after_start","value":"pub fn after_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` right after each thread is started but before\n running any jobs on it.","sig":null,"attributes":[{"value":"/ Execute function `f` right after each thread is started but before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12108,"byte_end":12178,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ running any jobs on it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12183,"byte_end":12210,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12215,"byte_end":12218,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This is initially intended for bookkeeping and monitoring uses.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12223,"byte_end":12290,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ The `f` will be deconstructed after the `builder` is deconstructed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12295,"byte_end":12365,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ and all threads in the pool has executed it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12370,"byte_end":12418,"line_start":379,"line_end":379,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12874,"byte_end":12885,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"before_stop","qualname":"<Builder>::before_stop","value":"pub fn before_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () + Send +\nSync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Execute function `f` before each worker thread stops.","sig":null,"attributes":[{"value":"/ Execute function `f` before each worker thread stops.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12597,"byte_end":12654,"line_start":387,"line_end":387,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12659,"byte_end":12662,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This is initially intended for bookkeeping and monitoring uses.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12667,"byte_end":12734,"line_start":389,"line_end":389,"column_start":5,"column_end":72}},{"value":"/ The `f` will be deconstructed after the `builder` is deconstructed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12739,"byte_end":12809,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/ and all threads in the pool has executed it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":12814,"byte_end":12862,"line_start":391,"line_end":391,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13167,"byte_end":13173,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"create","qualname":"<Builder>::create","value":"pub fn create(&mut Self) -> CpuPool","parent":null,"children":[],"decl_id":null,"docs":" Create CpuPool with configured parameters","sig":null,"attributes":[{"value":"/ Create CpuPool with configured parameters","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13041,"byte_end":13086,"line_start":399,"line_end":399,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13091,"byte_end":13094,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13099,"byte_end":13111,"line_start":401,"line_end":401,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13116,"byte_end":13119,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Panics if `pool_size == 0`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":13124,"byte_end":13155,"line_start":403,"line_end":403,"column_start":5,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3252,"byte_end":3259,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3419,"byte_end":3426,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3618,"byte_end":3625,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4289,"byte_end":4296,"line_start":139,"line_end":139,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8096,"byte_end":8103,"line_start":238,"line_end":238,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8323,"byte_end":8328,"line_start":247,"line_end":247,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8849,"byte_end":8856,"line_start":265,"line_end":265,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9017,"byte_end":9024,"line_start":272,"line_end":272,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9262,"byte_end":9267,"line_start":282,"line_end":282,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9361,"byte_end":9370,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9800,"byte_end":9809,"line_start":299,"line_end":299,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":10229,"byte_end":10237,"line_start":313,"line_end":313,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":10987,"byte_end":10994,"line_start":338,"line_end":338,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3213,"byte_end":3217,"line_start":95,"line_end":95,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":95}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3220,"byte_end":3224,"line_start":95,"line_end":95,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":95}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3252,"byte_end":3259,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":81},"to":{"krate":0,"index":95}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3419,"byte_end":3426,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":3618,"byte_end":3625,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":4289,"byte_end":4296,"line_start":139,"line_end":139,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8096,"byte_end":8103,"line_start":238,"line_end":238,"column_start":25,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":81},"to":{"krate":18,"index":812}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8323,"byte_end":8328,"line_start":247,"line_end":247,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":8849,"byte_end":8856,"line_start":265,"line_end":265,"column_start":16,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9017,"byte_end":9024,"line_start":272,"line_end":272,"column_start":15,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9262,"byte_end":9267,"line_start":282,"line_end":282,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":97},"to":{"krate":18,"index":3091}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9361,"byte_end":9370,"line_start":288,"line_end":288,"column_start":12,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":9800,"byte_end":9809,"line_start":299,"line_end":299,"column_start":55,"column_end":64},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":18,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":10229,"byte_end":10237,"line_start":313,"line_end":313,"column_start":28,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":89},"to":{"krate":18,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-cpupool-0.1.8/src/lib.rs","byte_start":10987,"byte_end":10994,"line_start":338,"line_end":338,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}}]}