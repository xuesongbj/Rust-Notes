{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","base64","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=9fa38ed46b465de9","-C","extra-filename=-9fa38ed46b465de9","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","byteorder=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libbyteorder-e8fbbea640139916.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libbase64-9fa38ed46b465de9.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[13713337983698044540,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[10448012027228942051,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":0,"byte_end":6452,"line_start":1,"line_end":180,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/mod.rs","byte_start":56332,"byte_end":56345,"line_start":3,"line_end":3,"column_start":24,"column_end":37},"alias_span":null,"name":"EncoderWriter","value":"","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3163,"byte_end":3169,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3171,"byte_end":3184,"line_start":73,"line_end":73,"column_start":26,"column_end":39},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3186,"byte_end":3203,"line_start":73,"line_end":73,"column_start":41,"column_end":58},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3205,"byte_end":3224,"line_start":73,"line_end":73,"column_start":60,"column_end":79},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3257,"byte_end":3263,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3265,"byte_end":3278,"line_start":76,"line_end":76,"column_start":26,"column_end":39},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3280,"byte_end":3297,"line_start":76,"line_end":76,"column_start":41,"column_end":58},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3299,"byte_end":3318,"line_start":76,"line_end":76,"column_start":60,"column_end":79},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3320,"byte_end":3331,"line_start":76,"line_end":76,"column_start":81,"column_end":92},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":0,"byte_end":6452,"line_start":1,"line_end":180,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":46},{"krate":0,"index":86},{"krate":0,"index":100},{"krate":0,"index":174},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":328},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":292},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"/ # Configs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":14,"byte_end":17,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There isn't just one type of Base64; that would be too simple. You need to choose a character","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":18,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ set (standard, URL-safe, etc) and padding suffix (yes/no).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":116,"byte_end":178,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ The `Config` struct encapsulates this info. There are some common configs included: `STANDARD`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":179,"byte_end":278,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ `URL_SAFE`, etc. You can also make your own `Config` if needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":279,"byte_end":346,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":347,"byte_end":350,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The functions that don't have `config` in the name (e.g. `encode()` and `decode()`) use the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":351,"byte_end":446,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ `STANDARD` config .","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":447,"byte_end":470,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":471,"byte_end":474,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The functions that write to a slice (the ones that end in `_slice`) are generally the fastest","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":475,"byte_end":572,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ because they don't need to resize anything. If it fits in your workflow and you care about","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":573,"byte_end":667,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ performance, keep using the same buffer (growing as need be) and use the `_slice` methods for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":668,"byte_end":765,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ the best performance.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":766,"byte_end":791,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":792,"byte_end":795,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":796,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Several different encoding functions are available to you depending on your desire for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":815,"byte_end":905,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ convenience vs performance.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":906,"byte_end":937,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":938,"byte_end":941,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                       | Allocates                      |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":942,"byte_end":1037,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ | ----------------------- | ---------------------------- | ------------------------------ |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1038,"byte_end":1133,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ | `encode`                | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1134,"byte_end":1229,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ | `encode_config`         | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1230,"byte_end":1325,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_buf`     | Appends to provided `String` | Only if `String` needs to grow |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1326,"byte_end":1421,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_slice`   | Writes to provided `&[u8]`   | Never                          |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1422,"byte_end":1517,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1518,"byte_end":1521,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All of the encoding functions that take a `Config` will pad as per the config.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1522,"byte_end":1604,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1605,"byte_end":1608,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1609,"byte_end":1623,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1624,"byte_end":1627,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Just as for encoding, there are different decoding functions available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1628,"byte_end":1703,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                        | Allocates                      |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1708,"byte_end":1804,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ | ----------------------- | ----------------------------- | ------------------------------ |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1805,"byte_end":1901,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ | `decode`                | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1902,"byte_end":1998,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ | `decode_config`         | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":1999,"byte_end":2095,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ | `decode_config_buf`     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2096,"byte_end":2192,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ | `decode_config_slice`   | Writes to provided `&[u8]`    | Never                          |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2193,"byte_end":2289,"line_start":39,"line_end":39,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2290,"byte_end":2293,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Unlike encoding, where all possible input is valid, decoding can fail (see `DecodeError`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2294,"byte_end":2388,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2389,"byte_end":2392,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Input can be invalid because it has invalid characters or invalid padding. (No padding at all is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2393,"byte_end":2493,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ valid, but excess padding is not.) Whitespace in the input is invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2494,"byte_end":2568,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2569,"byte_end":2572,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2573,"byte_end":2585,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2586,"byte_end":2589,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If length calculations result in overflowing `usize`, a panic will result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2590,"byte_end":2668,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2669,"byte_end":2672,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The `_slice` flavors of encode or decode will panic if the provided output slice is too small,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2673,"byte_end":2771,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings, unsafe_code)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":2834,"byte_end":3041,"line_start":53,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":6619,"byte_end":6624,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":81}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[{"value":"/ Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13656,"byte_end":13756,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13757,"byte_end":13760,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13761,"byte_end":13768,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ use base64::display::Base64Display;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13769,"byte_end":13808,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13809,"byte_end":13812,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ let data = vec![0x0, 0x1, 0x2, 0x3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13813,"byte_end":13853,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/ let wrapper = Base64Display::with_config(&data, base64::STANDARD);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13854,"byte_end":13924,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13925,"byte_end":13928,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13929,"byte_end":13996,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":13997,"byte_end":14004,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14231,"byte_end":14244,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[{"value":"/ A convenience wrapper for base64'ing bytes into a format string without heap allocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14127,"byte_end":14219,"line_start":17,"line_end":17,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14411,"byte_end":14422,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"pub fn with_config(&[u8], Config) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[{"value":"/ Create a `Base64Display` with the provided config.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14345,"byte_end":14399,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":100},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/mod.rs","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":171}],"decl_id":null,"docs":" Implementations of `io::Write` to transparently handle base64.\n","sig":null,"attributes":[{"value":"/ Implementations of `io::Write` to transparently handle base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/mod.rs","byte_start":56229,"byte_end":56295,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58381,"byte_end":58394,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::write::encoder::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" A `Write` implementation that base64 encodes data before delegating to the wrapped writer.","sig":null,"attributes":[{"value":"/ A `Write` implementation that base64 encodes data before delegating to the wrapped writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":56781,"byte_end":56875,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":56876,"byte_end":56879,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because base64 has special handling for the end of the input data (padding, etc), there's a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":56880,"byte_end":56975,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ `finish()` method on this type that encodes any leftover input bytes and adds padding if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":56976,"byte_end":57068,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ appropriate. It's called automatically when deallocated (see the `Drop` implementation), but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57069,"byte_end":57165,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ any error that occurs when invoking the underlying writer will be suppressed. If you want to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57166,"byte_end":57262,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ handle such errors, call `finish()` yourself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57263,"byte_end":57312,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57313,"byte_end":57316,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57317,"byte_end":57331,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57332,"byte_end":57335,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57336,"byte_end":57343,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57344,"byte_end":57367,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57368,"byte_end":57371,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57372,"byte_end":57467,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ let mut wrapped_writer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57468,"byte_end":57508,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57509,"byte_end":57514,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/     let mut enc = base64::write::EncoderWriter::new(","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57515,"byte_end":57571,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/         &mut wrapped_writer, base64::STANDARD);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57572,"byte_end":57623,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57624,"byte_end":57627,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     // handle errors as you normally would","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57628,"byte_end":57674,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/     enc.write_all(b\"asdf\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57675,"byte_end":57715,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     // could leave this out to be called by Drop, if you don't care","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57716,"byte_end":57787,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/     // about handling errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57788,"byte_end":57820,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/     enc.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57821,"byte_end":57851,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57852,"byte_end":57855,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57856,"byte_end":57861,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57862,"byte_end":57865,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // base64 was written to the writer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57866,"byte_end":57905,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(b\"YXNkZg==\", &wrapped_writer[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57906,"byte_end":57955,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57956,"byte_end":57959,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57960,"byte_end":57967,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57968,"byte_end":57971,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57972,"byte_end":57984,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57985,"byte_end":57988,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Calling `write()` after `finish()` is invalid and will panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":57989,"byte_end":58054,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58055,"byte_end":58058,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58059,"byte_end":58071,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58072,"byte_end":58075,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Base64 encoding itself does not generate errors, but errors from the wrapped writer will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58076,"byte_end":58171,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ returned as per the contract of `Write`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58172,"byte_end":58216,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58217,"byte_end":58220,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58221,"byte_end":58238,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58239,"byte_end":58242,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ It has some minor performance loss compared to encoding slices (a couple percent).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58243,"byte_end":58329,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/ It does not do any heap allocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":58330,"byte_end":58369,"line_start":56,"line_end":56,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59908,"byte_end":59911,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter>::new","value":"pub fn new(&'a mut W, Config) -> EncoderWriter","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that will write to the provided delegate writer `w`.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that will write to the provided delegate writer `w`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59819,"byte_end":59896,"line_start":91,"line_end":91,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60821,"byte_end":60827,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter>::finish","value":"pub fn finish(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode all remaining buffered data and write it, including any trailing incomplete input\n triples and associated padding.","sig":null,"attributes":[{"value":"/ Encode all remaining buffered data and write it, including any trailing incomplete input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60275,"byte_end":60367,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ triples and associated padding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60372,"byte_end":60407,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60412,"byte_end":60415,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Once this succeeds, no further writes can be performed, as that would produce invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60420,"byte_end":60509,"line_start":108,"line_end":108,"column_start":5,"column_end":94}},{"value":"/ base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60514,"byte_end":60525,"line_start":109,"line_end":109,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60530,"byte_end":60533,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This may write to the delegate writer multiple times if the delegate writer does not accept all input provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60538,"byte_end":60652,"line_start":111,"line_end":111,"column_start":5,"column_end":119}},{"value":"/ to its `write` each invocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60657,"byte_end":60692,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60697,"byte_end":60700,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60705,"byte_end":60717,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60722,"byte_end":60725,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The first error that is not of [`ErrorKind::Interrupted`] will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":60730,"byte_end":60809,"line_start":116,"line_end":116,"column_start":5,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71342,"byte_end":71348,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"pub fn encode<T: ?Sized + AsRef<[u8]>>(&T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71050,"byte_end":71087,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71088,"byte_end":71108,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/Convenience for `encode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71109,"byte_end":71170,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71171,"byte_end":71174,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71175,"byte_end":71187,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71188,"byte_end":71191,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71192,"byte_end":71202,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71203,"byte_end":71226,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71227,"byte_end":71230,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71231,"byte_end":71245,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode(b\"hello world\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71246,"byte_end":71294,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71295,"byte_end":71322,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71323,"byte_end":71327,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71328,"byte_end":71334,"line_start":17,"line_end":17,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71809,"byte_end":71822,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"pub fn encode_config<T: ?Sized + AsRef<[u8]>>(&T, Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71435,"byte_end":71472,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71473,"byte_end":71493,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71494,"byte_end":71497,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71498,"byte_end":71510,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71511,"byte_end":71514,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71515,"byte_end":71525,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71526,"byte_end":71549,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71550,"byte_end":71553,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71554,"byte_end":71568,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode_config(b\"hello world~\", base64::STANDARD);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71569,"byte_end":71643,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71644,"byte_end":71671,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71672,"byte_end":71675,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/    let b64_url = base64::encode_config(b\"hello internet~\", base64::URL_SAFE);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71676,"byte_end":71757,"line_start":34,"line_end":34,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", b64_url);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71758,"byte_end":71789,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71790,"byte_end":71794,"line_start":36,"line_end":36,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":71795,"byte_end":71801,"line_start":37,"line_end":37,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72739,"byte_end":72756,"line_start":68,"line_end":68,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut String)","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72249,"byte_end":72286,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/Writes into the supplied output buffer, which will grow the buffer if needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72287,"byte_end":72367,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72368,"byte_end":72371,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72372,"byte_end":72384,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72385,"byte_end":72388,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72389,"byte_end":72399,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72400,"byte_end":72423,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72424,"byte_end":72427,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72428,"byte_end":72442,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/    let mut buf = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72443,"byte_end":72478,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/    base64::encode_config_buf(b\"hello world~\", base64::STANDARD, &mut buf);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72479,"byte_end":72557,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72558,"byte_end":72585,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72586,"byte_end":72589,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/    buf.clear();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72590,"byte_end":72609,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/    base64::encode_config_buf(b\"hello internet~\", base64::URL_SAFE, &mut buf);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72610,"byte_end":72691,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72692,"byte_end":72719,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72720,"byte_end":72724,"line_start":66,"line_end":66,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":72725,"byte_end":72731,"line_start":67,"line_end":67,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":74046,"byte_end":74065,"line_start":111,"line_end":111,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"pub fn encode_config_slice<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut [u8])\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[{"value":"/ Encode arbitrary octets as base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73136,"byte_end":73174,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ Writes into the supplied output buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73175,"byte_end":73218,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73219,"byte_end":73222,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73223,"byte_end":73319,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/ or statically-allocated buffer).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73320,"byte_end":73356,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73357,"byte_end":73360,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73361,"byte_end":73373,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73374,"byte_end":73377,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ If `output` is too small to hold the encoded version of `input`, a panic will result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73378,"byte_end":73467,"line_start":89,"line_end":89,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73468,"byte_end":73471,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73472,"byte_end":73485,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73486,"byte_end":73489,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73490,"byte_end":73501,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73502,"byte_end":73526,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73527,"byte_end":73530,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73531,"byte_end":73546,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/     let s = b\"hello internet!\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73547,"byte_end":73582,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73583,"byte_end":73616,"line_start":98,"line_end":98,"column_start":1,"column_end":34}},{"value":"/     // make sure we'll have a slice big enough for base64 + padding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73617,"byte_end":73688,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/     buf.resize(s.len() * 4 / 3 + 4, 0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73689,"byte_end":73732,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73733,"byte_end":73736,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     let bytes_written = base64::encode_config_slice(s,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73737,"byte_end":73795,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/                             base64::STANDARD, &mut buf);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73796,"byte_end":73856,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73857,"byte_end":73860,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // shorten our vec down to just what was written","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73861,"byte_end":73917,"line_start":105,"line_end":105,"column_start":1,"column_end":57}},{"value":"/     buf.resize(bytes_written, 0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73918,"byte_end":73955,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73956,"byte_end":73959,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(s, base64::decode(&buf).unwrap().as_slice());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":73960,"byte_end":74024,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":74025,"byte_end":74030,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/encode.rs","byte_start":74031,"byte_end":74038,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95038,"byte_end":95049,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[{"value":"/ An invalid byte was found in the input. The offset and offending byte are provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":94946,"byte_end":95033,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95110,"byte_end":95123,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[{"value":"/ The length of the input is invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95066,"byte_end":95105,"line_start":26,"line_end":26,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95466,"byte_end":95483,"line_start":32,"line_end":32,"column_start":5,"column_end":22},"name":"InvalidLastSymbol","qualname":"::decode::DecodeError::InvalidLastSymbol","value":"DecodeError::InvalidLastSymbol(usize, u8)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\n This is indicative of corrupted or truncated Base64.\n Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\n symbols that are in the alphabet but represent nonsensical encodings.\n","sig":null,"attributes":[{"value":"/ The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95129,"byte_end":95225,"line_start":28,"line_end":28,"column_start":5,"column_end":101}},{"value":"/ This is indicative of corrupted or truncated Base64.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95230,"byte_end":95286,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95291,"byte_end":95383,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ symbols that are in the alphabet but represent nonsensical encodings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95388,"byte_end":95461,"line_start":31,"line_end":31,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":306},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":94928,"byte_end":94939,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"pub enum DecodeError {\n    InvalidByte(usize, u8),\n    InvalidLength,\n    InvalidLastSymbol(usize, u8),\n}","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while decoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":94838,"byte_end":94879,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":259},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96736,"byte_end":96742,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"pub fn decode<T: ?Sized + AsRef<[u8]>>(&T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96403,"byte_end":96445,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96446,"byte_end":96487,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/Convenience `decode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96488,"byte_end":96545,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96546,"byte_end":96549,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96550,"byte_end":96562,"line_start":67,"line_end":67,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96563,"byte_end":96566,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96567,"byte_end":96577,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96578,"byte_end":96601,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96602,"byte_end":96605,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96606,"byte_end":96620,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode(\"aGVsbG8gd29ybGQ=\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96621,"byte_end":96684,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96685,"byte_end":96716,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96717,"byte_end":96721,"line_start":75,"line_end":75,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96722,"byte_end":96728,"line_start":76,"line_end":76,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":261},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97296,"byte_end":97309,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"pub fn decode_config<T: ?Sized + AsRef<[u8]>>(&T, Config)\n-> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96851,"byte_end":96893,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96894,"byte_end":96935,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96936,"byte_end":96939,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96940,"byte_end":96952,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96953,"byte_end":96956,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96957,"byte_end":96967,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96968,"byte_end":96991,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96992,"byte_end":96995,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96996,"byte_end":97010,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode_config(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97011,"byte_end":97103,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97104,"byte_end":97135,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97136,"byte_end":97139,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/    let bytes_url = base64::decode_config(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97140,"byte_end":97240,"line_start":93,"line_end":93,"column_start":1,"column_end":101}},{"value":"/    println!(\"{:?}\", bytes_url);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97241,"byte_end":97276,"line_start":94,"line_end":94,"column_start":1,"column_end":36}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97277,"byte_end":97281,"line_start":95,"line_end":95,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97282,"byte_end":97288,"line_start":96,"line_end":96,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98153,"byte_end":98170,"line_start":127,"line_end":127,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"pub fn decode_config_buf<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut Vec<u8>)\n-> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97554,"byte_end":97596,"line_start":106,"line_end":106,"column_start":1,"column_end":43}},{"value":"/Writes into the supplied buffer to avoid allocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97597,"byte_end":97652,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/Returns a Result containing an empty tuple, aka ().","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97653,"byte_end":97707,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97708,"byte_end":97711,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97712,"byte_end":97724,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97725,"byte_end":97728,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97729,"byte_end":97739,"line_start":112,"line_end":112,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97740,"byte_end":97763,"line_start":113,"line_end":113,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97764,"byte_end":97767,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97768,"byte_end":97782,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/    let mut buffer = Vec::<u8>::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97783,"byte_end":97824,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD, &mut buffer).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97825,"byte_end":97922,"line_start":117,"line_end":117,"column_start":1,"column_end":98}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97923,"byte_end":97955,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97956,"byte_end":97959,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/    buffer.clear();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97960,"byte_end":97982,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97983,"byte_end":97986,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE, &mut buffer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":97987,"byte_end":98078,"line_start":122,"line_end":122,"column_start":1,"column_end":92}},{"value":"/        .unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98079,"byte_end":98100,"line_start":123,"line_end":123,"column_start":1,"column_end":22}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98101,"byte_end":98133,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98134,"byte_end":98138,"line_start":125,"line_end":125,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98139,"byte_end":98145,"line_start":126,"line_end":126,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99436,"byte_end":99455,"line_start":163,"line_end":163,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"pub fn decode_config_slice<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut [u8])\n-> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[{"value":"/ Decode the input into the provided output slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98945,"byte_end":98997,"line_start":154,"line_end":154,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":98998,"byte_end":99001,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99002,"byte_end":99101,"line_start":156,"line_end":156,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99102,"byte_end":99105,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead of time what the decoded length should be, size your buffer with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99106,"byte_end":99200,"line_start":158,"line_end":158,"column_start":1,"column_end":95}},{"value":"/ conservative estimate for the decoded length of an input: 3 bytes of output for every 4 bytes of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99201,"byte_end":99301,"line_start":159,"line_end":159,"column_start":1,"column_end":101}},{"value":"/ input, rounded up, or in other words `(input_len + 3) / 4 * 3`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99302,"byte_end":99369,"line_start":160,"line_end":160,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99370,"byte_end":99373,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ If the slice is not large enough, this will panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":99374,"byte_end":99428,"line_start":162,"line_end":162,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3590,"byte_end":3598,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`).","sig":null,"attributes":[{"value":"/ The standard character set (uses `+` and `/`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3456,"byte_end":3506,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3511,"byte_end":3514,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ See [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3519,"byte_end":3585,"line_start":86,"line_end":86,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3738,"byte_end":3745,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`).","sig":null,"attributes":[{"value":"/ The URL safe character set (uses `-` and `_`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3604,"byte_end":3654,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3659,"byte_end":3662,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3667,"byte_end":3733,"line_start":90,"line_end":90,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3971,"byte_end":3976,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","sig":null,"attributes":[{"value":"/ The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3751,"byte_end":3858,"line_start":92,"line_end":92,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3863,"byte_end":3866,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Not standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3871,"byte_end":3966,"line_start":94,"line_end":94,"column_start":5,"column_end":100}}]},{"kind":"Enum","id":{"krate":0,"index":328},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3437,"byte_end":3449,"line_start":83,"line_end":83,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"pub enum CharacterSet { Standard, UrlSafe, Crypt, }","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"/ Available encoding character sets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3360,"byte_end":3397,"line_start":81,"line_end":81,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4641,"byte_end":4647,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[{"value":"/ Contains configuration parameters for base64 encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4542,"byte_end":4599,"line_start":116,"line_end":116,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4966,"byte_end":4969,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new(CharacterSet, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[{"value":"/ Create a new `Config`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4928,"byte_end":4954,"line_start":128,"line_end":128,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5159,"byte_end":5162,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"pad","qualname":"<Config>::pad","value":"pub fn pad(Self, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to pad output with `=` characters.\n","sig":null,"attributes":[{"value":"/ Sets whether to pad output with `=` characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5096,"byte_end":5147,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5444,"byte_end":5470,"line_start":142,"line_end":142,"column_start":12,"column_end":38},"name":"decode_allow_trailing_bits","qualname":"<Config>::decode_allow_trailing_bits","value":"pub fn decode_allow_trailing_bits(Self, bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to emit errors for nonzero trailing bits.","sig":null,"attributes":[{"value":"/ Sets whether to emit errors for nonzero trailing bits.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5234,"byte_end":5292,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5297,"byte_end":5300,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is useful when implementing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5305,"byte_end":5341,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5346,"byte_end":5432,"line_start":141,"line_end":141,"column_start":5,"column_end":91}}]},{"kind":"Const","id":{"krate":0,"index":301},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5623,"byte_end":5631,"line_start":148,"line_end":148,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[{"value":"/ Standard character set with padding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5572,"byte_end":5612,"line_start":147,"line_end":147,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":302},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5801,"byte_end":5816,"line_start":155,"line_end":155,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[{"value":"/ Standard character set without padding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5747,"byte_end":5790,"line_start":154,"line_end":154,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5983,"byte_end":5991,"line_start":162,"line_end":162,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set with padding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":5933,"byte_end":5972,"line_start":161,"line_end":161,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":6159,"byte_end":6174,"line_start":169,"line_end":169,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set without padding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":6106,"byte_end":6148,"line_start":168,"line_end":168,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":6335,"byte_end":6340,"line_start":176,"line_end":176,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[{"value":"/ As per `crypt(3)` requirements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":6290,"byte_end":6324,"line_start":175,"line_end":175,"column_start":1,"column_end":35}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":6975,"byte_end":6989,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":9201,"byte_end":9211,"line_start":85,"line_end":85,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":9332,"byte_end":9342,"line_start":91,"line_end":91,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14321,"byte_end":14334,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14613,"byte_end":14626,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14947,"byte_end":14960,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59392,"byte_end":59405,"line_start":77,"line_end":77,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59792,"byte_end":59805,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":63953,"byte_end":63966,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":70797,"byte_end":70810,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95521,"byte_end":95532,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96048,"byte_end":96059,"line_start":49,"line_end":49,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3986,"byte_end":3998,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4915,"byte_end":4921,"line_start":127,"line_end":127,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3097,"byte_end":3104,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3126,"byte_end":3131,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":100}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":6975,"byte_end":6989,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":9201,"byte_end":9211,"line_start":85,"line_end":85,"column_start":10,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/chunked_encoder.rs","byte_start":9332,"byte_end":9342,"line_start":91,"line_end":91,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14321,"byte_end":14334,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14613,"byte_end":14626,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/display.rs","byte_start":14947,"byte_end":14960,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59392,"byte_end":59405,"line_start":77,"line_end":77,"column_start":35,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":59792,"byte_end":59805,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":63953,"byte_end":63966,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/write/encoder.rs","byte_start":70797,"byte_end":70810,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":95521,"byte_end":95532,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":306},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/decode.rs","byte_start":96048,"byte_end":96059,"line_start":49,"line_end":49,"column_start":23,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":306},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":3986,"byte_end":3998,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.10.1/src/lib.rs","byte_start":4915,"byte_end":4921,"line_start":127,"line_end":127,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}}]}