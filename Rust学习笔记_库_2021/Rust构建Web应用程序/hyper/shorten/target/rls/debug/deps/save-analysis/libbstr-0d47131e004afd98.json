{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bstr","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=0d47131e004afd98","-C","extra-filename=-0d47131e004afd98","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","memchr=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libmemchr-8929e9bef946f914.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libbstr-0d47131e004afd98.rmeta"},"prelude":{"crate_id":{"name":"bstr","disambiguator":[12292770546599801363,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ascii.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/byteset/mod.rs","num":18,"id":{"name":"memchr","disambiguator":[9814312202343168385,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":0,"byte_end":19990,"line_start":1,"line_end":436,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18215,"byte_end":18219,"line_start":371,"line_end":371,"column_start":22,"column_end":26},"alias_span":null,"name":"BStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18269,"byte_end":18276,"line_start":373,"line_end":373,"column_start":25,"column_end":32},"alias_span":null,"name":"BString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18310,"byte_end":18319,"line_start":375,"line_end":375,"column_start":5,"column_end":14},"alias_span":null,"name":"ByteSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1010},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18321,"byte_end":18326,"line_start":375,"line_end":375,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1019},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18328,"byte_end":18334,"line_start":375,"line_end":375,"column_start":23,"column_end":29},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18336,"byte_end":18346,"line_start":375,"line_end":375,"column_start":31,"column_end":41},"alias_span":null,"name":"FieldsWith","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18348,"byte_end":18352,"line_start":375,"line_end":375,"column_start":43,"column_end":47},"alias_span":null,"name":"Find","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1002},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18354,"byte_end":18365,"line_start":375,"line_end":375,"column_start":49,"column_end":60},"alias_span":null,"name":"FindReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18367,"byte_end":18373,"line_start":375,"line_end":375,"column_start":62,"column_end":68},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18379,"byte_end":18392,"line_start":376,"line_end":376,"column_start":5,"column_end":18},"alias_span":null,"name":"FinderReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18394,"byte_end":18399,"line_start":376,"line_end":376,"column_start":20,"column_end":25},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18401,"byte_end":18420,"line_start":376,"line_end":376,"column_start":27,"column_end":46},"alias_span":null,"name":"LinesWithTerminator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18422,"byte_end":18427,"line_start":376,"line_end":376,"column_start":48,"column_end":53},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18429,"byte_end":18435,"line_start":376,"line_end":376,"column_start":55,"column_end":61},"alias_span":null,"name":"SplitN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1059},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18437,"byte_end":18450,"line_start":376,"line_end":376,"column_start":63,"column_end":76},"alias_span":null,"name":"SplitNReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18456,"byte_end":18468,"line_start":377,"line_end":377,"column_start":5,"column_end":17},"alias_span":null,"name":"SplitReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18470,"byte_end":18471,"line_start":377,"line_end":377,"column_start":19,"column_end":20},"alias_span":null,"name":"B","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18525,"byte_end":18531,"line_start":380,"line_end":380,"column_start":26,"column_end":32},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18533,"byte_end":18537,"line_start":380,"line_end":380,"column_start":34,"column_end":38},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18539,"byte_end":18546,"line_start":380,"line_end":380,"column_start":40,"column_end":47},"alias_span":null,"name":"ByteVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18548,"byte_end":18558,"line_start":380,"line_end":380,"column_start":49,"column_end":59},"alias_span":null,"name":"DrainBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18560,"byte_end":18573,"line_start":380,"line_end":380,"column_start":61,"column_end":74},"alias_span":null,"name":"FromUtf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18784,"byte_end":18790,"line_start":387,"line_end":387,"column_start":5,"column_end":11},"alias_span":null,"name":"decode_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18807,"byte_end":18818,"line_start":387,"line_end":387,"column_start":28,"column_end":39},"alias_span":null,"name":"decode_last_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1387},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18840,"byte_end":18851,"line_start":387,"line_end":387,"column_start":61,"column_end":72},"alias_span":null,"name":"CharIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1378},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18857,"byte_end":18862,"line_start":388,"line_end":388,"column_start":5,"column_end":10},"alias_span":null,"name":"Chars","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18864,"byte_end":18873,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"alias_span":null,"name":"Utf8Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18875,"byte_end":18885,"line_start":388,"line_end":388,"column_start":23,"column_end":33},"alias_span":null,"name":"Utf8Chunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1407},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":18887,"byte_end":18896,"line_start":388,"line_end":388,"column_start":35,"column_end":44},"alias_span":null,"name":"Utf8Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":0,"byte_end":19990,"line_start":1,"line_end":436,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":107},{"krate":0,"index":121},{"krate":0,"index":129},{"krate":0,"index":188},{"krate":0,"index":489},{"krate":0,"index":624},{"krate":0,"index":831},{"krate":0,"index":868}],"decl_id":null,"docs":"An experimental byte string library.","sig":null,"attributes":[{"value":"*\nAn experimental byte string library.\n\nByte strings are just like standard Unicode strings with one very important\ndifference: byte strings are only *conventionally* UTF-8 while Rust's standard\nUnicode strings are *guaranteed* to be valid UTF-8. The primary motivation for\nbyte strings is for handling arbitrary bytes that are mostly UTF-8.\n\n# Overview\n\nThis crate provides two important traits that provide string oriented methods\non `&[u8]` and `Vec<u8>` types:\n\n* [`ByteSlice`](trait.ByteSlice.html) extends the `[u8]` type with additional\n  string oriented methods.\n* [`ByteVec`](trait.ByteVec.html) extends the `Vec<u8>` type with additional\n  string oriented methods.\n\nAdditionally, this crate provides two concrete byte string types that deref to\n`[u8]` and `Vec<u8>`. These are useful for storing byte string types, and come\nwith convenient `std::fmt::Debug` implementations:\n\n* [`BStr`](struct.BStr.html) is a byte string slice, analogous to `str`.\n* [`BString`](struct.BString.html) is an owned growable byte string buffer,\n  analogous to `String`.\n\nAdditionally, the free function [`B`](fn.B.html) serves as a convenient short\nhand for writing byte string literals.\n\n# Quick examples\n\nByte strings build on the existing APIs for `Vec<u8>` and `&[u8]`, with\nadditional string oriented methods. Operations such as iterating over\ngraphemes, searching for substrings, replacing substrings, trimming and case\nconversion are examples of things not provided on the standard library `&[u8]`\nAPIs but are provided by this crate. For example, this code iterates over all\nof occurrences of a subtring:\n\n```\nuse bstr::ByteSlice;\n\nlet s = b\"foo bar foo foo quux foo\";\n\nlet mut matches = vec![];\nfor start in s.find_iter(\"foo\") {\n    matches.push(start);\n}\nassert_eq!(matches, [0, 8, 12, 21]);\n```\n\nHere's another example showing how to do a search and replace (and also showing\nuse of the `B` function):\n\n```\nuse bstr::{B, ByteSlice};\n\nlet old = B(\"foo ☃☃☃ foo foo quux foo\");\nlet new = old.replace(\"foo\", \"hello\");\nassert_eq!(new, B(\"hello ☃☃☃ hello hello quux hello\"));\n```\n\nAnd here's an example that shows case conversion, even in the presence of\ninvalid UTF-8:\n\n```\nuse bstr::{ByteSlice, ByteVec};\n\nlet mut lower = Vec::from(\"hello β\");\nlower[0] = b'\\xFF';\n// lowercase β is uppercased to Β\nassert_eq!(lower.to_uppercase(), b\"\\xFFELLO \\xCE\\x92\");\n```\n\n# Convenient debug representation\n\nWhen working with byte strings, it is often useful to be able to print them\nas if they were byte strings and not sequences of integers. While this crate\ncannot affect the `std::fmt::Debug` implementations for `[u8]` and `Vec<u8>`,\nthis crate does provide the `BStr` and `BString` types which have convenient\n`std::fmt::Debug` implementations.\n\nFor example, this\n\n```\nuse bstr::ByteSlice;\n\nlet mut bytes = Vec::from(\"hello β\");\nbytes[0] = b'\\xFF';\n\nprintln!(\"{:?}\", bytes.as_bstr());\n```\n\nwill output `\"\\xFFello β\"`.\n\nThis example works because the\n[`ByteSlice::as_bstr`](trait.ByteSlice.html#method.as_bstr)\nmethod converts any `&[u8]` to a `&BStr`.\n\n# When should I use byte strings?\n\nThis library is somewhat of an experiment that reflects my hypothesis that\nUTF-8 by convention is a better trade off in some circumstances than guaranteed\nUTF-8. It's possible, perhaps even likely, that this is a niche concern for\nfolks working closely with core text primitives.\n\nThe first time this idea hit me was in the implementation of Rust's regex\nengine. In particular, very little of the internal implementation cares at all\nabout searching valid UTF-8 encoded strings. Indeed, internally, the\nimplementation converts `&str` from the API to `&[u8]` fairly quickly and\njust deals with raw bytes. UTF-8 match boundaries are then guaranteed by the\nfinite state machine itself rather than any specific string type. This makes it\npossible to not only run regexes on `&str` values, but also on `&[u8]` values.\n\nWhy would you ever want to run a regex on a `&[u8]` though? Well, `&[u8]` is\nthe fundamental way at which one reads data from all sorts of streams, via the\nstandard library's [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html)\ntrait. In particular, there is no platform independent way to determine whether\nwhat you're reading from is some binary file or a human readable text file.\nTherefore, if you're writing a program to search files, you probably need to\ndeal with `&[u8]` directly unless you're okay with first converting it to a\n`&str` and dropping any bytes that aren't valid UTF-8. (Or otherwise determine\nthe encoding---which is often impractical---and perform a transcoding step.)\nOften, the simplest and most robust way to approach this is to simply treat the\ncontents of a file as if it were mostly valid UTF-8 and pass through invalid\nUTF-8 untouched. This may not be the most correct approach though!\n\nOne case in particular exacerbates these issues, and that's memory mapping\na file. When you memory map a file, that file may be gigabytes big, but all\nyou get is a `&[u8]`. Converting that to a `&str` all in one go is generally\nnot a good idea because of the costs associated with doing so, and also\nbecause it generally causes one to do two passes over the data instead of\none, which is quite undesirable. It is of course usually possible to do it an\nincremental way by only parsing chunks at a time, but this is often complex to\ndo or impractical. For example, many regex engines only accept one contiguous\nsequence of bytes at a time with no way to perform incremental matching.\n\nIn summary, the conventional UTF-8 byte strings provided by this library is an\nexperiment. They are definitely useful in some limited circumstances, but how\nuseful they are more broadly isn't clear yet.\n\n# `bstr` in public APIs\n\nSince this library is still experimental, you should not use it in the public\nAPI of your crates until it hits `1.0` (unless you're OK with with tracking\nbreaking releases of `bstr`).\n\nIn general, it should be possible to avoid putting anything in this crate into\nyour public APIs. Namely, you should never need to use the `ByteSlice` or\n`ByteVec` traits as bounds on public APIs, since their only purpose is to\nextend the methods on the concrete types `[u8]` and `Vec<u8>`, respectively.\nSimilarly, it should not be necessary to put either the `BStr` or `BString`\ntypes into public APIs. If you want to use them internally, then they can\nbe converted to/from `[u8]`/`Vec<u8>` as needed.\n\n# Differences with standard strings\n\nThe primary difference between `[u8]` and `str` is that the former is\nconventionally UTF-8 while the latter is guaranteed to be UTF-8. The phrase\n\"conventionally UTF-8\" means that a `[u8]` may contain bytes that do not form\na valid UTF-8 sequence, but operations defined on the type in this crate are\ngenerally most useful on valid UTF-8 sequences. For example, iterating over\nUnicode codepoints or grapheme clusters is an operation that is only defined\non valid UTF-8. Therefore, when invalid UTF-8 is encountered, the Unicode\nreplacement codepoint is substituted. Thus, a byte string that is not UTF-8 at\nall is of limited utility when using these crate.\n\nHowever, not all operations on byte strings are specifically Unicode aware. For\nexample, substring search has no specific Unicode semantics ascribed to it. It\nworks just as well for byte strings that are completely valid UTF-8 as for byte\nstrings that contain no valid UTF-8 at all. Similarly for replacements and\nvarious other operations that do not need any Unicode specific tailoring.\n\nAside from the difference in how UTF-8 is handled, the APIs between `[u8]` and\n`str` (and `Vec<u8>` and `String`) are intentionally very similar, including\nmaintaining the same behavior for corner cases in things like substring\nsplitting. There are, however, some differences:\n\n* Substring search is not done with `matches`, but instead, `find_iter`.\n  In general, this crate does not define any generic\n  [`Pattern`](https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html)\n  infrastructure, and instead prefers adding new methods for different\n  argument types. For example, `matches` can search by a `char` or a `&str`,\n  where as `find_iter` can only search by a byte string. `find_char` can be\n  used for searching by a `char`.\n* Since `SliceConcatExt` in the standard library is unstable, it is not\n  possible to reuse that to implement `join` and `concat` methods. Instead,\n  [`join`](fn.join.html) and [`concat`](fn.concat.html) are provided as free\n  functions that perform a similar task.\n* This library bundles in a few more Unicode operations, such as grapheme,\n  word and sentence iterators. More operations, such as normalization and\n  case folding, may be provided in the future.\n* Some `String`/`str` APIs will panic if a particular index was not on a valid\n  UTF-8 code unit sequence boundary. Conversely, no such checking is performed\n  in this crate, as is consistent with treating byte strings as a sequence of\n  bytes. This means callers are responsible for maintaining a UTF-8 invariant\n  if that's important.\n* Some routines provided by this crate, such as `starts_with_str`, have a\n  `_str` suffix to differentiate them from similar routines already defined\n  on the `[u8]` type. The difference is that `starts_with` requires its\n  parameter to be a `&[u8]`, where as `starts_with_str` permits its parameter\n  to by anything that implements `AsRef<[u8]>`, which is more flexible. This\n  means you can write `bytes.starts_with_str(\"☃\")` instead of\n  `bytes.starts_with(\"☃\".as_bytes())`.\n\nOtherwise, you should find most of the APIs between this crate and the standard\nlibrary string APIs to be very similar, if not identical.\n\n# Handling of invalid UTF-8\n\nSince byte strings are only *conventionally* UTF-8, there is no guarantee\nthat byte strings contain valid UTF-8. Indeed, it is perfectly legal for a\nbyte string to contain arbitrary bytes. However, since this library defines\na *string* type, it provides many operations specified by Unicode. These\noperations are typically only defined over codepoints, and thus have no real\nmeaning on bytes that are invalid UTF-8 because they do not map to a particular\ncodepoint.\n\nFor this reason, whenever operations defined only on codepoints are used, this\nlibrary will automatically convert invalid UTF-8 to the Unicode replacement\ncodepoint, `U+FFFD`, which looks like this: `�`. For example, an\n[iterator over codepoints](struct.Chars.html) will yield a Unicode\nreplacement codepoint whenever it comes across bytes that are not valid UTF-8:\n\n```\nuse bstr::ByteSlice;\n\nlet bs = b\"a\\xFF\\xFFz\";\nlet chars: Vec<char> = bs.chars().collect();\nassert_eq!(vec!['a', '\\u{FFFD}', '\\u{FFFD}', 'z'], chars);\n```\n\nThere are a few ways in which invalid bytes can be substituted with a Unicode\nreplacement codepoint. One way, not used by this crate, is to replace every\nindividual invalid byte with a single replacement codepoint. In contrast, the\napproach this crate uses is called the \"substitution of maximal subparts,\" as\nspecified by the Unicode Standard (Chapter 3, Section 9). (This approach is\nalso used by [W3C's Encoding Standard](https://www.w3.org/TR/encoding/).) In\nthis strategy, a replacement codepoint is inserted whenever a byte is found\nthat cannot possibly lead to a valid UTF-8 code unit sequence. If there were\nprevious bytes that represented a *prefix* of a well-formed UTF-8 code unit\nsequence, then all of those bytes (up to 3) are substituted with a single\nreplacement codepoint. For example:\n\n```\nuse bstr::ByteSlice;\n\nlet bs = b\"a\\xF0\\x9F\\x87z\";\nlet chars: Vec<char> = bs.chars().collect();\n// The bytes \\xF0\\x9F\\x87 could lead to a valid UTF-8 sequence, but 3 of them\n// on their own are invalid. Only one replacement codepoint is substituted,\n// which demonstrates the \"substitution of maximal subparts\" strategy.\nassert_eq!(vec!['a', '\\u{FFFD}', 'z'], chars);\n```\n\nIf you do need to access the raw bytes for some reason in an iterator like\n`Chars`, then you should use the iterator's \"indices\" variant, which gives\nthe byte offsets containing the invalid UTF-8 bytes that were substituted with\nthe replacement codepoint. For example:\n\n```\nuse bstr::{B, ByteSlice};\n\nlet bs = b\"a\\xE2\\x98z\";\nlet chars: Vec<(usize, usize, char)> = bs.char_indices().collect();\n// Even though the replacement codepoint is encoded as 3 bytes itself, the\n// byte range given here is only two bytes, corresponding to the original\n// raw bytes.\nassert_eq!(vec![(0, 1, 'a'), (1, 3, '\\u{FFFD}'), (3, 4, 'z')], chars);\n\n// Thus, getting the original raw bytes is as simple as slicing the original\n// byte string:\nlet chars: Vec<&[u8]> = bs.char_indices().map(|(s, e, _)| &bs[s..e]).collect();\nassert_eq!(vec![B(\"a\"), B(b\"\\xE2\\x98\"), B(\"z\")], chars);\n```\n\n# File paths and OS strings\n\nOne of the premiere features of Rust's standard library is how it handles file\npaths. In particular, it makes it very hard to write incorrect code while\nsimultaneously providing a correct cross platform abstraction for manipulating\nfile paths. The key challenge that one faces with file paths across platforms\nis derived from the following observations:\n\n* On most Unix-like systems, file paths are an arbitrary sequence of bytes.\n* On Windows, file paths are an arbitrary sequence of 16-bit integers.\n\n(In both cases, certain sequences aren't allowed. For example a `NUL` byte is\nnot allowed in either case. But we can ignore this for the purposes of this\nsection.)\n\nByte strings, like the ones provided in this crate, line up really well with\nfile paths on Unix like systems, which are themselves just arbitrary sequences\nof bytes. It turns out that if you treat them as \"mostly UTF-8,\" then things\nwork out pretty well. On the contrary, byte strings _don't_ really work\nthat well on Windows because it's not possible to correctly roundtrip file\npaths between 16-bit integers and something that looks like UTF-8 _without_\nexplicitly defining an encoding to do this for you, which is anathema to byte\nstrings, which are just bytes.\n\nRust's standard library elegantly solves this problem by specifying an\ninternal encoding for file paths that's only used on Windows called\n[WTF-8](https://simonsapin.github.io/wtf-8/). Its key properties are that they\npermit losslessly roundtripping file paths on Windows by extending UTF-8 to\nsupport an encoding of surrogate codepoints, while simultaneously supporting\nzero-cost conversion from Rust's Unicode strings to file paths. (Since UTF-8 is\na proper subset of WTF-8.)\n\nThe fundamental point at which the above strategy fails is when you want to\ntreat file paths as things that look like strings in a zero cost way. In most\ncases, this is actually the wrong thing to do, but some cases call for it,\nfor example, glob or regex matching on file paths. This is because WTF-8 is\ntreated as an internal implementation detail, and there is no way to access\nthose bytes via a public API. Therefore, such consumers are limited in what\nthey can do:\n\n1. One could re-implement WTF-8 and re-encode file paths on Windows to WTF-8\n   by accessing their underlying 16-bit integer representation. Unfortunately,\n   this isn't zero cost (it introduces a second WTF-8 decoding step) and it's\n   not clear this is a good thing to do, since WTF-8 should ideally remain an\n   internal implementation detail.\n2. One could instead declare that they will not handle paths on Windows that\n   are not valid UTF-16, and return an error when one is encountered.\n3. Like (2), but instead of returning an error, lossily decode the file path\n   on Windows that isn't valid UTF-16 into UTF-16 by replacing invalid bytes\n   with the Unicode replacement codepoint.\n\nWhile this library may provide facilities for (1) in the future, currently,\nthis library only provides facilities for (2) and (3). In particular, a suite\nof conversion functions are provided that permit converting between byte\nstrings, OS strings and file paths. For owned byte strings, they are:\n\n* [`ByteVec::from_os_string`](trait.ByteVec.html#method.from_os_string)\n* [`ByteVec::from_os_str_lossy`](trait.ByteVec.html#method.from_os_str_lossy)\n* [`ByteVec::from_path_buf`](trait.ByteVec.html#method.from_path_buf)\n* [`ByteVec::from_path_lossy`](trait.ByteVec.html#method.from_path_lossy)\n* [`ByteVec::into_os_string`](trait.ByteVec.html#method.into_os_string)\n* [`ByteVec::into_os_string_lossy`](trait.ByteVec.html#method.into_os_string_lossy)\n* [`ByteVec::into_path_buf`](trait.ByteVec.html#method.into_path_buf)\n* [`ByteVec::into_path_buf_lossy`](trait.ByteVec.html#method.into_path_buf_lossy)\n\nFor byte string slices, they are:\n\n* [`ByteSlice::from_os_str`](trait.ByteSlice.html#method.from_os_str)\n* [`ByteSlice::from_path`](trait.ByteSlice.html#method.from_path)\n* [`ByteSlice::to_os_str`](trait.ByteSlice.html#method.to_os_str)\n* [`ByteSlice::to_os_str_lossy`](trait.ByteSlice.html#method.to_os_str_lossy)\n* [`ByteSlice::to_path`](trait.ByteSlice.html#method.to_path)\n* [`ByteSlice::to_path_lossy`](trait.ByteSlice.html#method.to_path_lossy)\n\nOn Unix, all of these conversions are rigorously zero cost, which gives one\na way to ergonomically deal with raw file paths exactly as they are using\nnormal string-related functions. On Windows, these conversion routines perform\na UTF-8 check and either return an error or lossily decode the file path\ninto valid UTF-8, depending on which function you use. This means that you\ncannot roundtrip all file paths on Windows correctly using these conversion\nroutines. However, this may be an acceptable downside since such file paths\nare exceptionally rare. Moreover, roundtripping isn't always necessary, for\nexample, if all you're doing is filtering based on file paths.\n\nThe reason why using byte strings for this is potentially superior than the\nstandard library's approach is that a lot of Rust code is already lossily\nconverting file paths to Rust's Unicode strings, which are required to be valid\nUTF-8, and thus contain latent bugs on Unix where paths with invalid UTF-8 are\nnot terribly uncommon. If you instead use byte strings, then you're guaranteed\nto write correct code for Unix, at the cost of getting a corner case wrong on\nWindows.\n*/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":0,"byte_end":18148,"line_start":1,"line_end":367,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":962},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33227,"byte_end":33231,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"BStr","qualname":"::bstr::BStr","value":"BStr {  }","parent":null,"children":[{"krate":0,"index":963}],"decl_id":null,"docs":" A wrapper for `&[u8]` that provides convenient string oriented trait impls.","sig":null,"attributes":[{"value":"/ A wrapper for `&[u8]` that provides convenient string oriented trait impls.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32075,"byte_end":32154,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32155,"byte_end":32158,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you need ownership or a growable byte string buffer, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32159,"byte_end":32227,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ [`BString`](struct.BString.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32228,"byte_end":32265,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32266,"byte_end":32269,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Using a `&BStr` is just like using a `&[u8]`, since `BStr`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32270,"byte_end":32332,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ implements `Deref` to `[u8]`. So all methods available on `[u8]`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32333,"byte_end":32401,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ are also available on `BStr`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32402,"byte_end":32435,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32436,"byte_end":32439,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32440,"byte_end":32460,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32461,"byte_end":32464,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `&BStr` has the same representation as a `&str`. That is, a `&BStr` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32465,"byte_end":32541,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ a fat pointer which consists of a pointer to some bytes and a length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32542,"byte_end":32615,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32616,"byte_end":32619,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Trait implementations","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32620,"byte_end":32647,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32648,"byte_end":32651,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `BStr` type has a number of trait implementations, and in particular,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32652,"byte_end":32729,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ defines equality and ordinal comparisons between `&BStr`, `&str` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32730,"byte_end":32802,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `&[u8]` for convenience.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32803,"byte_end":32831,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32832,"byte_end":32835,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `Debug` implementation for `BStr` shows its bytes as a normal string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32836,"byte_end":32913,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ For invalid UTF-8, hex escape sequences are used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32914,"byte_end":32967,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32968,"byte_end":32971,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The `Display` implementation behaves as if `BStr` were first lossily","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":32972,"byte_end":33044,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ converted to a `str`. Invalid UTF-8 bytes are substituted with the Unicode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33045,"byte_end":33123,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ replacement codepoint, which looks like this: �.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33124,"byte_end":33178,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"repr(transparent)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33195,"byte_end":33215,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35642,"byte_end":35649,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"BString","qualname":"::bstring::BString","value":"BString {  }","parent":null,"children":[{"krate":0,"index":968}],"decl_id":null,"docs":" A wrapper for `Vec<u8>` that provides convenient string oriented trait\n impls.","sig":null,"attributes":[{"value":"/ A wrapper for `Vec<u8>` that provides convenient string oriented trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34280,"byte_end":34354,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ impls.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34355,"byte_end":34365,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34366,"byte_end":34369,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A `BString` has ownership over its contents and corresponds to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34370,"byte_end":34436,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ a growable or shrinkable buffer. Its borrowed counterpart is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34437,"byte_end":34503,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ [`BStr`](struct.BStr.html), called a byte string slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34504,"byte_end":34563,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34564,"byte_end":34567,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Using a `BString` is just like using a `Vec<u8>`, since `BString`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34568,"byte_end":34637,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ implements `Deref` to `Vec<u8>`. So all methods available on `Vec<u8>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34638,"byte_end":34712,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ are also available on `BString`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34713,"byte_end":34749,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34750,"byte_end":34753,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34754,"byte_end":34768,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34769,"byte_end":34772,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ You can create a new `BString` from a `Vec<u8>` via a `From` impl:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34773,"byte_end":34843,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34844,"byte_end":34847,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34848,"byte_end":34855,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use bstr::BString;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34856,"byte_end":34878,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34879,"byte_end":34882,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let s = BString::from(\"Hello, world!\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34883,"byte_end":34926,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34927,"byte_end":34934,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34935,"byte_end":34938,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Deref","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34939,"byte_end":34950,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34951,"byte_end":34954,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The `BString` type implements `Deref` and `DerefMut`, where the target","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":34955,"byte_end":35029,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ types are `&Vec<u8>` and `&mut Vec<u8>`, respectively. `Deref` permits all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35030,"byte_end":35115,"line_start":27,"line_end":27,"column_start":1,"column_end":86}},{"value":"/ methods defined on `Vec<u8>` to be implicitly callable on any `BString`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35116,"byte_end":35192,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35193,"byte_end":35196,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For more information about how deref works, see the documentation for the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35197,"byte_end":35274,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ [`std::ops::Deref`](https://doc.rust-lang.org/std/ops/trait.Deref.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35275,"byte_end":35350,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35351,"byte_end":35361,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35362,"byte_end":35365,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35366,"byte_end":35386,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35387,"byte_end":35390,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A `BString` has the same representation as a `Vec<u8>` and a `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35391,"byte_end":35465,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ That is, it is made up of three word sized components: a pointer to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35466,"byte_end":35539,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ region of memory containing the bytes, a length and a capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35540,"byte_end":35607,"line_start":38,"line_end":38,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51320,"byte_end":51321,"line_start":70,"line_end":70,"column_start":8,"column_end":9},"name":"B","qualname":"::ext_slice::B","value":"pub fn B<'a, B: ?Sized + AsRef<[u8]>>(&'a B) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" A short-hand constructor for building a `&[u8]`.","sig":null,"attributes":[{"value":"/ A short-hand constructor for building a `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49692,"byte_end":49744,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49745,"byte_end":49748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This idiosyncratic constructor is useful for concisely building byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49749,"byte_end":49828,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ slices. Its primary utility is in conveniently writing byte string literals","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49829,"byte_end":49908,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ in a uniform way. For example, consider this code that does not compile:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49909,"byte_end":49985,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49986,"byte_end":49989,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":49990,"byte_end":50003,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ let strs = vec![b\"a\", b\"xy\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50004,"byte_end":50037,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50038,"byte_end":50045,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50046,"byte_end":50049,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The above code doesn't compile because the type of the byte string literal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50050,"byte_end":50128,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ `b\"a\"` is `&'static [u8; 1]`, and the type of `b\"xy\"` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50129,"byte_end":50189,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ `&'static [u8; 2]`. Since their types aren't the same, they can't be stored","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50190,"byte_end":50269,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ in the same `Vec`. (This is dissimilar from normal Unicode string slices,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50270,"byte_end":50347,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ where both `\"a\"` and `\"xy\"` have the same type of `&'static str`.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50348,"byte_end":50418,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50419,"byte_end":50422,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ One way of getting the above code to compile is to convert byte strings to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50423,"byte_end":50501,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ slices. You might try this:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50502,"byte_end":50533,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50534,"byte_end":50537,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50538,"byte_end":50551,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ let strs = vec![&b\"a\", &b\"xy\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50552,"byte_end":50587,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50588,"byte_end":50595,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50596,"byte_end":50599,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ But this just creates values with type `& &'static [u8; 1]` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50600,"byte_end":50667,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ `& &'static [u8; 2]`. Instead, you need to force the issue like so:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50668,"byte_end":50739,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50740,"byte_end":50743,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50744,"byte_end":50751,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ let strs = vec![&b\"a\"[..], &b\"xy\"[..]];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50752,"byte_end":50795,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/ // or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50796,"byte_end":50805,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ let strs = vec![b\"a\".as_ref(), b\"xy\".as_ref()];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50806,"byte_end":50857,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50858,"byte_end":50865,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50866,"byte_end":50869,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ But neither of these are particularly convenient to type, especially when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50870,"byte_end":50947,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ it's something as common as a string literal. Thus, this constructor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":50948,"byte_end":51020,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ permits writing the following instead:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51021,"byte_end":51063,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51064,"byte_end":51067,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51068,"byte_end":51075,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ use bstr::B;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51076,"byte_end":51092,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51093,"byte_end":51096,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let strs = vec![B(\"a\"), B(b\"xy\")];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51097,"byte_end":51135,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51136,"byte_end":51143,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51144,"byte_end":51147,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Notice that this also lets you mix and match both string literals and byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51148,"byte_end":51226,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ string literals. This can be quite convenient!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51227,"byte_end":51277,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51278,"byte_end":51302,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51303,"byte_end":51312,"line_start":69,"line_end":69,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51694,"byte_end":51700,"line_start":88,"line_end":88,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_slice::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[{"value":"/ Ensure that callers cannot implement `ByteSlice` by making an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51577,"byte_end":51642,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"/ umplementable trait its super trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51643,"byte_end":51683,"line_start":87,"line_end":87,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51802,"byte_end":51811,"line_start":92,"line_end":92,"column_start":11,"column_end":20},"name":"ByteSlice","qualname":"::ext_slice::ByteSlice","value":"ByteSlice: Sealed","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" A trait that extends `&[u8]` with string oriented methods.\n","sig":null,"attributes":[{"value":"/ A trait that extends `&[u8]` with string oriented methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51729,"byte_end":51791,"line_start":91,"line_end":91,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52037,"byte_end":52045,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::ext_slice::ByteSlice::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type. This is always a\n no-op and callers shouldn't care about it. This only exists for making\n the extension trait work.\n","sig":null,"attributes":[{"value":"/ A method for accessing the raw bytes of this type. This is always a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51826,"byte_end":51897,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ no-op and callers shouldn't care about it. This only exists for making","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51902,"byte_end":51976,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ the extension trait work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51981,"byte_end":52010,"line_start":95,"line_end":95,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52288,"byte_end":52300,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::ext_slice::ByteSlice::as_bytes_mut","value":"pub fn as_bytes_mut(&mut Self) -> &mut [u8]","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type, mutably. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[{"value":"/ A method for accessing the raw bytes of this type, mutably. This is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52068,"byte_end":52139,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ always a no-op and callers shouldn't care about it. This only exists","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52144,"byte_end":52216,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/ for making the extension trait work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52221,"byte_end":52261,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52901,"byte_end":52908,"line_start":123,"line_end":123,"column_start":8,"column_end":15},"name":"as_bstr","qualname":"::ext_slice::ByteSlice::as_bstr","value":"pub fn as_bstr(&Self) -> &BStr","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&BStr`.","sig":null,"attributes":[{"value":"/ Return this byte slice as a `&BStr`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52331,"byte_end":52371,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52376,"byte_end":52379,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Use `&BStr` is useful because of its `fmt::Debug` representation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52384,"byte_end":52452,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ and various other trait implementations (such as `PartialEq` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52457,"byte_end":52525,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `PartialOrd`). In particular, the `Debug` implementation for `BStr`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52530,"byte_end":52601,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ shows its bytes as a normal string. For invalid UTF-8, hex escape","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52606,"byte_end":52675,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ sequences are used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52680,"byte_end":52703,"line_start":111,"line_end":111,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52708,"byte_end":52711,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52716,"byte_end":52730,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52735,"byte_end":52738,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52743,"byte_end":52759,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52764,"byte_end":52767,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52772,"byte_end":52779,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52784,"byte_end":52808,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52813,"byte_end":52816,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", b\"foo\\xFFbar\".as_bstr());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52821,"byte_end":52867,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52872,"byte_end":52879,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52884,"byte_end":52893,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53592,"byte_end":53603,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"as_bstr_mut","qualname":"::ext_slice::ByteSlice::as_bstr_mut","value":"pub fn as_bstr_mut(&mut Self) -> &mut BStr","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&mut BStr`.","sig":null,"attributes":[{"value":"/ Return this byte slice as a `&mut BStr`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":52973,"byte_end":53017,"line_start":127,"line_end":127,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53022,"byte_end":53025,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Use `&mut BStr` is useful because of its `fmt::Debug` representation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53030,"byte_end":53102,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ and various other trait implementations (such as `PartialEq` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53107,"byte_end":53175,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/ `PartialOrd`). In particular, the `Debug` implementation for `BStr`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53180,"byte_end":53251,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ shows its bytes as a normal string. For invalid UTF-8, hex escape","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53256,"byte_end":53325,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ sequences are used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53330,"byte_end":53353,"line_start":133,"line_end":133,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53358,"byte_end":53361,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53366,"byte_end":53380,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53385,"byte_end":53388,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53393,"byte_end":53409,"line_start":137,"line_end":137,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53414,"byte_end":53417,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53422,"byte_end":53429,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53434,"byte_end":53458,"line_start":140,"line_end":140,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53463,"byte_end":53466,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let mut bytes = *b\"foo\\xFFbar\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53471,"byte_end":53506,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/ println!(\"{:?}\", &mut bytes.as_bstr_mut());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53511,"byte_end":53558,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53563,"byte_end":53570,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53575,"byte_end":53584,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54447,"byte_end":54458,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"from_os_str","qualname":"::ext_slice::ByteSlice::from_os_str","value":"pub fn from_os_str(&OsStr) -> Option<&[u8]>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Create an immutable byte string from an OS string slice.","sig":null,"attributes":[{"value":"/ Create an immutable byte string from an OS string slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53684,"byte_end":53744,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53749,"byte_end":53752,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53757,"byte_end":53829,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ this returns `None` if the given OS string is not valid UTF-8. (For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53834,"byte_end":53905,"line_start":153,"line_end":153,"column_start":5,"column_end":76}},{"value":"/ example, on Windows, file paths are allowed to be a sequence of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53910,"byte_end":53977,"line_start":154,"line_end":154,"column_start":5,"column_end":72}},{"value":"/ arbitrary 16-bit integers. Not all such sequences can be transcoded to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":53982,"byte_end":54056,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ valid UTF-8.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54061,"byte_end":54078,"line_start":156,"line_end":156,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54083,"byte_end":54086,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54091,"byte_end":54105,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54110,"byte_end":54113,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54118,"byte_end":54134,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54139,"byte_end":54142,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54147,"byte_end":54154,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54159,"byte_end":54183,"line_start":163,"line_end":163,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54188,"byte_end":54191,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54196,"byte_end":54225,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54230,"byte_end":54233,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let os_str = OsStr::new(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54238,"byte_end":54273,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ let bs = <[u8]>::from_os_str(os_str).expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54278,"byte_end":54351,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54356,"byte_end":54385,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54390,"byte_end":54397,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54402,"byte_end":54425,"line_start":171,"line_end":171,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54430,"byte_end":54439,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55599,"byte_end":55608,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"from_path","qualname":"::ext_slice::ByteSlice::from_path","value":"pub fn from_path(&Path) -> Option<&[u8]>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Create an immutable byte string from a file path.","sig":null,"attributes":[{"value":"/ Create an immutable byte string from a file path.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54863,"byte_end":54916,"line_start":191,"line_end":191,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54921,"byte_end":54924,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":54929,"byte_end":55001,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ this returns `None` if the given path is not valid UTF-8. (For example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55006,"byte_end":55081,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ on Windows, file paths are allowed to be a sequence of arbitrary 16-bit","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55086,"byte_end":55161,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ integers. Not all such sequences can be transcoded to valid UTF-8.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55166,"byte_end":55237,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55242,"byte_end":55245,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55250,"byte_end":55264,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55269,"byte_end":55272,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55277,"byte_end":55293,"line_start":200,"line_end":200,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55298,"byte_end":55301,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55306,"byte_end":55313,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55318,"byte_end":55342,"line_start":203,"line_end":203,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55347,"byte_end":55350,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55355,"byte_end":55384,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55389,"byte_end":55392,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55397,"byte_end":55429,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/ let bs = <[u8]>::from_path(path).expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55434,"byte_end":55503,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55508,"byte_end":55537,"line_start":209,"line_end":209,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55542,"byte_end":55549,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55554,"byte_end":55577,"line_start":211,"line_end":211,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55582,"byte_end":55591,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56728,"byte_end":56734,"line_start":246,"line_end":246,"column_start":8,"column_end":14},"name":"to_str","qualname":"::ext_slice::ByteSlice::to_str","value":"pub fn to_str(&Self) -> Result<&str, Utf8Error>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Safely convert this byte string into a `&str` if it's valid UTF-8.","sig":null,"attributes":[{"value":"/ Safely convert this byte string into a `&str` if it's valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55696,"byte_end":55766,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55771,"byte_end":55774,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If this byte string is not valid UTF-8, then an error is returned. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55779,"byte_end":55853,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ error returned indicates the first invalid byte found and the length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55858,"byte_end":55930,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ of the error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55935,"byte_end":55952,"line_start":221,"line_end":221,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55957,"byte_end":55960,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ In cases where a lossy conversion to `&str` is acceptable, then use one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":55965,"byte_end":56040,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of the [`to_str_lossy`](trait.ByteSlice.html#method.to_str_lossy) or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56045,"byte_end":56117,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ [`to_str_lossy_into`](trait.ByteSlice.html#method.to_str_lossy_into)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56122,"byte_end":56194,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56199,"byte_end":56211,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56216,"byte_end":56219,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56224,"byte_end":56238,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56243,"byte_end":56246,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56251,"byte_end":56267,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56272,"byte_end":56275,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56280,"byte_end":56287,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56292,"byte_end":56330,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56335,"byte_end":56338,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), bstr::Utf8Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56343,"byte_end":56394,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ let s = B(\"☃βツ\").to_str()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56399,"byte_end":56435,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(\"☃βツ\", s);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56440,"byte_end":56470,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56475,"byte_end":56478,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut bstring = <Vec<u8>>::from(\"☃βツ\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56483,"byte_end":56533,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/ bstring.push(b'\\xFF');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56538,"byte_end":56564,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/ let err = bstring.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56569,"byte_end":56613,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(8, err.valid_up_to());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56618,"byte_end":56655,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56660,"byte_end":56694,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56699,"byte_end":56706,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":56711,"byte_end":56720,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58023,"byte_end":58039,"line_start":281,"line_end":281,"column_start":15,"column_end":31},"name":"to_str_unchecked","qualname":"::ext_slice::ByteSlice::to_str_unchecked","value":"pub unsafe fn to_str_unchecked(&Self) -> &str","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `&str`, without checking for\n valid UTF-8.","sig":null,"attributes":[{"value":"/ Unsafely convert this byte string into a `&str`, without checking for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57013,"byte_end":57086,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57091,"byte_end":57107,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57112,"byte_end":57115,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57120,"byte_end":57132,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57137,"byte_end":57140,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Callers *must* ensure that this byte string is valid UTF-8 before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57145,"byte_end":57214,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/ calling this method. Converting a byte string into a `&str` that is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57219,"byte_end":57290,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ not valid UTF-8 is considered undefined behavior.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57295,"byte_end":57348,"line_start":261,"line_end":261,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57353,"byte_end":57356,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This routine is useful in performance sensitive contexts where the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57361,"byte_end":57431,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ UTF-8 validity of the byte string is already known and it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57436,"byte_end":57500,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/ undesirable to pay the cost of an additional UTF-8 validation check","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57505,"byte_end":57576,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ that [`to_str`](trait.ByteSlice.html#method.to_str) performs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57581,"byte_end":57646,"line_start":266,"line_end":266,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57651,"byte_end":57654,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57659,"byte_end":57673,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57678,"byte_end":57681,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57686,"byte_end":57702,"line_start":270,"line_end":270,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57707,"byte_end":57710,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57715,"byte_end":57722,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57727,"byte_end":57756,"line_start":273,"line_end":273,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57761,"byte_end":57764,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ // SAFETY: This is safe because string literals are guaranteed to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57769,"byte_end":57841,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ // valid UTF-8 by the Rust compiler.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57846,"byte_end":57886,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/ let s = unsafe { B(\"☃βツ\").to_str_unchecked() };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57891,"byte_end":57947,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(\"☃βツ\", s);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57952,"byte_end":57982,"line_start":278,"line_end":278,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57987,"byte_end":57994,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":57999,"byte_end":58008,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60925,"byte_end":60937,"line_start":346,"line_end":346,"column_start":8,"column_end":20},"name":"to_str_lossy","qualname":"::ext_slice::ByteSlice::to_str_lossy","value":"pub fn to_str_lossy(&Self) -> Cow<, str>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Convert this byte string to a valid UTF-8 string by replacing invalid\n UTF-8 bytes with the Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"/ Convert this byte string to a valid UTF-8 string by replacing invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58118,"byte_end":58191,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ UTF-8 bytes with the Unicode replacement codepoint (`U+FFFD`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58196,"byte_end":58262,"line_start":286,"line_end":286,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58267,"byte_end":58270,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the byte string is already valid UTF-8, then no copying or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58275,"byte_end":58340,"line_start":288,"line_end":288,"column_start":5,"column_end":70}},{"value":"/ allocation is performed and a borrrowed string slice is returned. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58345,"byte_end":58417,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ the byte string is not valid UTF-8, then an owned string buffer is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58422,"byte_end":58492,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ returned with invalid bytes replaced by the replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58497,"byte_end":58567,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58572,"byte_end":58575,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This method uses the \"substitution of maximal subparts\" (Unicode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58580,"byte_end":58648,"line_start":293,"line_end":293,"column_start":5,"column_end":73}},{"value":"/ Standard, Chapter 3, Section 9) strategy for inserting the replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58653,"byte_end":58727,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ codepoint. Specifically, a replacement codepoint is inserted whenever a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58732,"byte_end":58807,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/ byte is found that cannot possibly lead to a valid code unit sequence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58812,"byte_end":58886,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ If there were previous bytes that represented a prefix of a well-formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58891,"byte_end":58966,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ code unit sequence, then all of those bytes are substituted with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":58971,"byte_end":59041,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ single replacement codepoint. The \"substitution of maximal subparts\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59046,"byte_end":59118,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ strategy is the same strategy used by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59123,"byte_end":59164,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ [W3C's Encoding standard](https://www.w3.org/TR/encoding/).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59169,"byte_end":59232,"line_start":301,"line_end":301,"column_start":5,"column_end":68}},{"value":"/ For a more precise description of the maximal subpart strategy, see","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59237,"byte_end":59308,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ the Unicode Standard, Chapter 3, Section 9. See also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59313,"byte_end":59369,"line_start":303,"line_end":303,"column_start":5,"column_end":61}},{"value":"/ [Public Review Issue #121](http://www.unicode.org/review/pr-121.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59374,"byte_end":59448,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59453,"byte_end":59456,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ N.B. Rust's standard library also appears to use the same strategy,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59461,"byte_end":59532,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ but it does not appear to be an API guarantee.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59537,"byte_end":59587,"line_start":307,"line_end":307,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59592,"byte_end":59595,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59600,"byte_end":59614,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59619,"byte_end":59622,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59627,"byte_end":59643,"line_start":311,"line_end":311,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59648,"byte_end":59651,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59656,"byte_end":59663,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59668,"byte_end":59693,"line_start":314,"line_end":314,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59698,"byte_end":59701,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59706,"byte_end":59730,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59735,"byte_end":59738,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let mut bstring = <Vec<u8>>::from(\"☃βツ\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59743,"byte_end":59793,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Cow::Borrowed(\"☃βツ\"), bstring.to_str_lossy());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59798,"byte_end":59864,"line_start":319,"line_end":319,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59869,"byte_end":59872,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ // Add a byte that makes the sequence invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59877,"byte_end":59927,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/ bstring.push(b'\\xFF');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59932,"byte_end":59958,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(Cow::Borrowed(\"☃βツ\\u{FFFD}\"), bstring.to_str_lossy());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":59963,"byte_end":60037,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60042,"byte_end":60049,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60054,"byte_end":60057,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This demonstrates the \"maximal subpart\" substitution logic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60062,"byte_end":60125,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60130,"byte_end":60133,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60138,"byte_end":60145,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60150,"byte_end":60179,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60184,"byte_end":60187,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ // \\x61 is the ASCII codepoint for 'a'.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60192,"byte_end":60235,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ // \\xF1\\x80\\x80 is a valid 3-byte code unit prefix.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60240,"byte_end":60295,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ // \\xE1\\x80 is a valid 2-byte code unit prefix.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60300,"byte_end":60351,"line_start":333,"line_end":333,"column_start":5,"column_end":56}},{"value":"/ // \\xC2 is a valid 1-byte code unit prefix.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60356,"byte_end":60403,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ // \\x62 is the ASCII codepoint for 'b'.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60408,"byte_end":60451,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/ //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60456,"byte_end":60462,"line_start":336,"line_end":336,"column_start":5,"column_end":11}},{"value":"/ // In sum, each of the prefixes is replaced by a single replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60467,"byte_end":60538,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ // codepoint since none of the prefixes are properly completed. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60543,"byte_end":60615,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ // is in contrast to other strategies that might insert a replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60620,"byte_end":60693,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ // codepoint for every single byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60698,"byte_end":60737,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/ let bs = B(b\"\\x61\\xF1\\x80\\x80\\xE1\\x80\\xC2\\x62\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60742,"byte_end":60794,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(\"a\\u{FFFD}\\u{FFFD}\\u{FFFD}b\", bs.to_str_lossy());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60799,"byte_end":60863,"line_start":342,"line_end":342,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60868,"byte_end":60875,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60880,"byte_end":60903,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":60908,"byte_end":60917,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":63100,"byte_end":63117,"line_start":403,"line_end":403,"column_start":8,"column_end":25},"name":"to_str_lossy_into","qualname":"::ext_slice::ByteSlice::to_str_lossy_into","value":"pub fn to_str_lossy_into(&Self, &mut String)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Copy the contents of this byte string into the given owned string\n buffer, while replacing invalid UTF-8 code unit sequences with the\n Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"/ Copy the contents of this byte string into the given owned string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":61941,"byte_end":62010,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ buffer, while replacing invalid UTF-8 code unit sequences with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62015,"byte_end":62085,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ Unicode replacement codepoint (`U+FFFD`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62090,"byte_end":62135,"line_start":373,"line_end":373,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62140,"byte_end":62143,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This method uses the same \"substitution of maximal subparts\" strategy","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62148,"byte_end":62221,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ for inserting the replacement codepoint as the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62226,"byte_end":62276,"line_start":376,"line_end":376,"column_start":5,"column_end":55}},{"value":"/ [`to_str_lossy`](trait.ByteSlice.html#method.to_str_lossy) method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62281,"byte_end":62351,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62356,"byte_end":62359,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for amortizing allocation. However, unlike","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62364,"byte_end":62433,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ `to_str_lossy`, this routine will _always_ copy the contents of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62438,"byte_end":62510,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ byte string into the destination buffer, even if this byte string is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62515,"byte_end":62587,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62592,"byte_end":62608,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62613,"byte_end":62616,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62621,"byte_end":62635,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62640,"byte_end":62643,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62648,"byte_end":62664,"line_start":386,"line_end":386,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62669,"byte_end":62672,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62677,"byte_end":62684,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62689,"byte_end":62714,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62719,"byte_end":62722,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62727,"byte_end":62751,"line_start":391,"line_end":391,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62756,"byte_end":62759,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let mut bstring = <Vec<u8>>::from(\"☃βツ\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62764,"byte_end":62814,"line_start":393,"line_end":393,"column_start":5,"column_end":50}},{"value":"/ // Add a byte that makes the sequence invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62819,"byte_end":62869,"line_start":394,"line_end":394,"column_start":5,"column_end":55}},{"value":"/ bstring.push(b'\\xFF');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62874,"byte_end":62900,"line_start":395,"line_end":395,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62905,"byte_end":62908,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let mut dest = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62913,"byte_end":62946,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/ bstring.to_str_lossy_into(&mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62951,"byte_end":62992,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(\"☃βツ\\u{FFFD}\", dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":62997,"byte_end":63038,"line_start":399,"line_end":399,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":63043,"byte_end":63050,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":63055,"byte_end":63078,"line_start":401,"line_end":401,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":63083,"byte_end":63092,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64911,"byte_end":64920,"line_start":450,"line_end":450,"column_start":8,"column_end":17},"name":"to_os_str","qualname":"::ext_slice::ByteSlice::to_os_str","value":"pub fn to_os_str(&Self) -> Result<&OsStr, Utf8Error>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"/ Create an OS string slice from this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64155,"byte_end":64207,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64212,"byte_end":64215,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64220,"byte_end":64292,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ this returns a UTF-8 decoding error if this byte string is not valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64297,"byte_end":64369,"line_start":432,"line_end":432,"column_start":5,"column_end":77}},{"value":"/ UTF-8. (For example, on Windows, file paths are allowed to be a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64374,"byte_end":64441,"line_start":433,"line_end":433,"column_start":5,"column_end":72}},{"value":"/ sequence of arbitrary 16-bit integers. There is no obvious mapping from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64446,"byte_end":64521,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/ an arbitrary sequence of 8-bit integers to an arbitrary sequence of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64526,"byte_end":64597,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/ 16-bit integers.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64602,"byte_end":64623,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64628,"byte_end":64631,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64636,"byte_end":64650,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64655,"byte_end":64658,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64663,"byte_end":64679,"line_start":440,"line_end":440,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64684,"byte_end":64687,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64692,"byte_end":64699,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64704,"byte_end":64733,"line_start":443,"line_end":443,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64738,"byte_end":64741,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let os_str = b\"foo\".to_os_str().expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64746,"byte_end":64814,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(os_str, \"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64819,"byte_end":64849,"line_start":446,"line_end":446,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64854,"byte_end":64861,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64866,"byte_end":64889,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":64894,"byte_end":64903,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66135,"byte_end":66150,"line_start":490,"line_end":490,"column_start":8,"column_end":23},"name":"to_os_str_lossy","qualname":"::ext_slice::ByteSlice::to_os_str_lossy","value":"pub fn to_os_str_lossy(&Self) -> Cow<, OsStr>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Lossily create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"/ Lossily create an OS string slice from this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65355,"byte_end":65415,"line_start":468,"line_end":468,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65420,"byte_end":65423,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65428,"byte_end":65500,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ this will perform a UTF-8 check and lossily convert this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65505,"byte_end":65577,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/ into valid UTF-8 using the Unicode replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65582,"byte_end":65643,"line_start":472,"line_end":472,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65648,"byte_end":65651,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Note that this can prevent the correct roundtripping of file paths on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65656,"byte_end":65729,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ non-Unix systems such as Windows, where file paths are an arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65734,"byte_end":65805,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/ sequence of 16-bit integers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65810,"byte_end":65842,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65847,"byte_end":65850,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65855,"byte_end":65869,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65874,"byte_end":65877,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65882,"byte_end":65898,"line_start":480,"line_end":480,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65903,"byte_end":65906,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65911,"byte_end":65918,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65923,"byte_end":65947,"line_start":483,"line_end":483,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65952,"byte_end":65955,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let os_str = b\"foo\\xFFbar\".to_os_str_lossy();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":65960,"byte_end":66009,"line_start":485,"line_end":485,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(os_str.to_string_lossy(), \"foo\\u{FFFD}bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66014,"byte_end":66073,"line_start":486,"line_end":486,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66078,"byte_end":66085,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66090,"byte_end":66113,"line_start":488,"line_end":488,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66118,"byte_end":66127,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67489,"byte_end":67496,"line_start":534,"line_end":534,"column_start":8,"column_end":15},"name":"to_path","qualname":"::ext_slice::ByteSlice::to_path","value":"pub fn to_path(&Self) -> Result<&Path, Utf8Error>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Create a path slice from this byte string.","sig":null,"attributes":[{"value":"/ Create a path slice from this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66738,"byte_end":66784,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66789,"byte_end":66792,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66797,"byte_end":66869,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ this returns a UTF-8 decoding error if this byte string is not valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66874,"byte_end":66946,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ UTF-8. (For example, on Windows, file paths are allowed to be a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":66951,"byte_end":67018,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/ sequence of arbitrary 16-bit integers. There is no obvious mapping from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67023,"byte_end":67098,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/ an arbitrary sequence of 8-bit integers to an arbitrary sequence of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67103,"byte_end":67174,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ 16-bit integers.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67179,"byte_end":67200,"line_start":520,"line_end":520,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67205,"byte_end":67208,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67213,"byte_end":67227,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67232,"byte_end":67235,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67240,"byte_end":67256,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67261,"byte_end":67264,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67269,"byte_end":67276,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67281,"byte_end":67305,"line_start":527,"line_end":527,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67310,"byte_end":67313,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let path = b\"foo\".to_path().expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67318,"byte_end":67382,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(path.as_os_str(), \"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67387,"byte_end":67427,"line_start":530,"line_end":530,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67432,"byte_end":67439,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67444,"byte_end":67467,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67472,"byte_end":67481,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68374,"byte_end":68387,"line_start":561,"line_end":561,"column_start":8,"column_end":21},"name":"to_path_lossy","qualname":"::ext_slice::ByteSlice::to_path_lossy","value":"pub fn to_path_lossy(&Self) -> Cow<, Path>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Lossily create a path slice from this byte string.","sig":null,"attributes":[{"value":"/ Lossily create a path slice from this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67585,"byte_end":67639,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67644,"byte_end":67647,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67652,"byte_end":67724,"line_start":540,"line_end":540,"column_start":5,"column_end":77}},{"value":"/ this will perform a UTF-8 check and lossily convert this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67729,"byte_end":67801,"line_start":541,"line_end":541,"column_start":5,"column_end":77}},{"value":"/ into valid UTF-8 using the Unicode replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67806,"byte_end":67867,"line_start":542,"line_end":542,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67872,"byte_end":67875,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Note that this can prevent the correct roundtripping of file paths on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67880,"byte_end":67953,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/ non-Unix systems such as Windows, where file paths are an arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":67958,"byte_end":68029,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ sequence of 16-bit integers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68034,"byte_end":68066,"line_start":546,"line_end":546,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68071,"byte_end":68074,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68079,"byte_end":68093,"line_start":548,"line_end":548,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68098,"byte_end":68101,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68106,"byte_end":68122,"line_start":550,"line_end":550,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68127,"byte_end":68130,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68135,"byte_end":68142,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68147,"byte_end":68171,"line_start":553,"line_end":553,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68176,"byte_end":68179,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"foo\\xFFbar\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68184,"byte_end":68211,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let path = bs.to_path_lossy();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68216,"byte_end":68250,"line_start":556,"line_end":556,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo\\u{FFFD}bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68255,"byte_end":68312,"line_start":557,"line_end":557,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68317,"byte_end":68324,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68329,"byte_end":68352,"line_start":559,"line_end":559,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68357,"byte_end":68366,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69105,"byte_end":69112,"line_start":589,"line_end":589,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::ext_slice::ByteSlice::repeatn","value":"pub fn repeatn(&Self, usize) -> Vec<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Create a new byte string by repeating this byte string `n` times.","sig":null,"attributes":[{"value":"/ Create a new byte string by repeating this byte string `n` times.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68627,"byte_end":68696,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68701,"byte_end":68704,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68709,"byte_end":68721,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68726,"byte_end":68729,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ This function panics if the capacity of the new byte string would","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68734,"byte_end":68803,"line_start":574,"line_end":574,"column_start":5,"column_end":74}},{"value":"/ overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68808,"byte_end":68821,"line_start":575,"line_end":575,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68826,"byte_end":68829,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68834,"byte_end":68848,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68853,"byte_end":68856,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68861,"byte_end":68877,"line_start":579,"line_end":579,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68882,"byte_end":68885,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68890,"byte_end":68897,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68902,"byte_end":68931,"line_start":582,"line_end":582,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68936,"byte_end":68939,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"foo\".repeatn(4), B(\"foofoofoofoo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":68944,"byte_end":68997,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(b\"foo\".repeatn(0), B(\"\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69002,"byte_end":69043,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69048,"byte_end":69055,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69060,"byte_end":69083,"line_start":587,"line_end":587,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69088,"byte_end":69097,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69719,"byte_end":69731,"line_start":612,"line_end":612,"column_start":8,"column_end":20},"name":"contains_str","qualname":"::ext_slice::ByteSlice::contains_str","value":"pub fn contains_str<B: AsRef<[u8]>>(&Self, B) -> bool","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string contains the given needle.","sig":null,"attributes":[{"value":"/ Returns true if and only if this byte string contains the given needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69350,"byte_end":69425,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69430,"byte_end":69433,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69438,"byte_end":69452,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69457,"byte_end":69460,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69465,"byte_end":69481,"line_start":602,"line_end":602,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69486,"byte_end":69489,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69494,"byte_end":69501,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69506,"byte_end":69530,"line_start":605,"line_end":605,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69535,"byte_end":69538,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ assert!(b\"foo bar\".contains_str(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69543,"byte_end":69587,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/ assert!(b\"foo bar\".contains_str(\"bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69592,"byte_end":69636,"line_start":608,"line_end":608,"column_start":5,"column_end":49}},{"value":"/ assert!(!b\"foo\".contains_str(\"foobar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69641,"byte_end":69685,"line_start":609,"line_end":609,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69690,"byte_end":69697,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69702,"byte_end":69711,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70197,"byte_end":70212,"line_start":630,"line_end":630,"column_start":8,"column_end":23},"name":"starts_with_str","qualname":"::ext_slice::ByteSlice::starts_with_str","value":"pub fn starts_with_str<B: AsRef<[u8]>>(&Self, B) -> bool","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given prefix.","sig":null,"attributes":[{"value":"/ Returns true if and only if this byte string has the given prefix.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69823,"byte_end":69893,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69898,"byte_end":69901,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69906,"byte_end":69920,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69925,"byte_end":69928,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69933,"byte_end":69949,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69954,"byte_end":69957,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69962,"byte_end":69969,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":69974,"byte_end":69998,"line_start":623,"line_end":623,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70003,"byte_end":70006,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert!(b\"foo bar\".starts_with_str(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70011,"byte_end":70058,"line_start":625,"line_end":625,"column_start":5,"column_end":52}},{"value":"/ assert!(!b\"foo bar\".starts_with_str(\"bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70063,"byte_end":70111,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/ assert!(!b\"foo\".starts_with_str(\"foobar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70116,"byte_end":70163,"line_start":627,"line_end":627,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70168,"byte_end":70175,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70180,"byte_end":70189,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70689,"byte_end":70702,"line_start":648,"line_end":648,"column_start":8,"column_end":21},"name":"ends_with_str","qualname":"::ext_slice::ByteSlice::ends_with_str","value":"pub fn ends_with_str<B: AsRef<[u8]>>(&Self, B) -> bool","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given suffix.","sig":null,"attributes":[{"value":"/ Returns true if and only if this byte string has the given suffix.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70321,"byte_end":70391,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70396,"byte_end":70399,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70404,"byte_end":70418,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70423,"byte_end":70426,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70431,"byte_end":70447,"line_start":638,"line_end":638,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70452,"byte_end":70455,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70460,"byte_end":70467,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70472,"byte_end":70496,"line_start":641,"line_end":641,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70501,"byte_end":70504,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ assert!(b\"foo bar\".ends_with_str(\"bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70509,"byte_end":70554,"line_start":643,"line_end":643,"column_start":5,"column_end":50}},{"value":"/ assert!(!b\"foo bar\".ends_with_str(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70559,"byte_end":70605,"line_start":644,"line_end":644,"column_start":5,"column_end":51}},{"value":"/ assert!(!b\"bar\".ends_with_str(\"foobar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70610,"byte_end":70655,"line_start":645,"line_end":645,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70660,"byte_end":70667,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70672,"byte_end":70681,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71905,"byte_end":71909,"line_start":683,"line_end":683,"column_start":8,"column_end":12},"name":"find","qualname":"::ext_slice::ByteSlice::find","value":"pub fn find<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given needle.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of the given needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70809,"byte_end":70875,"line_start":652,"line_end":652,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70880,"byte_end":70883,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The needle may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70888,"byte_end":70955,"line_start":654,"line_end":654,"column_start":5,"column_end":72}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":70960,"byte_end":71030,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71035,"byte_end":71038,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ Note that if you're are searching for the same needle in many","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71043,"byte_end":71108,"line_start":657,"line_end":657,"column_start":5,"column_end":70}},{"value":"/ different small haystacks, it may be faster to initialize a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71113,"byte_end":71176,"line_start":658,"line_end":658,"column_start":5,"column_end":68}},{"value":"/ [`Finder`](struct.Finder.html) once, and reuse it for each search.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71181,"byte_end":71251,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71256,"byte_end":71259,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71264,"byte_end":71280,"line_start":661,"line_end":661,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71285,"byte_end":71288,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71293,"byte_end":71365,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71370,"byte_end":71442,"line_start":664,"line_end":664,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71447,"byte_end":71494,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71499,"byte_end":71502,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71507,"byte_end":71576,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71581,"byte_end":71596,"line_start":668,"line_end":668,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71601,"byte_end":71604,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71609,"byte_end":71623,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71628,"byte_end":71631,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71636,"byte_end":71652,"line_start":672,"line_end":672,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71657,"byte_end":71660,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71665,"byte_end":71672,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71677,"byte_end":71701,"line_start":675,"line_end":675,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71706,"byte_end":71709,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo bar baz\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71714,"byte_end":71741,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(Some(0), s.find(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71746,"byte_end":71785,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(4), s.find(\"bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71790,"byte_end":71829,"line_start":679,"line_end":679,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(None, s.find(\"quux\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71834,"byte_end":71871,"line_start":680,"line_end":680,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71876,"byte_end":71883,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":71888,"byte_end":71897,"line_start":682,"line_end":682,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73197,"byte_end":73202,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"rfind","qualname":"::ext_slice::ByteSlice::rfind","value":"pub fn rfind<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given needle.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of the given needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72033,"byte_end":72098,"line_start":687,"line_end":687,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72103,"byte_end":72106,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ The needle may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72111,"byte_end":72178,"line_start":689,"line_end":689,"column_start":5,"column_end":72}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72183,"byte_end":72253,"line_start":690,"line_end":690,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72258,"byte_end":72261,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Note that if you're are searching for the same needle in many","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72266,"byte_end":72331,"line_start":692,"line_end":692,"column_start":5,"column_end":70}},{"value":"/ different small haystacks, it may be faster to initialize a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72336,"byte_end":72399,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/ [`FinderReverse`](struct.FinderReverse.html) once, and reuse it for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72404,"byte_end":72475,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ each search.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72480,"byte_end":72496,"line_start":695,"line_end":695,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72501,"byte_end":72504,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72509,"byte_end":72525,"line_start":697,"line_end":697,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72530,"byte_end":72533,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72538,"byte_end":72610,"line_start":699,"line_end":699,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72615,"byte_end":72687,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72692,"byte_end":72739,"line_start":701,"line_end":701,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72744,"byte_end":72747,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72752,"byte_end":72821,"line_start":703,"line_end":703,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72826,"byte_end":72841,"line_start":704,"line_end":704,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72846,"byte_end":72849,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72854,"byte_end":72868,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72873,"byte_end":72876,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72881,"byte_end":72897,"line_start":708,"line_end":708,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72902,"byte_end":72905,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72910,"byte_end":72917,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72922,"byte_end":72946,"line_start":711,"line_end":711,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72951,"byte_end":72954,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo bar baz\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72959,"byte_end":72986,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(Some(0), s.rfind(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":72991,"byte_end":73031,"line_start":714,"line_end":714,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(4), s.rfind(\"bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73036,"byte_end":73076,"line_start":715,"line_end":715,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(8), s.rfind(\"ba\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73081,"byte_end":73120,"line_start":716,"line_end":716,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(None, s.rfind(\"quux\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73125,"byte_end":73163,"line_start":717,"line_end":717,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73168,"byte_end":73175,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73180,"byte_end":73189,"line_start":719,"line_end":719,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74575,"byte_end":74584,"line_start":762,"line_end":762,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::ext_slice::ByteSlice::find_iter","value":"pub fn find_iter<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, &'a B) -> Find","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle. The iterator yields byte offset positions indicating the start\n of each match.","sig":null,"attributes":[{"value":"/ Returns an iterator of the non-overlapping occurrences of the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73334,"byte_end":73405,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ needle. The iterator yields byte offset positions indicating the start","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73410,"byte_end":73484,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ of each match.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73489,"byte_end":73507,"line_start":726,"line_end":726,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73512,"byte_end":73515,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73520,"byte_end":73536,"line_start":728,"line_end":728,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73541,"byte_end":73544,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73549,"byte_end":73621,"line_start":730,"line_end":730,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73626,"byte_end":73698,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73703,"byte_end":73750,"line_start":732,"line_end":732,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73755,"byte_end":73758,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73763,"byte_end":73832,"line_start":734,"line_end":734,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73837,"byte_end":73852,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73857,"byte_end":73860,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73865,"byte_end":73879,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73884,"byte_end":73887,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73892,"byte_end":73908,"line_start":739,"line_end":739,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73913,"byte_end":73916,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73921,"byte_end":73928,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73933,"byte_end":73957,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73962,"byte_end":73965,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo bar foo foo quux foo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":73970,"byte_end":74010,"line_start":744,"line_end":744,"column_start":5,"column_end":45}},{"value":"/ let matches: Vec<usize> = s.find_iter(\"foo\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74015,"byte_end":74074,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(matches, vec![0, 8, 12, 21]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74079,"byte_end":74123,"line_start":746,"line_end":746,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74128,"byte_end":74135,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74140,"byte_end":74143,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ An empty string matches at every position, including the position","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74148,"byte_end":74217,"line_start":749,"line_end":749,"column_start":5,"column_end":74}},{"value":"/ immediately following the last byte:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74222,"byte_end":74262,"line_start":750,"line_end":750,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74267,"byte_end":74270,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74275,"byte_end":74282,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74287,"byte_end":74311,"line_start":753,"line_end":753,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74316,"byte_end":74319,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ let matches: Vec<usize> = b\"foo\".find_iter(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74324,"byte_end":74385,"line_start":755,"line_end":755,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(matches, vec![0, 1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74390,"byte_end":74432,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74437,"byte_end":74440,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let matches: Vec<usize> = b\"\".find_iter(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74445,"byte_end":74503,"line_start":758,"line_end":758,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(matches, vec![0]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74508,"byte_end":74541,"line_start":759,"line_end":759,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74546,"byte_end":74553,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74558,"byte_end":74567,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75994,"byte_end":76004,"line_start":807,"line_end":807,"column_start":8,"column_end":18},"name":"rfind_iter","qualname":"::ext_slice::ByteSlice::rfind_iter","value":"pub fn rfind_iter<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, &'a B) -> FindReverse","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle in reverse. The iterator yields byte offset positions indicating\n the start of each match.","sig":null,"attributes":[{"value":"/ Returns an iterator of the non-overlapping occurrences of the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74739,"byte_end":74810,"line_start":769,"line_end":769,"column_start":5,"column_end":76}},{"value":"/ needle in reverse. The iterator yields byte offset positions indicating","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74815,"byte_end":74890,"line_start":770,"line_end":770,"column_start":5,"column_end":80}},{"value":"/ the start of each match.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74895,"byte_end":74923,"line_start":771,"line_end":771,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74928,"byte_end":74931,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74936,"byte_end":74952,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74957,"byte_end":74960,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":74965,"byte_end":75037,"line_start":775,"line_end":775,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75042,"byte_end":75114,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75119,"byte_end":75166,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75171,"byte_end":75174,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75179,"byte_end":75248,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75253,"byte_end":75268,"line_start":780,"line_end":780,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75273,"byte_end":75276,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75281,"byte_end":75295,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75300,"byte_end":75303,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75308,"byte_end":75324,"line_start":784,"line_end":784,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75329,"byte_end":75332,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75337,"byte_end":75344,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75349,"byte_end":75373,"line_start":787,"line_end":787,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75378,"byte_end":75381,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo bar foo foo quux foo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75386,"byte_end":75426,"line_start":789,"line_end":789,"column_start":5,"column_end":45}},{"value":"/ let matches: Vec<usize> = s.rfind_iter(\"foo\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75431,"byte_end":75491,"line_start":790,"line_end":790,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(matches, vec![21, 12, 8, 0]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75496,"byte_end":75540,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75545,"byte_end":75552,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75557,"byte_end":75560,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ An empty string matches at every position, including the position","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75565,"byte_end":75634,"line_start":794,"line_end":794,"column_start":5,"column_end":74}},{"value":"/ immediately following the last byte:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75639,"byte_end":75679,"line_start":795,"line_end":795,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75684,"byte_end":75687,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75692,"byte_end":75699,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75704,"byte_end":75728,"line_start":798,"line_end":798,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75733,"byte_end":75736,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ let matches: Vec<usize> = b\"foo\".rfind_iter(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75741,"byte_end":75803,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(matches, vec![3, 2, 1, 0]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75808,"byte_end":75850,"line_start":801,"line_end":801,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75855,"byte_end":75858,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let matches: Vec<usize> = b\"\".rfind_iter(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75863,"byte_end":75922,"line_start":803,"line_end":803,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(matches, vec![0]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75927,"byte_end":75960,"line_start":804,"line_end":804,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75965,"byte_end":75972,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":75977,"byte_end":75986,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76585,"byte_end":76594,"line_start":828,"line_end":828,"column_start":8,"column_end":17},"name":"find_byte","qualname":"::ext_slice::ByteSlice::find_byte","value":"pub fn find_byte(&Self, u8) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of the given byte. If the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76173,"byte_end":76244,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ byte does not occur in this byte string, then `None` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76249,"byte_end":76318,"line_start":815,"line_end":815,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76323,"byte_end":76326,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76331,"byte_end":76345,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76350,"byte_end":76353,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76358,"byte_end":76374,"line_start":819,"line_end":819,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76379,"byte_end":76382,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76387,"byte_end":76394,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76399,"byte_end":76423,"line_start":822,"line_end":822,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76428,"byte_end":76431,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(10), b\"foo bar baz\".find_byte(b'z'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76436,"byte_end":76493,"line_start":824,"line_end":824,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(None, b\"foo bar baz\".find_byte(b'y'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76498,"byte_end":76551,"line_start":825,"line_end":825,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76556,"byte_end":76563,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76568,"byte_end":76577,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77093,"byte_end":77103,"line_start":846,"line_end":846,"column_start":8,"column_end":18},"name":"rfind_byte","qualname":"::ext_slice::ByteSlice::rfind_byte","value":"pub fn rfind_byte(&Self, u8) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of the given byte. If the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76680,"byte_end":76750,"line_start":832,"line_end":832,"column_start":5,"column_end":75}},{"value":"/ byte does not occur in this byte string, then `None` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76755,"byte_end":76824,"line_start":833,"line_end":833,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76829,"byte_end":76832,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76837,"byte_end":76851,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76856,"byte_end":76859,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76864,"byte_end":76880,"line_start":837,"line_end":837,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76885,"byte_end":76888,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76893,"byte_end":76900,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76905,"byte_end":76929,"line_start":840,"line_end":840,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76934,"byte_end":76937,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(10), b\"foo bar baz\".rfind_byte(b'z'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":76942,"byte_end":77000,"line_start":842,"line_end":842,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, b\"foo bar baz\".rfind_byte(b'y'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77005,"byte_end":77059,"line_start":843,"line_end":843,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77064,"byte_end":77071,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77076,"byte_end":77085,"line_start":845,"line_end":845,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77894,"byte_end":77903,"line_start":870,"line_end":870,"column_start":8,"column_end":17},"name":"find_char","qualname":"::ext_slice::ByteSlice::find_char","value":"pub fn find_char(&Self, char) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of the given codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77190,"byte_end":77259,"line_start":850,"line_end":850,"column_start":5,"column_end":74}},{"value":"/ If the codepoint does not occur in this byte string, then `None` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77264,"byte_end":77335,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77340,"byte_end":77353,"line_start":852,"line_end":852,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77358,"byte_end":77361,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Note that if one searches for the replacement codepoint, `\\u{FFFD}`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77366,"byte_end":77438,"line_start":854,"line_end":854,"column_start":5,"column_end":77}},{"value":"/ then only explicit occurrences of that encoding will be found. Invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77443,"byte_end":77517,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ UTF-8 sequences will not be matched.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77522,"byte_end":77562,"line_start":856,"line_end":856,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77567,"byte_end":77570,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77575,"byte_end":77589,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77594,"byte_end":77597,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77602,"byte_end":77618,"line_start":860,"line_end":860,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77623,"byte_end":77626,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77631,"byte_end":77638,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77643,"byte_end":77672,"line_start":863,"line_end":863,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77677,"byte_end":77680,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(10), b\"foo bar baz\".find_char('z'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77685,"byte_end":77741,"line_start":865,"line_end":865,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Some(4), B(\"αβγγδ\").find_char('γ'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77746,"byte_end":77803,"line_start":866,"line_end":866,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(None, b\"foo bar baz\".find_char('y'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77808,"byte_end":77860,"line_start":867,"line_end":867,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77865,"byte_end":77872,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77877,"byte_end":77886,"line_start":869,"line_end":869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78704,"byte_end":78714,"line_start":894,"line_end":894,"column_start":8,"column_end":18},"name":"rfind_char","qualname":"::ext_slice::ByteSlice::rfind_char","value":"pub fn rfind_char(&Self, char) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of the given codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":77998,"byte_end":78066,"line_start":874,"line_end":874,"column_start":5,"column_end":73}},{"value":"/ If the codepoint does not occur in this byte string, then `None` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78071,"byte_end":78142,"line_start":875,"line_end":875,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78147,"byte_end":78160,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78165,"byte_end":78168,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Note that if one searches for the replacement codepoint, `\\u{FFFD}`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78173,"byte_end":78245,"line_start":878,"line_end":878,"column_start":5,"column_end":77}},{"value":"/ then only explicit occurrences of that encoding will be found. Invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78250,"byte_end":78324,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ UTF-8 sequences will not be matched.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78329,"byte_end":78369,"line_start":880,"line_end":880,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78374,"byte_end":78377,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78382,"byte_end":78396,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78401,"byte_end":78404,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78409,"byte_end":78425,"line_start":884,"line_end":884,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78430,"byte_end":78433,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78438,"byte_end":78445,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78450,"byte_end":78479,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78484,"byte_end":78487,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(10), b\"foo bar baz\".rfind_char('z'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78492,"byte_end":78549,"line_start":889,"line_end":889,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Some(6), B(\"αβγγδ\").rfind_char('γ'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78554,"byte_end":78612,"line_start":890,"line_end":890,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(None, b\"foo bar baz\".rfind_char('y'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78617,"byte_end":78670,"line_start":891,"line_end":891,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78675,"byte_end":78682,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78687,"byte_end":78696,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80089,"byte_end":80101,"line_start":931,"line_end":931,"column_start":8,"column_end":20},"name":"find_byteset","qualname":"::ext_slice::ByteSlice::find_byteset","value":"pub fn find_byteset<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of any of the bytes in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78810,"byte_end":78882,"line_start":898,"line_end":898,"column_start":5,"column_end":77}},{"value":"/ provided set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78887,"byte_end":78904,"line_start":899,"line_end":899,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78909,"byte_end":78912,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ The `byteset` may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78917,"byte_end":78987,"line_start":901,"line_end":901,"column_start":5,"column_end":75}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":78992,"byte_end":79066,"line_start":902,"line_end":902,"column_start":5,"column_end":79}},{"value":"/ note that passing a `&str` which contains multibyte characters may not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79071,"byte_end":79145,"line_start":903,"line_end":903,"column_start":5,"column_end":79}},{"value":"/ behave as you expect: each byte in the `&str` is treated as an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79150,"byte_end":79216,"line_start":904,"line_end":904,"column_start":5,"column_end":71}},{"value":"/ individual member of the byte set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79221,"byte_end":79259,"line_start":905,"line_end":905,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79264,"byte_end":79267,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ Note that order is irrelevant for the `byteset` parameter, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79272,"byte_end":79338,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"/ duplicate bytes present in its body are ignored.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79343,"byte_end":79395,"line_start":908,"line_end":908,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79400,"byte_end":79403,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79408,"byte_end":79424,"line_start":910,"line_end":910,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79429,"byte_end":79432,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79437,"byte_end":79509,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ with respect to both the set of bytes and the haystack. That is, this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79514,"byte_end":79587,"line_start":913,"line_end":913,"column_start":5,"column_end":78}},{"value":"/ runs in `O(byteset.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79592,"byte_end":79645,"line_start":914,"line_end":914,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79650,"byte_end":79653,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79658,"byte_end":79727,"line_start":916,"line_end":916,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79732,"byte_end":79747,"line_start":917,"line_end":917,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79752,"byte_end":79755,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79760,"byte_end":79774,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79779,"byte_end":79782,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79787,"byte_end":79803,"line_start":921,"line_end":921,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79808,"byte_end":79811,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79816,"byte_end":79823,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79828,"byte_end":79852,"line_start":924,"line_end":924,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79857,"byte_end":79860,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"foo bar baz\".find_byteset(b\"zr\"), Some(6));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79865,"byte_end":79925,"line_start":926,"line_end":926,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(b\"foo baz bar\".find_byteset(b\"bzr\"), Some(4));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79930,"byte_end":79991,"line_start":927,"line_end":927,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(None, b\"foo baz bar\".find_byteset(b\"\\t\\n\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":79996,"byte_end":80055,"line_start":928,"line_end":928,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80060,"byte_end":80067,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80072,"byte_end":80081,"line_start":930,"line_end":930,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81536,"byte_end":81552,"line_start":968,"line_end":968,"column_start":8,"column_end":24},"name":"find_not_byteset","qualname":"::ext_slice::ByteSlice::find_not_byteset","value":"pub fn find_not_byteset<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of a byte that is not a member","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80224,"byte_end":80300,"line_start":935,"line_end":935,"column_start":5,"column_end":81}},{"value":"/ of the provided set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80305,"byte_end":80329,"line_start":936,"line_end":936,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80334,"byte_end":80337,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ The `byteset` may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80342,"byte_end":80412,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80417,"byte_end":80491,"line_start":939,"line_end":939,"column_start":5,"column_end":79}},{"value":"/ note that passing a `&str` which contains multibyte characters may not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80496,"byte_end":80570,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ behave as you expect: each byte in the `&str` is treated as an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80575,"byte_end":80641,"line_start":941,"line_end":941,"column_start":5,"column_end":71}},{"value":"/ individual member of the byte set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80646,"byte_end":80684,"line_start":942,"line_end":942,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80689,"byte_end":80692,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Note that order is irrelevant for the `byteset` parameter, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80697,"byte_end":80763,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/ duplicate bytes present in its body are ignored.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80768,"byte_end":80820,"line_start":945,"line_end":945,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80825,"byte_end":80828,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80833,"byte_end":80849,"line_start":947,"line_end":947,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80854,"byte_end":80857,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80862,"byte_end":80934,"line_start":949,"line_end":949,"column_start":5,"column_end":77}},{"value":"/ with respect to both the set of bytes and the haystack. That is, this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":80939,"byte_end":81012,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ runs in `O(byteset.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81017,"byte_end":81070,"line_start":951,"line_end":951,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81075,"byte_end":81078,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81083,"byte_end":81152,"line_start":953,"line_end":953,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81157,"byte_end":81172,"line_start":954,"line_end":954,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81177,"byte_end":81180,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81185,"byte_end":81199,"line_start":956,"line_end":956,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81204,"byte_end":81207,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81212,"byte_end":81228,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81233,"byte_end":81236,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81241,"byte_end":81248,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81253,"byte_end":81277,"line_start":961,"line_end":961,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81282,"byte_end":81285,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"foo bar baz\".find_not_byteset(b\"fo \"), Some(4));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81290,"byte_end":81355,"line_start":963,"line_end":963,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(b\"\\t\\tbaz bar\".find_not_byteset(b\" \\t\\r\\n\"), Some(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81360,"byte_end":81429,"line_start":964,"line_end":964,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(b\"foo\\nbaz\\tbar\".find_not_byteset(b\"\\t\\n\"), Some(0));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81434,"byte_end":81502,"line_start":965,"line_end":965,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81507,"byte_end":81514,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81519,"byte_end":81528,"line_start":967,"line_end":967,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82965,"byte_end":82978,"line_start":1005,"line_end":1005,"column_start":8,"column_end":21},"name":"rfind_byteset","qualname":"::ext_slice::ByteSlice::rfind_byteset","value":"pub fn rfind_byteset<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of any of the bytes in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81679,"byte_end":81750,"line_start":972,"line_end":972,"column_start":5,"column_end":76}},{"value":"/ provided set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81755,"byte_end":81772,"line_start":973,"line_end":973,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81777,"byte_end":81780,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ The `byteset` may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81785,"byte_end":81855,"line_start":975,"line_end":975,"column_start":5,"column_end":75}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81860,"byte_end":81934,"line_start":976,"line_end":976,"column_start":5,"column_end":79}},{"value":"/ note that passing a `&str` which contains multibyte characters may not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":81939,"byte_end":82013,"line_start":977,"line_end":977,"column_start":5,"column_end":79}},{"value":"/ behave as you expect: each byte in the `&str` is treated as an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82018,"byte_end":82084,"line_start":978,"line_end":978,"column_start":5,"column_end":71}},{"value":"/ individual member of the byte set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82089,"byte_end":82127,"line_start":979,"line_end":979,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82132,"byte_end":82135,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ Note that order is irrelevant for the `byteset` parameter, and duplicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82140,"byte_end":82216,"line_start":981,"line_end":981,"column_start":5,"column_end":81}},{"value":"/ bytes present in its body are ignored.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82221,"byte_end":82263,"line_start":982,"line_end":982,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82268,"byte_end":82271,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82276,"byte_end":82292,"line_start":984,"line_end":984,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82297,"byte_end":82300,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82305,"byte_end":82377,"line_start":986,"line_end":986,"column_start":5,"column_end":77}},{"value":"/ with respect to both the set of bytes and the haystack. That is, this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82382,"byte_end":82455,"line_start":987,"line_end":987,"column_start":5,"column_end":78}},{"value":"/ runs in `O(byteset.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82460,"byte_end":82513,"line_start":988,"line_end":988,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82518,"byte_end":82521,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82526,"byte_end":82595,"line_start":990,"line_end":990,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82600,"byte_end":82615,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82620,"byte_end":82623,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82628,"byte_end":82642,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82647,"byte_end":82650,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82655,"byte_end":82671,"line_start":995,"line_end":995,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82676,"byte_end":82679,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82684,"byte_end":82691,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82696,"byte_end":82720,"line_start":998,"line_end":998,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82725,"byte_end":82728,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"foo bar baz\".rfind_byteset(b\"agb\"), Some(9));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82733,"byte_end":82795,"line_start":1000,"line_end":1000,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(b\"foo baz bar\".rfind_byteset(b\"rabz \"), Some(10));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82800,"byte_end":82865,"line_start":1001,"line_end":1001,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(b\"foo baz bar\".rfind_byteset(b\"\\n123\"), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82870,"byte_end":82931,"line_start":1002,"line_end":1002,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82936,"byte_end":82943,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":82948,"byte_end":82957,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84416,"byte_end":84433,"line_start":1042,"line_end":1042,"column_start":8,"column_end":25},"name":"rfind_not_byteset","qualname":"::ext_slice::ByteSlice::rfind_not_byteset","value":"pub fn rfind_not_byteset<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of a byte that is not a member","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83102,"byte_end":83177,"line_start":1009,"line_end":1009,"column_start":5,"column_end":80}},{"value":"/ of the provided set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83182,"byte_end":83206,"line_start":1010,"line_end":1010,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83211,"byte_end":83214,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The `byteset` may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83219,"byte_end":83289,"line_start":1012,"line_end":1012,"column_start":5,"column_end":75}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83294,"byte_end":83368,"line_start":1013,"line_end":1013,"column_start":5,"column_end":79}},{"value":"/ note that passing a `&str` which contains multibyte characters may not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83373,"byte_end":83447,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"/ behave as you expect: each byte in the `&str` is treated as an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83452,"byte_end":83518,"line_start":1015,"line_end":1015,"column_start":5,"column_end":71}},{"value":"/ individual member of the byte set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83523,"byte_end":83561,"line_start":1016,"line_end":1016,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83566,"byte_end":83569,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Note that order is irrelevant for the `byteset` parameter, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83574,"byte_end":83640,"line_start":1018,"line_end":1018,"column_start":5,"column_end":71}},{"value":"/ duplicate bytes present in its body are ignored.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83645,"byte_end":83697,"line_start":1019,"line_end":1019,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83702,"byte_end":83705,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83710,"byte_end":83726,"line_start":1021,"line_end":1021,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83731,"byte_end":83734,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83739,"byte_end":83811,"line_start":1023,"line_end":1023,"column_start":5,"column_end":77}},{"value":"/ with respect to both the set of bytes and the haystack. That is, this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83816,"byte_end":83889,"line_start":1024,"line_end":1024,"column_start":5,"column_end":78}},{"value":"/ runs in `O(byteset.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83894,"byte_end":83947,"line_start":1025,"line_end":1025,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83952,"byte_end":83955,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":83960,"byte_end":84029,"line_start":1027,"line_end":1027,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84034,"byte_end":84049,"line_start":1028,"line_end":1028,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84054,"byte_end":84057,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84062,"byte_end":84076,"line_start":1030,"line_end":1030,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84081,"byte_end":84084,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84089,"byte_end":84105,"line_start":1032,"line_end":1032,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84110,"byte_end":84113,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84118,"byte_end":84125,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84130,"byte_end":84154,"line_start":1035,"line_end":1035,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84159,"byte_end":84162,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"foo bar baz,\\t\".rfind_not_byteset(b\",\\t\"), Some(10));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84167,"byte_end":84237,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(b\"foo baz bar\".rfind_not_byteset(b\"rabz \"), Some(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84242,"byte_end":84310,"line_start":1038,"line_end":1038,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(None, b\"foo baz bar\".rfind_not_byteset(b\"barfoz \"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84315,"byte_end":84382,"line_start":1039,"line_end":1039,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84387,"byte_end":84394,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84399,"byte_end":84408,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85208,"byte_end":85214,"line_start":1069,"line_end":1069,"column_start":8,"column_end":14},"name":"fields","qualname":"::ext_slice::ByteSlice::fields","value":"pub fn fields(&Self) -> Fields","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous whitespace.","sig":null,"attributes":[{"value":"/ Returns an iterator over the fields in a byte string, separated by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84561,"byte_end":84631,"line_start":1046,"line_end":1046,"column_start":5,"column_end":75}},{"value":"/ contiguous whitespace.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84636,"byte_end":84662,"line_start":1047,"line_end":1047,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84667,"byte_end":84670,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84675,"byte_end":84688,"line_start":1049,"line_end":1049,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84693,"byte_end":84696,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84701,"byte_end":84717,"line_start":1051,"line_end":1051,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84722,"byte_end":84725,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84730,"byte_end":84737,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84742,"byte_end":84771,"line_start":1054,"line_end":1054,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84776,"byte_end":84779,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ let s = B(\"  foo\\tbar\\t\\u{2003}\\nquux   \\n\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84784,"byte_end":84833,"line_start":1056,"line_end":1056,"column_start":5,"column_end":54}},{"value":"/ let fields: Vec<&[u8]> = s.fields().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84838,"byte_end":84888,"line_start":1057,"line_end":1057,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(fields, vec![B(\"foo\"), B(\"bar\"), B(\"quux\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84893,"byte_end":84953,"line_start":1058,"line_end":1058,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84958,"byte_end":84965,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84970,"byte_end":84973,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ A byte string consisting of just whitespace yields no elements:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":84978,"byte_end":85045,"line_start":1061,"line_end":1061,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85050,"byte_end":85053,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85058,"byte_end":85065,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85070,"byte_end":85099,"line_start":1064,"line_end":1064,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85104,"byte_end":85107,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, B(\"  \\n\\t\\u{2003}\\n  \\t\").fields().count());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85112,"byte_end":85174,"line_start":1066,"line_end":1066,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85179,"byte_end":85186,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85191,"byte_end":85200,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86200,"byte_end":86211,"line_start":1101,"line_end":1101,"column_start":8,"column_end":19},"name":"fields_with","qualname":"::ext_slice::ByteSlice::fields_with","value":"pub fn fields_with<F: FnMut(char) -> bool>(&Self, F) -> FieldsWith<, F>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous codepoints satisfying the given predicate.","sig":null,"attributes":[{"value":"/ Returns an iterator over the fields in a byte string, separated by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85286,"byte_end":85356,"line_start":1073,"line_end":1073,"column_start":5,"column_end":75}},{"value":"/ contiguous codepoints satisfying the given predicate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85361,"byte_end":85418,"line_start":1074,"line_end":1074,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85423,"byte_end":85426,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ If this byte string is not valid UTF-8, then the given closure will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85431,"byte_end":85502,"line_start":1076,"line_end":1076,"column_start":5,"column_end":76}},{"value":"/ be called with a Unicode replacement codepoint when invalid UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85507,"byte_end":85576,"line_start":1077,"line_end":1077,"column_start":5,"column_end":74}},{"value":"/ bytes are seen.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85581,"byte_end":85600,"line_start":1078,"line_end":1078,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85605,"byte_end":85608,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85613,"byte_end":85626,"line_start":1080,"line_end":1080,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85631,"byte_end":85634,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85639,"byte_end":85655,"line_start":1082,"line_end":1082,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85660,"byte_end":85663,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85668,"byte_end":85675,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85680,"byte_end":85709,"line_start":1085,"line_end":1085,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85714,"byte_end":85717,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let s = b\"123foo999999bar1quux123456\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85722,"byte_end":85764,"line_start":1087,"line_end":1087,"column_start":5,"column_end":47}},{"value":"/ let fields: Vec<&[u8]> = s.fields_with(|c| c.is_numeric()).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85769,"byte_end":85842,"line_start":1088,"line_end":1088,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(fields, vec![B(\"foo\"), B(\"bar\"), B(\"quux\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85847,"byte_end":85907,"line_start":1089,"line_end":1089,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85912,"byte_end":85919,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85924,"byte_end":85927,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ A byte string consisting of all codepoints satisfying the predicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":85932,"byte_end":86003,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ yields no elements:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86008,"byte_end":86031,"line_start":1093,"line_end":1093,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86036,"byte_end":86039,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86044,"byte_end":86051,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86056,"byte_end":86080,"line_start":1096,"line_end":1096,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86085,"byte_end":86088,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(0, b\"1911354563\".fields_with(|c| c.is_numeric()).count());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86093,"byte_end":86166,"line_start":1098,"line_end":1098,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86171,"byte_end":86178,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86183,"byte_end":86192,"line_start":1100,"line_end":1100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89442,"byte_end":89451,"line_start":1194,"line_end":1194,"column_start":8,"column_end":17},"name":"split_str","qualname":"::ext_slice::ByteSlice::split_str","value":"pub fn split_str<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, &'a B) -> Split","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated\n by the given byte string. Each element yielded is guaranteed not to\n include the splitter substring.","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of this byte string, separated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86327,"byte_end":86397,"line_start":1105,"line_end":1105,"column_start":5,"column_end":75}},{"value":"/ by the given byte string. Each element yielded is guaranteed not to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86402,"byte_end":86473,"line_start":1106,"line_end":1106,"column_start":5,"column_end":76}},{"value":"/ include the splitter substring.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86478,"byte_end":86513,"line_start":1107,"line_end":1107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86518,"byte_end":86521,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ The splitter may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86526,"byte_end":86595,"line_start":1109,"line_end":1109,"column_start":5,"column_end":74}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86600,"byte_end":86670,"line_start":1110,"line_end":1110,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86675,"byte_end":86678,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86683,"byte_end":86697,"line_start":1112,"line_end":1112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86702,"byte_end":86705,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86710,"byte_end":86726,"line_start":1114,"line_end":1114,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86731,"byte_end":86734,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86739,"byte_end":86746,"line_start":1116,"line_end":1116,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86751,"byte_end":86780,"line_start":1117,"line_end":1117,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86785,"byte_end":86788,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"Mary had a little lamb\".split_str(\" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86793,"byte_end":86868,"line_start":1119,"line_end":1119,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86873,"byte_end":86896,"line_start":1120,"line_end":1120,"column_start":5,"column_end":28}},{"value":"/     B(\"Mary\"), B(\"had\"), B(\"a\"), B(\"little\"), B(\"lamb\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86901,"byte_end":86961,"line_start":1121,"line_end":1121,"column_start":5,"column_end":65}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86966,"byte_end":86973,"line_start":1122,"line_end":1122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86978,"byte_end":86981,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"\".split_str(\"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":86986,"byte_end":87039,"line_start":1124,"line_end":1124,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(x, vec![b\"\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87044,"byte_end":87073,"line_start":1125,"line_end":1125,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87078,"byte_end":87081,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"lionXXtigerXleopard\".split_str(\"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87086,"byte_end":87158,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(x, vec![B(\"lion\"), B(\"\"), B(\"tiger\"), B(\"leopard\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87163,"byte_end":87231,"line_start":1128,"line_end":1128,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87236,"byte_end":87239,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"lion::tiger::leopard\".split_str(\"::\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87244,"byte_end":87318,"line_start":1130,"line_end":1130,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(x, vec![B(\"lion\"), B(\"tiger\"), B(\"leopard\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87323,"byte_end":87384,"line_start":1131,"line_end":1131,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87389,"byte_end":87396,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87401,"byte_end":87404,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ If a string contains multiple contiguous separators, you will end up","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87409,"byte_end":87481,"line_start":1134,"line_end":1134,"column_start":5,"column_end":77}},{"value":"/ with empty strings yielded by the iterator:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87486,"byte_end":87533,"line_start":1135,"line_end":1135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87538,"byte_end":87541,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87546,"byte_end":87553,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87558,"byte_end":87587,"line_start":1138,"line_end":1138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87592,"byte_end":87595,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"||||a||b|c\".split_str(\"|\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87600,"byte_end":87663,"line_start":1140,"line_end":1140,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87668,"byte_end":87691,"line_start":1141,"line_end":1141,"column_start":5,"column_end":28}},{"value":"/     B(\"\"), B(\"\"), B(\"\"), B(\"\"), B(\"a\"), B(\"\"), B(\"b\"), B(\"c\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87696,"byte_end":87762,"line_start":1142,"line_end":1142,"column_start":5,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87767,"byte_end":87774,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87779,"byte_end":87782,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"(///)\".split_str(\"/\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87787,"byte_end":87845,"line_start":1145,"line_end":1145,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(x, vec![B(\"(\"), B(\"\"), B(\"\"), B(\")\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87850,"byte_end":87904,"line_start":1146,"line_end":1146,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87909,"byte_end":87916,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87921,"byte_end":87924,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Separators at the start or end of a string are neighbored by empty","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":87929,"byte_end":87999,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/ strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88004,"byte_end":88016,"line_start":1150,"line_end":1150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88021,"byte_end":88024,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88029,"byte_end":88036,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88041,"byte_end":88070,"line_start":1153,"line_end":1153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88075,"byte_end":88078,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"010\".split_str(\"0\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88083,"byte_end":88139,"line_start":1155,"line_end":1155,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x, vec![B(\"\"), B(\"1\"), B(\"\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88144,"byte_end":88190,"line_start":1156,"line_end":1156,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88195,"byte_end":88202,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88207,"byte_end":88210,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ When the empty string is used as a separator, it splits every **byte**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88215,"byte_end":88289,"line_start":1159,"line_end":1159,"column_start":5,"column_end":79}},{"value":"/ in the byte string, along with the beginning and end of the byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88294,"byte_end":88362,"line_start":1160,"line_end":1160,"column_start":5,"column_end":73}},{"value":"/ string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88367,"byte_end":88378,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88383,"byte_end":88386,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88391,"byte_end":88398,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88403,"byte_end":88432,"line_start":1164,"line_end":1164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88437,"byte_end":88440,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"rust\".split_str(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88445,"byte_end":88501,"line_start":1166,"line_end":1166,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88506,"byte_end":88529,"line_start":1167,"line_end":1167,"column_start":5,"column_end":28}},{"value":"/     B(\"\"), B(\"r\"), B(\"u\"), B(\"s\"), B(\"t\"), B(\"\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88534,"byte_end":88587,"line_start":1168,"line_end":1168,"column_start":5,"column_end":58}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88592,"byte_end":88599,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88604,"byte_end":88607,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ // Splitting by an empty string is not UTF-8 aware. Elements yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88612,"byte_end":88684,"line_start":1171,"line_end":1171,"column_start":5,"column_end":77}},{"value":"/ // may not be valid UTF-8!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88689,"byte_end":88719,"line_start":1172,"line_end":1172,"column_start":5,"column_end":35}},{"value":"/ let x: Vec<&[u8]> = B(\"☃\").split_str(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88724,"byte_end":88781,"line_start":1173,"line_end":1173,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88786,"byte_end":88809,"line_start":1174,"line_end":1174,"column_start":5,"column_end":28}},{"value":"/     B(\"\"), B(b\"\\xE2\"), B(b\"\\x98\"), B(b\"\\x83\"), B(\"\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88814,"byte_end":88871,"line_start":1175,"line_end":1175,"column_start":5,"column_end":62}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88876,"byte_end":88883,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88888,"byte_end":88895,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88900,"byte_end":88903,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Contiguous separators, especially whitespace, can lead to possibly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88908,"byte_end":88978,"line_start":1179,"line_end":1179,"column_start":5,"column_end":75}},{"value":"/ surprising behavior. For example, this code is correct:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":88983,"byte_end":89042,"line_start":1180,"line_end":1180,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89047,"byte_end":89050,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89055,"byte_end":89062,"line_start":1182,"line_end":1182,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89067,"byte_end":89096,"line_start":1183,"line_end":1183,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89101,"byte_end":89104,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"    a  b c\".split_str(\" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89109,"byte_end":89172,"line_start":1185,"line_end":1185,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89177,"byte_end":89200,"line_start":1186,"line_end":1186,"column_start":5,"column_end":28}},{"value":"/     B(\"\"), B(\"\"), B(\"\"), B(\"\"), B(\"a\"), B(\"\"), B(\"b\"), B(\"c\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89205,"byte_end":89271,"line_start":1187,"line_end":1187,"column_start":5,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89276,"byte_end":89283,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89288,"byte_end":89295,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89300,"byte_end":89303,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ It does *not* give you `[\"a\", \"b\", \"c\"]`. For that behavior, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89308,"byte_end":89376,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/ [`fields`](#method.fields) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89381,"byte_end":89420,"line_start":1192,"line_end":1192,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89425,"byte_end":89434,"line_start":1193,"line_end":1193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92671,"byte_end":92681,"line_start":1288,"line_end":1288,"column_start":8,"column_end":18},"name":"rsplit_str","qualname":"::ext_slice::ByteSlice::rsplit_str","value":"pub fn rsplit_str<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, &'a B)\n-> SplitReverse","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated by\n the given byte string, in reverse. Each element yielded is guaranteed\n not to include the splitter substring.","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of this byte string, separated by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89612,"byte_end":89685,"line_start":1201,"line_end":1201,"column_start":5,"column_end":78}},{"value":"/ the given byte string, in reverse. Each element yielded is guaranteed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89690,"byte_end":89763,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ not to include the splitter substring.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89768,"byte_end":89810,"line_start":1203,"line_end":1203,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89815,"byte_end":89818,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ The splitter may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89823,"byte_end":89892,"line_start":1205,"line_end":1205,"column_start":5,"column_end":74}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89897,"byte_end":89967,"line_start":1206,"line_end":1206,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89972,"byte_end":89975,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89980,"byte_end":89994,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":89999,"byte_end":90002,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90007,"byte_end":90023,"line_start":1210,"line_end":1210,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90028,"byte_end":90031,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90036,"byte_end":90043,"line_start":1212,"line_end":1212,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90048,"byte_end":90077,"line_start":1213,"line_end":1213,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90082,"byte_end":90085,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90090,"byte_end":90113,"line_start":1215,"line_end":1215,"column_start":5,"column_end":28}},{"value":"/     b\"Mary had a little lamb\".rsplit_str(\" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90118,"byte_end":90178,"line_start":1216,"line_end":1216,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90183,"byte_end":90206,"line_start":1217,"line_end":1217,"column_start":5,"column_end":28}},{"value":"/     B(\"lamb\"), B(\"little\"), B(\"a\"), B(\"had\"), B(\"Mary\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90211,"byte_end":90271,"line_start":1218,"line_end":1218,"column_start":5,"column_end":65}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90276,"byte_end":90283,"line_start":1219,"line_end":1219,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90288,"byte_end":90291,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"\".rsplit_str(\"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90296,"byte_end":90350,"line_start":1221,"line_end":1221,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(x, vec![b\"\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90355,"byte_end":90384,"line_start":1222,"line_end":1222,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90389,"byte_end":90392,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"lionXXtigerXleopard\".rsplit_str(\"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90397,"byte_end":90470,"line_start":1224,"line_end":1224,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x, vec![B(\"leopard\"), B(\"tiger\"), B(\"\"), B(\"lion\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90475,"byte_end":90543,"line_start":1225,"line_end":1225,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90548,"byte_end":90551,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"lion::tiger::leopard\".rsplit_str(\"::\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90556,"byte_end":90631,"line_start":1227,"line_end":1227,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x, vec![B(\"leopard\"), B(\"tiger\"), B(\"lion\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90636,"byte_end":90697,"line_start":1228,"line_end":1228,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90702,"byte_end":90709,"line_start":1229,"line_end":1229,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90714,"byte_end":90717,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ If a string contains multiple contiguous separators, you will end up","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90722,"byte_end":90794,"line_start":1231,"line_end":1231,"column_start":5,"column_end":77}},{"value":"/ with empty strings yielded by the iterator:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90799,"byte_end":90846,"line_start":1232,"line_end":1232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90851,"byte_end":90854,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90859,"byte_end":90866,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90871,"byte_end":90900,"line_start":1235,"line_end":1235,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90905,"byte_end":90908,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"||||a||b|c\".rsplit_str(\"|\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90913,"byte_end":90977,"line_start":1237,"line_end":1237,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":90982,"byte_end":91005,"line_start":1238,"line_end":1238,"column_start":5,"column_end":28}},{"value":"/     B(\"c\"), B(\"b\"), B(\"\"), B(\"a\"), B(\"\"), B(\"\"), B(\"\"), B(\"\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91010,"byte_end":91076,"line_start":1239,"line_end":1239,"column_start":5,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91081,"byte_end":91088,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91093,"byte_end":91096,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"(///)\".rsplit_str(\"/\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91101,"byte_end":91160,"line_start":1242,"line_end":1242,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(x, vec![B(\")\"), B(\"\"), B(\"\"), B(\"(\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91165,"byte_end":91219,"line_start":1243,"line_end":1243,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91224,"byte_end":91231,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91236,"byte_end":91239,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ Separators at the start or end of a string are neighbored by empty","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91244,"byte_end":91314,"line_start":1246,"line_end":1246,"column_start":5,"column_end":75}},{"value":"/ strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91319,"byte_end":91331,"line_start":1247,"line_end":1247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91336,"byte_end":91339,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91344,"byte_end":91351,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91356,"byte_end":91385,"line_start":1250,"line_end":1250,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91390,"byte_end":91393,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"010\".rsplit_str(\"0\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91398,"byte_end":91455,"line_start":1252,"line_end":1252,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(x, vec![B(\"\"), B(\"1\"), B(\"\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91460,"byte_end":91506,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91511,"byte_end":91518,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91523,"byte_end":91526,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ When the empty string is used as a separator, it splits every **byte**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91531,"byte_end":91605,"line_start":1256,"line_end":1256,"column_start":5,"column_end":79}},{"value":"/ in the byte string, along with the beginning and end of the byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91610,"byte_end":91678,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/ string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91683,"byte_end":91694,"line_start":1258,"line_end":1258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91699,"byte_end":91702,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91707,"byte_end":91714,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91719,"byte_end":91748,"line_start":1261,"line_end":1261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91753,"byte_end":91756,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"rust\".rsplit_str(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91761,"byte_end":91818,"line_start":1263,"line_end":1263,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91823,"byte_end":91846,"line_start":1264,"line_end":1264,"column_start":5,"column_end":28}},{"value":"/     B(\"\"), B(\"t\"), B(\"s\"), B(\"u\"), B(\"r\"), B(\"\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91851,"byte_end":91904,"line_start":1265,"line_end":1265,"column_start":5,"column_end":58}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91909,"byte_end":91916,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91921,"byte_end":91924,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ // Splitting by an empty string is not UTF-8 aware. Elements yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":91929,"byte_end":92001,"line_start":1268,"line_end":1268,"column_start":5,"column_end":77}},{"value":"/ // may not be valid UTF-8!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92006,"byte_end":92036,"line_start":1269,"line_end":1269,"column_start":5,"column_end":35}},{"value":"/ let x: Vec<&[u8]> = B(\"☃\").rsplit_str(\"\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92041,"byte_end":92099,"line_start":1270,"line_end":1270,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x, vec![B(\"\"), B(b\"\\x83\"), B(b\"\\x98\"), B(b\"\\xE2\"), B(\"\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92104,"byte_end":92178,"line_start":1271,"line_end":1271,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92183,"byte_end":92190,"line_start":1272,"line_end":1272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92195,"byte_end":92198,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Contiguous separators, especially whitespace, can lead to possibly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92203,"byte_end":92273,"line_start":1274,"line_end":1274,"column_start":5,"column_end":75}},{"value":"/ surprising behavior. For example, this code is correct:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92278,"byte_end":92337,"line_start":1275,"line_end":1275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92342,"byte_end":92345,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92350,"byte_end":92357,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92362,"byte_end":92391,"line_start":1278,"line_end":1278,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92396,"byte_end":92399,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<&[u8]> = b\"    a  b c\".rsplit_str(\" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92404,"byte_end":92468,"line_start":1280,"line_end":1280,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(x, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92473,"byte_end":92496,"line_start":1281,"line_end":1281,"column_start":5,"column_end":28}},{"value":"/     B(\"c\"), B(\"b\"), B(\"\"), B(\"a\"), B(\"\"), B(\"\"), B(\"\"), B(\"\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92501,"byte_end":92567,"line_start":1282,"line_end":1282,"column_start":5,"column_end":71}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92572,"byte_end":92579,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92584,"byte_end":92591,"line_start":1284,"line_end":1284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92596,"byte_end":92599,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ It does *not* give you `[\"a\", \"b\", \"c\"]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92604,"byte_end":92649,"line_start":1286,"line_end":1286,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92654,"byte_end":92663,"line_start":1287,"line_end":1287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94280,"byte_end":94290,"line_start":1331,"line_end":1331,"column_start":8,"column_end":18},"name":"splitn_str","qualname":"::ext_slice::ByteSlice::splitn_str","value":"pub fn splitn_str<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, usize, &'a B)\n-> SplitN","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string. If `limit` substrings are yielded,\n then the last substring will contain the remainder of this byte string.","sig":null,"attributes":[{"value":"/ Returns an iterator of at most `limit` substrings of this byte string,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92856,"byte_end":92930,"line_start":1295,"line_end":1295,"column_start":5,"column_end":79}},{"value":"/ separated by the given byte string. If `limit` substrings are yielded,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":92935,"byte_end":93009,"line_start":1296,"line_end":1296,"column_start":5,"column_end":79}},{"value":"/ then the last substring will contain the remainder of this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93014,"byte_end":93089,"line_start":1297,"line_end":1297,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93094,"byte_end":93097,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ The needle may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93102,"byte_end":93169,"line_start":1299,"line_end":1299,"column_start":5,"column_end":72}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93174,"byte_end":93244,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93249,"byte_end":93252,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93257,"byte_end":93271,"line_start":1302,"line_end":1302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93276,"byte_end":93279,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93284,"byte_end":93300,"line_start":1304,"line_end":1304,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93305,"byte_end":93308,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93313,"byte_end":93320,"line_start":1306,"line_end":1306,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93325,"byte_end":93354,"line_start":1307,"line_end":1307,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93359,"byte_end":93362,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"Mary had a little lamb\".splitn_str(3, \" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93367,"byte_end":93442,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x, vec![B(\"Mary\"), B(\"had\"), B(\"a little lamb\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93447,"byte_end":93512,"line_start":1310,"line_end":1310,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93517,"byte_end":93520,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"\".splitn_str(3, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93525,"byte_end":93578,"line_start":1312,"line_end":1312,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(x, vec![b\"\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93583,"byte_end":93612,"line_start":1313,"line_end":1313,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93617,"byte_end":93620,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"lionXXtigerXleopard\".splitn_str(3, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93625,"byte_end":93697,"line_start":1315,"line_end":1315,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(x, vec![B(\"lion\"), B(\"\"), B(\"tigerXleopard\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93702,"byte_end":93764,"line_start":1316,"line_end":1316,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93769,"byte_end":93772,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"lion::tiger::leopard\".splitn_str(2, \"::\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93777,"byte_end":93851,"line_start":1318,"line_end":1318,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(x, vec![B(\"lion\"), B(\"tiger::leopard\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93856,"byte_end":93912,"line_start":1319,"line_end":1319,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93917,"byte_end":93920,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcXdef\".splitn_str(1, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93925,"byte_end":93985,"line_start":1321,"line_end":1321,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(x, vec![B(\"abcXdef\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":93990,"byte_end":94028,"line_start":1322,"line_end":1322,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94033,"byte_end":94036,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcdef\".splitn_str(2, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94041,"byte_end":94100,"line_start":1324,"line_end":1324,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(x, vec![B(\"abcdef\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94105,"byte_end":94142,"line_start":1325,"line_end":1325,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94147,"byte_end":94150,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcXdef\".splitn_str(0, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94155,"byte_end":94215,"line_start":1327,"line_end":1327,"column_start":5,"column_end":65}},{"value":"/ assert!(x.is_empty());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94220,"byte_end":94246,"line_start":1328,"line_end":1328,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94251,"byte_end":94258,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94263,"byte_end":94272,"line_start":1330,"line_end":1330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95945,"byte_end":95956,"line_start":1377,"line_end":1377,"column_start":8,"column_end":19},"name":"rsplitn_str","qualname":"::ext_slice::ByteSlice::rsplitn_str","value":"pub fn rsplitn_str<'a, B: ?Sized + AsRef<[u8]>>(&'a Self, usize, &'a B)\n-> SplitNReverse","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string, in reverse. If `limit` substrings\n are yielded, then the last substring will contain the remainder of this\n byte string.","sig":null,"attributes":[{"value":"/ Returns an iterator of at most `limit` substrings of this byte string,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94482,"byte_end":94556,"line_start":1339,"line_end":1339,"column_start":5,"column_end":79}},{"value":"/ separated by the given byte string, in reverse. If `limit` substrings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94561,"byte_end":94634,"line_start":1340,"line_end":1340,"column_start":5,"column_end":78}},{"value":"/ are yielded, then the last substring will contain the remainder of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94639,"byte_end":94714,"line_start":1341,"line_end":1341,"column_start":5,"column_end":80}},{"value":"/ byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94719,"byte_end":94735,"line_start":1342,"line_end":1342,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94740,"byte_end":94743,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The needle may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94748,"byte_end":94815,"line_start":1344,"line_end":1344,"column_start":5,"column_end":72}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94820,"byte_end":94890,"line_start":1345,"line_end":1345,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94895,"byte_end":94898,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94903,"byte_end":94917,"line_start":1347,"line_end":1347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94922,"byte_end":94925,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94930,"byte_end":94946,"line_start":1349,"line_end":1349,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94951,"byte_end":94954,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94959,"byte_end":94966,"line_start":1351,"line_end":1351,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":94971,"byte_end":95000,"line_start":1352,"line_end":1352,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95005,"byte_end":95008,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95013,"byte_end":95032,"line_start":1354,"line_end":1354,"column_start":5,"column_end":24}},{"value":"/     b\"Mary had a little lamb\".rsplitn_str(3, \" \").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95037,"byte_end":95101,"line_start":1355,"line_end":1355,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(x, vec![B(\"lamb\"), B(\"little\"), B(\"Mary had a\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95106,"byte_end":95171,"line_start":1356,"line_end":1356,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95176,"byte_end":95179,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"\".rsplitn_str(3, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95184,"byte_end":95238,"line_start":1358,"line_end":1358,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(x, vec![b\"\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95243,"byte_end":95272,"line_start":1359,"line_end":1359,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95277,"byte_end":95280,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"lionXXtigerXleopard\".rsplitn_str(3, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95285,"byte_end":95358,"line_start":1361,"line_end":1361,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x, vec![B(\"leopard\"), B(\"tiger\"), B(\"lionX\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95363,"byte_end":95425,"line_start":1362,"line_end":1362,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95430,"byte_end":95433,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"lion::tiger::leopard\".rsplitn_str(2, \"::\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95438,"byte_end":95513,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x, vec![B(\"leopard\"), B(\"lion::tiger\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95518,"byte_end":95574,"line_start":1365,"line_end":1365,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95579,"byte_end":95582,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcXdef\".rsplitn_str(1, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95587,"byte_end":95648,"line_start":1367,"line_end":1367,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(x, vec![B(\"abcXdef\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95653,"byte_end":95691,"line_start":1368,"line_end":1368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95696,"byte_end":95699,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcdef\".rsplitn_str(2, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95704,"byte_end":95764,"line_start":1370,"line_end":1370,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(x, vec![B(\"abcdef\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95769,"byte_end":95806,"line_start":1371,"line_end":1371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95811,"byte_end":95814,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<_> = b\"abcXdef\".rsplitn_str(0, \"X\").collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95819,"byte_end":95880,"line_start":1373,"line_end":1373,"column_start":5,"column_end":66}},{"value":"/ assert!(x.is_empty());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95885,"byte_end":95911,"line_start":1374,"line_end":1374,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95916,"byte_end":95923,"line_start":1375,"line_end":1375,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":95928,"byte_end":95937,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97145,"byte_end":97152,"line_start":1421,"line_end":1421,"column_start":8,"column_end":15},"name":"replace","qualname":"::ext_slice::ByteSlice::replace","value":"pub fn replace<N: AsRef<[u8]>, R: AsRef<[u8]>>(&Self, N, R) -> Vec<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement, and\n the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Replace all matches of the given needle with the given replacement, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96162,"byte_end":96237,"line_start":1385,"line_end":1385,"column_start":5,"column_end":80}},{"value":"/ the result as a new `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96242,"byte_end":96276,"line_start":1386,"line_end":1386,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96281,"byte_end":96284,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ This routine is useful as a convenience. If you need to reuse an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96289,"byte_end":96357,"line_start":1388,"line_end":1388,"column_start":5,"column_end":73}},{"value":"/ allocation, use [`replace_into`](#method.replace_into) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96362,"byte_end":96429,"line_start":1389,"line_end":1389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96434,"byte_end":96437,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96442,"byte_end":96456,"line_start":1391,"line_end":1391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96461,"byte_end":96464,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96469,"byte_end":96485,"line_start":1393,"line_end":1393,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96490,"byte_end":96493,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96498,"byte_end":96505,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96510,"byte_end":96534,"line_start":1396,"line_end":1396,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96539,"byte_end":96542,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ let s = b\"this is old\".replace(\"old\", \"new\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96547,"byte_end":96596,"line_start":1398,"line_end":1398,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(s, \"this is new\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96601,"byte_end":96645,"line_start":1399,"line_end":1399,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96650,"byte_end":96657,"line_start":1400,"line_end":1400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96662,"byte_end":96665,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ When the pattern doesn't match:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96670,"byte_end":96705,"line_start":1402,"line_end":1402,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96710,"byte_end":96713,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96718,"byte_end":96725,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96730,"byte_end":96754,"line_start":1405,"line_end":1405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96759,"byte_end":96762,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ let s = b\"this is old\".replace(\"nada nada\", \"limonada\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96767,"byte_end":96827,"line_start":1407,"line_end":1407,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(s, \"this is old\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96832,"byte_end":96876,"line_start":1408,"line_end":1408,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96881,"byte_end":96888,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96893,"byte_end":96896,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ When the needle is an empty string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96901,"byte_end":96940,"line_start":1411,"line_end":1411,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96945,"byte_end":96948,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96953,"byte_end":96960,"line_start":1413,"line_end":1413,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96965,"byte_end":96989,"line_start":1414,"line_end":1414,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":96994,"byte_end":96997,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo\".replace(\"\", \"Z\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97002,"byte_end":97038,"line_start":1416,"line_end":1416,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s, \"ZfZoZoZ\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97043,"byte_end":97083,"line_start":1417,"line_end":1417,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97088,"byte_end":97095,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97100,"byte_end":97123,"line_start":1419,"line_end":1419,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97128,"byte_end":97137,"line_start":1420,"line_end":1420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98378,"byte_end":98386,"line_start":1467,"line_end":1467,"column_start":8,"column_end":16},"name":"replacen","qualname":"::ext_slice::ByteSlice::replacen","value":"pub fn replacen<N: AsRef<[u8]>, R: AsRef<[u8]>>(&Self, N, R, usize) -> Vec<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Replace up to `limit` matches of the given needle with the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97412,"byte_end":97480,"line_start":1431,"line_end":1431,"column_start":5,"column_end":73}},{"value":"/ replacement, and the result as a new `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97485,"byte_end":97536,"line_start":1432,"line_end":1432,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97541,"byte_end":97544,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ This routine is useful as a convenience. If you need to reuse an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97549,"byte_end":97617,"line_start":1434,"line_end":1434,"column_start":5,"column_end":73}},{"value":"/ allocation, use [`replacen_into`](#method.replacen_into) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97622,"byte_end":97691,"line_start":1435,"line_end":1435,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97696,"byte_end":97699,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97704,"byte_end":97718,"line_start":1437,"line_end":1437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97723,"byte_end":97726,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97731,"byte_end":97747,"line_start":1439,"line_end":1439,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97752,"byte_end":97755,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97760,"byte_end":97767,"line_start":1441,"line_end":1441,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97772,"byte_end":97796,"line_start":1442,"line_end":1442,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97801,"byte_end":97804,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foofoo\".replacen(\"o\", \"z\", 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97809,"byte_end":97853,"line_start":1444,"line_end":1444,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(s, \"fzzfoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97858,"byte_end":97897,"line_start":1445,"line_end":1445,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97902,"byte_end":97909,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97914,"byte_end":97917,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ When the pattern doesn't match:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97922,"byte_end":97957,"line_start":1448,"line_end":1448,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97962,"byte_end":97965,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97970,"byte_end":97977,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":97982,"byte_end":98006,"line_start":1451,"line_end":1451,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98011,"byte_end":98014,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foofoo\".replacen(\"a\", \"z\", 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98019,"byte_end":98063,"line_start":1453,"line_end":1453,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(s, \"foofoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98068,"byte_end":98107,"line_start":1454,"line_end":1454,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98112,"byte_end":98119,"line_start":1455,"line_end":1455,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98124,"byte_end":98127,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ When the needle is an empty string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98132,"byte_end":98171,"line_start":1457,"line_end":1457,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98176,"byte_end":98179,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98184,"byte_end":98191,"line_start":1459,"line_end":1459,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98196,"byte_end":98220,"line_start":1460,"line_end":1460,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98225,"byte_end":98228,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo\".replacen(\"\", \"Z\", 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98233,"byte_end":98273,"line_start":1462,"line_end":1462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s, \"ZfZoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98278,"byte_end":98316,"line_start":1463,"line_end":1463,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98321,"byte_end":98328,"line_start":1464,"line_end":1464,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98333,"byte_end":98356,"line_start":1465,"line_end":1465,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98361,"byte_end":98370,"line_start":1466,"line_end":1466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99937,"byte_end":99949,"line_start":1525,"line_end":1525,"column_start":8,"column_end":20},"name":"replace_into","qualname":"::ext_slice::ByteSlice::replace_into","value":"pub fn replace_into<N: AsRef<[u8]>, R: AsRef<[u8]>>(&Self, N, R, &mut Vec<u8>)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement,\n and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Replace all matches of the given needle with the given replacement,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98676,"byte_end":98747,"line_start":1478,"line_end":1478,"column_start":5,"column_end":76}},{"value":"/ and write the result into the provided `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98752,"byte_end":98805,"line_start":1479,"line_end":1479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98810,"byte_end":98813,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ This does **not** clear `dest` before writing to it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98818,"byte_end":98874,"line_start":1481,"line_end":1481,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98879,"byte_end":98882,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for reusing allocation. For a more convenient","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98887,"byte_end":98959,"line_start":1483,"line_end":1483,"column_start":5,"column_end":77}},{"value":"/ API, use [`replace`](#method.replace) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":98964,"byte_end":99014,"line_start":1484,"line_end":1484,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99019,"byte_end":99022,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99027,"byte_end":99041,"line_start":1486,"line_end":1486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99046,"byte_end":99049,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99054,"byte_end":99070,"line_start":1488,"line_end":1488,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99075,"byte_end":99078,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99083,"byte_end":99090,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99095,"byte_end":99119,"line_start":1491,"line_end":1491,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99124,"byte_end":99127,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ let s = b\"this is old\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99132,"byte_end":99159,"line_start":1493,"line_end":1493,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99164,"byte_end":99167,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99172,"byte_end":99198,"line_start":1495,"line_end":1495,"column_start":5,"column_end":31}},{"value":"/ s.replace_into(\"old\", \"new\", &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99203,"byte_end":99247,"line_start":1496,"line_end":1496,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(dest, \"this is new\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99252,"byte_end":99299,"line_start":1497,"line_end":1497,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99304,"byte_end":99311,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99316,"byte_end":99319,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ When the pattern doesn't match:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99324,"byte_end":99359,"line_start":1500,"line_end":1500,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99364,"byte_end":99367,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99372,"byte_end":99379,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99384,"byte_end":99408,"line_start":1503,"line_end":1503,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99413,"byte_end":99416,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let s = b\"this is old\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99421,"byte_end":99448,"line_start":1505,"line_end":1505,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99453,"byte_end":99456,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99461,"byte_end":99487,"line_start":1507,"line_end":1507,"column_start":5,"column_end":31}},{"value":"/ s.replace_into(\"nada nada\", \"limonada\", &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99492,"byte_end":99547,"line_start":1508,"line_end":1508,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(dest, \"this is old\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99552,"byte_end":99599,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99604,"byte_end":99611,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99616,"byte_end":99619,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ When the needle is an empty string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99624,"byte_end":99663,"line_start":1512,"line_end":1512,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99668,"byte_end":99671,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99676,"byte_end":99683,"line_start":1514,"line_end":1514,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99688,"byte_end":99712,"line_start":1515,"line_end":1515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99717,"byte_end":99720,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99725,"byte_end":99744,"line_start":1517,"line_end":1517,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99749,"byte_end":99752,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99757,"byte_end":99783,"line_start":1519,"line_end":1519,"column_start":5,"column_end":31}},{"value":"/ s.replace_into(\"\", \"Z\", &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99788,"byte_end":99827,"line_start":1520,"line_end":1520,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(dest, \"ZfZoZoZ\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99832,"byte_end":99875,"line_start":1521,"line_end":1521,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99880,"byte_end":99887,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99892,"byte_end":99915,"line_start":1523,"line_end":1523,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":99920,"byte_end":99929,"line_start":1524,"line_end":1524,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101680,"byte_end":101693,"line_start":1589,"line_end":1589,"column_start":8,"column_end":21},"name":"replacen_into","qualname":"::ext_slice::ByteSlice::replacen_into","value":"pub fn replacen_into<N: AsRef<[u8]>,\n                     R: AsRef<[u8]>>(&Self, N, R, usize, &mut Vec<u8>)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Replace up to `limit` matches of the given needle with the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100436,"byte_end":100504,"line_start":1542,"line_end":1542,"column_start":5,"column_end":73}},{"value":"/ replacement, and write the result into the provided `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100509,"byte_end":100575,"line_start":1543,"line_end":1543,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100580,"byte_end":100583,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ This does **not** clear `dest` before writing to it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100588,"byte_end":100644,"line_start":1545,"line_end":1545,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100649,"byte_end":100652,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for reusing allocation. For a more convenient","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100657,"byte_end":100729,"line_start":1547,"line_end":1547,"column_start":5,"column_end":77}},{"value":"/ API, use [`replacen`](#method.replacen) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100734,"byte_end":100786,"line_start":1548,"line_end":1548,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100791,"byte_end":100794,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100799,"byte_end":100813,"line_start":1550,"line_end":1550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100818,"byte_end":100821,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100826,"byte_end":100842,"line_start":1552,"line_end":1552,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100847,"byte_end":100850,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100855,"byte_end":100862,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100867,"byte_end":100891,"line_start":1555,"line_end":1555,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100896,"byte_end":100899,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foofoo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100904,"byte_end":100926,"line_start":1557,"line_end":1557,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100931,"byte_end":100934,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100939,"byte_end":100965,"line_start":1559,"line_end":1559,"column_start":5,"column_end":31}},{"value":"/ s.replacen_into(\"o\", \"z\", 2, &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":100970,"byte_end":101014,"line_start":1560,"line_end":1560,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(dest, \"fzzfoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101019,"byte_end":101061,"line_start":1561,"line_end":1561,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101066,"byte_end":101073,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101078,"byte_end":101081,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ When the pattern doesn't match:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101086,"byte_end":101121,"line_start":1564,"line_end":1564,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101126,"byte_end":101129,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101134,"byte_end":101141,"line_start":1566,"line_end":1566,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101146,"byte_end":101170,"line_start":1567,"line_end":1567,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101175,"byte_end":101178,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foofoo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101183,"byte_end":101205,"line_start":1569,"line_end":1569,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101210,"byte_end":101213,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101218,"byte_end":101244,"line_start":1571,"line_end":1571,"column_start":5,"column_end":31}},{"value":"/ s.replacen_into(\"a\", \"z\", 2, &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101249,"byte_end":101293,"line_start":1572,"line_end":1572,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(dest, \"foofoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101298,"byte_end":101340,"line_start":1573,"line_end":1573,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101345,"byte_end":101352,"line_start":1574,"line_end":1574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101357,"byte_end":101360,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/ When the needle is an empty string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101365,"byte_end":101404,"line_start":1576,"line_end":1576,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101409,"byte_end":101412,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101417,"byte_end":101424,"line_start":1578,"line_end":1578,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101429,"byte_end":101453,"line_start":1579,"line_end":1579,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101458,"byte_end":101461,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foo\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101466,"byte_end":101485,"line_start":1581,"line_end":1581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101490,"byte_end":101493,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ let mut dest = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101498,"byte_end":101524,"line_start":1583,"line_end":1583,"column_start":5,"column_end":31}},{"value":"/ s.replacen_into(\"\", \"Z\", 2, &mut dest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101529,"byte_end":101572,"line_start":1584,"line_end":1584,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dest, \"ZfZoo\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101577,"byte_end":101618,"line_start":1585,"line_end":1585,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101623,"byte_end":101630,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101635,"byte_end":101658,"line_start":1587,"line_end":1587,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":101663,"byte_end":101672,"line_start":1588,"line_end":1588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102530,"byte_end":102535,"line_start":1621,"line_end":1621,"column_start":8,"column_end":13},"name":"bytes","qualname":"::ext_slice::ByteSlice::bytes","value":"pub fn bytes(&Self) -> Bytes","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over the bytes in this byte string.","sig":null,"attributes":[{"value":"/ Returns an iterator over the bytes in this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102214,"byte_end":102273,"line_start":1607,"line_end":1607,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102278,"byte_end":102281,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102286,"byte_end":102300,"line_start":1609,"line_end":1609,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102305,"byte_end":102308,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102313,"byte_end":102329,"line_start":1611,"line_end":1611,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102334,"byte_end":102337,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102342,"byte_end":102349,"line_start":1613,"line_end":1613,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102354,"byte_end":102378,"line_start":1614,"line_end":1614,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102383,"byte_end":102386,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"foobar\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102391,"byte_end":102414,"line_start":1616,"line_end":1616,"column_start":5,"column_end":28}},{"value":"/ let bytes: Vec<u8> = bs.bytes().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102419,"byte_end":102465,"line_start":1617,"line_end":1617,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(bytes, bs);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102470,"byte_end":102496,"line_start":1618,"line_end":1618,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102501,"byte_end":102508,"line_start":1619,"line_end":1619,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102513,"byte_end":102522,"line_start":1620,"line_end":1620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103476,"byte_end":103481,"line_start":1651,"line_end":1651,"column_start":8,"column_end":13},"name":"chars","qualname":"::ext_slice::ByteSlice::chars","value":"pub fn chars(&Self) -> Chars","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string.\n If invalid UTF-8 is encountered, then the Unicode replacement codepoint\n is yielded instead.","sig":null,"attributes":[{"value":"/ Returns an iterator over the Unicode scalar values in this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102614,"byte_end":102689,"line_start":1625,"line_end":1625,"column_start":5,"column_end":80}},{"value":"/ If invalid UTF-8 is encountered, then the Unicode replacement codepoint","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102694,"byte_end":102769,"line_start":1626,"line_end":1626,"column_start":5,"column_end":80}},{"value":"/ is yielded instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102774,"byte_end":102797,"line_start":1627,"line_end":1627,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102802,"byte_end":102805,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102810,"byte_end":102824,"line_start":1629,"line_end":1629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102829,"byte_end":102832,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102837,"byte_end":102853,"line_start":1631,"line_end":1631,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102858,"byte_end":102861,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102866,"byte_end":102873,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102878,"byte_end":102902,"line_start":1634,"line_end":1634,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102907,"byte_end":102910,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102915,"byte_end":102976,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/ let chars: Vec<char> = bs.chars().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":102981,"byte_end":103029,"line_start":1637,"line_end":1637,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(vec!['☃', '\\u{FFFD}', '𝞃', '\\u{FFFD}', 'a'], chars);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103034,"byte_end":103106,"line_start":1638,"line_end":1638,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103111,"byte_end":103118,"line_start":1639,"line_end":1639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103123,"byte_end":103126,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ Codepoints can also be iterated over in reverse:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103131,"byte_end":103183,"line_start":1641,"line_end":1641,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103188,"byte_end":103191,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103196,"byte_end":103203,"line_start":1643,"line_end":1643,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103208,"byte_end":103232,"line_start":1644,"line_end":1644,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103237,"byte_end":103240,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103245,"byte_end":103306,"line_start":1646,"line_end":1646,"column_start":5,"column_end":66}},{"value":"/ let chars: Vec<char> = bs.chars().rev().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103311,"byte_end":103365,"line_start":1647,"line_end":1647,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(vec!['a', '\\u{FFFD}', '𝞃', '\\u{FFFD}', '☃'], chars);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103370,"byte_end":103442,"line_start":1648,"line_end":1648,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103447,"byte_end":103454,"line_start":1649,"line_end":1649,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103459,"byte_end":103468,"line_start":1650,"line_end":1650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105363,"byte_end":105375,"line_start":1706,"line_end":1706,"column_start":8,"column_end":20},"name":"char_indices","qualname":"::ext_slice::ByteSlice::char_indices","value":"pub fn char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string\n along with their starting and ending byte index positions. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"/ Returns an iterator over the Unicode scalar values in this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103551,"byte_end":103625,"line_start":1655,"line_end":1655,"column_start":5,"column_end":79}},{"value":"/ along with their starting and ending byte index positions. If invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103630,"byte_end":103703,"line_start":1656,"line_end":1656,"column_start":5,"column_end":78}},{"value":"/ UTF-8 is encountered, then the Unicode replacement codepoint is yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103708,"byte_end":103783,"line_start":1657,"line_end":1657,"column_start":5,"column_end":80}},{"value":"/ instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103788,"byte_end":103800,"line_start":1658,"line_end":1658,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103805,"byte_end":103808,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ Note that this is slightly different from the `CharIndices` iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103813,"byte_end":103885,"line_start":1660,"line_end":1660,"column_start":5,"column_end":77}},{"value":"/ provided by the standard library. Aside from working on possibly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103890,"byte_end":103958,"line_start":1661,"line_end":1661,"column_start":5,"column_end":73}},{"value":"/ invalid UTF-8, this iterator provides both the corresponding starting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":103963,"byte_end":104036,"line_start":1662,"line_end":1662,"column_start":5,"column_end":78}},{"value":"/ and ending byte indices of each codepoint yielded. The ending position","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104041,"byte_end":104115,"line_start":1663,"line_end":1663,"column_start":5,"column_end":79}},{"value":"/ is necessary to slice the original byte string when invalid UTF-8 bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104120,"byte_end":104195,"line_start":1664,"line_end":1664,"column_start":5,"column_end":80}},{"value":"/ are converted into a Unicode replacement codepoint, since a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104200,"byte_end":104270,"line_start":1665,"line_end":1665,"column_start":5,"column_end":75}},{"value":"/ replacement codepoint can substitute anywhere from 1 to 3 invalid bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104275,"byte_end":104350,"line_start":1666,"line_end":1666,"column_start":5,"column_end":80}},{"value":"/ (inclusive).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104355,"byte_end":104371,"line_start":1667,"line_end":1667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104376,"byte_end":104379,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104384,"byte_end":104398,"line_start":1669,"line_end":1669,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104403,"byte_end":104406,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104411,"byte_end":104427,"line_start":1671,"line_end":1671,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104432,"byte_end":104435,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104440,"byte_end":104447,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104452,"byte_end":104476,"line_start":1674,"line_end":1674,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104481,"byte_end":104484,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104489,"byte_end":104550,"line_start":1676,"line_end":1676,"column_start":5,"column_end":66}},{"value":"/ let chars: Vec<(usize, usize, char)> = bs.char_indices().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104555,"byte_end":104626,"line_start":1677,"line_end":1677,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(chars, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104631,"byte_end":104658,"line_start":1678,"line_end":1678,"column_start":5,"column_end":32}},{"value":"/     (0, 3, '☃'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104663,"byte_end":104685,"line_start":1679,"line_end":1679,"column_start":5,"column_end":25}},{"value":"/     (3, 4, '\\u{FFFD}'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104690,"byte_end":104717,"line_start":1680,"line_end":1680,"column_start":5,"column_end":32}},{"value":"/     (4, 8, '𝞃'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104722,"byte_end":104745,"line_start":1681,"line_end":1681,"column_start":5,"column_end":25}},{"value":"/     (8, 10, '\\u{FFFD}'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104750,"byte_end":104778,"line_start":1682,"line_end":1682,"column_start":5,"column_end":33}},{"value":"/     (10, 11, 'a'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104783,"byte_end":104805,"line_start":1683,"line_end":1683,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104810,"byte_end":104817,"line_start":1684,"line_end":1684,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104822,"byte_end":104829,"line_start":1685,"line_end":1685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104834,"byte_end":104837,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ Codepoints can also be iterated over in reverse:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104842,"byte_end":104894,"line_start":1687,"line_end":1687,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104899,"byte_end":104902,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104907,"byte_end":104914,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104919,"byte_end":104943,"line_start":1690,"line_end":1690,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104948,"byte_end":104951,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ let bs = b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":104956,"byte_end":105017,"line_start":1692,"line_end":1692,"column_start":5,"column_end":66}},{"value":"/ let chars: Vec<(usize, usize, char)> = bs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105022,"byte_end":105067,"line_start":1693,"line_end":1693,"column_start":5,"column_end":50}},{"value":"/     .char_indices()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105072,"byte_end":105095,"line_start":1694,"line_end":1694,"column_start":5,"column_end":28}},{"value":"/     .rev()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105100,"byte_end":105114,"line_start":1695,"line_end":1695,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105119,"byte_end":105138,"line_start":1696,"line_end":1696,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(chars, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105143,"byte_end":105170,"line_start":1697,"line_end":1697,"column_start":5,"column_end":32}},{"value":"/     (10, 11, 'a'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105175,"byte_end":105197,"line_start":1698,"line_end":1698,"column_start":5,"column_end":27}},{"value":"/     (8, 10, '\\u{FFFD}'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105202,"byte_end":105230,"line_start":1699,"line_end":1699,"column_start":5,"column_end":33}},{"value":"/     (4, 8, '𝞃'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105235,"byte_end":105258,"line_start":1700,"line_end":1700,"column_start":5,"column_end":25}},{"value":"/     (3, 4, '\\u{FFFD}'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105263,"byte_end":105290,"line_start":1701,"line_end":1701,"column_start":5,"column_end":32}},{"value":"/     (0, 3, '☃'),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105295,"byte_end":105317,"line_start":1702,"line_end":1702,"column_start":5,"column_end":25}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105322,"byte_end":105329,"line_start":1703,"line_end":1703,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105334,"byte_end":105341,"line_start":1704,"line_end":1704,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105346,"byte_end":105355,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106637,"byte_end":106648,"line_start":1743,"line_end":1743,"column_start":8,"column_end":19},"name":"utf8_chunks","qualname":"::ext_slice::ByteSlice::utf8_chunks","value":"pub fn utf8_chunks(&Self) -> Utf8Chunks","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Iterate over chunks of valid UTF-8.","sig":null,"attributes":[{"value":"/ Iterate over chunks of valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105457,"byte_end":105496,"line_start":1710,"line_end":1710,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105501,"byte_end":105504,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ The iterator returned yields chunks of valid UTF-8 separated by invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105509,"byte_end":105584,"line_start":1712,"line_end":1712,"column_start":5,"column_end":80}},{"value":"/ UTF-8 bytes, if they exist. Invalid UTF-8 bytes are always 1-3 bytes,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105589,"byte_end":105662,"line_start":1713,"line_end":1713,"column_start":5,"column_end":78}},{"value":"/ which are determined via the \"substitution of maximal subparts\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105667,"byte_end":105734,"line_start":1714,"line_end":1714,"column_start":5,"column_end":72}},{"value":"/ strategy described in the docs for the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105739,"byte_end":105781,"line_start":1715,"line_end":1715,"column_start":5,"column_end":47}},{"value":"/ [`ByteSlice::to_str_lossy`](trait.ByteSlice.html#method.to_str_lossy)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105786,"byte_end":105859,"line_start":1716,"line_end":1716,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105864,"byte_end":105875,"line_start":1717,"line_end":1717,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105880,"byte_end":105883,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105888,"byte_end":105902,"line_start":1719,"line_end":1719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105907,"byte_end":105910,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ This example shows how to gather all valid and invalid chunks from a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105915,"byte_end":105987,"line_start":1721,"line_end":1721,"column_start":5,"column_end":77}},{"value":"/ byte slice:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":105992,"byte_end":106007,"line_start":1722,"line_end":1722,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106012,"byte_end":106015,"line_start":1723,"line_end":1723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106020,"byte_end":106027,"line_start":1724,"line_end":1724,"column_start":5,"column_end":12}},{"value":"/ use bstr::{ByteSlice, Utf8Chunk};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106032,"byte_end":106069,"line_start":1725,"line_end":1725,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106074,"byte_end":106077,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"foo\\xFD\\xFEbar\\xFF\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106082,"byte_end":106120,"line_start":1727,"line_end":1727,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106125,"byte_end":106128,"line_start":1728,"line_end":1728,"column_start":5,"column_end":8}},{"value":"/ let (mut valid_chunks, mut invalid_chunks) = (vec![], vec![]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106133,"byte_end":106199,"line_start":1729,"line_end":1729,"column_start":5,"column_end":71}},{"value":"/ for chunk in bytes.utf8_chunks() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106204,"byte_end":106242,"line_start":1730,"line_end":1730,"column_start":5,"column_end":43}},{"value":"/     if !chunk.valid().is_empty() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106247,"byte_end":106285,"line_start":1731,"line_end":1731,"column_start":5,"column_end":43}},{"value":"/         valid_chunks.push(chunk.valid());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106290,"byte_end":106335,"line_start":1732,"line_end":1732,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106340,"byte_end":106349,"line_start":1733,"line_end":1733,"column_start":5,"column_end":14}},{"value":"/     if !chunk.invalid().is_empty() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106354,"byte_end":106394,"line_start":1734,"line_end":1734,"column_start":5,"column_end":45}},{"value":"/         invalid_chunks.push(chunk.invalid());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106399,"byte_end":106448,"line_start":1735,"line_end":1735,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106453,"byte_end":106462,"line_start":1736,"line_end":1736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106467,"byte_end":106472,"line_start":1737,"line_end":1737,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106477,"byte_end":106480,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(valid_chunks, vec![\"foo\", \"bar\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106485,"byte_end":106534,"line_start":1739,"line_end":1739,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(invalid_chunks, vec![b\"\\xFD\", b\"\\xFE\", b\"\\xFF\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106539,"byte_end":106603,"line_start":1740,"line_end":1740,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106608,"byte_end":106615,"line_start":1741,"line_end":1741,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":106620,"byte_end":106629,"line_start":1742,"line_end":1742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117561,"byte_end":117566,"line_start":2057,"line_end":2057,"column_start":8,"column_end":13},"name":"lines","qualname":"::ext_slice::ByteSlice::lines","value":"pub fn lines(&Self) -> Lines","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their\n terminators.","sig":null,"attributes":[{"value":"/ An iterator over all lines in a byte string, without their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":116957,"byte_end":117019,"line_start":2030,"line_end":2030,"column_start":5,"column_end":67}},{"value":"/ terminators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117024,"byte_end":117040,"line_start":2031,"line_end":2031,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117045,"byte_end":117048,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ For this iterator, the only line terminators recognized are `\\r\\n` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117053,"byte_end":117127,"line_start":2033,"line_end":2033,"column_start":5,"column_end":79}},{"value":"/ `\\n`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117132,"byte_end":117141,"line_start":2034,"line_end":2034,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117146,"byte_end":117149,"line_start":2035,"line_end":2035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117154,"byte_end":117168,"line_start":2036,"line_end":2036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117173,"byte_end":117176,"line_start":2037,"line_end":2037,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117181,"byte_end":117197,"line_start":2038,"line_end":2038,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117202,"byte_end":117205,"line_start":2039,"line_end":2039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117210,"byte_end":117217,"line_start":2040,"line_end":2040,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117222,"byte_end":117251,"line_start":2041,"line_end":2041,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117256,"byte_end":117259,"line_start":2042,"line_end":2042,"column_start":5,"column_end":8}},{"value":"/ let s = b\"\\","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117264,"byte_end":117279,"line_start":2043,"line_end":2043,"column_start":5,"column_end":20}},{"value":"/ foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117284,"byte_end":117291,"line_start":2044,"line_end":2044,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117296,"byte_end":117299,"line_start":2045,"line_end":2045,"column_start":5,"column_end":8}},{"value":"/ bar\\r","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117304,"byte_end":117313,"line_start":2046,"line_end":2046,"column_start":5,"column_end":14}},{"value":"/ baz","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117318,"byte_end":117325,"line_start":2047,"line_end":2047,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117330,"byte_end":117333,"line_start":2048,"line_end":2048,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117338,"byte_end":117341,"line_start":2049,"line_end":2049,"column_start":5,"column_end":8}},{"value":"/ quux\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117346,"byte_end":117356,"line_start":2050,"line_end":2050,"column_start":5,"column_end":15}},{"value":"/ let lines: Vec<&[u8]> = s.lines().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117361,"byte_end":117409,"line_start":2051,"line_end":2051,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(lines, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117414,"byte_end":117441,"line_start":2052,"line_end":2052,"column_start":5,"column_end":32}},{"value":"/     B(\"foo\"), B(\"\"), B(\"bar\"), B(\"baz\"), B(\"\"), B(\"\"), B(\"quux\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117446,"byte_end":117515,"line_start":2053,"line_end":2053,"column_start":5,"column_end":74}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117520,"byte_end":117527,"line_start":2054,"line_end":2054,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117532,"byte_end":117539,"line_start":2055,"line_end":2055,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117544,"byte_end":117553,"line_start":2056,"line_end":2056,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118730,"byte_end":118751,"line_start":2101,"line_end":2101,"column_start":8,"column_end":29},"name":"lines_with_terminator","qualname":"::ext_slice::ByteSlice::lines_with_terminator","value":"pub fn lines_with_terminator(&Self) -> LinesWithTerminator","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their\n terminators.","sig":null,"attributes":[{"value":"/ An iterator over all lines in a byte string, including their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117636,"byte_end":117700,"line_start":2061,"line_end":2061,"column_start":5,"column_end":69}},{"value":"/ terminators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117705,"byte_end":117721,"line_start":2062,"line_end":2062,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117726,"byte_end":117729,"line_start":2063,"line_end":2063,"column_start":5,"column_end":8}},{"value":"/ For this iterator, the only line terminator recognized is `\\n`. (Since","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117734,"byte_end":117808,"line_start":2064,"line_end":2064,"column_start":5,"column_end":79}},{"value":"/ line terminators are included, this also handles `\\r\\n` line endings.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117813,"byte_end":117887,"line_start":2065,"line_end":2065,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117892,"byte_end":117895,"line_start":2066,"line_end":2066,"column_start":5,"column_end":8}},{"value":"/ Line terminators are only included if they are present in the original","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117900,"byte_end":117974,"line_start":2067,"line_end":2067,"column_start":5,"column_end":79}},{"value":"/ byte string. For example, the last line in a byte string may not end","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":117979,"byte_end":118051,"line_start":2068,"line_end":2068,"column_start":5,"column_end":77}},{"value":"/ with a line terminator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118056,"byte_end":118083,"line_start":2069,"line_end":2069,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118088,"byte_end":118091,"line_start":2070,"line_end":2070,"column_start":5,"column_end":8}},{"value":"/ Concatenating all elements yielded by this iterator is guaranteed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118096,"byte_end":118168,"line_start":2071,"line_end":2071,"column_start":5,"column_end":77}},{"value":"/ yield the original byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118173,"byte_end":118208,"line_start":2072,"line_end":2072,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118213,"byte_end":118216,"line_start":2073,"line_end":2073,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118221,"byte_end":118235,"line_start":2074,"line_end":2074,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118240,"byte_end":118243,"line_start":2075,"line_end":2075,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118248,"byte_end":118264,"line_start":2076,"line_end":2076,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118269,"byte_end":118272,"line_start":2077,"line_end":2077,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118277,"byte_end":118284,"line_start":2078,"line_end":2078,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118289,"byte_end":118318,"line_start":2079,"line_end":2079,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118323,"byte_end":118326,"line_start":2080,"line_end":2080,"column_start":5,"column_end":8}},{"value":"/ let s = b\"\\","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118331,"byte_end":118346,"line_start":2081,"line_end":2081,"column_start":5,"column_end":20}},{"value":"/ foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118351,"byte_end":118358,"line_start":2082,"line_end":2082,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118363,"byte_end":118366,"line_start":2083,"line_end":2083,"column_start":5,"column_end":8}},{"value":"/ bar\\r","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118371,"byte_end":118380,"line_start":2084,"line_end":2084,"column_start":5,"column_end":14}},{"value":"/ baz","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118385,"byte_end":118392,"line_start":2085,"line_end":2085,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118397,"byte_end":118400,"line_start":2086,"line_end":2086,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118405,"byte_end":118408,"line_start":2087,"line_end":2087,"column_start":5,"column_end":8}},{"value":"/ quux\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118413,"byte_end":118423,"line_start":2088,"line_end":2088,"column_start":5,"column_end":15}},{"value":"/ let lines: Vec<&[u8]> = s.lines_with_terminator().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118428,"byte_end":118492,"line_start":2089,"line_end":2089,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(lines, vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118497,"byte_end":118524,"line_start":2090,"line_end":2090,"column_start":5,"column_end":32}},{"value":"/     B(\"foo\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118529,"byte_end":118548,"line_start":2091,"line_end":2091,"column_start":5,"column_end":24}},{"value":"/     B(\"\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118553,"byte_end":118569,"line_start":2092,"line_end":2092,"column_start":5,"column_end":21}},{"value":"/     B(\"bar\\r\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118574,"byte_end":118595,"line_start":2093,"line_end":2093,"column_start":5,"column_end":26}},{"value":"/     B(\"baz\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118600,"byte_end":118619,"line_start":2094,"line_end":2094,"column_start":5,"column_end":24}},{"value":"/     B(\"\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118624,"byte_end":118640,"line_start":2095,"line_end":2095,"column_start":5,"column_end":21}},{"value":"/     B(\"\\n\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118645,"byte_end":118661,"line_start":2096,"line_end":2096,"column_start":5,"column_end":21}},{"value":"/     B(\"quux\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118666,"byte_end":118684,"line_start":2097,"line_end":2097,"column_start":5,"column_end":23}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118689,"byte_end":118696,"line_start":2098,"line_end":2098,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118701,"byte_end":118708,"line_start":2099,"line_end":2099,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":118713,"byte_end":118722,"line_start":2100,"line_end":2100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120921,"byte_end":120930,"line_start":2185,"line_end":2185,"column_start":8,"column_end":17},"name":"trim_with","qualname":"::ext_slice::ByteSlice::trim_with","value":"pub fn trim_with<F: FnMut(char) -> bool>(&Self, F) -> &[u8]","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading and trailing characters\n satisfying the given predicate removed.","sig":null,"attributes":[{"value":"/ Return a byte string slice with leading and trailing characters","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120553,"byte_end":120620,"line_start":2171,"line_end":2171,"column_start":5,"column_end":72}},{"value":"/ satisfying the given predicate removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120625,"byte_end":120668,"line_start":2172,"line_end":2172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120673,"byte_end":120676,"line_start":2173,"line_end":2173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120681,"byte_end":120695,"line_start":2174,"line_end":2174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120700,"byte_end":120703,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120708,"byte_end":120724,"line_start":2176,"line_end":2176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120729,"byte_end":120732,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120737,"byte_end":120744,"line_start":2178,"line_end":2178,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120749,"byte_end":120778,"line_start":2179,"line_end":2179,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120783,"byte_end":120786,"line_start":2180,"line_end":2180,"column_start":5,"column_end":8}},{"value":"/ let s = b\"123foo5bar789\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120791,"byte_end":120820,"line_start":2181,"line_end":2181,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.trim_with(|c| c.is_numeric()), B(\"foo5bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120825,"byte_end":120887,"line_start":2182,"line_end":2182,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120892,"byte_end":120899,"line_start":2183,"line_end":2183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":120904,"byte_end":120913,"line_start":2184,"line_end":2184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121426,"byte_end":121441,"line_start":2203,"line_end":2203,"column_start":8,"column_end":23},"name":"trim_start_with","qualname":"::ext_slice::ByteSlice::trim_start_with","value":"pub fn trim_start_with<F: FnMut(char) -> bool>(&Self, F) -> &[u8]","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading characters satisfying the given\n predicate removed.","sig":null,"attributes":[{"value":"/ Return a byte string slice with leading characters satisfying the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121062,"byte_end":121137,"line_start":2189,"line_end":2189,"column_start":5,"column_end":80}},{"value":"/ predicate removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121142,"byte_end":121164,"line_start":2190,"line_end":2190,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121169,"byte_end":121172,"line_start":2191,"line_end":2191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121177,"byte_end":121191,"line_start":2192,"line_end":2192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121196,"byte_end":121199,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121204,"byte_end":121220,"line_start":2194,"line_end":2194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121225,"byte_end":121228,"line_start":2195,"line_end":2195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121233,"byte_end":121240,"line_start":2196,"line_end":2196,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121245,"byte_end":121274,"line_start":2197,"line_end":2197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121279,"byte_end":121282,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ let s = b\"123foo5bar789\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121287,"byte_end":121316,"line_start":2199,"line_end":2199,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.trim_start_with(|c| c.is_numeric()), B(\"foo5bar789\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121321,"byte_end":121392,"line_start":2200,"line_end":2200,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121397,"byte_end":121404,"line_start":2201,"line_end":2201,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121409,"byte_end":121418,"line_start":2202,"line_end":2202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":122028,"byte_end":122041,"line_start":2226,"line_end":2226,"column_start":8,"column_end":21},"name":"trim_end_with","qualname":"::ext_slice::ByteSlice::trim_end_with","value":"pub fn trim_end_with<F: FnMut(char) -> bool>(&Self, F) -> &[u8]","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Return a byte string slice with trailing characters satisfying the\n given predicate removed.","sig":null,"attributes":[{"value":"/ Return a byte string slice with trailing characters satisfying the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121665,"byte_end":121735,"line_start":2212,"line_end":2212,"column_start":5,"column_end":75}},{"value":"/ given predicate removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121740,"byte_end":121768,"line_start":2213,"line_end":2213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121773,"byte_end":121776,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121781,"byte_end":121795,"line_start":2215,"line_end":2215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121800,"byte_end":121803,"line_start":2216,"line_end":2216,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121808,"byte_end":121824,"line_start":2217,"line_end":2217,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121829,"byte_end":121832,"line_start":2218,"line_end":2218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121837,"byte_end":121844,"line_start":2219,"line_end":2219,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121849,"byte_end":121878,"line_start":2220,"line_end":2220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121883,"byte_end":121886,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ let s = b\"123foo5bar789\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121891,"byte_end":121920,"line_start":2222,"line_end":2222,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.trim_end_with(|c| c.is_numeric()), B(\"123foo5bar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121925,"byte_end":121994,"line_start":2223,"line_end":2223,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":121999,"byte_end":122006,"line_start":2224,"line_end":2224,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":122011,"byte_end":122020,"line_start":2225,"line_end":2225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127702,"byte_end":127720,"line_start":2399,"line_end":2399,"column_start":8,"column_end":26},"name":"to_ascii_lowercase","qualname":"::ext_slice::ByteSlice::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Vec<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII lowercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"/ Returns a new `Vec<u8>` containing the ASCII lowercase equivalent of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126592,"byte_end":126664,"line_start":2366,"line_end":2366,"column_start":5,"column_end":77}},{"value":"/ this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126669,"byte_end":126690,"line_start":2367,"line_end":2367,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126695,"byte_end":126698,"line_start":2368,"line_end":2368,"column_start":5,"column_end":8}},{"value":"/ In this case, lowercase is only defined in ASCII letters. Namely, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126703,"byte_end":126776,"line_start":2369,"line_end":2369,"column_start":5,"column_end":78}},{"value":"/ letters `A-Z` are converted to `a-z`. All other bytes remain unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126781,"byte_end":126856,"line_start":2370,"line_end":2370,"column_start":5,"column_end":80}},{"value":"/ In particular, the length of the byte string returned is always","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126861,"byte_end":126928,"line_start":2371,"line_end":2371,"column_start":5,"column_end":72}},{"value":"/ equivalent to the length of this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126933,"byte_end":126982,"line_start":2372,"line_end":2372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126987,"byte_end":126990,"line_start":2373,"line_end":2373,"column_start":5,"column_end":8}},{"value":"/ If you'd like to reuse an allocation for performance reasons, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":126995,"byte_end":127069,"line_start":2374,"line_end":2374,"column_start":5,"column_end":79}},{"value":"/ [`make_ascii_lowercase`](#method.make_ascii_lowercase) to perform","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127074,"byte_end":127143,"line_start":2375,"line_end":2375,"column_start":5,"column_end":74}},{"value":"/ the conversion in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127148,"byte_end":127176,"line_start":2376,"line_end":2376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127181,"byte_end":127184,"line_start":2377,"line_end":2377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127189,"byte_end":127203,"line_start":2378,"line_end":2378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127208,"byte_end":127211,"line_start":2379,"line_end":2379,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127216,"byte_end":127232,"line_start":2380,"line_end":2380,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127237,"byte_end":127240,"line_start":2381,"line_end":2381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127245,"byte_end":127252,"line_start":2382,"line_end":2382,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127257,"byte_end":127286,"line_start":2383,"line_end":2383,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127291,"byte_end":127294,"line_start":2384,"line_end":2384,"column_start":5,"column_end":8}},{"value":"/ let s = B(\"HELLO Β\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127299,"byte_end":127325,"line_start":2385,"line_end":2385,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(\"hello Β\".as_bytes(), s.to_ascii_lowercase().as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127330,"byte_end":127403,"line_start":2386,"line_end":2386,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127408,"byte_end":127415,"line_start":2387,"line_end":2387,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127420,"byte_end":127423,"line_start":2388,"line_end":2388,"column_start":5,"column_end":8}},{"value":"/ Invalid UTF-8 remains as is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127428,"byte_end":127460,"line_start":2389,"line_end":2389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127465,"byte_end":127468,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127473,"byte_end":127480,"line_start":2391,"line_end":2391,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127485,"byte_end":127514,"line_start":2392,"line_end":2392,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127519,"byte_end":127522,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ let s = B(b\"FOO\\xFFBAR\\xE2\\x98BAZ\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127527,"byte_end":127567,"line_start":2394,"line_end":2394,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.to_ascii_lowercase(), B(b\"foo\\xFFbar\\xE2\\x98baz\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127572,"byte_end":127640,"line_start":2395,"line_end":2395,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127645,"byte_end":127652,"line_start":2396,"line_end":2396,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127657,"byte_end":127680,"line_start":2397,"line_end":2397,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127685,"byte_end":127694,"line_start":2398,"line_end":2398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128775,"byte_end":128795,"line_start":2434,"line_end":2434,"column_start":8,"column_end":28},"name":"make_ascii_lowercase","qualname":"::ext_slice::ByteSlice::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Convert this byte string to its lowercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"/ Convert this byte string to its lowercase ASCII equivalent in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127797,"byte_end":127869,"line_start":2403,"line_end":2403,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127874,"byte_end":127877,"line_start":2404,"line_end":2404,"column_start":5,"column_end":8}},{"value":"/ In this case, lowercase is only defined in ASCII letters. Namely, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127882,"byte_end":127955,"line_start":2405,"line_end":2405,"column_start":5,"column_end":78}},{"value":"/ letters `A-Z` are converted to `a-z`. All other bytes remain unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":127960,"byte_end":128035,"line_start":2406,"line_end":2406,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128040,"byte_end":128043,"line_start":2407,"line_end":2407,"column_start":5,"column_end":8}},{"value":"/ If you don't need to do the conversion in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128048,"byte_end":128093,"line_start":2408,"line_end":2408,"column_start":5,"column_end":50}},{"value":"/ place and instead prefer convenience, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128098,"byte_end":128148,"line_start":2409,"line_end":2409,"column_start":5,"column_end":55}},{"value":"/ [`to_ascii_lowercase`](#method.to_ascii_lowercase) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128153,"byte_end":128216,"line_start":2410,"line_end":2410,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128221,"byte_end":128224,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128229,"byte_end":128243,"line_start":2412,"line_end":2412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128248,"byte_end":128251,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128256,"byte_end":128272,"line_start":2414,"line_end":2414,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128277,"byte_end":128280,"line_start":2415,"line_end":2415,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128285,"byte_end":128292,"line_start":2416,"line_end":2416,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128297,"byte_end":128321,"line_start":2417,"line_end":2417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128326,"byte_end":128329,"line_start":2418,"line_end":2418,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"HELLO Β\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128334,"byte_end":128378,"line_start":2419,"line_end":2419,"column_start":5,"column_end":48}},{"value":"/ s.make_ascii_lowercase();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128383,"byte_end":128412,"line_start":2420,"line_end":2420,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s, \"hello Β\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128417,"byte_end":128458,"line_start":2421,"line_end":2421,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128463,"byte_end":128470,"line_start":2422,"line_end":2422,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128475,"byte_end":128478,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ Invalid UTF-8 remains as is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128483,"byte_end":128515,"line_start":2424,"line_end":2424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128520,"byte_end":128523,"line_start":2425,"line_end":2425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128528,"byte_end":128535,"line_start":2426,"line_end":2426,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128540,"byte_end":128578,"line_start":2427,"line_end":2427,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128583,"byte_end":128586,"line_start":2428,"line_end":2428,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from_slice(b\"FOO\\xFFBAR\\xE2\\x98BAZ\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128591,"byte_end":128655,"line_start":2429,"line_end":2429,"column_start":5,"column_end":69}},{"value":"/ s.make_ascii_lowercase();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128660,"byte_end":128689,"line_start":2430,"line_end":2430,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s, B(b\"foo\\xFFbar\\xE2\\x98baz\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128694,"byte_end":128741,"line_start":2431,"line_end":2431,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128746,"byte_end":128753,"line_start":2432,"line_end":2432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":128758,"byte_end":128767,"line_start":2433,"line_end":2433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134116,"byte_end":134134,"line_start":2599,"line_end":2599,"column_start":8,"column_end":26},"name":"to_ascii_uppercase","qualname":"::ext_slice::ByteSlice::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Vec<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII uppercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"/ Returns a new `Vec<u8>` containing the ASCII uppercase equivalent of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133025,"byte_end":133097,"line_start":2566,"line_end":2566,"column_start":5,"column_end":77}},{"value":"/ this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133102,"byte_end":133123,"line_start":2567,"line_end":2567,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133128,"byte_end":133131,"line_start":2568,"line_end":2568,"column_start":5,"column_end":8}},{"value":"/ In this case, uppercase is only defined in ASCII letters. Namely, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133136,"byte_end":133209,"line_start":2569,"line_end":2569,"column_start":5,"column_end":78}},{"value":"/ letters `a-z` are converted to `A-Z`. All other bytes remain unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133214,"byte_end":133289,"line_start":2570,"line_end":2570,"column_start":5,"column_end":80}},{"value":"/ In particular, the length of the byte string returned is always","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133294,"byte_end":133361,"line_start":2571,"line_end":2571,"column_start":5,"column_end":72}},{"value":"/ equivalent to the length of this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133366,"byte_end":133415,"line_start":2572,"line_end":2572,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133420,"byte_end":133423,"line_start":2573,"line_end":2573,"column_start":5,"column_end":8}},{"value":"/ If you'd like to reuse an allocation for performance reasons, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133428,"byte_end":133502,"line_start":2574,"line_end":2574,"column_start":5,"column_end":79}},{"value":"/ [`make_ascii_uppercase`](#method.make_ascii_uppercase) to perform","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133507,"byte_end":133576,"line_start":2575,"line_end":2575,"column_start":5,"column_end":74}},{"value":"/ the conversion in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133581,"byte_end":133609,"line_start":2576,"line_end":2576,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133614,"byte_end":133617,"line_start":2577,"line_end":2577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133622,"byte_end":133636,"line_start":2578,"line_end":2578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133641,"byte_end":133644,"line_start":2579,"line_end":2579,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133649,"byte_end":133665,"line_start":2580,"line_end":2580,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133670,"byte_end":133673,"line_start":2581,"line_end":2581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133678,"byte_end":133685,"line_start":2582,"line_end":2582,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133690,"byte_end":133719,"line_start":2583,"line_end":2583,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133724,"byte_end":133727,"line_start":2584,"line_end":2584,"column_start":5,"column_end":8}},{"value":"/ let s = B(\"hello β\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133732,"byte_end":133758,"line_start":2585,"line_end":2585,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(s.to_ascii_uppercase(), B(\"HELLO β\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133763,"byte_end":133817,"line_start":2586,"line_end":2586,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133822,"byte_end":133829,"line_start":2587,"line_end":2587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133834,"byte_end":133837,"line_start":2588,"line_end":2588,"column_start":5,"column_end":8}},{"value":"/ Invalid UTF-8 remains as is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133842,"byte_end":133874,"line_start":2589,"line_end":2589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133879,"byte_end":133882,"line_start":2590,"line_end":2590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133887,"byte_end":133894,"line_start":2591,"line_end":2591,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133899,"byte_end":133928,"line_start":2592,"line_end":2592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133933,"byte_end":133936,"line_start":2593,"line_end":2593,"column_start":5,"column_end":8}},{"value":"/ let s = B(b\"foo\\xFFbar\\xE2\\x98baz\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133941,"byte_end":133981,"line_start":2594,"line_end":2594,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.to_ascii_uppercase(), B(b\"FOO\\xFFBAR\\xE2\\x98BAZ\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":133986,"byte_end":134054,"line_start":2595,"line_end":2595,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134059,"byte_end":134066,"line_start":2596,"line_end":2596,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134071,"byte_end":134094,"line_start":2597,"line_end":2597,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134099,"byte_end":134108,"line_start":2598,"line_end":2598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135186,"byte_end":135206,"line_start":2634,"line_end":2634,"column_start":8,"column_end":28},"name":"make_ascii_uppercase","qualname":"::ext_slice::ByteSlice::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Convert this byte string to its uppercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"/ Convert this byte string to its uppercase ASCII equivalent in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134211,"byte_end":134283,"line_start":2603,"line_end":2603,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134288,"byte_end":134291,"line_start":2604,"line_end":2604,"column_start":5,"column_end":8}},{"value":"/ In this case, uppercase is only defined in ASCII letters. Namely, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134296,"byte_end":134369,"line_start":2605,"line_end":2605,"column_start":5,"column_end":78}},{"value":"/ letters `a-z` are converted to `A-Z`. All other bytes remain unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134374,"byte_end":134449,"line_start":2606,"line_end":2606,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134454,"byte_end":134457,"line_start":2607,"line_end":2607,"column_start":5,"column_end":8}},{"value":"/ If you don't need to do the conversion in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134462,"byte_end":134507,"line_start":2608,"line_end":2608,"column_start":5,"column_end":50}},{"value":"/ place and instead prefer convenience, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134512,"byte_end":134562,"line_start":2609,"line_end":2609,"column_start":5,"column_end":55}},{"value":"/ [`to_ascii_uppercase`](#method.to_ascii_uppercase) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134567,"byte_end":134630,"line_start":2610,"line_end":2610,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134635,"byte_end":134638,"line_start":2611,"line_end":2611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134643,"byte_end":134657,"line_start":2612,"line_end":2612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134662,"byte_end":134665,"line_start":2613,"line_end":2613,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134670,"byte_end":134686,"line_start":2614,"line_end":2614,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134691,"byte_end":134694,"line_start":2615,"line_end":2615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134699,"byte_end":134706,"line_start":2616,"line_end":2616,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134711,"byte_end":134740,"line_start":2617,"line_end":2617,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134745,"byte_end":134748,"line_start":2618,"line_end":2618,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"hello β\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134753,"byte_end":134797,"line_start":2619,"line_end":2619,"column_start":5,"column_end":48}},{"value":"/ s.make_ascii_uppercase();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134802,"byte_end":134831,"line_start":2620,"line_end":2620,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s, B(\"HELLO β\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134836,"byte_end":134869,"line_start":2621,"line_end":2621,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134874,"byte_end":134881,"line_start":2622,"line_end":2622,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134886,"byte_end":134889,"line_start":2623,"line_end":2623,"column_start":5,"column_end":8}},{"value":"/ Invalid UTF-8 remains as is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134894,"byte_end":134926,"line_start":2624,"line_end":2624,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134931,"byte_end":134934,"line_start":2625,"line_end":2625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134939,"byte_end":134946,"line_start":2626,"line_end":2626,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134951,"byte_end":134989,"line_start":2627,"line_end":2627,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":134994,"byte_end":134997,"line_start":2628,"line_end":2628,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from_slice(b\"foo\\xFFbar\\xE2\\x98baz\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135002,"byte_end":135066,"line_start":2629,"line_end":2629,"column_start":5,"column_end":69}},{"value":"/ s.make_ascii_uppercase();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135071,"byte_end":135100,"line_start":2630,"line_end":2630,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s, B(b\"FOO\\xFFBAR\\xE2\\x98BAZ\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135105,"byte_end":135152,"line_start":2631,"line_end":2631,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135157,"byte_end":135164,"line_start":2632,"line_end":2632,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135169,"byte_end":135178,"line_start":2633,"line_end":2633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136073,"byte_end":136086,"line_start":2661,"line_end":2661,"column_start":8,"column_end":21},"name":"reverse_bytes","qualname":"::ext_slice::ByteSlice::reverse_bytes","value":"pub fn reverse_bytes(&mut Self)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Reverse the bytes in this string, in place.","sig":null,"attributes":[{"value":"/ Reverse the bytes in this string, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135283,"byte_end":135330,"line_start":2638,"line_end":2638,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135335,"byte_end":135338,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ This is not necessarily a well formed operation! For example, if this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135343,"byte_end":135416,"line_start":2640,"line_end":2640,"column_start":5,"column_end":78}},{"value":"/ byte string contains valid UTF-8 that isn't ASCII, then reversing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135421,"byte_end":135494,"line_start":2641,"line_end":2641,"column_start":5,"column_end":78}},{"value":"/ string will likely result in invalid UTF-8 and otherwise non-sensical","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135499,"byte_end":135572,"line_start":2642,"line_end":2642,"column_start":5,"column_end":78}},{"value":"/ content.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135577,"byte_end":135589,"line_start":2643,"line_end":2643,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135594,"byte_end":135597,"line_start":2644,"line_end":2644,"column_start":5,"column_end":8}},{"value":"/ Note that this is equivalent to the generic `[u8]::reverse` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135602,"byte_end":135673,"line_start":2645,"line_end":2645,"column_start":5,"column_end":76}},{"value":"/ This method is provided to permit callers to explicitly differentiate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135678,"byte_end":135751,"line_start":2646,"line_end":2646,"column_start":5,"column_end":78}},{"value":"/ between reversing bytes, codepoints and graphemes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135756,"byte_end":135810,"line_start":2647,"line_end":2647,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135815,"byte_end":135818,"line_start":2648,"line_end":2648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135823,"byte_end":135837,"line_start":2649,"line_end":2649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135842,"byte_end":135845,"line_start":2650,"line_end":2650,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135850,"byte_end":135866,"line_start":2651,"line_end":2651,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135871,"byte_end":135874,"line_start":2652,"line_end":2652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135879,"byte_end":135886,"line_start":2653,"line_end":2653,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135891,"byte_end":135915,"line_start":2654,"line_end":2654,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135920,"byte_end":135923,"line_start":2655,"line_end":2655,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"hello\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135928,"byte_end":135969,"line_start":2656,"line_end":2656,"column_start":5,"column_end":46}},{"value":"/ s.reverse_bytes();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":135974,"byte_end":135996,"line_start":2657,"line_end":2657,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s, \"olleh\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136001,"byte_end":136039,"line_start":2658,"line_end":2658,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136044,"byte_end":136051,"line_start":2659,"line_end":2659,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136056,"byte_end":136065,"line_start":2660,"line_end":2660,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138491,"byte_end":138504,"line_start":2732,"line_end":2732,"column_start":8,"column_end":21},"name":"reverse_chars","qualname":"::ext_slice::ByteSlice::reverse_chars","value":"pub fn reverse_chars(&mut Self)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Reverse the codepoints in this string, in place.","sig":null,"attributes":[{"value":"/ Reverse the codepoints in this string, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136150,"byte_end":136202,"line_start":2665,"line_end":2665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136207,"byte_end":136210,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ If this byte string is valid UTF-8, then its reversal by codepoint","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136215,"byte_end":136285,"line_start":2667,"line_end":2667,"column_start":5,"column_end":75}},{"value":"/ is also guaranteed to be valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136290,"byte_end":136331,"line_start":2668,"line_end":2668,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136336,"byte_end":136339,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ This operation is equivalent to the following, but without allocating:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136344,"byte_end":136418,"line_start":2670,"line_end":2670,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136423,"byte_end":136426,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136431,"byte_end":136438,"line_start":2672,"line_end":2672,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136443,"byte_end":136467,"line_start":2673,"line_end":2673,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136472,"byte_end":136475,"line_start":2674,"line_end":2674,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"foo☃bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136480,"byte_end":136525,"line_start":2675,"line_end":2675,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136530,"byte_end":136533,"line_start":2676,"line_end":2676,"column_start":5,"column_end":8}},{"value":"/ let mut chars: Vec<char> = s.chars().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136538,"byte_end":136589,"line_start":2677,"line_end":2677,"column_start":5,"column_end":56}},{"value":"/ chars.reverse();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136594,"byte_end":136614,"line_start":2678,"line_end":2678,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136619,"byte_end":136622,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ let reversed: String = chars.into_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136627,"byte_end":136682,"line_start":2680,"line_end":2680,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(reversed, \"rab☃oof\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136687,"byte_end":136725,"line_start":2681,"line_end":2681,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136730,"byte_end":136737,"line_start":2682,"line_end":2682,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136742,"byte_end":136745,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ Note that this is not necessarily a well formed operation. For example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136750,"byte_end":136825,"line_start":2684,"line_end":2684,"column_start":5,"column_end":80}},{"value":"/ if this byte string contains grapheme clusters with more than one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136830,"byte_end":136899,"line_start":2685,"line_end":2685,"column_start":5,"column_end":74}},{"value":"/ codepoint, then those grapheme clusters will not necessarily be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136904,"byte_end":136971,"line_start":2686,"line_end":2686,"column_start":5,"column_end":72}},{"value":"/ preserved. If you'd like to preserve grapheme clusters, then use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":136976,"byte_end":137044,"line_start":2687,"line_end":2687,"column_start":5,"column_end":73}},{"value":"/ [`reverse_graphemes`](#method.reverse_graphemes) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137049,"byte_end":137110,"line_start":2688,"line_end":2688,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137115,"byte_end":137118,"line_start":2689,"line_end":2689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137123,"byte_end":137137,"line_start":2690,"line_end":2690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137142,"byte_end":137145,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137150,"byte_end":137166,"line_start":2692,"line_end":2692,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137171,"byte_end":137174,"line_start":2693,"line_end":2693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137179,"byte_end":137186,"line_start":2694,"line_end":2694,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137191,"byte_end":137215,"line_start":2695,"line_end":2695,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137220,"byte_end":137223,"line_start":2696,"line_end":2696,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"foo☃bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137228,"byte_end":137273,"line_start":2697,"line_end":2697,"column_start":5,"column_end":48}},{"value":"/ s.reverse_chars();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137278,"byte_end":137300,"line_start":2698,"line_end":2698,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s, \"rab☃oof\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137305,"byte_end":137347,"line_start":2699,"line_end":2699,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137352,"byte_end":137359,"line_start":2700,"line_end":2700,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137364,"byte_end":137367,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/ This example shows that not all reversals lead to a well formed string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137372,"byte_end":137447,"line_start":2702,"line_end":2702,"column_start":5,"column_end":80}},{"value":"/ For example, in this case, combining marks are used to put accents over","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137452,"byte_end":137527,"line_start":2703,"line_end":2703,"column_start":5,"column_end":80}},{"value":"/ some letters, and those accent marks must appear after the codepoints","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137532,"byte_end":137605,"line_start":2704,"line_end":2704,"column_start":5,"column_end":78}},{"value":"/ they modify.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137610,"byte_end":137626,"line_start":2705,"line_end":2705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137631,"byte_end":137634,"line_start":2706,"line_end":2706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137639,"byte_end":137646,"line_start":2707,"line_end":2707,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137651,"byte_end":137680,"line_start":2708,"line_end":2708,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137685,"byte_end":137688,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"résumé\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137693,"byte_end":137739,"line_start":2710,"line_end":2710,"column_start":5,"column_end":49}},{"value":"/ s.reverse_chars();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137744,"byte_end":137766,"line_start":2711,"line_end":2711,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s, B(b\"\\xCC\\x81emus\\xCC\\x81er\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137771,"byte_end":137819,"line_start":2712,"line_end":2712,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137824,"byte_end":137831,"line_start":2713,"line_end":2713,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137836,"byte_end":137839,"line_start":2714,"line_end":2714,"column_start":5,"column_end":8}},{"value":"/ A word of warning: the above example relies on the fact that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137844,"byte_end":137908,"line_start":2715,"line_end":2715,"column_start":5,"column_end":69}},{"value":"/ `résumé` is in decomposed normal form, which means there are separate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137913,"byte_end":137990,"line_start":2716,"line_end":2716,"column_start":5,"column_end":80}},{"value":"/ codepoints for the accents above `e`. If it is instead in composed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":137995,"byte_end":138065,"line_start":2717,"line_end":2717,"column_start":5,"column_end":75}},{"value":"/ normal form, then the example works:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138070,"byte_end":138110,"line_start":2718,"line_end":2718,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138115,"byte_end":138118,"line_start":2719,"line_end":2719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138123,"byte_end":138130,"line_start":2720,"line_end":2720,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138135,"byte_end":138164,"line_start":2721,"line_end":2721,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138169,"byte_end":138172,"line_start":2722,"line_end":2722,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"résumé\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138177,"byte_end":138221,"line_start":2723,"line_end":2723,"column_start":5,"column_end":47}},{"value":"/ s.reverse_chars();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138226,"byte_end":138248,"line_start":2724,"line_end":2724,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(s, B(\"émusér\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138253,"byte_end":138286,"line_start":2725,"line_end":2725,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138291,"byte_end":138298,"line_start":2726,"line_end":2726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138303,"byte_end":138306,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ The point here is to be cautious and not assume that just because","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138311,"byte_end":138380,"line_start":2728,"line_end":2728,"column_start":5,"column_end":74}},{"value":"/ `reverse_chars` works in one case, that it therefore works in all","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138385,"byte_end":138454,"line_start":2729,"line_end":2729,"column_start":5,"column_end":74}},{"value":"/ cases.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138459,"byte_end":138469,"line_start":2730,"line_end":2730,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":138474,"byte_end":138483,"line_start":2731,"line_end":2731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141013,"byte_end":141021,"line_start":2825,"line_end":2825,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::ext_slice::ByteSlice::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns true if and only if every byte in this byte string is ASCII.","sig":null,"attributes":[{"value":"/ Returns true if and only if every byte in this byte string is ASCII.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140487,"byte_end":140559,"line_start":2807,"line_end":2807,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140564,"byte_end":140567,"line_start":2808,"line_end":2808,"column_start":5,"column_end":8}},{"value":"/ ASCII is an encoding that defines 128 codepoints. A byte corresponds to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140572,"byte_end":140647,"line_start":2809,"line_end":2809,"column_start":5,"column_end":80}},{"value":"/ an ASCII codepoint if and only if it is in the inclusive range","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140652,"byte_end":140718,"line_start":2810,"line_end":2810,"column_start":5,"column_end":71}},{"value":"/ `[0, 127]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140723,"byte_end":140738,"line_start":2811,"line_end":2811,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140743,"byte_end":140746,"line_start":2812,"line_end":2812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140751,"byte_end":140765,"line_start":2813,"line_end":2813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140770,"byte_end":140773,"line_start":2814,"line_end":2814,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140778,"byte_end":140794,"line_start":2815,"line_end":2815,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140799,"byte_end":140802,"line_start":2816,"line_end":2816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140807,"byte_end":140814,"line_start":2817,"line_end":2817,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140819,"byte_end":140848,"line_start":2818,"line_end":2818,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140853,"byte_end":140856,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ assert!(B(\"abc\").is_ascii());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140861,"byte_end":140894,"line_start":2820,"line_end":2820,"column_start":5,"column_end":38}},{"value":"/ assert!(!B(\"☃βツ\").is_ascii());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140899,"byte_end":140938,"line_start":2821,"line_end":2821,"column_start":5,"column_end":39}},{"value":"/ assert!(!B(b\"\\xFF\").is_ascii());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140943,"byte_end":140979,"line_start":2822,"line_end":2822,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140984,"byte_end":140991,"line_start":2823,"line_end":2823,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":140996,"byte_end":141005,"line_start":2824,"line_end":2824,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141898,"byte_end":141905,"line_start":2853,"line_end":2853,"column_start":8,"column_end":15},"name":"is_utf8","qualname":"::ext_slice::ByteSlice::is_utf8","value":"pub fn is_utf8(&Self) -> bool","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns true if and only if the entire byte string is valid UTF-8.","sig":null,"attributes":[{"value":"/ Returns true if and only if the entire byte string is valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141128,"byte_end":141198,"line_start":2829,"line_end":2829,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141203,"byte_end":141206,"line_start":2830,"line_end":2830,"column_start":5,"column_end":8}},{"value":"/ If you need location information about where a byte string's first","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141211,"byte_end":141281,"line_start":2831,"line_end":2831,"column_start":5,"column_end":75}},{"value":"/ invalid UTF-8 byte is, then use the [`to_str`](#method.to_str) method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141286,"byte_end":141360,"line_start":2832,"line_end":2832,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141365,"byte_end":141368,"line_start":2833,"line_end":2833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141373,"byte_end":141387,"line_start":2834,"line_end":2834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141392,"byte_end":141395,"line_start":2835,"line_end":2835,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141400,"byte_end":141416,"line_start":2836,"line_end":2836,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141421,"byte_end":141424,"line_start":2837,"line_end":2837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141429,"byte_end":141436,"line_start":2838,"line_end":2838,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141441,"byte_end":141470,"line_start":2839,"line_end":2839,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141475,"byte_end":141478,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ assert!(B(\"abc\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141483,"byte_end":141515,"line_start":2841,"line_end":2841,"column_start":5,"column_end":37}},{"value":"/ assert!(B(\"☃βツ\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141520,"byte_end":141557,"line_start":2842,"line_end":2842,"column_start":5,"column_end":37}},{"value":"/ // invalid bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141562,"byte_end":141582,"line_start":2843,"line_end":2843,"column_start":5,"column_end":25}},{"value":"/ assert!(!B(b\"abc\\xFF\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141587,"byte_end":141625,"line_start":2844,"line_end":2844,"column_start":5,"column_end":43}},{"value":"/ // surrogate encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141630,"byte_end":141655,"line_start":2845,"line_end":2845,"column_start":5,"column_end":30}},{"value":"/ assert!(!B(b\"\\xED\\xA0\\x80\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141660,"byte_end":141703,"line_start":2846,"line_end":2846,"column_start":5,"column_end":48}},{"value":"/ // incomplete sequence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141708,"byte_end":141734,"line_start":2847,"line_end":2847,"column_start":5,"column_end":31}},{"value":"/ assert!(!B(b\"\\xF0\\x9D\\x9Ca\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141739,"byte_end":141783,"line_start":2848,"line_end":2848,"column_start":5,"column_end":49}},{"value":"/ // overlong sequence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141788,"byte_end":141812,"line_start":2849,"line_end":2849,"column_start":5,"column_end":29}},{"value":"/ assert!(!B(b\"\\xF0\\x82\\x82\\xAC\").is_utf8());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141817,"byte_end":141864,"line_start":2850,"line_end":2850,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141869,"byte_end":141876,"line_start":2851,"line_end":2851,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141881,"byte_end":141890,"line_start":2852,"line_end":2852,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142495,"byte_end":142504,"line_start":2874,"line_end":2874,"column_start":8,"column_end":17},"name":"last_byte","qualname":"::ext_slice::ByteSlice::last_byte","value":"pub fn last_byte(&Self) -> Option<u8>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the last byte in this byte string, if it's non-empty. If this\n byte string is empty, this returns `None`.","sig":null,"attributes":[{"value":"/ Returns the last byte in this byte string, if it's non-empty. If this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":141982,"byte_end":142055,"line_start":2857,"line_end":2857,"column_start":5,"column_end":78}},{"value":"/ byte string is empty, this returns `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142060,"byte_end":142106,"line_start":2858,"line_end":2858,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142111,"byte_end":142114,"line_start":2859,"line_end":2859,"column_start":5,"column_end":8}},{"value":"/ Note that this is like the generic `[u8]::last`, except this returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142119,"byte_end":142191,"line_start":2860,"line_end":2860,"column_start":5,"column_end":77}},{"value":"/ the byte by value instead of a reference to the byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142196,"byte_end":142253,"line_start":2861,"line_end":2861,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142258,"byte_end":142261,"line_start":2862,"line_end":2862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142266,"byte_end":142280,"line_start":2863,"line_end":2863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142285,"byte_end":142288,"line_start":2864,"line_end":2864,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142293,"byte_end":142309,"line_start":2865,"line_end":2865,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142314,"byte_end":142317,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142322,"byte_end":142329,"line_start":2867,"line_end":2867,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142334,"byte_end":142358,"line_start":2868,"line_end":2868,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142363,"byte_end":142366,"line_start":2869,"line_end":2869,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(b'z'), b\"baz\".last_byte());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142371,"byte_end":142418,"line_start":2870,"line_end":2870,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(None, b\"\".last_byte());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142423,"byte_end":142461,"line_start":2871,"line_end":2871,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142466,"byte_end":142473,"line_start":2872,"line_end":2872,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142478,"byte_end":142487,"line_start":2873,"line_end":2873,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143185,"byte_end":143204,"line_start":2895,"line_end":2895,"column_start":8,"column_end":27},"name":"find_non_ascii_byte","qualname":"::ext_slice::ByteSlice::find_non_ascii_byte","value":"pub fn find_non_ascii_byte(&Self) -> Option<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Returns the index of the first non-ASCII byte in this byte string (if\n any such indices exist). Specifically, it returns the index of the\n first byte with a value greater than or equal to `0x80`.","sig":null,"attributes":[{"value":"/ Returns the index of the first non-ASCII byte in this byte string (if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142637,"byte_end":142710,"line_start":2879,"line_end":2879,"column_start":5,"column_end":78}},{"value":"/ any such indices exist). Specifically, it returns the index of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142715,"byte_end":142785,"line_start":2880,"line_end":2880,"column_start":5,"column_end":75}},{"value":"/ first byte with a value greater than or equal to `0x80`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142790,"byte_end":142850,"line_start":2881,"line_end":2881,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142855,"byte_end":142858,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142863,"byte_end":142877,"line_start":2883,"line_end":2883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142882,"byte_end":142885,"line_start":2884,"line_end":2884,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142890,"byte_end":142906,"line_start":2885,"line_end":2885,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142911,"byte_end":142914,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142919,"byte_end":142926,"line_start":2887,"line_end":2887,"column_start":5,"column_end":12}},{"value":"/ use bstr::{ByteSlice, B};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142931,"byte_end":142960,"line_start":2888,"line_end":2888,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142965,"byte_end":142968,"line_start":2889,"line_end":2889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), b\"abc\\xff\".find_non_ascii_byte());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":142973,"byte_end":143031,"line_start":2890,"line_end":2890,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, b\"abcde\".find_non_ascii_byte());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143036,"byte_end":143089,"line_start":2891,"line_end":2891,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Some(0), B(\"😀\").find_non_ascii_byte());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143094,"byte_end":143151,"line_start":2892,"line_end":2892,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143156,"byte_end":143163,"line_start":2893,"line_end":2893,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143168,"byte_end":143177,"line_start":2894,"line_end":2894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144344,"byte_end":144359,"line_start":2930,"line_end":2930,"column_start":8,"column_end":23},"name":"copy_within_str","qualname":"::ext_slice::ByteSlice::copy_within_str","value":"pub fn copy_within_str<R>(&mut Self, R, usize) where\nR: ops::RangeBounds<usize>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Copies elements from one part of the slice to another part of itself,\n where the parts may be overlapping.","sig":null,"attributes":[{"value":"/ Copies elements from one part of the slice to another part of itself,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143420,"byte_end":143493,"line_start":2904,"line_end":2904,"column_start":5,"column_end":78}},{"value":"/ where the parts may be overlapping.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143498,"byte_end":143537,"line_start":2905,"line_end":2905,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143542,"byte_end":143545,"line_start":2906,"line_end":2906,"column_start":5,"column_end":8}},{"value":"/ `src` is the range within this byte string to copy from, while `dest`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143550,"byte_end":143623,"line_start":2907,"line_end":2907,"column_start":5,"column_end":78}},{"value":"/ is the starting index of the range within this byte string to copy to.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143628,"byte_end":143702,"line_start":2908,"line_end":2908,"column_start":5,"column_end":79}},{"value":"/ The length indicated by `src` must be less than or equal to the number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143707,"byte_end":143781,"line_start":2909,"line_end":2909,"column_start":5,"column_end":79}},{"value":"/ of bytes from `dest` to the end of the byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143786,"byte_end":143841,"line_start":2910,"line_end":2910,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143846,"byte_end":143849,"line_start":2911,"line_end":2911,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143854,"byte_end":143866,"line_start":2912,"line_end":2912,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143871,"byte_end":143874,"line_start":2913,"line_end":2913,"column_start":5,"column_end":8}},{"value":"/ Panics if either range is out of bounds, or if `src` is too big to fit","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143879,"byte_end":143953,"line_start":2914,"line_end":2914,"column_start":5,"column_end":79}},{"value":"/ into `dest`, or if the end of `src` is before the start.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":143958,"byte_end":144018,"line_start":2915,"line_end":2915,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144023,"byte_end":144026,"line_start":2916,"line_end":2916,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144031,"byte_end":144045,"line_start":2917,"line_end":2917,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144050,"byte_end":144053,"line_start":2918,"line_end":2918,"column_start":5,"column_end":8}},{"value":"/ Copying four bytes within a byte string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144058,"byte_end":144102,"line_start":2919,"line_end":2919,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144107,"byte_end":144110,"line_start":2920,"line_end":2920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144115,"byte_end":144122,"line_start":2921,"line_end":2921,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144127,"byte_end":144156,"line_start":2922,"line_end":2922,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144161,"byte_end":144164,"line_start":2923,"line_end":2923,"column_start":5,"column_end":8}},{"value":"/ let mut buf = *b\"Hello, World!\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144169,"byte_end":144205,"line_start":2924,"line_end":2924,"column_start":5,"column_end":41}},{"value":"/ let s = &mut buf;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144210,"byte_end":144231,"line_start":2925,"line_end":2925,"column_start":5,"column_end":26}},{"value":"/ s.copy_within_str(1..5, 8);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144236,"byte_end":144267,"line_start":2926,"line_end":2926,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(s, B(\"Hello, Wello!\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144272,"byte_end":144310,"line_start":2927,"line_end":2927,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144315,"byte_end":144322,"line_start":2928,"line_end":2928,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":144327,"byte_end":144336,"line_start":2929,"line_end":2929,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146834,"byte_end":146840,"line_start":2988,"line_end":2988,"column_start":12,"column_end":18},"name":"Finder","qualname":"::ext_slice::Finder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single substring searcher fixed to a particular needle.","sig":null,"attributes":[{"value":"/ A single substring searcher fixed to a particular needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":145917,"byte_end":145978,"line_start":2971,"line_end":2971,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":145979,"byte_end":145982,"line_start":2972,"line_end":2972,"column_start":1,"column_end":4}},{"value":"/ The purpose of this type is to permit callers to construct a substring","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":145983,"byte_end":146057,"line_start":2973,"line_end":2973,"column_start":1,"column_end":75}},{"value":"/ searcher that can be used to search haystacks without the overhead of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146058,"byte_end":146131,"line_start":2974,"line_end":2974,"column_start":1,"column_end":74}},{"value":"/ constructing the searcher in the first place. This is a somewhat niche","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146132,"byte_end":146206,"line_start":2975,"line_end":2975,"column_start":1,"column_end":75}},{"value":"/ concern when it's necessary to re-use the same needle to search multiple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146207,"byte_end":146283,"line_start":2976,"line_end":2976,"column_start":1,"column_end":77}},{"value":"/ different haystacks with as little overhead as possible. In general, using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146284,"byte_end":146362,"line_start":2977,"line_end":2977,"column_start":1,"column_end":79}},{"value":"/ [`ByteSlice::find`](trait.ByteSlice.html#method.find)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146363,"byte_end":146420,"line_start":2978,"line_end":2978,"column_start":1,"column_end":58}},{"value":"/ or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146421,"byte_end":146427,"line_start":2979,"line_end":2979,"column_start":1,"column_end":7}},{"value":"/ [`ByteSlice::find_iter`](trait.ByteSlice.html#method.find_iter)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146428,"byte_end":146495,"line_start":2980,"line_end":2980,"column_start":1,"column_end":68}},{"value":"/ is good enough, but `Finder` is useful when you can meaningfully observe","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146496,"byte_end":146572,"line_start":2981,"line_end":2981,"column_start":1,"column_end":77}},{"value":"/ searcher construction time in a profile.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146573,"byte_end":146617,"line_start":2982,"line_end":2982,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146618,"byte_end":146621,"line_start":2983,"line_end":2983,"column_start":1,"column_end":4}},{"value":"/ When the `std` feature is enabled, then this type has an `into_owned`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146622,"byte_end":146695,"line_start":2984,"line_end":2984,"column_start":1,"column_end":74}},{"value":"/ version which permits building a `Finder` that is not connected to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146696,"byte_end":146770,"line_start":2985,"line_end":2985,"column_start":1,"column_end":75}},{"value":"/ lifetime of its needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146771,"byte_end":146798,"line_start":2986,"line_end":2986,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146964,"byte_end":146967,"line_start":2993,"line_end":2993,"column_start":12,"column_end":15},"name":"new","qualname":"<Finder>::new","value":"pub fn new<B: ?Sized + AsRef<[u8]>>(&'a B) -> Finder","parent":null,"children":[],"decl_id":null,"docs":" Create a new finder for the given needle.\n","sig":null,"attributes":[{"value":"/ Create a new finder for the given needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146893,"byte_end":146938,"line_start":2991,"line_end":2991,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146943,"byte_end":146952,"line_start":2992,"line_end":2992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147431,"byte_end":147441,"line_start":3006,"line_end":3006,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Finder>::into_owned","value":"pub fn into_owned(Self) -> Finder","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"/ Convert this finder into its owned variant, such that it no longer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147088,"byte_end":147158,"line_start":2997,"line_end":2997,"column_start":5,"column_end":75}},{"value":"/ borrows the needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147163,"byte_end":147186,"line_start":2998,"line_end":2998,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147191,"byte_end":147194,"line_start":2999,"line_end":2999,"column_start":5,"column_end":8}},{"value":"/ If this is already an owned finder, then this is a no-op. Otherwise,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147199,"byte_end":147271,"line_start":3000,"line_end":3000,"column_start":5,"column_end":77}},{"value":"/ this copies the needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147276,"byte_end":147303,"line_start":3001,"line_end":3001,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147308,"byte_end":147311,"line_start":3002,"line_end":3002,"column_start":5,"column_end":8}},{"value":"/ This is only available when the `std` feature is enabled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147316,"byte_end":147377,"line_start":3003,"line_end":3003,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147382,"byte_end":147405,"line_start":3004,"line_end":3004,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147410,"byte_end":147419,"line_start":3005,"line_end":3005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147905,"byte_end":147911,"line_start":3017,"line_end":3017,"column_start":12,"column_end":18},"name":"needle","qualname":"<Finder>::needle","value":"pub fn needle(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"/ Returns the needle that this finder searches for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147516,"byte_end":147569,"line_start":3010,"line_end":3010,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147574,"byte_end":147577,"line_start":3011,"line_end":3011,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime of the needle returned is tied to the lifetime","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147582,"byte_end":147655,"line_start":3012,"line_end":3012,"column_start":5,"column_end":78}},{"value":"/ of the finder, and may be shorter than the `'a` lifetime. Namely, a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147660,"byte_end":147731,"line_start":3013,"line_end":3013,"column_start":5,"column_end":76}},{"value":"/ finder's needle can be either borrowed or owned, so the lifetime of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147736,"byte_end":147811,"line_start":3014,"line_end":3014,"column_start":5,"column_end":80}},{"value":"/ needle returned must necessarily be the shorter of the two.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147816,"byte_end":147879,"line_start":3015,"line_end":3015,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147884,"byte_end":147893,"line_start":3016,"line_end":3016,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148934,"byte_end":148938,"line_start":3049,"line_end":3049,"column_start":12,"column_end":16},"name":"find","qualname":"<Finder>::find","value":"pub fn find<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"/ Returns the index of the first occurrence of this needle in the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":147965,"byte_end":148038,"line_start":3021,"line_end":3021,"column_start":5,"column_end":78}},{"value":"/ haystack.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148043,"byte_end":148056,"line_start":3022,"line_end":3022,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148061,"byte_end":148064,"line_start":3023,"line_end":3023,"column_start":5,"column_end":8}},{"value":"/ The haystack may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148069,"byte_end":148138,"line_start":3024,"line_end":3024,"column_start":5,"column_end":74}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148143,"byte_end":148213,"line_start":3025,"line_end":3025,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148218,"byte_end":148221,"line_start":3026,"line_end":3026,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148226,"byte_end":148242,"line_start":3027,"line_end":3027,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148247,"byte_end":148250,"line_start":3028,"line_end":3028,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148255,"byte_end":148327,"line_start":3029,"line_end":3029,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148332,"byte_end":148404,"line_start":3030,"line_end":3030,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148409,"byte_end":148456,"line_start":3031,"line_end":3031,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148461,"byte_end":148464,"line_start":3032,"line_end":3032,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148469,"byte_end":148538,"line_start":3033,"line_end":3033,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148543,"byte_end":148558,"line_start":3034,"line_end":3034,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148563,"byte_end":148566,"line_start":3035,"line_end":3035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148571,"byte_end":148585,"line_start":3036,"line_end":3036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148590,"byte_end":148593,"line_start":3037,"line_end":3037,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148598,"byte_end":148614,"line_start":3038,"line_end":3038,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148619,"byte_end":148622,"line_start":3039,"line_end":3039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148627,"byte_end":148634,"line_start":3040,"line_end":3040,"column_start":5,"column_end":12}},{"value":"/ use bstr::Finder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148639,"byte_end":148660,"line_start":3041,"line_end":3041,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148665,"byte_end":148668,"line_start":3042,"line_end":3042,"column_start":5,"column_end":8}},{"value":"/ let haystack = \"foo bar baz\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148673,"byte_end":148706,"line_start":3043,"line_end":3043,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some(0), Finder::new(\"foo\").find(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148711,"byte_end":148770,"line_start":3044,"line_end":3044,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Some(4), Finder::new(\"bar\").find(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148775,"byte_end":148834,"line_start":3045,"line_end":3045,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(None, Finder::new(\"quux\").find(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148839,"byte_end":148896,"line_start":3046,"line_end":3046,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148901,"byte_end":148908,"line_start":3047,"line_end":3047,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":148913,"byte_end":148922,"line_start":3048,"line_end":3048,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":984},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149985,"byte_end":149998,"line_start":3071,"line_end":3071,"column_start":12,"column_end":25},"name":"FinderReverse","qualname":"::ext_slice::FinderReverse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single substring reverse searcher fixed to a particular needle.","sig":null,"attributes":[{"value":"/ A single substring reverse searcher fixed to a particular needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149042,"byte_end":149111,"line_start":3054,"line_end":3054,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149112,"byte_end":149115,"line_start":3055,"line_end":3055,"column_start":1,"column_end":4}},{"value":"/ The purpose of this type is to permit callers to construct a substring","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149116,"byte_end":149190,"line_start":3056,"line_end":3056,"column_start":1,"column_end":75}},{"value":"/ searcher that can be used to search haystacks without the overhead of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149191,"byte_end":149264,"line_start":3057,"line_end":3057,"column_start":1,"column_end":74}},{"value":"/ constructing the searcher in the first place. This is a somewhat niche","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149265,"byte_end":149339,"line_start":3058,"line_end":3058,"column_start":1,"column_end":75}},{"value":"/ concern when it's necessary to re-use the same needle to search multiple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149340,"byte_end":149416,"line_start":3059,"line_end":3059,"column_start":1,"column_end":77}},{"value":"/ different haystacks with as little overhead as possible. In general, using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149417,"byte_end":149495,"line_start":3060,"line_end":3060,"column_start":1,"column_end":79}},{"value":"/ [`ByteSlice::rfind`](trait.ByteSlice.html#method.rfind)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149496,"byte_end":149555,"line_start":3061,"line_end":3061,"column_start":1,"column_end":60}},{"value":"/ or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149556,"byte_end":149562,"line_start":3062,"line_end":3062,"column_start":1,"column_end":7}},{"value":"/ [`ByteSlice::rfind_iter`](trait.ByteSlice.html#method.rfind_iter)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149563,"byte_end":149632,"line_start":3063,"line_end":3063,"column_start":1,"column_end":70}},{"value":"/ is good enough, but `FinderReverse` is useful when you can meaningfully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149633,"byte_end":149708,"line_start":3064,"line_end":3064,"column_start":1,"column_end":76}},{"value":"/ observe searcher construction time in a profile.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149709,"byte_end":149761,"line_start":3065,"line_end":3065,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149762,"byte_end":149765,"line_start":3066,"line_end":3066,"column_start":1,"column_end":4}},{"value":"/ When the `std` feature is enabled, then this type has an `into_owned`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149766,"byte_end":149839,"line_start":3067,"line_end":3067,"column_start":1,"column_end":74}},{"value":"/ version which permits building a `FinderReverse` that is not connected to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149840,"byte_end":149917,"line_start":3068,"line_end":3068,"column_start":1,"column_end":78}},{"value":"/ the lifetime of its needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":149918,"byte_end":149949,"line_start":3069,"line_end":3069,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150140,"byte_end":150143,"line_start":3076,"line_end":3076,"column_start":12,"column_end":15},"name":"new","qualname":"<FinderReverse>::new","value":"pub fn new<B: ?Sized + AsRef<[u8]>>(&'a B) -> FinderReverse","parent":null,"children":[],"decl_id":null,"docs":" Create a new reverse finder for the given needle.\n","sig":null,"attributes":[{"value":"/ Create a new reverse finder for the given needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150061,"byte_end":150114,"line_start":3074,"line_end":3074,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150119,"byte_end":150128,"line_start":3075,"line_end":3075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150624,"byte_end":150634,"line_start":3089,"line_end":3089,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<FinderReverse>::into_owned","value":"pub fn into_owned(Self) -> FinderReverse","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"/ Convert this finder into its owned variant, such that it no longer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150281,"byte_end":150351,"line_start":3080,"line_end":3080,"column_start":5,"column_end":75}},{"value":"/ borrows the needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150356,"byte_end":150379,"line_start":3081,"line_end":3081,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150384,"byte_end":150387,"line_start":3082,"line_end":3082,"column_start":5,"column_end":8}},{"value":"/ If this is already an owned finder, then this is a no-op. Otherwise,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150392,"byte_end":150464,"line_start":3083,"line_end":3083,"column_start":5,"column_end":77}},{"value":"/ this copies the needle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150469,"byte_end":150496,"line_start":3084,"line_end":3084,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150501,"byte_end":150504,"line_start":3085,"line_end":3085,"column_start":5,"column_end":8}},{"value":"/ This is only available when the `std` feature is enabled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150509,"byte_end":150570,"line_start":3086,"line_end":3086,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150575,"byte_end":150598,"line_start":3087,"line_end":3087,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150603,"byte_end":150612,"line_start":3088,"line_end":3088,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151113,"byte_end":151119,"line_start":3100,"line_end":3100,"column_start":12,"column_end":18},"name":"needle","qualname":"<FinderReverse>::needle","value":"pub fn needle(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"/ Returns the needle that this finder searches for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150723,"byte_end":150776,"line_start":3093,"line_end":3093,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150781,"byte_end":150784,"line_start":3094,"line_end":3094,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime of the needle returned is tied to the lifetime","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150789,"byte_end":150862,"line_start":3095,"line_end":3095,"column_start":5,"column_end":78}},{"value":"/ of this finder, and may be shorter than the `'a` lifetime. Namely,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150867,"byte_end":150937,"line_start":3096,"line_end":3096,"column_start":5,"column_end":75}},{"value":"/ a finder's needle can be either borrowed or owned, so the lifetime of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150942,"byte_end":151015,"line_start":3097,"line_end":3097,"column_start":5,"column_end":78}},{"value":"/ the needle returned must necessarily be the shorter of the two.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151020,"byte_end":151087,"line_start":3098,"line_end":3098,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151092,"byte_end":151101,"line_start":3099,"line_end":3099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152172,"byte_end":152177,"line_start":3132,"line_end":3132,"column_start":12,"column_end":17},"name":"rfind","qualname":"<FinderReverse>::rfind","value":"pub fn rfind<B: AsRef<[u8]>>(&Self, B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"/ Returns the index of the last occurrence of this needle in the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151173,"byte_end":151245,"line_start":3104,"line_end":3104,"column_start":5,"column_end":77}},{"value":"/ haystack.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151250,"byte_end":151263,"line_start":3105,"line_end":3105,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151268,"byte_end":151271,"line_start":3106,"line_end":3106,"column_start":5,"column_end":8}},{"value":"/ The haystack may be any type that can be cheaply converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151276,"byte_end":151345,"line_start":3107,"line_end":3107,"column_start":5,"column_end":74}},{"value":"/ `&[u8]`. This includes, but is not limited to, `&str` and `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151350,"byte_end":151420,"line_start":3108,"line_end":3108,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151425,"byte_end":151428,"line_start":3109,"line_end":3109,"column_start":5,"column_end":8}},{"value":"/ # Complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151433,"byte_end":151449,"line_start":3110,"line_end":3110,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151454,"byte_end":151457,"line_start":3111,"line_end":3111,"column_start":5,"column_end":8}},{"value":"/ This routine is guaranteed to have worst case linear time complexity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151462,"byte_end":151534,"line_start":3112,"line_end":3112,"column_start":5,"column_end":77}},{"value":"/ with respect to both the needle and the haystack. That is, this runs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151539,"byte_end":151611,"line_start":3113,"line_end":3113,"column_start":5,"column_end":77}},{"value":"/ in `O(needle.len() + haystack.len())` time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151616,"byte_end":151663,"line_start":3114,"line_end":3114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151668,"byte_end":151671,"line_start":3115,"line_end":3115,"column_start":5,"column_end":8}},{"value":"/ This routine is also guaranteed to have worst case constant space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151676,"byte_end":151745,"line_start":3116,"line_end":3116,"column_start":5,"column_end":74}},{"value":"/ complexity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151750,"byte_end":151765,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151770,"byte_end":151773,"line_start":3118,"line_end":3118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151778,"byte_end":151792,"line_start":3119,"line_end":3119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151797,"byte_end":151800,"line_start":3120,"line_end":3120,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151805,"byte_end":151821,"line_start":3121,"line_end":3121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151826,"byte_end":151829,"line_start":3122,"line_end":3122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151834,"byte_end":151841,"line_start":3123,"line_end":3123,"column_start":5,"column_end":12}},{"value":"/ use bstr::FinderReverse;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151846,"byte_end":151874,"line_start":3124,"line_end":3124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151879,"byte_end":151882,"line_start":3125,"line_end":3125,"column_start":5,"column_end":8}},{"value":"/ let haystack = \"foo bar baz\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151887,"byte_end":151920,"line_start":3126,"line_end":3126,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some(0), FinderReverse::new(\"foo\").rfind(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151925,"byte_end":151992,"line_start":3127,"line_end":3127,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Some(4), FinderReverse::new(\"bar\").rfind(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":151997,"byte_end":152064,"line_start":3128,"line_end":3128,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(None, FinderReverse::new(\"quux\").rfind(haystack));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152069,"byte_end":152134,"line_start":3129,"line_end":3129,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152139,"byte_end":152146,"line_start":3130,"line_end":3130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152151,"byte_end":152160,"line_start":3131,"line_end":3131,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152553,"byte_end":152557,"line_start":3144,"line_end":3144,"column_start":12,"column_end":16},"name":"Find","qualname":"::ext_slice::Find","value":"Find {  }","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches.","sig":null,"attributes":[{"value":"/ An iterator over non-overlapping substring matches.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152282,"byte_end":152337,"line_start":3137,"line_end":3137,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152338,"byte_end":152341,"line_start":3138,"line_end":3138,"column_start":1,"column_end":4}},{"value":"/ Matches are reported by the byte offset at which they begin.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152342,"byte_end":152406,"line_start":3139,"line_end":3139,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152407,"byte_end":152410,"line_start":3140,"line_end":3140,"column_start":1,"column_end":4}},{"value":"/ `'a` is the shorter of two lifetimes: the byte string being searched or the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152411,"byte_end":152490,"line_start":3141,"line_end":3141,"column_start":1,"column_end":80}},{"value":"/ byte string being looked for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152491,"byte_end":152524,"line_start":3142,"line_end":3142,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153241,"byte_end":153252,"line_start":3172,"line_end":3172,"column_start":12,"column_end":23},"name":"FindReverse","qualname":"::ext_slice::FindReverse","value":"FindReverse {  }","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches in reverse.","sig":null,"attributes":[{"value":"/ An iterator over non-overlapping substring matches in reverse.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152959,"byte_end":153025,"line_start":3165,"line_end":3165,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153026,"byte_end":153029,"line_start":3166,"line_end":3166,"column_start":1,"column_end":4}},{"value":"/ Matches are reported by the byte offset at which they begin.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153030,"byte_end":153094,"line_start":3167,"line_end":3167,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153095,"byte_end":153098,"line_start":3168,"line_end":3168,"column_start":1,"column_end":4}},{"value":"/ `'a` is the shorter of two lifetimes: the byte string being searched or the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153099,"byte_end":153178,"line_start":3169,"line_end":3169,"column_start":1,"column_end":80}},{"value":"/ byte string being looked for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153179,"byte_end":153212,"line_start":3170,"line_end":3170,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154005,"byte_end":154010,"line_start":3209,"line_end":3209,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::ext_slice::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":1012}],"decl_id":null,"docs":" An iterator over the bytes in a byte string.","sig":null,"attributes":[{"value":"/ An iterator over the bytes in a byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153856,"byte_end":153904,"line_start":3205,"line_end":3205,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153905,"byte_end":153908,"line_start":3206,"line_end":3206,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being traversed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153909,"byte_end":153969,"line_start":3207,"line_end":3207,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154304,"byte_end":154312,"line_start":3218,"line_end":3218,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Bytes>::as_slice","value":"pub fn as_slice(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Views the remaining underlying data as a subslice of the original data.\n This has the same lifetime as the original slice,\n and so the iterator can continue to be used while this exists.\n","sig":null,"attributes":[{"value":"/ Views the remaining underlying data as a subslice of the original data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154074,"byte_end":154149,"line_start":3214,"line_end":3214,"column_start":5,"column_end":80}},{"value":"/ This has the same lifetime as the original slice,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154154,"byte_end":154207,"line_start":3215,"line_end":3215,"column_start":5,"column_end":58}},{"value":"/ and so the iterator can continue to be used while this exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154212,"byte_end":154278,"line_start":3216,"line_end":3216,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154283,"byte_end":154292,"line_start":3217,"line_end":3217,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155234,"byte_end":155240,"line_start":3260,"line_end":3260,"column_start":12,"column_end":18},"name":"Fields","qualname":"::ext_slice::Fields","value":"Fields {  }","parent":null,"children":[{"krate":0,"index":1021}],"decl_id":null,"docs":" An iterator over the fields in a byte string, separated by whitespace.","sig":null,"attributes":[{"value":"/ An iterator over the fields in a byte string, separated by whitespace.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154939,"byte_end":155013,"line_start":3253,"line_end":3253,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155014,"byte_end":155017,"line_start":3254,"line_end":3254,"column_start":1,"column_end":4}},{"value":"/ This iterator splits on contiguous runs of whitespace, such that the fields","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155018,"byte_end":155097,"line_start":3255,"line_end":3255,"column_start":1,"column_end":80}},{"value":"/ in `foo\\t\\t\\n  \\nbar` are `foo` and `bar`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155098,"byte_end":155144,"line_start":3256,"line_end":3256,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155145,"byte_end":155148,"line_start":3257,"line_end":3257,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155149,"byte_end":155205,"line_start":3258,"line_end":3258,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":156042,"byte_end":156052,"line_start":3289,"line_end":3289,"column_start":12,"column_end":22},"name":"FieldsWith","qualname":"::ext_slice::FieldsWith","value":"FieldsWith {  }","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"decl_id":null,"docs":" An iterator over fields in the byte string, separated by a predicate over\n codepoints.","sig":null,"attributes":[{"value":"/ An iterator over fields in the byte string, separated by a predicate over","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155586,"byte_end":155663,"line_start":3279,"line_end":3279,"column_start":1,"column_end":78}},{"value":"/ codepoints.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155664,"byte_end":155679,"line_start":3280,"line_end":3280,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155680,"byte_end":155683,"line_start":3281,"line_end":3281,"column_start":1,"column_end":4}},{"value":"/ This iterator splits a byte string based on its predicate function such","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155684,"byte_end":155759,"line_start":3282,"line_end":3282,"column_start":1,"column_end":76}},{"value":"/ that the elements returned are separated by contiguous runs of codepoints","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155760,"byte_end":155837,"line_start":3283,"line_end":3283,"column_start":1,"column_end":78}},{"value":"/ for which the predicate returns true.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155838,"byte_end":155879,"line_start":3284,"line_end":3284,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155880,"byte_end":155883,"line_start":3285,"line_end":3285,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split, while `F` is the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155884,"byte_end":155962,"line_start":3286,"line_end":3286,"column_start":1,"column_end":79}},{"value":"/ of the predicate, i.e., `FnMut(char) -> bool`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155963,"byte_end":156013,"line_start":3287,"line_end":3287,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157179,"byte_end":157184,"line_start":3333,"line_end":3333,"column_start":12,"column_end":17},"name":"Split","qualname":"::ext_slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator.","sig":null,"attributes":[{"value":"/ An iterator over substrings in a byte string, split by a separator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157018,"byte_end":157089,"line_start":3329,"line_end":3329,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157090,"byte_end":157093,"line_start":3330,"line_end":3330,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157094,"byte_end":157150,"line_start":3331,"line_end":3331,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158996,"byte_end":159008,"line_start":3389,"line_end":3389,"column_start":12,"column_end":24},"name":"SplitReverse","qualname":"::ext_slice::SplitReverse","value":"SplitReverse {  }","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator, in\n reverse.","sig":null,"attributes":[{"value":"/ An iterator over substrings in a byte string, split by a separator, in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158746,"byte_end":158820,"line_start":3383,"line_end":3383,"column_start":1,"column_end":75}},{"value":"/ reverse.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158821,"byte_end":158833,"line_start":3384,"line_end":3384,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158834,"byte_end":158837,"line_start":3385,"line_end":3385,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split, while `F` is the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158838,"byte_end":158916,"line_start":3386,"line_end":3386,"column_start":1,"column_end":79}},{"value":"/ of the predicate, i.e., `FnMut(char) -> bool`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":158917,"byte_end":158967,"line_start":3387,"line_end":3387,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160880,"byte_end":160886,"line_start":3446,"line_end":3446,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::ext_slice::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator.","sig":null,"attributes":[{"value":"/ An iterator over at most `n` substrings in a byte string, split by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160630,"byte_end":160702,"line_start":3440,"line_end":3440,"column_start":1,"column_end":73}},{"value":"/ separator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160703,"byte_end":160717,"line_start":3441,"line_end":3441,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160718,"byte_end":160721,"line_start":3442,"line_end":3442,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split, while `F` is the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160722,"byte_end":160800,"line_start":3443,"line_end":3443,"column_start":1,"column_end":79}},{"value":"/ of the predicate, i.e., `FnMut(char) -> bool`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160801,"byte_end":160851,"line_start":3444,"line_end":3444,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161846,"byte_end":161859,"line_start":3485,"line_end":3485,"column_start":12,"column_end":25},"name":"SplitNReverse","qualname":"::ext_slice::SplitNReverse","value":"SplitNReverse {  }","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator, in reverse.","sig":null,"attributes":[{"value":"/ An iterator over at most `n` substrings in a byte string, split by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161584,"byte_end":161656,"line_start":3479,"line_end":3479,"column_start":1,"column_end":73}},{"value":"/ separator, in reverse.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161657,"byte_end":161683,"line_start":3480,"line_end":3480,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161684,"byte_end":161687,"line_start":3481,"line_end":3481,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being split, while `F` is the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161688,"byte_end":161766,"line_start":3482,"line_end":3482,"column_start":1,"column_end":79}},{"value":"/ of the predicate, i.e., `FnMut(char) -> bool`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161767,"byte_end":161817,"line_start":3483,"line_end":3483,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162840,"byte_end":162845,"line_start":3524,"line_end":3524,"column_start":12,"column_end":17},"name":"Lines","qualname":"::ext_slice::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":471}],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their terminators.","sig":null,"attributes":[{"value":"/ An iterator over all lines in a byte string, without their terminators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162595,"byte_end":162670,"line_start":3518,"line_end":3518,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162671,"byte_end":162674,"line_start":3519,"line_end":3519,"column_start":1,"column_end":4}},{"value":"/ For this iterator, the only line terminators recognized are `\\r\\n` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162675,"byte_end":162749,"line_start":3520,"line_end":3520,"column_start":1,"column_end":75}},{"value":"/ `\\n`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162750,"byte_end":162759,"line_start":3521,"line_end":3521,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162760,"byte_end":162763,"line_start":3522,"line_end":3522,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being iterated over.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162764,"byte_end":162828,"line_start":3523,"line_end":3523,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":164018,"byte_end":164037,"line_start":3563,"line_end":3563,"column_start":12,"column_end":31},"name":"LinesWithTerminator","qualname":"::ext_slice::LinesWithTerminator","value":"LinesWithTerminator {  }","parent":null,"children":[{"krate":0,"index":481}],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their terminators.","sig":null,"attributes":[{"value":"/ An iterator over all lines in a byte string, including their terminators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163413,"byte_end":163490,"line_start":3550,"line_end":3550,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163491,"byte_end":163494,"line_start":3551,"line_end":3551,"column_start":1,"column_end":4}},{"value":"/ For this iterator, the only line terminator recognized is `\\n`. (Since","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163495,"byte_end":163569,"line_start":3552,"line_end":3552,"column_start":1,"column_end":75}},{"value":"/ line terminators are included, this also handles `\\r\\n` line endings.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163570,"byte_end":163644,"line_start":3553,"line_end":3553,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163645,"byte_end":163648,"line_start":3554,"line_end":3554,"column_start":1,"column_end":4}},{"value":"/ Line terminators are only included if they are present in the original","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163649,"byte_end":163723,"line_start":3555,"line_end":3555,"column_start":1,"column_end":75}},{"value":"/ byte string. For example, the last line in a byte string may not end with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163724,"byte_end":163801,"line_start":3556,"line_end":3556,"column_start":1,"column_end":78}},{"value":"/ a line terminator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163802,"byte_end":163824,"line_start":3557,"line_end":3557,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163825,"byte_end":163828,"line_start":3558,"line_end":3558,"column_start":1,"column_end":4}},{"value":"/ Concatenating all elements yielded by this iterator is guaranteed to yield","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163829,"byte_end":163907,"line_start":3559,"line_end":3559,"column_start":1,"column_end":79}},{"value":"/ the original byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163908,"byte_end":163937,"line_start":3560,"line_end":3560,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163938,"byte_end":163941,"line_start":3561,"line_end":3561,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the byte string being iterated over.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163942,"byte_end":164006,"line_start":3562,"line_end":3562,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166960,"byte_end":166966,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"concat","qualname":"::ext_vec::concat","value":"pub fn concat<T, I>(I) -> Vec<u8> where T: AsRef<[u8]>, I: IntoIterator<Item =\nT>","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the elements given by the iterator together into a single\n `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Concatenate the elements given by the iterator together into a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166521,"byte_end":166594,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166595,"byte_end":166609,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166610,"byte_end":166613,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The elements may be any type that can be cheaply converted into an `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166614,"byte_end":166693,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ This includes, but is not limited to, `&str`, `&BStr` and `&[u8]` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166694,"byte_end":166771,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166772,"byte_end":166775,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166776,"byte_end":166790,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166791,"byte_end":166794,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166795,"byte_end":166811,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166812,"byte_end":166815,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166816,"byte_end":166823,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use bstr;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166824,"byte_end":166837,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166838,"byte_end":166841,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let s = bstr::concat(&[\"foo\", \"bar\", \"baz\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166842,"byte_end":166891,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, \"foobarbaz\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166892,"byte_end":166934,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166935,"byte_end":166942,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":166943,"byte_end":166952,"line_start":31,"line_end":31,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167643,"byte_end":167647,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"join","qualname":"::ext_vec::join","value":"pub fn join<B, T, I>(B, I) -> Vec<u8> where B: AsRef<[u8]>, T: AsRef<[u8]>,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Join the elements given by the iterator with the given separator into a\n single `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Join the elements given by the iterator with the given separator into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167163,"byte_end":167238,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ single `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167239,"byte_end":167260,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167261,"byte_end":167264,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Both the separator and the elements may be any type that can be cheaply","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167265,"byte_end":167340,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ converted into an `&[u8]`. This includes, but is not limited to,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167341,"byte_end":167409,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ `&str`, `&BStr` and `&[u8]` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167410,"byte_end":167449,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167450,"byte_end":167453,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167454,"byte_end":167468,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167469,"byte_end":167472,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167473,"byte_end":167489,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167490,"byte_end":167493,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167494,"byte_end":167501,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use bstr;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167502,"byte_end":167515,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167516,"byte_end":167519,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let s = bstr::join(\",\", &[\"foo\", \"bar\", \"baz\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167520,"byte_end":167572,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(s, \"foo,bar,baz\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167573,"byte_end":167617,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167618,"byte_end":167625,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":167626,"byte_end":167635,"line_start":61,"line_end":61,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168440,"byte_end":168446,"line_start":102,"line_end":102,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_vec::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[{"value":"/ Ensure that callers cannot implement `ByteSlice` by making an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168323,"byte_end":168388,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ umplementable trait its super trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168389,"byte_end":168429,"line_start":101,"line_end":101,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":551},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168866,"byte_end":168873,"line_start":117,"line_end":117,"column_start":11,"column_end":18},"name":"ByteVec","qualname":"::ext_vec::ByteVec","value":"ByteVec: Sealed","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":585},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":602}],"decl_id":null,"docs":" A trait that extends `Vec<u8>` with string oriented methods.","sig":null,"attributes":[{"value":"/ A trait that extends `Vec<u8>` with string oriented methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168478,"byte_end":168542,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168543,"byte_end":168546,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that when using the constructor methods, such as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168547,"byte_end":168604,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/ `ByteVec::from_slice`, one should actually call them using the concrete","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168605,"byte_end":168680,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ type. For example:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168681,"byte_end":168703,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168704,"byte_end":168707,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168708,"byte_end":168715,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168716,"byte_end":168743,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168744,"byte_end":168747,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let s = Vec::from_slice(b\"abc\"); // NOT ByteVec::from_slice(\"...\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168748,"byte_end":168818,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(s, B(\"abc\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168819,"byte_end":168847,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168848,"byte_end":168855,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169106,"byte_end":169112,"line_start":122,"line_end":122,"column_start":8,"column_end":14},"name":"as_vec","qualname":"::ext_vec::ByteVec::as_vec","value":"pub fn as_vec(&Self) -> &Vec<u8>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[{"value":"/ A method for accessing the raw vector bytes of this type. This is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168888,"byte_end":168957,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ always a no-op and callers shouldn't care about it. This only exists","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168962,"byte_end":169034,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ for making the extension trait work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169039,"byte_end":169079,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169365,"byte_end":169375,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"as_vec_mut","qualname":"::ext_vec::ByteVec::as_vec_mut","value":"pub fn as_vec_mut(&mut Self) -> &mut Vec<u8>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type, mutably. This\n is always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[{"value":"/ A method for accessing the raw vector bytes of this type, mutably. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169138,"byte_end":169213,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ is always a no-op and callers shouldn't care about it. This only exists","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169218,"byte_end":169293,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ for making the extension trait work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169298,"byte_end":169338,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169618,"byte_end":169626,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"into_vec","qualname":"::ext_vec::ByteVec::into_vec","value":"pub fn into_vec(Self) -> Vec<u8> where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" A method for consuming ownership of this vector. This is always a no-op\n and callers shouldn't care about it. This only exists for making the\n extension trait work.\n","sig":null,"attributes":[{"value":"/ A method for consuming ownership of this vector. This is always a no-op","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169409,"byte_end":169484,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ and callers shouldn't care about it. This only exists for making the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169489,"byte_end":169561,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ extension trait work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169566,"byte_end":169591,"line_start":132,"line_end":132,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169965,"byte_end":169975,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::ext_vec::ByteVec::from_slice","value":"pub fn from_slice<B: AsRef<[u8]>>(B) -> Vec<u8>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Create a new owned byte string from the given byte slice.","sig":null,"attributes":[{"value":"/ Create a new owned byte string from the given byte slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169680,"byte_end":169741,"line_start":138,"line_end":138,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169746,"byte_end":169749,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169754,"byte_end":169768,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169773,"byte_end":169776,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169781,"byte_end":169797,"line_start":142,"line_end":142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169802,"byte_end":169805,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169810,"byte_end":169817,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169822,"byte_end":169849,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169854,"byte_end":169857,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let s = Vec::from_slice(b\"abc\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169862,"byte_end":169898,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s, B(\"abc\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169903,"byte_end":169931,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169936,"byte_end":169943,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":169948,"byte_end":169957,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170602,"byte_end":170616,"line_start":174,"line_end":174,"column_start":8,"column_end":22},"name":"from_os_string","qualname":"::ext_vec::ByteVec::from_os_string","value":"pub fn from_os_string(OsString) -> Result<Vec<u8>, OsString>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned OS string.","sig":null,"attributes":[{"value":"/ Create a new byte string from an owned OS string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170058,"byte_end":170111,"line_start":155,"line_end":155,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170116,"byte_end":170119,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170124,"byte_end":170196,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ this returns the original OS string if it is not valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170201,"byte_end":170266,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170271,"byte_end":170274,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170279,"byte_end":170293,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170298,"byte_end":170301,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170306,"byte_end":170322,"line_start":162,"line_end":162,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170327,"byte_end":170330,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170335,"byte_end":170342,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170347,"byte_end":170374,"line_start":165,"line_end":165,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170379,"byte_end":170382,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170387,"byte_end":170414,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170419,"byte_end":170422,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let os_str = OsString::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170427,"byte_end":170466,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ let bs = Vec::from_os_string(os_str).expect(\"valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170471,"byte_end":170534,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170539,"byte_end":170568,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170573,"byte_end":170580,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":170585,"byte_end":170594,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171763,"byte_end":171780,"line_start":213,"line_end":213,"column_start":8,"column_end":25},"name":"from_os_str_lossy","qualname":"::ext_vec::ByteVec::from_os_str_lossy","value":"pub fn from_os_str_lossy<'a>(&'a OsStr) -> Cow","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from an OS string slice.","sig":null,"attributes":[{"value":"/ Lossily create a new byte string from an OS string slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171073,"byte_end":171134,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171139,"byte_end":171142,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds, is zero cost and always returns a slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171147,"byte_end":171222,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ On non-Unix systems, this does a UTF-8 check. If the given OS string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171227,"byte_end":171299,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ slice is not valid UTF-8, then it is lossily decoded into valid UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171304,"byte_end":171377,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ (with invalid bytes replaced by the Unicode replacement codepoint).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171382,"byte_end":171453,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171458,"byte_end":171461,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171466,"byte_end":171480,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171485,"byte_end":171488,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171493,"byte_end":171509,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171514,"byte_end":171517,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171522,"byte_end":171529,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171534,"byte_end":171558,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171563,"byte_end":171566,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171571,"byte_end":171598,"line_start":206,"line_end":206,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171603,"byte_end":171606,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let os_str = OsStr::new(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171611,"byte_end":171646,"line_start":208,"line_end":208,"column_start":5,"column_end":40}},{"value":"/ let bs = Vec::from_os_str_lossy(os_str);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171651,"byte_end":171695,"line_start":209,"line_end":209,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171700,"byte_end":171729,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171734,"byte_end":171741,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":171746,"byte_end":171755,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172889,"byte_end":172902,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"from_path_buf","qualname":"::ext_vec::ByteVec::from_path_buf","value":"pub fn from_path_buf(PathBuf) -> Result<Vec<u8>, PathBuf>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned file path.","sig":null,"attributes":[{"value":"/ Create a new byte string from an owned file path.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172348,"byte_end":172401,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172406,"byte_end":172409,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172414,"byte_end":172486,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ this returns the original path if it is not valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172491,"byte_end":172551,"line_start":237,"line_end":237,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172556,"byte_end":172559,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172564,"byte_end":172578,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172583,"byte_end":172586,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172591,"byte_end":172607,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172612,"byte_end":172615,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172620,"byte_end":172627,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172632,"byte_end":172659,"line_start":244,"line_end":244,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172664,"byte_end":172667,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172672,"byte_end":172699,"line_start":246,"line_end":246,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172704,"byte_end":172707,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172712,"byte_end":172748,"line_start":248,"line_end":248,"column_start":5,"column_end":41}},{"value":"/ let bs = Vec::from_path_buf(path).expect(\"must be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172753,"byte_end":172821,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172826,"byte_end":172855,"line_start":250,"line_end":250,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172860,"byte_end":172867,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":172872,"byte_end":172881,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173698,"byte_end":173713,"line_start":278,"line_end":278,"column_start":8,"column_end":23},"name":"from_path_lossy","qualname":"::ext_vec::ByteVec::from_path_lossy","value":"pub fn from_path_lossy<'a>(&'a Path) -> Cow","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from a file path.","sig":null,"attributes":[{"value":"/ Lossily create a new byte string from a file path.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173033,"byte_end":173087,"line_start":257,"line_end":257,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173092,"byte_end":173095,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds, is zero cost and always returns a slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173100,"byte_end":173175,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ On non-Unix systems, this does a UTF-8 check. If the given path is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173180,"byte_end":173254,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ valid UTF-8, then it is lossily decoded into valid UTF-8 (with invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173259,"byte_end":173333,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ bytes replaced by the Unicode replacement codepoint).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173338,"byte_end":173395,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173400,"byte_end":173403,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173408,"byte_end":173422,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173427,"byte_end":173430,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173435,"byte_end":173451,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173456,"byte_end":173459,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173464,"byte_end":173471,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173476,"byte_end":173500,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173505,"byte_end":173508,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173513,"byte_end":173540,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173545,"byte_end":173548,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173553,"byte_end":173585,"line_start":273,"line_end":273,"column_start":5,"column_end":37}},{"value":"/ let bs = Vec::from_path_lossy(path);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173590,"byte_end":173630,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(bs, B(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173635,"byte_end":173664,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173669,"byte_end":173676,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173681,"byte_end":173690,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174407,"byte_end":174416,"line_start":302,"line_end":302,"column_start":8,"column_end":17},"name":"push_byte","qualname":"::ext_vec::ByteVec::push_byte","value":"pub fn push_byte(&mut Self, u8)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Appends the given byte to the end of this byte string.","sig":null,"attributes":[{"value":"/ Appends the given byte to the end of this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173813,"byte_end":173871,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173876,"byte_end":173879,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Note that this is equivalent to the generic `Vec::push` method. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173884,"byte_end":173956,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ method is provided to permit callers to explicitly differentiate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":173961,"byte_end":174029,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/ between pushing bytes, codepoints and strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174034,"byte_end":174084,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174089,"byte_end":174092,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174097,"byte_end":174111,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174116,"byte_end":174119,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174124,"byte_end":174140,"line_start":290,"line_end":290,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174145,"byte_end":174148,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174153,"byte_end":174160,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174165,"byte_end":174187,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174192,"byte_end":174195,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"abc\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174200,"byte_end":174239,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ s.push_byte(b'\\xE2');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174244,"byte_end":174269,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/ s.push_byte(b'\\x98');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174274,"byte_end":174299,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/ s.push_byte(b'\\x83');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174304,"byte_end":174329,"line_start":298,"line_end":298,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(s, \"abc☃\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174334,"byte_end":174373,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174378,"byte_end":174385,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174390,"byte_end":174399,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174860,"byte_end":174869,"line_start":322,"line_end":322,"column_start":8,"column_end":17},"name":"push_char","qualname":"::ext_vec::ByteVec::push_char","value":"pub fn push_char(&mut Self, char)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Appends the given `char` to the end of this byte string.","sig":null,"attributes":[{"value":"/ Appends the given `char` to the end of this byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174489,"byte_end":174549,"line_start":306,"line_end":306,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174554,"byte_end":174557,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174562,"byte_end":174576,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174581,"byte_end":174584,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174589,"byte_end":174605,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174610,"byte_end":174613,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174618,"byte_end":174625,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174630,"byte_end":174652,"line_start":313,"line_end":313,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174657,"byte_end":174660,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"abc\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174665,"byte_end":174704,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ s.push_char('1');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174709,"byte_end":174730,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/ s.push_char('2');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174735,"byte_end":174756,"line_start":317,"line_end":317,"column_start":5,"column_end":26}},{"value":"/ s.push_char('3');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174761,"byte_end":174782,"line_start":318,"line_end":318,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(s, \"abc123\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174787,"byte_end":174826,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174831,"byte_end":174838,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":174843,"byte_end":174852,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175578,"byte_end":175586,"line_start":347,"line_end":347,"column_start":8,"column_end":16},"name":"push_str","qualname":"::ext_vec::ByteVec::push_str","value":"pub fn push_str<B: AsRef<[u8]>>(&mut Self, B)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Appends the given slice to the end of this byte string. This accepts\n any type that be converted to a `&[u8]`. This includes, but is not\n limited to, `&str`, `&BStr`, and of course, `&[u8]` itself.","sig":null,"attributes":[{"value":"/ Appends the given slice to the end of this byte string. This accepts","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175102,"byte_end":175174,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/ any type that be converted to a `&[u8]`. This includes, but is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175179,"byte_end":175249,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ limited to, `&str`, `&BStr`, and of course, `&[u8]` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175254,"byte_end":175317,"line_start":333,"line_end":333,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175322,"byte_end":175325,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175330,"byte_end":175344,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175349,"byte_end":175352,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175357,"byte_end":175373,"line_start":337,"line_end":337,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175378,"byte_end":175381,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175386,"byte_end":175393,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175398,"byte_end":175420,"line_start":340,"line_end":340,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175425,"byte_end":175428,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut s = <Vec<u8>>::from(\"abc\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175433,"byte_end":175472,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ s.push_str(b\"123\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175477,"byte_end":175500,"line_start":343,"line_end":343,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(s, \"abc123\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175505,"byte_end":175544,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175549,"byte_end":175556,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175561,"byte_end":175570,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177102,"byte_end":177113,"line_start":392,"line_end":392,"column_start":8,"column_end":19},"name":"into_string","qualname":"::ext_vec::ByteVec::into_string","value":"pub fn into_string(Self) -> Result<String, FromUtf8Error> where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Converts a `Vec<u8>` into a `String` if and only if this byte string is\n valid UTF-8.","sig":null,"attributes":[{"value":"/ Converts a `Vec<u8>` into a `String` if and only if this byte string is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175698,"byte_end":175773,"line_start":351,"line_end":351,"column_start":5,"column_end":80}},{"value":"/ valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175778,"byte_end":175794,"line_start":352,"line_end":352,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175799,"byte_end":175802,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If it is not valid UTF-8, then a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175807,"byte_end":175843,"line_start":354,"line_end":354,"column_start":5,"column_end":41}},{"value":"/ [`FromUtf8Error`](struct.FromUtf8Error.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175848,"byte_end":175896,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/ is returned. (This error can be used to examine why UTF-8 validation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175901,"byte_end":175973,"line_start":356,"line_end":356,"column_start":5,"column_end":77}},{"value":"/ failed, or to regain the original byte string.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":175978,"byte_end":176029,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176034,"byte_end":176037,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176042,"byte_end":176056,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176061,"byte_end":176064,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176069,"byte_end":176085,"line_start":361,"line_end":361,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176090,"byte_end":176093,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176098,"byte_end":176105,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176110,"byte_end":176132,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176137,"byte_end":176140,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176145,"byte_end":176207,"line_start":366,"line_end":366,"column_start":5,"column_end":67}},{"value":"/ let bytes = Vec::from(\"hello\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176212,"byte_end":176247,"line_start":367,"line_end":367,"column_start":5,"column_end":40}},{"value":"/ let string = bytes.into_string()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176252,"byte_end":176290,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176295,"byte_end":176298,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"hello\", string);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176303,"byte_end":176335,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176340,"byte_end":176374,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176379,"byte_end":176386,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176391,"byte_end":176394,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If this byte string is not valid UTF-8, then an error will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176399,"byte_end":176474,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ That error can then be used to inspect the location at which invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176479,"byte_end":176551,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ UTF-8 was found, or to regain the original byte string:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176556,"byte_end":176615,"line_start":376,"line_end":376,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176620,"byte_end":176623,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176628,"byte_end":176635,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176640,"byte_end":176667,"line_start":379,"line_end":379,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176672,"byte_end":176675,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176680,"byte_end":176727,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/ let err = bytes.into_string().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176732,"byte_end":176779,"line_start":382,"line_end":382,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176784,"byte_end":176787,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(err.utf8_error().valid_up_to(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176792,"byte_end":176842,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(err.utf8_error().error_len(), Some(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176847,"byte_end":176901,"line_start":385,"line_end":385,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176906,"byte_end":176909,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // At no point in this example is an allocation performed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176914,"byte_end":176976,"line_start":387,"line_end":387,"column_start":5,"column_end":67}},{"value":"/ let bytes = Vec::from(err.into_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":176981,"byte_end":177023,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(bytes, B(b\"foo\\xFFbar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177028,"byte_end":177068,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177073,"byte_end":177080,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177085,"byte_end":177094,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178023,"byte_end":178040,"line_start":422,"line_end":422,"column_start":8,"column_end":25},"name":"into_string_lossy","qualname":"::ext_vec::ByteVec::into_string_lossy","value":"pub fn into_string_lossy(Self) -> String where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Lossily converts a `Vec<u8>` into a `String`. If this byte string\n contains invalid UTF-8, then the invalid bytes are replaced with the\n Unicode replacement codepoint.","sig":null,"attributes":[{"value":"/ Lossily converts a `Vec<u8>` into a `String`. If this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177547,"byte_end":177616,"line_start":406,"line_end":406,"column_start":5,"column_end":74}},{"value":"/ contains invalid UTF-8, then the invalid bytes are replaced with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177621,"byte_end":177693,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ Unicode replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177698,"byte_end":177732,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177737,"byte_end":177740,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177745,"byte_end":177759,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177764,"byte_end":177767,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177772,"byte_end":177788,"line_start":412,"line_end":412,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177793,"byte_end":177796,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177801,"byte_end":177808,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177813,"byte_end":177835,"line_start":415,"line_end":415,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177840,"byte_end":177843,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177848,"byte_end":177895,"line_start":417,"line_end":417,"column_start":5,"column_end":52}},{"value":"/ let string = bytes.into_string_lossy();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177900,"byte_end":177943,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(string, \"foo\\u{FFFD}bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177948,"byte_end":177989,"line_start":419,"line_end":419,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":177994,"byte_end":178001,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178006,"byte_end":178015,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179437,"byte_end":179458,"line_start":463,"line_end":463,"column_start":15,"column_end":36},"name":"into_string_unchecked","qualname":"::ext_vec::ByteVec::into_string_unchecked","value":"pub unsafe fn into_string_unchecked(Self) -> String where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `String`, without checking for\n valid UTF-8.","sig":null,"attributes":[{"value":"/ Unsafely convert this byte string into a `String`, without checking for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178427,"byte_end":178502,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178507,"byte_end":178523,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178528,"byte_end":178531,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178536,"byte_end":178548,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178553,"byte_end":178556,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Callers *must* ensure that this byte string is valid UTF-8 before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178561,"byte_end":178630,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ calling this method. Converting a byte string into a `String` that is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178635,"byte_end":178708,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ not valid UTF-8 is considered undefined behavior.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178713,"byte_end":178766,"line_start":443,"line_end":443,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178771,"byte_end":178774,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This routine is useful in performance sensitive contexts where the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178779,"byte_end":178849,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/ UTF-8 validity of the byte string is already known and it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178854,"byte_end":178918,"line_start":446,"line_end":446,"column_start":5,"column_end":69}},{"value":"/ undesirable to pay the cost of an additional UTF-8 validation check","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178923,"byte_end":178994,"line_start":447,"line_end":447,"column_start":5,"column_end":76}},{"value":"/ that [`into_string`](#method.into_string) performs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":178999,"byte_end":179054,"line_start":448,"line_end":448,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179059,"byte_end":179062,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179067,"byte_end":179081,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179086,"byte_end":179089,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179094,"byte_end":179110,"line_start":452,"line_end":452,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179115,"byte_end":179118,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179123,"byte_end":179130,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179135,"byte_end":179157,"line_start":455,"line_end":455,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179162,"byte_end":179165,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // SAFETY: This is safe because string literals are guaranteed to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179170,"byte_end":179242,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ // valid UTF-8 by the Rust compiler.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179247,"byte_end":179287,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ let s = unsafe { Vec::from(\"☃βツ\").into_string_unchecked() };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179292,"byte_end":179361,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(\"☃βツ\", s);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179366,"byte_end":179396,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179401,"byte_end":179408,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179413,"byte_end":179422,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180129,"byte_end":180143,"line_start":489,"line_end":489,"column_start":8,"column_end":22},"name":"into_os_string","qualname":"::ext_vec::ByteVec::into_os_string","value":"pub fn into_os_string(Self) -> Result<OsString, Vec<u8>> where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"/ Converts this byte string into an OS string, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179576,"byte_end":179634,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179639,"byte_end":179642,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179647,"byte_end":179719,"line_start":472,"line_end":472,"column_start":5,"column_end":77}},{"value":"/ this returns the original byte string if it is not valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179724,"byte_end":179791,"line_start":473,"line_end":473,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179796,"byte_end":179799,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179804,"byte_end":179818,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179823,"byte_end":179826,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179831,"byte_end":179847,"line_start":477,"line_end":477,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179852,"byte_end":179855,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179860,"byte_end":179867,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179872,"byte_end":179896,"line_start":480,"line_end":480,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179901,"byte_end":179904,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179909,"byte_end":179931,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179936,"byte_end":179939,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let bs = Vec::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179944,"byte_end":179974,"line_start":484,"line_end":484,"column_start":5,"column_end":35}},{"value":"/ let os_str = bs.into_os_string().expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":179979,"byte_end":180048,"line_start":485,"line_end":485,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180053,"byte_end":180095,"line_start":486,"line_end":486,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180100,"byte_end":180107,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180112,"byte_end":180121,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181511,"byte_end":181531,"line_start":535,"line_end":535,"column_start":8,"column_end":28},"name":"into_os_string_lossy","qualname":"::ext_vec::ByteVec::into_os_string_lossy","value":"pub fn into_os_string_lossy(Self) -> OsString where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"/ Lossily converts this byte string into an OS string, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180712,"byte_end":180778,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180783,"byte_end":180786,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180791,"byte_end":180863,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ this will perform a UTF-8 check and lossily convert this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180868,"byte_end":180940,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ into valid UTF-8 using the Unicode replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":180945,"byte_end":181006,"line_start":517,"line_end":517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181011,"byte_end":181014,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Note that this can prevent the correct roundtripping of file paths on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181019,"byte_end":181092,"line_start":519,"line_end":519,"column_start":5,"column_end":78}},{"value":"/ non-Unix systems such as Windows, where file paths are an arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181097,"byte_end":181168,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/ sequence of 16-bit integers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181173,"byte_end":181205,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181210,"byte_end":181213,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181218,"byte_end":181232,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181237,"byte_end":181240,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181245,"byte_end":181261,"line_start":525,"line_end":525,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181266,"byte_end":181269,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181274,"byte_end":181281,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181286,"byte_end":181308,"line_start":528,"line_end":528,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181313,"byte_end":181316,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let bs = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181321,"byte_end":181365,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/ let os_str = bs.into_os_string_lossy();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181370,"byte_end":181413,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(os_str.to_string_lossy(), \"foo\\u{FFFD}bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181418,"byte_end":181477,"line_start":532,"line_end":532,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181482,"byte_end":181489,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181494,"byte_end":181503,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182465,"byte_end":182478,"line_start":573,"line_end":573,"column_start":8,"column_end":21},"name":"into_path_buf","qualname":"::ext_vec::ByteVec::into_path_buf","value":"pub fn into_path_buf(Self) -> Result<PathBuf, Vec<u8>> where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"/ Converts this byte string into an owned file path, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":181948,"byte_end":182012,"line_start":556,"line_end":556,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182017,"byte_end":182020,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182025,"byte_end":182097,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/ this returns the original byte string if it is not valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182102,"byte_end":182169,"line_start":559,"line_end":559,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182174,"byte_end":182177,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182182,"byte_end":182196,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182201,"byte_end":182204,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182209,"byte_end":182225,"line_start":563,"line_end":563,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182230,"byte_end":182233,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182238,"byte_end":182245,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182250,"byte_end":182272,"line_start":566,"line_end":566,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182277,"byte_end":182280,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let bs = Vec::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182285,"byte_end":182315,"line_start":568,"line_end":568,"column_start":5,"column_end":35}},{"value":"/ let path = bs.into_path_buf().expect(\"should be valid UTF-8\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182320,"byte_end":182386,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(path.as_os_str(), \"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182391,"byte_end":182431,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182436,"byte_end":182443,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182448,"byte_end":182457,"line_start":572,"line_end":572,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183410,"byte_end":183429,"line_start":602,"line_end":602,"column_start":8,"column_end":27},"name":"into_path_buf_lossy","qualname":"::ext_vec::ByteVec::into_path_buf_lossy","value":"pub fn into_path_buf_lossy(Self) -> PathBuf where Self: Sized","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"/ Lossily converts this byte string into an owned file path, in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182610,"byte_end":182682,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182687,"byte_end":182690,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ On Unix, this always succeeds and is zero cost. On non-Unix systems,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182695,"byte_end":182767,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ this will perform a UTF-8 check and lossily convert this byte string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182772,"byte_end":182844,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ into valid UTF-8 using the Unicode replacement codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182849,"byte_end":182910,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182915,"byte_end":182918,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this can prevent the correct roundtripping of file paths on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":182923,"byte_end":182996,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ non-Unix systems such as Windows, where file paths are an arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183001,"byte_end":183072,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ sequence of 16-bit integers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183077,"byte_end":183109,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183114,"byte_end":183117,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183122,"byte_end":183136,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183141,"byte_end":183144,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183149,"byte_end":183165,"line_start":592,"line_end":592,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183170,"byte_end":183173,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183178,"byte_end":183185,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183190,"byte_end":183212,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183217,"byte_end":183220,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let bs = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183225,"byte_end":183269,"line_start":597,"line_end":597,"column_start":5,"column_end":49}},{"value":"/ let path = bs.into_path_buf_lossy();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183274,"byte_end":183314,"line_start":598,"line_end":598,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo\\u{FFFD}bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183319,"byte_end":183376,"line_start":599,"line_end":599,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183381,"byte_end":183388,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183393,"byte_end":183402,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184401,"byte_end":184409,"line_start":634,"line_end":634,"column_start":8,"column_end":16},"name":"pop_byte","qualname":"::ext_vec::ByteVec::pop_byte","value":"pub fn pop_byte(&mut Self) -> Option<u8>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Removes the last byte from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"/ Removes the last byte from this `Vec<u8>` and returns it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183546,"byte_end":183607,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183612,"byte_end":183615,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ If this byte string is empty, then `None` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183620,"byte_end":183678,"line_start":611,"line_end":611,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183683,"byte_end":183686,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ If the last codepoint in this byte string is not ASCII, then removing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183691,"byte_end":183764,"line_start":613,"line_end":613,"column_start":5,"column_end":78}},{"value":"/ the last byte could make this byte string contain invalid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183769,"byte_end":183837,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183842,"byte_end":183845,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Note that this is equivalent to the generic `Vec::pop` method. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183850,"byte_end":183921,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/ method is provided to permit callers to explicitly differentiate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183926,"byte_end":183994,"line_start":617,"line_end":617,"column_start":5,"column_end":73}},{"value":"/ between popping bytes and codepoints.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":183999,"byte_end":184040,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184045,"byte_end":184048,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184053,"byte_end":184067,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184072,"byte_end":184075,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184080,"byte_end":184096,"line_start":622,"line_end":622,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184101,"byte_end":184104,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184109,"byte_end":184116,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184121,"byte_end":184143,"line_start":625,"line_end":625,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184148,"byte_end":184151,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184156,"byte_end":184189,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(s.pop_byte(), Some(b'o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184194,"byte_end":184235,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.pop_byte(), Some(b'o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184240,"byte_end":184281,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.pop_byte(), Some(b'f'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184286,"byte_end":184327,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.pop_byte(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184332,"byte_end":184367,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184372,"byte_end":184379,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184384,"byte_end":184393,"line_start":633,"line_end":633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186116,"byte_end":186124,"line_start":680,"line_end":680,"column_start":8,"column_end":16},"name":"pop_char","qualname":"::ext_vec::ByteVec::pop_char","value":"pub fn pop_char(&mut Self) -> Option<char>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Removes the last codepoint from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"/ Removes the last codepoint from this `Vec<u8>` and returns it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184480,"byte_end":184546,"line_start":638,"line_end":638,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184551,"byte_end":184554,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this byte string is empty, then `None` is returned. If the last","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184559,"byte_end":184629,"line_start":640,"line_end":640,"column_start":5,"column_end":75}},{"value":"/ bytes of this byte string do not correspond to a valid UTF-8 code unit","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184634,"byte_end":184708,"line_start":641,"line_end":641,"column_start":5,"column_end":79}},{"value":"/ sequence, then the Unicode replacement codepoint is yielded instead in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184713,"byte_end":184787,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/ accordance with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184792,"byte_end":184815,"line_start":643,"line_end":643,"column_start":5,"column_end":28}},{"value":"/ [replacement codepoint substitution policy](index.html#handling-of-invalid-utf8-8).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184820,"byte_end":184907,"line_start":644,"line_end":644,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184912,"byte_end":184915,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184920,"byte_end":184934,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184939,"byte_end":184942,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184947,"byte_end":184963,"line_start":648,"line_end":648,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184968,"byte_end":184971,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184976,"byte_end":184983,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":184988,"byte_end":185010,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185015,"byte_end":185018,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185023,"byte_end":185056,"line_start":653,"line_end":653,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(s.pop_char(), Some('o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185061,"byte_end":185101,"line_start":654,"line_end":654,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), Some('o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185106,"byte_end":185146,"line_start":655,"line_end":655,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), Some('f'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185151,"byte_end":185191,"line_start":656,"line_end":656,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185196,"byte_end":185231,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185236,"byte_end":185243,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185248,"byte_end":185251,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ This shows the replacement codepoint substitution policy. Note that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185256,"byte_end":185327,"line_start":660,"line_end":660,"column_start":5,"column_end":76}},{"value":"/ the first pop yields a replacement codepoint but actually removes two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185332,"byte_end":185405,"line_start":661,"line_end":661,"column_start":5,"column_end":78}},{"value":"/ bytes. This is in contrast with subsequent pops when encountering","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185410,"byte_end":185479,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ `\\xFF` since `\\xFF` is never a valid prefix for any valid UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185484,"byte_end":185551,"line_start":663,"line_end":663,"column_start":5,"column_end":72}},{"value":"/ code unit sequence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185556,"byte_end":185579,"line_start":664,"line_end":664,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185584,"byte_end":185587,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185592,"byte_end":185599,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185604,"byte_end":185626,"line_start":667,"line_end":667,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185631,"byte_end":185634,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from_slice(b\"f\\xFF\\xFF\\xFFoo\\xE2\\x98\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185639,"byte_end":185699,"line_start":669,"line_end":669,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(s.pop_char(), Some('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185704,"byte_end":185751,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(s.pop_char(), Some('o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185756,"byte_end":185796,"line_start":671,"line_end":671,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), Some('o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185801,"byte_end":185841,"line_start":672,"line_end":672,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), Some('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185846,"byte_end":185893,"line_start":673,"line_end":673,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(s.pop_char(), Some('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185898,"byte_end":185945,"line_start":674,"line_end":674,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(s.pop_char(), Some('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":185950,"byte_end":185997,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(s.pop_char(), Some('f'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186002,"byte_end":186042,"line_start":676,"line_end":676,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(s.pop_char(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186047,"byte_end":186082,"line_start":677,"line_end":677,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186087,"byte_end":186094,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186099,"byte_end":186108,"line_start":679,"line_end":679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187376,"byte_end":187387,"line_start":724,"line_end":724,"column_start":8,"column_end":19},"name":"remove_char","qualname":"::ext_vec::ByteVec::remove_char","value":"pub fn remove_char(&mut Self, usize) -> char","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Removes a `char` from this `Vec<u8>` at the given byte position and\n returns it.","sig":null,"attributes":[{"value":"/ Removes a `char` from this `Vec<u8>` at the given byte position and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186400,"byte_end":186471,"line_start":690,"line_end":690,"column_start":5,"column_end":76}},{"value":"/ returns it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186476,"byte_end":186491,"line_start":691,"line_end":691,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186496,"byte_end":186499,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If the bytes at the given position do not lead to a valid UTF-8 code","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186504,"byte_end":186576,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ unit sequence, then a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186581,"byte_end":186606,"line_start":694,"line_end":694,"column_start":5,"column_end":30}},{"value":"/ [replacement codepoint is returned instead](index.html#handling-of-invalid-utf8-8).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186611,"byte_end":186698,"line_start":695,"line_end":695,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186703,"byte_end":186706,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186711,"byte_end":186723,"line_start":697,"line_end":697,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186728,"byte_end":186731,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Panics if `at` is larger than or equal to this byte string's length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186736,"byte_end":186808,"line_start":699,"line_end":699,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186813,"byte_end":186816,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186821,"byte_end":186835,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186840,"byte_end":186843,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186848,"byte_end":186864,"line_start":703,"line_end":703,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186869,"byte_end":186872,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186877,"byte_end":186884,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186889,"byte_end":186911,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186916,"byte_end":186919,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foo☃bar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186924,"byte_end":186963,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(s.remove_char(3), '☃');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":186968,"byte_end":187008,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(s, b\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187013,"byte_end":187042,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187047,"byte_end":187054,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187059,"byte_end":187062,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This example shows how the Unicode replacement codepoint policy is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187067,"byte_end":187137,"line_start":713,"line_end":713,"column_start":5,"column_end":75}},{"value":"/ used:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187142,"byte_end":187151,"line_start":714,"line_end":714,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187156,"byte_end":187159,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187164,"byte_end":187171,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187176,"byte_end":187198,"line_start":717,"line_end":717,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187203,"byte_end":187206,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187211,"byte_end":187258,"line_start":719,"line_end":719,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(s.remove_char(3), '\\u{FFFD}');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187263,"byte_end":187308,"line_start":720,"line_end":720,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(s, b\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187313,"byte_end":187342,"line_start":721,"line_end":721,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187347,"byte_end":187354,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187359,"byte_end":187368,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188291,"byte_end":188302,"line_start":758,"line_end":758,"column_start":8,"column_end":19},"name":"insert_char","qualname":"::ext_vec::ByteVec::insert_char","value":"pub fn insert_char(&mut Self, usize, char)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Inserts the given codepoint into this `Vec<u8>` at a particular byte\n position.","sig":null,"attributes":[{"value":"/ Inserts the given codepoint into this `Vec<u8>` at a particular byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187702,"byte_end":187774,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/ position.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187779,"byte_end":187792,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187797,"byte_end":187800,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ This is an `O(n)` operation as it may copy a number of elements in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187805,"byte_end":187880,"line_start":739,"line_end":739,"column_start":5,"column_end":80}},{"value":"/ byte string proportional to its length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187885,"byte_end":187928,"line_start":740,"line_end":740,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187933,"byte_end":187936,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187941,"byte_end":187953,"line_start":742,"line_end":742,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187958,"byte_end":187961,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Panics if `at` is larger than the byte string's length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":187966,"byte_end":188025,"line_start":744,"line_end":744,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188030,"byte_end":188033,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188038,"byte_end":188052,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188057,"byte_end":188060,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188065,"byte_end":188081,"line_start":748,"line_end":748,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188086,"byte_end":188089,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188094,"byte_end":188101,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188106,"byte_end":188128,"line_start":751,"line_end":751,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188133,"byte_end":188136,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188141,"byte_end":188177,"line_start":753,"line_end":753,"column_start":5,"column_end":41}},{"value":"/ s.insert_char(3, '☃');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188182,"byte_end":188210,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(s, \"foo☃bar\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188215,"byte_end":188257,"line_start":755,"line_end":755,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188262,"byte_end":188269,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188274,"byte_end":188283,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189195,"byte_end":189205,"line_start":788,"line_end":788,"column_start":8,"column_end":18},"name":"insert_str","qualname":"::ext_vec::ByteVec::insert_str","value":"pub fn insert_str<B: AsRef<[u8]>>(&mut Self, usize, B)","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Inserts the given byte string into this byte string at a particular\n byte position.","sig":null,"attributes":[{"value":"/ Inserts the given byte string into this byte string at a particular","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188417,"byte_end":188488,"line_start":762,"line_end":762,"column_start":5,"column_end":76}},{"value":"/ byte position.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188493,"byte_end":188511,"line_start":763,"line_end":763,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188516,"byte_end":188519,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ This is an `O(n)` operation as it may copy a number of elements in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188524,"byte_end":188599,"line_start":765,"line_end":765,"column_start":5,"column_end":80}},{"value":"/ byte string proportional to its length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188604,"byte_end":188647,"line_start":766,"line_end":766,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188652,"byte_end":188655,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ The given byte string may be any type that can be cheaply converted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188660,"byte_end":188731,"line_start":768,"line_end":768,"column_start":5,"column_end":76}},{"value":"/ into a `&[u8]`. This includes, but is not limited to, `&str` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188736,"byte_end":188804,"line_start":769,"line_end":769,"column_start":5,"column_end":73}},{"value":"/ `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188809,"byte_end":188821,"line_start":770,"line_end":770,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188826,"byte_end":188829,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188834,"byte_end":188846,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188851,"byte_end":188854,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Panics if `at` is larger than the byte string's length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188859,"byte_end":188918,"line_start":774,"line_end":774,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188923,"byte_end":188926,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188931,"byte_end":188945,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188950,"byte_end":188953,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188958,"byte_end":188974,"line_start":778,"line_end":778,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188979,"byte_end":188982,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188987,"byte_end":188994,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":188999,"byte_end":189021,"line_start":781,"line_end":781,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189026,"byte_end":189029,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189034,"byte_end":189070,"line_start":783,"line_end":783,"column_start":5,"column_end":41}},{"value":"/ s.insert_str(3, \"☃☃☃\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189075,"byte_end":189108,"line_start":784,"line_end":784,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(s, \"foo☃☃☃bar\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189113,"byte_end":189161,"line_start":785,"line_end":785,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189166,"byte_end":189173,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":189178,"byte_end":189187,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191198,"byte_end":191211,"line_start":840,"line_end":840,"column_start":8,"column_end":21},"name":"replace_range","qualname":"::ext_vec::ByteVec::replace_range","value":"pub fn replace_range<R, B>(&mut Self, R, B) where R: ops::RangeBounds<usize>,\nB: AsRef<[u8]>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Removes the specified range in this byte string and replaces it with\n the given bytes. The given bytes do not need to have the same length\n as the range provided.","sig":null,"attributes":[{"value":"/ Removes the specified range in this byte string and replaces it with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190666,"byte_end":190738,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/ the given bytes. The given bytes do not need to have the same length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190743,"byte_end":190815,"line_start":821,"line_end":821,"column_start":5,"column_end":77}},{"value":"/ as the range provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190820,"byte_end":190846,"line_start":822,"line_end":822,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190851,"byte_end":190854,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190859,"byte_end":190871,"line_start":824,"line_end":824,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190876,"byte_end":190879,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Panics if the given range is invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190884,"byte_end":190925,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190930,"byte_end":190933,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190938,"byte_end":190952,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190957,"byte_end":190960,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190965,"byte_end":190981,"line_start":830,"line_end":830,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190986,"byte_end":190989,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":190994,"byte_end":191001,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191006,"byte_end":191028,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191033,"byte_end":191036,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191041,"byte_end":191077,"line_start":835,"line_end":835,"column_start":5,"column_end":41}},{"value":"/ s.replace_range(2..4, \"xxxxx\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191082,"byte_end":191117,"line_start":836,"line_end":836,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s, \"foxxxxxar\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191122,"byte_end":191164,"line_start":837,"line_end":837,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191169,"byte_end":191176,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191181,"byte_end":191190,"line_start":839,"line_end":839,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192376,"byte_end":192387,"line_start":878,"line_end":878,"column_start":8,"column_end":19},"name":"drain_bytes","qualname":"::ext_vec::ByteVec::drain_bytes","value":"pub fn drain_bytes<R>(&mut Self, R) -> DrainBytes where\nR: ops::RangeBounds<usize>","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in this\n `Vec<u8>` and yields each of the removed bytes.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191423,"byte_end":191495,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/ `Vec<u8>` and yields each of the removed bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191500,"byte_end":191551,"line_start":849,"line_end":849,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191556,"byte_end":191559,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ Note that the elements specified by the given range are removed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191564,"byte_end":191631,"line_start":851,"line_end":851,"column_start":5,"column_end":72}},{"value":"/ regardless of whether the returned iterator is fully exhausted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191636,"byte_end":191703,"line_start":852,"line_end":852,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191708,"byte_end":191711,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Also note that is is unspecified how many bytes are removed from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191716,"byte_end":191788,"line_start":854,"line_end":854,"column_start":5,"column_end":77}},{"value":"/ `Vec<u8>` if the `DrainBytes` iterator is leaked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191793,"byte_end":191846,"line_start":855,"line_end":855,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191851,"byte_end":191854,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191859,"byte_end":191871,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191876,"byte_end":191879,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Panics if the given range is not valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191884,"byte_end":191927,"line_start":859,"line_end":859,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191932,"byte_end":191935,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191940,"byte_end":191954,"line_start":861,"line_end":861,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191959,"byte_end":191962,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191967,"byte_end":191983,"line_start":863,"line_end":863,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191988,"byte_end":191991,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":191996,"byte_end":192003,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192008,"byte_end":192030,"line_start":866,"line_end":866,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192035,"byte_end":192038,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let mut s = Vec::from(\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192043,"byte_end":192079,"line_start":868,"line_end":868,"column_start":5,"column_end":41}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192084,"byte_end":192089,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/     let mut drainer = s.drain_bytes(2..4);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192094,"byte_end":192140,"line_start":870,"line_end":870,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(drainer.next(), Some(b'o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192145,"byte_end":192192,"line_start":871,"line_end":871,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(drainer.next(), Some(b'b'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192197,"byte_end":192244,"line_start":872,"line_end":872,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(drainer.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192249,"byte_end":192290,"line_start":873,"line_end":873,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192295,"byte_end":192300,"line_start":874,"line_end":874,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(s, \"foar\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192305,"byte_end":192342,"line_start":875,"line_end":875,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192347,"byte_end":192354,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192359,"byte_end":192368,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193094,"byte_end":193104,"line_start":908,"line_end":908,"column_start":12,"column_end":22},"name":"DrainBytes","qualname":"::ext_vec::DrainBytes","value":"DrainBytes {  }","parent":null,"children":[{"krate":0,"index":1069}],"decl_id":null,"docs":" A draining byte oriented iterator for `Vec<u8>`.","sig":null,"attributes":[{"value":"/ A draining byte oriented iterator for `Vec<u8>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192549,"byte_end":192601,"line_start":886,"line_end":886,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192602,"byte_end":192605,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ This iterator is created by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192606,"byte_end":192637,"line_start":888,"line_end":888,"column_start":1,"column_end":32}},{"value":"/ [`ByteVec::drain_bytes`](trait.ByteVec.html#method.drain_bytes).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192638,"byte_end":192706,"line_start":889,"line_end":889,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192707,"byte_end":192710,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192711,"byte_end":192725,"line_start":891,"line_end":891,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192726,"byte_end":192729,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192730,"byte_end":192746,"line_start":893,"line_end":893,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192747,"byte_end":192750,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192751,"byte_end":192758,"line_start":895,"line_end":895,"column_start":1,"column_end":8}},{"value":"/ use bstr::ByteVec;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192759,"byte_end":192781,"line_start":896,"line_end":896,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192782,"byte_end":192785,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ let mut s = Vec::from(\"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192786,"byte_end":192822,"line_start":898,"line_end":898,"column_start":1,"column_end":37}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192823,"byte_end":192828,"line_start":899,"line_end":899,"column_start":1,"column_end":6}},{"value":"/     let mut drainer = s.drain_bytes(2..4);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192829,"byte_end":192875,"line_start":900,"line_end":900,"column_start":1,"column_end":47}},{"value":"/     assert_eq!(drainer.next(), Some(b'o'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192876,"byte_end":192923,"line_start":901,"line_end":901,"column_start":1,"column_end":48}},{"value":"/     assert_eq!(drainer.next(), Some(b'b'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192924,"byte_end":192971,"line_start":902,"line_end":902,"column_start":1,"column_end":48}},{"value":"/     assert_eq!(drainer.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":192972,"byte_end":193013,"line_start":903,"line_end":903,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193014,"byte_end":193019,"line_start":904,"line_end":904,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(s, \"foar\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193020,"byte_end":193057,"line_start":905,"line_end":905,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193058,"byte_end":193065,"line_start":906,"line_end":906,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194349,"byte_end":194362,"line_start":961,"line_end":961,"column_start":12,"column_end":25},"name":"FromUtf8Error","qualname":"::ext_vec::FromUtf8Error","value":"FromUtf8Error {  }","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" An error that may occur when converting a `Vec<u8>` to a `String`.","sig":null,"attributes":[{"value":"/ An error that may occur when converting a `Vec<u8>` to a `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193606,"byte_end":193676,"line_start":937,"line_end":937,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193677,"byte_end":193680,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ This error includes the original `Vec<u8>` that failed to convert to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193681,"byte_end":193755,"line_start":939,"line_end":939,"column_start":1,"column_end":75}},{"value":"/ `String`. This permits callers to recover the allocation used even if it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193756,"byte_end":193832,"line_start":940,"line_end":940,"column_start":1,"column_end":77}},{"value":"/ it not valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193833,"byte_end":193856,"line_start":941,"line_end":941,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193857,"byte_end":193860,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193861,"byte_end":193875,"line_start":943,"line_end":943,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193876,"byte_end":193879,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193880,"byte_end":193896,"line_start":945,"line_end":945,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193897,"byte_end":193900,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193901,"byte_end":193908,"line_start":947,"line_end":947,"column_start":1,"column_end":8}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193909,"byte_end":193936,"line_start":948,"line_end":948,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193937,"byte_end":193940,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193941,"byte_end":193988,"line_start":950,"line_end":950,"column_start":1,"column_end":48}},{"value":"/ let err = bytes.into_string().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193989,"byte_end":194036,"line_start":951,"line_end":951,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194037,"byte_end":194040,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(err.utf8_error().valid_up_to(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194041,"byte_end":194091,"line_start":953,"line_end":953,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(err.utf8_error().error_len(), Some(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194092,"byte_end":194146,"line_start":954,"line_end":954,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194147,"byte_end":194150,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ // At no point in this example is an allocation performed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194151,"byte_end":194213,"line_start":956,"line_end":956,"column_start":1,"column_end":63}},{"value":"/ let bytes = Vec::from(err.into_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194214,"byte_end":194256,"line_start":957,"line_end":957,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(bytes, B(b\"foo\\xFFbar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194257,"byte_end":194297,"line_start":958,"line_end":958,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194298,"byte_end":194305,"line_start":959,"line_end":959,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194909,"byte_end":194917,"line_start":984,"line_end":984,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<FromUtf8Error>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the original bytes as a slice that failed to convert to a\n `String`.","sig":null,"attributes":[{"value":"/ Return the original bytes as a slice that failed to convert to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194436,"byte_end":194504,"line_start":967,"line_end":967,"column_start":5,"column_end":73}},{"value":"/ `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194509,"byte_end":194522,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194527,"byte_end":194530,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194535,"byte_end":194549,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194554,"byte_end":194557,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194562,"byte_end":194578,"line_start":972,"line_end":972,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194583,"byte_end":194586,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194591,"byte_end":194598,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194603,"byte_end":194630,"line_start":975,"line_end":975,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194635,"byte_end":194638,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194643,"byte_end":194690,"line_start":977,"line_end":977,"column_start":5,"column_end":52}},{"value":"/ let err = bytes.into_string().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194695,"byte_end":194742,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194747,"byte_end":194750,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ // At no point in this example is an allocation performed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194755,"byte_end":194817,"line_start":980,"line_end":980,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(err.as_bytes(), B(b\"foo\\xFFbar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194822,"byte_end":194871,"line_start":981,"line_end":981,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194876,"byte_end":194883,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194888,"byte_end":194897,"line_start":983,"line_end":983,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195494,"byte_end":195502,"line_start":1006,"line_end":1006,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<FromUtf8Error>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume this error and return the original byte string that failed to\n convert to a `String`.","sig":null,"attributes":[{"value":"/ Consume this error and return the original byte string that failed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194970,"byte_end":195043,"line_start":988,"line_end":988,"column_start":5,"column_end":78}},{"value":"/ convert to a `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195048,"byte_end":195074,"line_start":989,"line_end":989,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195079,"byte_end":195082,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195087,"byte_end":195101,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195106,"byte_end":195109,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195114,"byte_end":195130,"line_start":993,"line_end":993,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195135,"byte_end":195138,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195143,"byte_end":195150,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195155,"byte_end":195182,"line_start":996,"line_end":996,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195187,"byte_end":195190,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195195,"byte_end":195242,"line_start":998,"line_end":998,"column_start":5,"column_end":52}},{"value":"/ let err = bytes.into_string().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195247,"byte_end":195294,"line_start":999,"line_end":999,"column_start":5,"column_end":52}},{"value":"/ let original = err.into_vec();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195299,"byte_end":195333,"line_start":1000,"line_end":1000,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195338,"byte_end":195341,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ // At no point in this example is an allocation performed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195346,"byte_end":195408,"line_start":1002,"line_end":1002,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(original, B(b\"foo\\xFFbar\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195413,"byte_end":195456,"line_start":1003,"line_end":1003,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195461,"byte_end":195468,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195473,"byte_end":195482,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196085,"byte_end":196095,"line_start":1027,"line_end":1027,"column_start":12,"column_end":22},"name":"utf8_error","qualname":"<FromUtf8Error>::utf8_error","value":"pub fn utf8_error(&Self) -> &Utf8Error","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying UTF-8 error that occurred. This error provides\n information on the nature and location of the invalid UTF-8 detected.","sig":null,"attributes":[{"value":"/ Return the underlying UTF-8 error that occurred. This error provides","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195555,"byte_end":195627,"line_start":1010,"line_end":1010,"column_start":5,"column_end":77}},{"value":"/ information on the nature and location of the invalid UTF-8 detected.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195632,"byte_end":195705,"line_start":1011,"line_end":1011,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195710,"byte_end":195713,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195718,"byte_end":195732,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195737,"byte_end":195740,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195745,"byte_end":195761,"line_start":1015,"line_end":1015,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195766,"byte_end":195769,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195774,"byte_end":195781,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"/ use bstr::{B, ByteVec};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195786,"byte_end":195813,"line_start":1018,"line_end":1018,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195818,"byte_end":195821,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let bytes = Vec::from_slice(b\"foo\\xFFbar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195826,"byte_end":195873,"line_start":1020,"line_end":1020,"column_start":5,"column_end":52}},{"value":"/ let err = bytes.into_string().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195878,"byte_end":195925,"line_start":1021,"line_end":1021,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195930,"byte_end":195933,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(err.utf8_error().valid_up_to(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195938,"byte_end":195988,"line_start":1023,"line_end":1023,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(err.utf8_error().error_len(), Some(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":195993,"byte_end":196047,"line_start":1024,"line_end":1024,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196052,"byte_end":196059,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196064,"byte_end":196073,"line_start":1026,"line_end":1026,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":831},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":854},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1375},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":"Utilities for working with I/O using byte strings.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":19036,"byte_end":19059,"line_start":400,"line_end":400,"column_start":1,"column_end":24}},{"value":"*\nUtilities for working with I/O using byte strings.\n\nThis module currently only exports a single trait, `BufReadExt`, which provides\nfacilities for conveniently and efficiently working with lines as byte strings.\n\nMore APIs may be added in the future.\n*/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":224833,"byte_end":225090,"line_start":1,"line_end":8,"column_start":1,"column_end":3}}]},{"kind":"Trait","id":{"krate":0,"index":841},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225351,"byte_end":225361,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::BufReadExt","value":"BufReadExt: io::BufRead","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":852}],"decl_id":null,"docs":" An extention trait for\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html)\n which provides convenience APIs for dealing with byte strings.\n","sig":null,"attributes":[{"value":"/ An extention trait for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225169,"byte_end":225195,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225196,"byte_end":225273,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ which provides convenience APIs for dealing with byte strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225274,"byte_end":225340,"line_start":17,"line_end":17,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226468,"byte_end":226478,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"byte_lines","qualname":"::io::BufReadExt::byte_lines","value":"pub fn byte_lines(Self) -> ByteLines<Self> where Self: Sized","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of this reader, where each line\n is represented as a byte string.","sig":null,"attributes":[{"value":"/ Returns an iterator over the lines of this reader, where each line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225381,"byte_end":225451,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ is represented as a byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225456,"byte_end":225492,"line_start":20,"line_end":20,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225497,"byte_end":225500,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `io::Result<Vec<u8>>`, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225505,"byte_end":225577,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ an error is yielded if there was a problem reading from the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225582,"byte_end":225656,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225661,"byte_end":225672,"line_start":24,"line_end":24,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225677,"byte_end":225680,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, the next line in the iterator is returned. The line does","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225685,"byte_end":225757,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ *not* contain a trailing `\\n` or `\\r\\n`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225762,"byte_end":225806,"line_start":27,"line_end":27,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225811,"byte_end":225814,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225819,"byte_end":225833,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225838,"byte_end":225841,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225846,"byte_end":225862,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225867,"byte_end":225870,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225875,"byte_end":225882,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225887,"byte_end":225903,"line_start":34,"line_end":34,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225908,"byte_end":225911,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225916,"byte_end":225945,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225950,"byte_end":225953,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225958,"byte_end":226003,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226008,"byte_end":226067,"line_start":39,"line_end":39,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226072,"byte_end":226075,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut lines = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226080,"byte_end":226107,"line_start":41,"line_end":41,"column_start":5,"column_end":32}},{"value":"/ for result in cursor.byte_lines() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226112,"byte_end":226151,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/     let line = result?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226156,"byte_end":226183,"line_start":43,"line_end":43,"column_start":5,"column_end":32}},{"value":"/     lines.push(line);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226188,"byte_end":226213,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226218,"byte_end":226223,"line_start":45,"line_end":45,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lines.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226228,"byte_end":226259,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lines[0], \"lorem\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226264,"byte_end":226309,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(lines[1], \"ipsum\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226314,"byte_end":226359,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(lines[2], \"dolor\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226364,"byte_end":226409,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226414,"byte_end":226448,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226453,"byte_end":226460,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227853,"byte_end":227865,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"byte_records","qualname":"::io::BufReadExt::byte_records","value":"pub fn byte_records(Self, u8) -> ByteRecords<Self> where Self: Sized","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Returns an iterator over byte-terminated records of this reader, where\n each record is represented as a byte string.","sig":null,"attributes":[{"value":"/ Returns an iterator over byte-terminated records of this reader, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226584,"byte_end":226658,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ each record is represented as a byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226663,"byte_end":226711,"line_start":60,"line_end":60,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226716,"byte_end":226719,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Each item yielded by this iterator is a `io::Result<Vec<u8>>`, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226724,"byte_end":226796,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ an error is yielded if there was a problem reading from the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226801,"byte_end":226875,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226880,"byte_end":226891,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226896,"byte_end":226899,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ On success, the next record in the iterator is returned. The record","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226904,"byte_end":226975,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/ does *not* contain its trailing terminator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":226980,"byte_end":227027,"line_start":67,"line_end":67,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227032,"byte_end":227035,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that calling `byte_records(b'\\n')` differs from `byte_lines()` in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227040,"byte_end":227114,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ that it has no special handling for `\\r`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227119,"byte_end":227164,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227169,"byte_end":227172,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227177,"byte_end":227191,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227196,"byte_end":227199,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227204,"byte_end":227220,"line_start":74,"line_end":74,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227225,"byte_end":227228,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227233,"byte_end":227240,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227245,"byte_end":227261,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227266,"byte_end":227269,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227274,"byte_end":227303,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227308,"byte_end":227311,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227316,"byte_end":227361,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\x00ipsum\\x00dolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227366,"byte_end":227427,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227432,"byte_end":227435,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let mut records = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227440,"byte_end":227469,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ for result in cursor.byte_records(b'\\x00') {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227474,"byte_end":227522,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/     let record = result?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227527,"byte_end":227556,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/     records.push(record);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227561,"byte_end":227590,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227595,"byte_end":227600,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(records.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227605,"byte_end":227638,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(records[0], \"lorem\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227643,"byte_end":227690,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(records[1], \"ipsum\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227695,"byte_end":227742,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(records[2], \"dolor\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227747,"byte_end":227794,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227799,"byte_end":227833,"line_start":93,"line_end":93,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":227838,"byte_end":227845,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229350,"byte_end":229363,"line_start":138,"line_end":138,"column_start":8,"column_end":21},"name":"for_byte_line","qualname":"::io::BufReadExt::for_byte_line","value":"pub fn for_byte_line<F>(Self, F) -> io::Result<()> where Self: Sized,\nF: FnMut(&[u8]) -> io::Result<bool>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[{"value":"/ Executes the given closure on each line in the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228003,"byte_end":228072,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228077,"byte_end":228080,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the closure returns an error (or if the underlying reader returns an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228085,"byte_end":228160,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ error), then iteration is stopped and the error is returned. If false","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228165,"byte_end":228238,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ is returned, then iteration is stopped and no error is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228243,"byte_end":228311,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228316,"byte_end":228319,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The closure given is called on exactly the same values as yielded by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228324,"byte_end":228396,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ the [`byte_lines`](trait.BufReadExt.html#method.byte_lines)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228401,"byte_end":228464,"line_start":109,"line_end":109,"column_start":5,"column_end":68}},{"value":"/ iterator. Namely, lines do _not_ contain trailing `\\n` or `\\r\\n` bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228469,"byte_end":228544,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228549,"byte_end":228552,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for iterating over lines as quickly as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228557,"byte_end":228622,"line_start":112,"line_end":112,"column_start":5,"column_end":70}},{"value":"/ possible. Namely, a single allocation is reused for each line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228627,"byte_end":228693,"line_start":113,"line_end":113,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228698,"byte_end":228701,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228706,"byte_end":228720,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228725,"byte_end":228728,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228733,"byte_end":228749,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228754,"byte_end":228757,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228762,"byte_end":228769,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228774,"byte_end":228790,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228795,"byte_end":228798,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228803,"byte_end":228832,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228837,"byte_end":228840,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228845,"byte_end":228890,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228895,"byte_end":228954,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228959,"byte_end":228962,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let mut lines = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228967,"byte_end":228994,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ cursor.for_byte_line(|line| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":228999,"byte_end":229032,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/     lines.push(line.to_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229037,"byte_end":229071,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     Ok(true)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229076,"byte_end":229092,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/ })?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229097,"byte_end":229105,"line_start":131,"line_end":131,"column_start":5,"column_end":13}},{"value":"/ assert_eq!(lines.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229110,"byte_end":229141,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lines[0], \"lorem\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229146,"byte_end":229191,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(lines[1], \"ipsum\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229196,"byte_end":229241,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(lines[2], \"dolor\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229246,"byte_end":229291,"line_start":135,"line_end":135,"column_start":5,"column_end":50}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229296,"byte_end":229330,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229335,"byte_end":229342,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231029,"byte_end":231044,"line_start":185,"line_end":185,"column_start":8,"column_end":23},"name":"for_byte_record","qualname":"::io::BufReadExt::for_byte_record","value":"pub fn for_byte_record<F>(Self, u8, F) -> io::Result<()> where Self: Sized,\nF: FnMut(&[u8]) -> io::Result<bool>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Executes the given closure on each byte-terminated record in the\n underlying reader.","sig":null,"attributes":[{"value":"/ Executes the given closure on each byte-terminated record in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229620,"byte_end":229688,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/ underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229693,"byte_end":229715,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229720,"byte_end":229723,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If the closure returns an error (or if the underlying reader returns an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229728,"byte_end":229803,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ error), then iteration is stopped and the error is returned. If false","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229808,"byte_end":229881,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ is returned, then iteration is stopped and no error is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229886,"byte_end":229954,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229959,"byte_end":229962,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The closure given is called on exactly the same values as yielded by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":229967,"byte_end":230039,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ the [`byte_records`](trait.BufReadExt.html#method.byte_records)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230044,"byte_end":230111,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/ iterator. Namely, records do _not_ contain a trailing terminator byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230116,"byte_end":230190,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230195,"byte_end":230198,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for iterating over records as quickly as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230203,"byte_end":230270,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ possible. Namely, a single allocation is reused for each record.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230275,"byte_end":230343,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230348,"byte_end":230351,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230356,"byte_end":230370,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230375,"byte_end":230378,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230383,"byte_end":230399,"line_start":164,"line_end":164,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230404,"byte_end":230407,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230412,"byte_end":230419,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230424,"byte_end":230440,"line_start":167,"line_end":167,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230445,"byte_end":230448,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230453,"byte_end":230482,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230487,"byte_end":230490,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230495,"byte_end":230540,"line_start":171,"line_end":171,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\x00ipsum\\x00dolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230545,"byte_end":230606,"line_start":172,"line_end":172,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230611,"byte_end":230614,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut records = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230619,"byte_end":230648,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ cursor.for_byte_record(b'\\x00', |record| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230653,"byte_end":230699,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/     records.push(record.to_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230704,"byte_end":230742,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"/     Ok(true)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230747,"byte_end":230763,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/ })?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230768,"byte_end":230776,"line_start":178,"line_end":178,"column_start":5,"column_end":13}},{"value":"/ assert_eq!(records.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230781,"byte_end":230814,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(records[0], \"lorem\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230819,"byte_end":230866,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(records[1], \"ipsum\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230871,"byte_end":230918,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(records[2], \"dolor\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230923,"byte_end":230970,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":230975,"byte_end":231009,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231014,"byte_end":231021,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232814,"byte_end":232843,"line_start":239,"line_end":239,"column_start":8,"column_end":37},"name":"for_byte_line_with_terminator","qualname":"::io::BufReadExt::for_byte_line_with_terminator","value":"pub fn for_byte_line_with_terminator<F>(Self, F) -> io::Result<()> where\nSelf: Sized, F: FnMut(&[u8]) -> io::Result<bool>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[{"value":"/ Executes the given closure on each line in the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231382,"byte_end":231451,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231456,"byte_end":231459,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If the closure returns an error (or if the underlying reader returns an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231464,"byte_end":231539,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ error), then iteration is stopped and the error is returned. If false","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231544,"byte_end":231617,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ is returned, then iteration is stopped and no error is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231622,"byte_end":231690,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231695,"byte_end":231698,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Unlike","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231703,"byte_end":231713,"line_start":205,"line_end":205,"column_start":5,"column_end":15}},{"value":"/ [`for_byte_line`](trait.BufReadExt.html#method.for_byte_line),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231718,"byte_end":231784,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ the lines given to the closure *do* include the line terminator, if one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231789,"byte_end":231864,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231869,"byte_end":231880,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231885,"byte_end":231888,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for iterating over lines as quickly as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231893,"byte_end":231958,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ possible. Namely, a single allocation is reused for each line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":231963,"byte_end":232029,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232034,"byte_end":232037,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is identical to `for_byte_record_with_terminator` with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232042,"byte_end":232107,"line_start":213,"line_end":213,"column_start":5,"column_end":70}},{"value":"/ terminator of `\\n`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232112,"byte_end":232135,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232140,"byte_end":232143,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232148,"byte_end":232162,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232167,"byte_end":232170,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232175,"byte_end":232191,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232196,"byte_end":232199,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232204,"byte_end":232211,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232216,"byte_end":232232,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232237,"byte_end":232240,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232245,"byte_end":232274,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232279,"byte_end":232282,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232287,"byte_end":232332,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232337,"byte_end":232396,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232401,"byte_end":232404,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut lines = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232409,"byte_end":232436,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/ cursor.for_byte_line_with_terminator(|line| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232441,"byte_end":232490,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/     lines.push(line.to_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232495,"byte_end":232529,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/     Ok(true)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232534,"byte_end":232550,"line_start":231,"line_end":231,"column_start":5,"column_end":21}},{"value":"/ })?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232555,"byte_end":232563,"line_start":232,"line_end":232,"column_start":5,"column_end":13}},{"value":"/ assert_eq!(lines.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232568,"byte_end":232599,"line_start":233,"line_end":233,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lines[0], \"lorem\\n\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232604,"byte_end":232651,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(lines[1], \"ipsum\\r\\n\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232656,"byte_end":232705,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(lines[2], \"dolor\".as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232710,"byte_end":232755,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232760,"byte_end":232794,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":232799,"byte_end":232806,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234463,"byte_end":234494,"line_start":289,"line_end":289,"column_start":8,"column_end":39},"name":"for_byte_record_with_terminator","qualname":"::io::BufReadExt::for_byte_record_with_terminator","value":"pub fn for_byte_record_with_terminator<F>(Self, u8, F) -> io::Result<()> where\nSelf: Sized, F: FnMut(&[u8]) -> io::Result<bool>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Executes the given closure on each byte-terminated record in the\n underlying reader.","sig":null,"attributes":[{"value":"/ Executes the given closure on each byte-terminated record in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233072,"byte_end":233140,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233145,"byte_end":233167,"line_start":251,"line_end":251,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233172,"byte_end":233175,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ If the closure returns an error (or if the underlying reader returns an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233180,"byte_end":233255,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ error), then iteration is stopped and the error is returned. If false","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233260,"byte_end":233333,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ is returned, then iteration is stopped and no error is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233338,"byte_end":233406,"line_start":255,"line_end":255,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233411,"byte_end":233414,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Unlike","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233419,"byte_end":233429,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/ [`for_byte_record`](trait.BufReadExt.html#method.for_byte_record),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233434,"byte_end":233504,"line_start":258,"line_end":258,"column_start":5,"column_end":75}},{"value":"/ the lines given to the closure *do* include the record terminator, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233509,"byte_end":233582,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ one exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233587,"byte_end":233602,"line_start":260,"line_end":260,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233607,"byte_end":233610,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This routine is useful for iterating over records as quickly as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233615,"byte_end":233682,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ possible. Namely, a single allocation is reused for each record.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233687,"byte_end":233755,"line_start":263,"line_end":263,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233760,"byte_end":233763,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233768,"byte_end":233782,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233787,"byte_end":233790,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233795,"byte_end":233811,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233816,"byte_end":233819,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233824,"byte_end":233831,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233836,"byte_end":233852,"line_start":270,"line_end":270,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233857,"byte_end":233860,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use bstr::B;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233865,"byte_end":233881,"line_start":272,"line_end":272,"column_start":5,"column_end":21}},{"value":"/ use bstr::io::BufReadExt;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233886,"byte_end":233915,"line_start":273,"line_end":273,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233920,"byte_end":233923,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # fn example() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233928,"byte_end":233973,"line_start":275,"line_end":275,"column_start":5,"column_end":50}},{"value":"/ let cursor = io::Cursor::new(b\"lorem\\x00ipsum\\x00dolor\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":233978,"byte_end":234039,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234044,"byte_end":234047,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let mut records = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234052,"byte_end":234081,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/ cursor.for_byte_record_with_terminator(b'\\x00', |record| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234086,"byte_end":234148,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"/     records.push(record.to_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234153,"byte_end":234191,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/     Ok(true)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234196,"byte_end":234212,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/ })?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234217,"byte_end":234225,"line_start":282,"line_end":282,"column_start":5,"column_end":13}},{"value":"/ assert_eq!(records.len(), 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234230,"byte_end":234263,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(records[0], B(b\"lorem\\x00\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234268,"byte_end":234312,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(records[1], B(\"ipsum\\x00\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234317,"byte_end":234360,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(records[2], B(\"dolor\"));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234365,"byte_end":234404,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/ # Ok(()) }; example().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234409,"byte_end":234443,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":234448,"byte_end":234455,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236721,"byte_end":236730,"line_start":355,"line_end":355,"column_start":12,"column_end":21},"name":"ByteLines","qualname":"::io::ByteLines","value":"ByteLines {  }","parent":null,"children":[{"krate":0,"index":1367}],"decl_id":null,"docs":" An iterator over lines from an instance of\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","sig":null,"attributes":[{"value":"/ An iterator over lines from an instance of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236378,"byte_end":236424,"line_start":346,"line_end":346,"column_start":1,"column_end":47}},{"value":"/ [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236425,"byte_end":236503,"line_start":347,"line_end":347,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236504,"byte_end":236507,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ This iterator is generally created by calling the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236508,"byte_end":236561,"line_start":349,"line_end":349,"column_start":1,"column_end":54}},{"value":"/ [`byte_lines`](trait.BufReadExt.html#method.byte_lines)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236562,"byte_end":236621,"line_start":350,"line_end":350,"column_start":1,"column_end":60}},{"value":"/ method on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236622,"byte_end":236639,"line_start":351,"line_end":351,"column_start":1,"column_end":18}},{"value":"/ [`BufReadExt`](trait.BufReadExt.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236640,"byte_end":236681,"line_start":352,"line_end":352,"column_start":1,"column_end":42}},{"value":"/ trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236682,"byte_end":236692,"line_start":353,"line_end":353,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237293,"byte_end":237304,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"ByteRecords","qualname":"::io::ByteRecords","value":"ByteRecords {  }","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"decl_id":null,"docs":" An iterator over records from an instance of\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","sig":null,"attributes":[{"value":"/ An iterator over records from an instance of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236751,"byte_end":236799,"line_start":359,"line_end":359,"column_start":1,"column_end":49}},{"value":"/ [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236800,"byte_end":236878,"line_start":360,"line_end":360,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236879,"byte_end":236882,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ A byte record is any sequence of bytes terminated by a particular byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236883,"byte_end":236957,"line_start":362,"line_end":362,"column_start":1,"column_end":75}},{"value":"/ chosen by the caller. For example, NUL separated byte strings are said to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236958,"byte_end":237035,"line_start":363,"line_end":363,"column_start":1,"column_end":78}},{"value":"/ be NUL-terminated byte records.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237036,"byte_end":237071,"line_start":364,"line_end":364,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237072,"byte_end":237075,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ This iterator is generally created by calling the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237076,"byte_end":237129,"line_start":366,"line_end":366,"column_start":1,"column_end":54}},{"value":"/ [`byte_records`](trait.BufReadExt.html#method.byte_records)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237130,"byte_end":237193,"line_start":367,"line_end":367,"column_start":1,"column_end":64}},{"value":"/ method on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237194,"byte_end":237211,"line_start":368,"line_end":368,"column_start":1,"column_end":18}},{"value":"/ [`BufReadExt`](trait.BufReadExt.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237212,"byte_end":237253,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/ trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237254,"byte_end":237264,"line_start":370,"line_end":370,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244988,"byte_end":244993,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"Chars","qualname":"::utf8::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":1380}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string.","sig":null,"attributes":[{"value":"/ An iterator over Unicode scalar values in a byte string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244496,"byte_end":244556,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244557,"byte_end":244560,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ When invalid UTF-8 byte sequences are found, they are substituted with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244561,"byte_end":244639,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ Unicode replacement codepoint (`U+FFFD`) using the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244640,"byte_end":244694,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/ [\"maximal subpart\" strategy](http://www.unicode.org/review/pr-121.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244695,"byte_end":244771,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244772,"byte_end":244775,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This iterator is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244776,"byte_end":244811,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/ [`chars`](trait.ByteSlice.html#method.chars) method provided by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244812,"byte_end":244883,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/ [`ByteSlice`](trait.ByteSlice.html) extension trait for `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":244884,"byte_end":244952,"line_start":82,"line_end":82,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245710,"byte_end":245718,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Chars>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"/ View the underlying data as a subslice of the original data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245125,"byte_end":245189,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245194,"byte_end":245197,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The slice returned has the same lifetime as the original slice, and so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245202,"byte_end":245276,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ the iterator can continue to be used while this exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245281,"byte_end":245340,"line_start":96,"line_end":96,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245345,"byte_end":245348,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245353,"byte_end":245367,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245372,"byte_end":245375,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245380,"byte_end":245387,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245392,"byte_end":245416,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245421,"byte_end":245424,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut chars = b\"abc\".chars();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245429,"byte_end":245464,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245469,"byte_end":245472,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"abc\", chars.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245477,"byte_end":245518,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/ chars.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245523,"byte_end":245540,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(b\"bc\", chars.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245545,"byte_end":245585,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/ chars.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245590,"byte_end":245607,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ chars.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245612,"byte_end":245629,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(b\"\", chars.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245634,"byte_end":245672,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245677,"byte_end":245684,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245689,"byte_end":245698,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247411,"byte_end":247422,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::utf8::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string and their\n byte index positions.","sig":null,"attributes":[{"value":"/ An iterator over Unicode scalar values in a byte string and their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246339,"byte_end":246408,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ byte index positions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246409,"byte_end":246434,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246435,"byte_end":246438,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When invalid UTF-8 byte sequences are found, they are substituted with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246439,"byte_end":246517,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ Unicode replacement codepoint (`U+FFFD`) using the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246518,"byte_end":246572,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/ [\"maximal subpart\" strategy](http://www.unicode.org/review/pr-121.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246573,"byte_end":246649,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246650,"byte_end":246653,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Note that this is slightly different from the `CharIndices` iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246654,"byte_end":246726,"line_start":151,"line_end":151,"column_start":1,"column_end":73}},{"value":"/ provided by the standard library. Aside from working on possibly invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246727,"byte_end":246803,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ UTF-8, this iterator provides both the corresponding starting and ending","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246804,"byte_end":246880,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ byte indices of each codepoint yielded. The ending position is necessary to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246881,"byte_end":246960,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/ slice the original byte string when invalid UTF-8 bytes are converted into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246961,"byte_end":247039,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ a Unicode replacement codepoint, since a single replacement codepoint can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247040,"byte_end":247117,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ substitute anywhere from 1 to 3 invalid bytes (inclusive).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247118,"byte_end":247180,"line_start":157,"line_end":157,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247181,"byte_end":247184,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This iterator is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247185,"byte_end":247220,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"/ [`char_indices`](trait.ByteSlice.html#method.char_indices) method provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247221,"byte_end":247299,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ by the [`ByteSlice`](trait.ByteSlice.html) extension trait for `&[u8]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247300,"byte_end":247375,"line_start":161,"line_end":161,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248242,"byte_end":248250,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CharIndices>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"/ View the underlying data as a subslice of the original data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247671,"byte_end":247735,"line_start":174,"line_end":174,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247740,"byte_end":247743,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The slice returned has the same lifetime as the original slice, and so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247748,"byte_end":247822,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ the iterator can continue to be used while this exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247827,"byte_end":247886,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247891,"byte_end":247894,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247899,"byte_end":247913,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247918,"byte_end":247921,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247926,"byte_end":247933,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247938,"byte_end":247962,"line_start":182,"line_end":182,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247967,"byte_end":247970,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let mut it = b\"abc\".char_indices();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247975,"byte_end":248014,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248019,"byte_end":248022,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b\"abc\", it.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248027,"byte_end":248065,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ it.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248070,"byte_end":248084,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(b\"bc\", it.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248089,"byte_end":248126,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ it.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248131,"byte_end":248145,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/ it.next();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248150,"byte_end":248164,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(b\"\", it.as_bytes());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248169,"byte_end":248204,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248209,"byte_end":248216,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248221,"byte_end":248230,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249341,"byte_end":249351,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"Utf8Chunks","qualname":"::utf8::Utf8Chunks","value":"Utf8Chunks {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" An iterator over chunks of valid UTF-8 in a byte slice.","sig":null,"attributes":[{"value":"/ An iterator over chunks of valid UTF-8 in a byte slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249176,"byte_end":249235,"line_start":230,"line_end":230,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249236,"byte_end":249239,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ See [`utf8_chunks`](trait.ByteSlice.html#method.utf8_chunks).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249240,"byte_end":249305,"line_start":232,"line_end":232,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249830,"byte_end":249839,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"Utf8Chunk","qualname":"::utf8::Utf8Chunk","value":"Utf8Chunk {  }","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" A chunk of valid UTF-8, possibly followed by invalid UTF-8 bytes.","sig":null,"attributes":[{"value":"/ A chunk of valid UTF-8, possibly followed by invalid UTF-8 bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249393,"byte_end":249462,"line_start":238,"line_end":238,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249463,"byte_end":249466,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ This is yielded by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249467,"byte_end":249493,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ [`Utf8Chunks`](struct.Utf8Chunks.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249494,"byte_end":249536,"line_start":241,"line_end":241,"column_start":1,"column_end":43}},{"value":"/ iterator, which can be created via the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249537,"byte_end":249579,"line_start":242,"line_end":242,"column_start":1,"column_end":43}},{"value":"/ [`ByteSlice::utf8_chunks`](trait.ByteSlice.html#method.utf8_chunks)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249580,"byte_end":249651,"line_start":243,"line_end":243,"column_start":1,"column_end":72}},{"value":"/ method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249652,"byte_end":249663,"line_start":244,"line_end":244,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249664,"byte_end":249667,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The `'a` lifetime parameter corresponds to the lifetime of the bytes that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249668,"byte_end":249745,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ are being iterated over.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249746,"byte_end":249774,"line_start":247,"line_end":247,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250641,"byte_end":250646,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"valid","qualname":"<Utf8Chunk>::valid","value":"pub fn valid(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the (possibly empty) valid UTF-8 bytes in this chunk.","sig":null,"attributes":[{"value":"/ Returns the (possibly empty) valid UTF-8 bytes in this chunk.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250449,"byte_end":250514,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250519,"byte_end":250522,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This may be empty if there are consecutive sequences of invalid UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250527,"byte_end":250600,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250605,"byte_end":250615,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250620,"byte_end":250629,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251399,"byte_end":251406,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Utf8Chunk>::invalid","value":"pub fn invalid(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the (possibly empty) invalid UTF-8 bytes in this chunk that\n immediately follow the valid UTF-8 bytes in this chunk.","sig":null,"attributes":[{"value":"/ Returns the (possibly empty) invalid UTF-8 bytes in this chunk that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250697,"byte_end":250768,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/ immediately follow the valid UTF-8 bytes in this chunk.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250773,"byte_end":250832,"line_start":279,"line_end":279,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250837,"byte_end":250840,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This is only empty when this chunk corresponds to the last chunk in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250845,"byte_end":250916,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ the original bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250921,"byte_end":250944,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250949,"byte_end":250952,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The maximum length of this slice is 3. That is, invalid UTF-8 byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250957,"byte_end":251027,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ sequences greater than 1 always correspond to a valid _prefix_ of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251032,"byte_end":251101,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ a valid UTF-8 encoded codepoint. This corresponds to the \"substitution","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251106,"byte_end":251180,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ of maximal subparts\" strategy that is described in more detail in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251185,"byte_end":251258,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ docs for the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251263,"byte_end":251279,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/ [`ByteSlice::to_str_lossy`](trait.ByteSlice.html#method.to_str_lossy)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251284,"byte_end":251357,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251362,"byte_end":251373,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251378,"byte_end":251387,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251785,"byte_end":251795,"line_start":304,"line_end":304,"column_start":12,"column_end":22},"name":"incomplete","qualname":"<Utf8Chunk>::incomplete","value":"pub fn incomplete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the invalid sequence might still become valid if more\n bytes are added.","sig":null,"attributes":[{"value":"/ Returns whether the invalid sequence might still become valid if more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251471,"byte_end":251544,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ bytes are added.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251549,"byte_end":251569,"line_start":297,"line_end":297,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251574,"byte_end":251577,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns true if the end of the input was reached unexpectedly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251582,"byte_end":251648,"line_start":299,"line_end":299,"column_start":5,"column_end":71}},{"value":"/ without encountering an unexpected byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251653,"byte_end":251697,"line_start":300,"line_end":300,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251702,"byte_end":251705,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This can only be the case for the last chunk.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251710,"byte_end":251759,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251764,"byte_end":251773,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255300,"byte_end":255309,"line_start":410,"line_end":410,"column_start":12,"column_end":21},"name":"Utf8Error","qualname":"::utf8::Utf8Error","value":"Utf8Error {  }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"decl_id":null,"docs":" An error that occurs when UTF-8 decoding fails.","sig":null,"attributes":[{"value":"/ An error that occurs when UTF-8 decoding fails.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253542,"byte_end":253593,"line_start":361,"line_end":361,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253594,"byte_end":253597,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ This error occurs when attempting to convert a non-UTF-8 byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253598,"byte_end":253663,"line_start":363,"line_end":363,"column_start":1,"column_end":66}},{"value":"/ string to a Rust string that must be valid UTF-8. For example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253664,"byte_end":253730,"line_start":364,"line_end":364,"column_start":1,"column_end":67}},{"value":"/ [`to_str`](trait.ByteSlice.html#method.to_str) is one such method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253731,"byte_end":253801,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253802,"byte_end":253805,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253806,"byte_end":253819,"line_start":367,"line_end":367,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253820,"byte_end":253823,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ This example shows what happens when a given byte sequence is invalid,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253824,"byte_end":253898,"line_start":369,"line_end":369,"column_start":1,"column_end":75}},{"value":"/ but ends with a sequence that is a possible prefix of valid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253899,"byte_end":253969,"line_start":370,"line_end":370,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253970,"byte_end":253973,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253974,"byte_end":253981,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/ use bstr::{B, ByteSlice};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253982,"byte_end":254011,"line_start":373,"line_end":373,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254012,"byte_end":254015,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ let s = B(b\"foobar\\xF1\\x80\\x80\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254016,"byte_end":254053,"line_start":375,"line_end":375,"column_start":1,"column_end":38}},{"value":"/ let err = s.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254054,"byte_end":254092,"line_start":376,"line_end":376,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(err.valid_up_to(), 6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254093,"byte_end":254130,"line_start":377,"line_end":377,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(err.error_len(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254131,"byte_end":254169,"line_start":378,"line_end":378,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254170,"byte_end":254177,"line_start":379,"line_end":379,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254178,"byte_end":254181,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ This example shows what happens when a given byte sequence contains","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254182,"byte_end":254253,"line_start":381,"line_end":381,"column_start":1,"column_end":72}},{"value":"/ invalid UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254254,"byte_end":254272,"line_start":382,"line_end":382,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254273,"byte_end":254276,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254277,"byte_end":254284,"line_start":384,"line_end":384,"column_start":1,"column_end":8}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254285,"byte_end":254309,"line_start":385,"line_end":385,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254310,"byte_end":254313,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ let s = b\"foobar\\xF1\\x80\\x80quux\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254314,"byte_end":254352,"line_start":387,"line_end":387,"column_start":1,"column_end":39}},{"value":"/ let err = s.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254353,"byte_end":254391,"line_start":388,"line_end":388,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(err.valid_up_to(), 6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254392,"byte_end":254429,"line_start":389,"line_end":389,"column_start":1,"column_end":38}},{"value":"/ // The error length reports the maximum number of bytes that correspond to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254430,"byte_end":254508,"line_start":390,"line_end":390,"column_start":1,"column_end":79}},{"value":"/ // a valid prefix of a UTF-8 encoded codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254509,"byte_end":254560,"line_start":391,"line_end":391,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(err.error_len(), Some(3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254561,"byte_end":254602,"line_start":392,"line_end":392,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254603,"byte_end":254606,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ // In contrast to the above which contains a single invalid prefix,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254607,"byte_end":254678,"line_start":394,"line_end":394,"column_start":1,"column_end":72}},{"value":"/ // consider the case of multiple individal bytes that are never valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254679,"byte_end":254752,"line_start":395,"line_end":395,"column_start":1,"column_end":74}},{"value":"/ // prefixes. Note how the value of error_len changes!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254753,"byte_end":254810,"line_start":396,"line_end":396,"column_start":1,"column_end":58}},{"value":"/ let s = b\"foobar\\xFF\\xFFquux\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254811,"byte_end":254845,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/ let err = s.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254846,"byte_end":254884,"line_start":398,"line_end":398,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(err.valid_up_to(), 6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254885,"byte_end":254922,"line_start":399,"line_end":399,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(err.error_len(), Some(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254923,"byte_end":254964,"line_start":400,"line_end":400,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254965,"byte_end":254968,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ // The fact that it's an invalid prefix does not change error_len even","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":254969,"byte_end":255043,"line_start":402,"line_end":402,"column_start":1,"column_end":75}},{"value":"/ // when it immediately precedes the end of the string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255044,"byte_end":255102,"line_start":403,"line_end":403,"column_start":1,"column_end":59}},{"value":"/ let s = b\"foobar\\xFF\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255103,"byte_end":255129,"line_start":404,"line_end":404,"column_start":1,"column_end":27}},{"value":"/ let err = s.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255130,"byte_end":255168,"line_start":405,"line_end":405,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(err.valid_up_to(), 6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255169,"byte_end":255206,"line_start":406,"line_end":406,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(err.error_len(), Some(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255207,"byte_end":255248,"line_start":407,"line_end":407,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255249,"byte_end":255256,"line_start":408,"line_end":408,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255999,"byte_end":256010,"line_start":435,"line_end":435,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<Utf8Error>::valid_up_to","value":"pub fn valid_up_to(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte index of the position immediately following the last\n valid UTF-8 byte.","sig":null,"attributes":[{"value":"/ Returns the byte index of the position immediately following the last","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255390,"byte_end":255463,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ valid UTF-8 byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255468,"byte_end":255489,"line_start":417,"line_end":417,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255494,"byte_end":255497,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255502,"byte_end":255515,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255520,"byte_end":255523,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This examples shows how `valid_up_to` can be used to retrieve a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255528,"byte_end":255595,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ possibly empty prefix that is guaranteed to be valid UTF-8:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255600,"byte_end":255663,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255668,"byte_end":255671,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255676,"byte_end":255683,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use bstr::ByteSlice;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255688,"byte_end":255712,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255717,"byte_end":255720,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let s = b\"foobar\\xF1\\x80\\x80quux\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255725,"byte_end":255763,"line_start":427,"line_end":427,"column_start":5,"column_end":43}},{"value":"/ let err = s.to_str().unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255768,"byte_end":255806,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255811,"byte_end":255814,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ // This is guaranteed to never panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255819,"byte_end":255860,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/ let string = s[..err.valid_up_to()].to_str().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255865,"byte_end":255923,"line_start":431,"line_end":431,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(string, \"foobar\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255928,"byte_end":255961,"line_start":432,"line_end":432,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255966,"byte_end":255973,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255978,"byte_end":255987,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256616,"byte_end":256625,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"error_len","qualname":"<Utf8Error>::error_len","value":"pub fn error_len(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of invalid UTF-8 bytes immediately following\n the position returned by `valid_up_to`. This value is always at least\n `1`, but can be up to `3` if bytes form a valid prefix of some UTF-8\n encoded codepoint.","sig":null,"attributes":[{"value":"/ Returns the total number of invalid UTF-8 bytes immediately following","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256065,"byte_end":256138,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ the position returned by `valid_up_to`. This value is always at least","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256143,"byte_end":256216,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ `1`, but can be up to `3` if bytes form a valid prefix of some UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256221,"byte_end":256293,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ encoded codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256298,"byte_end":256320,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256325,"byte_end":256328,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If the end of the original input was found before a valid UTF-8 encoded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256333,"byte_end":256408,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ codepoint could be completed, then this returns `None`. This is useful","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256413,"byte_end":256487,"line_start":445,"line_end":445,"column_start":5,"column_end":79}},{"value":"/ when processing streams, where a `None` value signals that more input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256492,"byte_end":256565,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ might be needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256570,"byte_end":256590,"line_start":447,"line_end":447,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256595,"byte_end":256604,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":952},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262579,"byte_end":262585,"line_start":613,"line_end":613,"column_start":8,"column_end":14},"name":"decode","qualname":"::utf8::decode","value":"pub fn decode<B: AsRef<[u8]>>(B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the beginning of a slice.","sig":null,"attributes":[{"value":"/ UTF-8 decode a single Unicode scalar value from the beginning of a slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261040,"byte_end":261117,"line_start":567,"line_end":567,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261118,"byte_end":261121,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ When successful, the corresponding Unicode scalar value is returned along","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261122,"byte_end":261199,"line_start":569,"line_end":569,"column_start":1,"column_end":78}},{"value":"/ with the number of bytes it was encoded with. The number of bytes consumed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261200,"byte_end":261278,"line_start":570,"line_end":570,"column_start":1,"column_end":79}},{"value":"/ for a successful decode is always between 1 and 4, inclusive.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261279,"byte_end":261344,"line_start":571,"line_end":571,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261345,"byte_end":261348,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ When unsuccessful, `None` is returned along with the number of bytes that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261349,"byte_end":261426,"line_start":573,"line_end":573,"column_start":1,"column_end":78}},{"value":"/ make up a maximal prefix of a valid UTF-8 code unit sequence. In this case,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261427,"byte_end":261506,"line_start":574,"line_end":574,"column_start":1,"column_end":80}},{"value":"/ the number of bytes consumed is always between 0 and 3, inclusive, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261507,"byte_end":261583,"line_start":575,"line_end":575,"column_start":1,"column_end":77}},{"value":"/ 0 is only returned when `slice` is empty.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261584,"byte_end":261629,"line_start":576,"line_end":576,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261630,"byte_end":261633,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261634,"byte_end":261648,"line_start":578,"line_end":578,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261649,"byte_end":261652,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261653,"byte_end":261669,"line_start":580,"line_end":580,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261670,"byte_end":261673,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261674,"byte_end":261681,"line_start":582,"line_end":582,"column_start":1,"column_end":8}},{"value":"/ use bstr::decode_utf8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261682,"byte_end":261708,"line_start":583,"line_end":583,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261709,"byte_end":261712,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ // Decoding a valid codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261713,"byte_end":261747,"line_start":585,"line_end":585,"column_start":1,"column_end":35}},{"value":"/ let (ch, size) = decode_utf8(b\"\\xE2\\x98\\x83\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261748,"byte_end":261798,"line_start":586,"line_end":586,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(Some('☃'), ch);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261799,"byte_end":261831,"line_start":587,"line_end":587,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(3, size);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261832,"byte_end":261856,"line_start":588,"line_end":588,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261857,"byte_end":261860,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ // Decoding an incomplete codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261861,"byte_end":261901,"line_start":590,"line_end":590,"column_start":1,"column_end":41}},{"value":"/ let (ch, size) = decode_utf8(b\"\\xE2\\x98\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261902,"byte_end":261948,"line_start":591,"line_end":591,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(None, ch);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261949,"byte_end":261974,"line_start":592,"line_end":592,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(2, size);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":261975,"byte_end":261999,"line_start":593,"line_end":593,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262000,"byte_end":262007,"line_start":594,"line_end":594,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262008,"byte_end":262011,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ This example shows how to iterate over all codepoints in UTF-8 encoded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262012,"byte_end":262086,"line_start":596,"line_end":596,"column_start":1,"column_end":75}},{"value":"/ bytes, while replacing invalid UTF-8 sequences with the replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262087,"byte_end":262158,"line_start":597,"line_end":597,"column_start":1,"column_end":72}},{"value":"/ codepoint:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262159,"byte_end":262173,"line_start":598,"line_end":598,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262174,"byte_end":262177,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262178,"byte_end":262185,"line_start":600,"line_end":600,"column_start":1,"column_end":8}},{"value":"/ use bstr::{B, decode_utf8};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262186,"byte_end":262217,"line_start":601,"line_end":601,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262218,"byte_end":262221,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let mut bytes = B(b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262222,"byte_end":262293,"line_start":603,"line_end":603,"column_start":1,"column_end":72}},{"value":"/ let mut chars = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262294,"byte_end":262321,"line_start":604,"line_end":604,"column_start":1,"column_end":28}},{"value":"/ while !bytes.is_empty() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262322,"byte_end":262351,"line_start":605,"line_end":605,"column_start":1,"column_end":30}},{"value":"/     let (ch, size) = decode_utf8(bytes);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262352,"byte_end":262396,"line_start":606,"line_end":606,"column_start":1,"column_end":45}},{"value":"/     bytes = &bytes[size..];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262397,"byte_end":262428,"line_start":607,"line_end":607,"column_start":1,"column_end":32}},{"value":"/     chars.push(ch.unwrap_or('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262429,"byte_end":262474,"line_start":608,"line_end":608,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262475,"byte_end":262480,"line_start":609,"line_end":609,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(vec!['☃', '\\u{FFFD}', '𝞃', '\\u{FFFD}', 'a'], chars);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262481,"byte_end":262553,"line_start":610,"line_end":610,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262554,"byte_end":262561,"line_start":611,"line_end":611,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":262562,"byte_end":262571,"line_start":612,"line_end":612,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266812,"byte_end":266823,"line_start":740,"line_end":740,"column_start":8,"column_end":19},"name":"decode_last","qualname":"::utf8::decode_last","value":"pub fn decode_last<B: AsRef<[u8]>>(B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the end of a slice.","sig":null,"attributes":[{"value":"/ UTF-8 decode a single Unicode scalar value from the end of a slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265231,"byte_end":265302,"line_start":694,"line_end":694,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265303,"byte_end":265306,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ When successful, the corresponding Unicode scalar value is returned along","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265307,"byte_end":265384,"line_start":696,"line_end":696,"column_start":1,"column_end":78}},{"value":"/ with the number of bytes it was encoded with. The number of bytes consumed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265385,"byte_end":265463,"line_start":697,"line_end":697,"column_start":1,"column_end":79}},{"value":"/ for a successful decode is always between 1 and 4, inclusive.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265464,"byte_end":265529,"line_start":698,"line_end":698,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265530,"byte_end":265533,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ When unsuccessful, `None` is returned along with the number of bytes that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265534,"byte_end":265611,"line_start":700,"line_end":700,"column_start":1,"column_end":78}},{"value":"/ make up a maximal prefix of a valid UTF-8 code unit sequence. In this case,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265612,"byte_end":265691,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/ the number of bytes consumed is always between 0 and 3, inclusive, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265692,"byte_end":265768,"line_start":702,"line_end":702,"column_start":1,"column_end":77}},{"value":"/ 0 is only returned when `slice` is empty.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265769,"byte_end":265814,"line_start":703,"line_end":703,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265815,"byte_end":265818,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265819,"byte_end":265833,"line_start":705,"line_end":705,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265834,"byte_end":265837,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265838,"byte_end":265854,"line_start":707,"line_end":707,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265855,"byte_end":265858,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265859,"byte_end":265866,"line_start":709,"line_end":709,"column_start":1,"column_end":8}},{"value":"/ use bstr::decode_last_utf8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265867,"byte_end":265898,"line_start":710,"line_end":710,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265899,"byte_end":265902,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ // Decoding a valid codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265903,"byte_end":265937,"line_start":712,"line_end":712,"column_start":1,"column_end":35}},{"value":"/ let (ch, size) = decode_last_utf8(b\"\\xE2\\x98\\x83\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265938,"byte_end":265993,"line_start":713,"line_end":713,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Some('☃'), ch);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":265994,"byte_end":266026,"line_start":714,"line_end":714,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(3, size);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266027,"byte_end":266051,"line_start":715,"line_end":715,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266052,"byte_end":266055,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ // Decoding an incomplete codepoint.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266056,"byte_end":266096,"line_start":717,"line_end":717,"column_start":1,"column_end":41}},{"value":"/ let (ch, size) = decode_last_utf8(b\"\\xE2\\x98\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266097,"byte_end":266148,"line_start":718,"line_end":718,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(None, ch);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266149,"byte_end":266174,"line_start":719,"line_end":719,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(2, size);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266175,"byte_end":266199,"line_start":720,"line_end":720,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266200,"byte_end":266207,"line_start":721,"line_end":721,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266208,"byte_end":266211,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ This example shows how to iterate over all codepoints in UTF-8 encoded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266212,"byte_end":266286,"line_start":723,"line_end":723,"column_start":1,"column_end":75}},{"value":"/ bytes in reverse, while replacing invalid UTF-8 sequences with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266287,"byte_end":266357,"line_start":724,"line_end":724,"column_start":1,"column_end":71}},{"value":"/ replacement codepoint:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266358,"byte_end":266384,"line_start":725,"line_end":725,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266385,"byte_end":266388,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266389,"byte_end":266396,"line_start":727,"line_end":727,"column_start":1,"column_end":8}},{"value":"/ use bstr::{B, decode_last_utf8};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266397,"byte_end":266433,"line_start":728,"line_end":728,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266434,"byte_end":266437,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ let mut bytes = B(b\"\\xE2\\x98\\x83\\xFF\\xF0\\x9D\\x9E\\x83\\xE2\\x98\\x61\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266438,"byte_end":266509,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ let mut chars = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266510,"byte_end":266537,"line_start":731,"line_end":731,"column_start":1,"column_end":28}},{"value":"/ while !bytes.is_empty() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266538,"byte_end":266567,"line_start":732,"line_end":732,"column_start":1,"column_end":30}},{"value":"/     let (ch, size) = decode_last_utf8(bytes);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266568,"byte_end":266617,"line_start":733,"line_end":733,"column_start":1,"column_end":50}},{"value":"/     bytes = &bytes[..bytes.len()-size];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266618,"byte_end":266661,"line_start":734,"line_end":734,"column_start":1,"column_end":44}},{"value":"/     chars.push(ch.unwrap_or('\\u{FFFD}'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266662,"byte_end":266707,"line_start":735,"line_end":735,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266708,"byte_end":266713,"line_start":736,"line_end":736,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(vec!['a', '\\u{FFFD}', '𝞃', '\\u{FFFD}', '☃'], chars);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266714,"byte_end":266786,"line_start":737,"line_end":737,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266787,"byte_end":266794,"line_start":738,"line_end":738,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":266795,"byte_end":266804,"line_start":739,"line_end":739,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33270,"byte_end":33274,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35691,"byte_end":35698,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146876,"byte_end":146882,"line_start":2990,"line_end":2990,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150037,"byte_end":150050,"line_start":3073,"line_end":3073,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152656,"byte_end":152660,"line_start":3150,"line_end":3150,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152836,"byte_end":152840,"line_start":3156,"line_end":3156,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153354,"byte_end":153365,"line_start":3178,"line_end":3178,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153726,"byte_end":153737,"line_start":3196,"line_end":3196,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154058,"byte_end":154063,"line_start":3213,"line_end":3213,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154392,"byte_end":154397,"line_start":3223,"line_end":3223,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154656,"byte_end":154661,"line_start":3237,"line_end":3237,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154806,"byte_end":154811,"line_start":3244,"line_end":3244,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154925,"byte_end":154930,"line_start":3251,"line_end":3251,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155301,"byte_end":155307,"line_start":3264,"line_end":3264,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155455,"byte_end":155461,"line_start":3270,"line_end":3270,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":156157,"byte_end":156167,"line_start":3295,"line_end":3295,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":156350,"byte_end":156360,"line_start":3301,"line_end":3301,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157668,"byte_end":157673,"line_start":3345,"line_end":3345,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157875,"byte_end":157880,"line_start":3352,"line_end":3352,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":159499,"byte_end":159511,"line_start":3401,"line_end":3401,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":159741,"byte_end":159753,"line_start":3408,"line_end":3408,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160963,"byte_end":160969,"line_start":3452,"line_end":3452,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161211,"byte_end":161217,"line_start":3463,"line_end":3463,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161943,"byte_end":161956,"line_start":3491,"line_end":3491,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162213,"byte_end":162226,"line_start":3502,"line_end":3502,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162897,"byte_end":162902,"line_start":3528,"line_end":3528,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163037,"byte_end":163042,"line_start":3534,"line_end":3534,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":164077,"byte_end":164096,"line_start":3567,"line_end":3567,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":164229,"byte_end":164248,"line_start":3573,"line_end":3573,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168092,"byte_end":168095,"line_start":83,"line_end":83,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168466,"byte_end":168469,"line_start":103,"line_end":103,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193175,"byte_end":193185,"line_start":912,"line_end":912,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193216,"byte_end":193226,"line_start":914,"line_end":914,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193372,"byte_end":193382,"line_start":923,"line_end":923,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193515,"byte_end":193525,"line_start":930,"line_end":930,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194416,"byte_end":194429,"line_start":966,"line_end":966,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196168,"byte_end":196181,"line_start":1032,"line_end":1032,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196296,"byte_end":196309,"line_start":1039,"line_end":1039,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":199950,"byte_end":199957,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200135,"byte_end":200142,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200318,"byte_end":200325,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200484,"byte_end":200491,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200632,"byte_end":200639,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200762,"byte_end":200769,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200895,"byte_end":200902,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201037,"byte_end":201044,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201183,"byte_end":201190,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201312,"byte_end":201316,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201478,"byte_end":201485,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201605,"byte_end":201612,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201757,"byte_end":201764,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201903,"byte_end":201906,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202040,"byte_end":202047,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202201,"byte_end":202208,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202360,"byte_end":202367,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202522,"byte_end":202525,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202678,"byte_end":202685,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202890,"byte_end":202897,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203110,"byte_end":203117,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203411,"byte_end":203418,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203713,"byte_end":203720,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204010,"byte_end":204017,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204287,"byte_end":204294,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204322,"byte_end":204329,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204787,"byte_end":204794,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204981,"byte_end":204988,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":205671,"byte_end":205675,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":207876,"byte_end":207880,"line_start":376,"line_end":376,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209142,"byte_end":209146,"line_start":411,"line_end":411,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209299,"byte_end":209303,"line_start":420,"line_end":420,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209447,"byte_end":209451,"line_start":427,"line_end":427,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209635,"byte_end":209639,"line_start":436,"line_end":436,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209820,"byte_end":209824,"line_start":445,"line_end":445,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210056,"byte_end":210060,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210303,"byte_end":210307,"line_start":463,"line_end":463,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210531,"byte_end":210535,"line_start":472,"line_end":472,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210764,"byte_end":210768,"line_start":481,"line_end":481,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210987,"byte_end":210991,"line_start":490,"line_end":490,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211162,"byte_end":211166,"line_start":497,"line_end":497,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211333,"byte_end":211337,"line_start":504,"line_end":504,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211565,"byte_end":211569,"line_start":511,"line_end":511,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211808,"byte_end":211812,"line_start":518,"line_end":518,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212032,"byte_end":212036,"line_start":525,"line_end":525,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212261,"byte_end":212265,"line_start":532,"line_end":532,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212468,"byte_end":212472,"line_start":539,"line_end":539,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212860,"byte_end":212864,"line_start":560,"line_end":560,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":213752,"byte_end":213755,"line_start":601,"line_end":601,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":213937,"byte_end":213940,"line_start":609,"line_end":609,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214124,"byte_end":214127,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214270,"byte_end":214274,"line_start":624,"line_end":624,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214308,"byte_end":214312,"line_start":626,"line_end":626,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":215113,"byte_end":215117,"line_start":653,"line_end":653,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":215309,"byte_end":215313,"line_start":660,"line_end":660,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236372,"byte_end":236373,"line_start":344,"line_end":344,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237379,"byte_end":237388,"line_start":377,"line_end":377,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237799,"byte_end":237810,"line_start":393,"line_end":393,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245030,"byte_end":245035,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245787,"byte_end":245792,"line_start":118,"line_end":118,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246078,"byte_end":246083,"line_start":132,"line_end":132,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247511,"byte_end":247522,"line_start":169,"line_end":169,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248319,"byte_end":248330,"line_start":199,"line_end":199,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248747,"byte_end":248758,"line_start":215,"line_end":215,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249156,"byte_end":249167,"line_start":228,"line_end":228,"column_start":42,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250429,"byte_end":250438,"line_start":268,"line_end":268,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251868,"byte_end":251878,"line_start":309,"line_end":309,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253523,"byte_end":253533,"line_start":359,"line_end":359,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255374,"byte_end":255383,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256730,"byte_end":256739,"line_start":455,"line_end":455,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256833,"byte_end":256842,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/lib.rs","byte_start":19068,"byte_end":19070,"line_start":401,"line_end":401,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":831}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstr.rs","byte_start":33270,"byte_end":33274,"line_start":35,"line_end":35,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/bstring.rs","byte_start":35691,"byte_end":35698,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":51813,"byte_end":51819,"line_start":92,"line_end":92,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":146876,"byte_end":146882,"line_start":2990,"line_end":2990,"column_start":10,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":150037,"byte_end":150050,"line_start":3073,"line_end":3073,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152656,"byte_end":152660,"line_start":3150,"line_end":3150,"column_start":10,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":152836,"byte_end":152840,"line_start":3156,"line_end":3156,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153354,"byte_end":153365,"line_start":3178,"line_end":3178,"column_start":10,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":153726,"byte_end":153737,"line_start":3196,"line_end":3196,"column_start":23,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1002},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154058,"byte_end":154063,"line_start":3213,"line_end":3213,"column_start":10,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154392,"byte_end":154397,"line_start":3223,"line_end":3223,"column_start":23,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154656,"byte_end":154661,"line_start":3237,"line_end":3237,"column_start":34,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154806,"byte_end":154811,"line_start":3244,"line_end":3244,"column_start":32,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":154925,"byte_end":154930,"line_start":3251,"line_end":3251,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155301,"byte_end":155307,"line_start":3264,"line_end":3264,"column_start":10,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":155455,"byte_end":155461,"line_start":3270,"line_end":3270,"column_start":23,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":156157,"byte_end":156167,"line_start":3295,"line_end":3295,"column_start":34,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":156350,"byte_end":156360,"line_start":3301,"line_end":3301,"column_start":47,"column_end":57},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157668,"byte_end":157673,"line_start":3345,"line_end":3345,"column_start":10,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":157875,"byte_end":157880,"line_start":3352,"line_end":3352,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1035},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":159499,"byte_end":159511,"line_start":3401,"line_end":3401,"column_start":10,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":159741,"byte_end":159753,"line_start":3408,"line_end":3408,"column_start":23,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":160963,"byte_end":160969,"line_start":3452,"line_end":3452,"column_start":10,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161211,"byte_end":161217,"line_start":3463,"line_end":3463,"column_start":23,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1051},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":161943,"byte_end":161956,"line_start":3491,"line_end":3491,"column_start":10,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162213,"byte_end":162226,"line_start":3502,"line_end":3502,"column_start":23,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1059},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":162897,"byte_end":162902,"line_start":3528,"line_end":3528,"column_start":10,"column_end":15},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":163037,"byte_end":163042,"line_start":3534,"line_end":3534,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":164077,"byte_end":164096,"line_start":3567,"line_end":3567,"column_start":10,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_slice.rs","byte_start":164229,"byte_end":164248,"line_start":3573,"line_end":3573,"column_start":23,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168092,"byte_end":168095,"line_start":83,"line_end":83,"column_start":18,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168466,"byte_end":168469,"line_start":103,"line_end":103,"column_start":17,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":549}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":168875,"byte_end":168881,"line_start":117,"line_end":117,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":549},"to":{"krate":0,"index":551}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193175,"byte_end":193185,"line_start":912,"line_end":912,"column_start":34,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193216,"byte_end":193226,"line_start":914,"line_end":914,"column_start":23,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193372,"byte_end":193382,"line_start":923,"line_end":923,"column_start":34,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":193515,"byte_end":193525,"line_start":930,"line_end":930,"column_start":32,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":194416,"byte_end":194429,"line_start":966,"line_end":966,"column_start":6,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196168,"byte_end":196181,"line_start":1032,"line_end":1032,"column_start":23,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1073},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/ext_vec.rs","byte_start":196296,"byte_end":196309,"line_start":1039,"line_end":1039,"column_start":23,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":199950,"byte_end":199957,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200135,"byte_end":200142,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200318,"byte_end":200325,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200484,"byte_end":200491,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200632,"byte_end":200639,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200762,"byte_end":200769,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":200895,"byte_end":200902,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2889}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201037,"byte_end":201044,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2889}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201183,"byte_end":201190,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201312,"byte_end":201316,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":962},"to":{"krate":5,"index":537}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201478,"byte_end":201485,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201605,"byte_end":201612,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201757,"byte_end":201764,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":201903,"byte_end":201906,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":5,"index":7014},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202040,"byte_end":202047,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202201,"byte_end":202208,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202360,"byte_end":202367,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202522,"byte_end":202525,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202678,"byte_end":202685,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":202890,"byte_end":202897,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203110,"byte_end":203117,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203411,"byte_end":203418,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":203713,"byte_end":203720,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204010,"byte_end":204017,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204287,"byte_end":204294,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204322,"byte_end":204329,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204787,"byte_end":204794,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":204981,"byte_end":204988,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":205671,"byte_end":205675,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":207876,"byte_end":207880,"line_start":376,"line_end":376,"column_start":25,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209142,"byte_end":209146,"line_start":411,"line_end":411,"column_start":25,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209299,"byte_end":209303,"line_start":420,"line_end":420,"column_start":28,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209447,"byte_end":209451,"line_start":427,"line_end":427,"column_start":32,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209635,"byte_end":209639,"line_start":436,"line_end":436,"column_start":41,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":209820,"byte_end":209824,"line_start":445,"line_end":445,"column_start":44,"column_end":48},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210056,"byte_end":210060,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210303,"byte_end":210307,"line_start":463,"line_end":463,"column_start":48,"column_end":52},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210531,"byte_end":210535,"line_start":472,"line_end":472,"column_start":46,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210764,"byte_end":210768,"line_start":481,"line_end":481,"column_start":55,"column_end":59},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":210987,"byte_end":210991,"line_start":490,"line_end":490,"column_start":35,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211162,"byte_end":211166,"line_start":497,"line_end":497,"column_start":44,"column_end":48},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211333,"byte_end":211337,"line_start":504,"line_end":504,"column_start":47,"column_end":51},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211565,"byte_end":211569,"line_start":511,"line_end":511,"column_start":56,"column_end":60},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":211808,"byte_end":211812,"line_start":518,"line_end":518,"column_start":51,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212032,"byte_end":212036,"line_start":525,"line_end":525,"column_start":49,"column_end":53},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212261,"byte_end":212265,"line_start":532,"line_end":532,"column_start":58,"column_end":62},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212468,"byte_end":212472,"line_start":539,"line_end":539,"column_start":26,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2886}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":212860,"byte_end":212864,"line_start":560,"line_end":560,"column_start":26,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2889}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":213752,"byte_end":213755,"line_start":601,"line_end":601,"column_start":33,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":213937,"byte_end":213940,"line_start":609,"line_end":609,"column_start":30,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214124,"byte_end":214127,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":196},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214270,"byte_end":214274,"line_start":624,"line_end":624,"column_start":17,"column_end":21},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":214308,"byte_end":214312,"line_start":626,"line_end":626,"column_start":30,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":215113,"byte_end":215117,"line_start":653,"line_end":653,"column_start":25,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/impls.rs","byte_start":215309,"byte_end":215313,"line_start":660,"line_end":660,"column_start":18,"column_end":22},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":962},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":225367,"byte_end":225374,"line_start":18,"line_end":18,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":4417},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":236372,"byte_end":236373,"line_start":344,"line_end":344,"column_start":37,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":841}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237379,"byte_end":237388,"line_start":377,"line_end":377,"column_start":35,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1365},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/io.rs","byte_start":237799,"byte_end":237810,"line_start":393,"line_end":393,"column_start":35,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245030,"byte_end":245035,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":245787,"byte_end":245792,"line_start":118,"line_end":118,"column_start":23,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":246078,"byte_end":246083,"line_start":132,"line_end":132,"column_start":34,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1378},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":247511,"byte_end":247522,"line_start":169,"line_end":169,"column_start":10,"column_end":21},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248319,"byte_end":248330,"line_start":199,"line_end":199,"column_start":23,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":248747,"byte_end":248758,"line_start":215,"line_end":215,"column_start":34,"column_end":45},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":249156,"byte_end":249167,"line_start":228,"line_end":228,"column_start":42,"column_end":53},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1387},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":250429,"byte_end":250438,"line_start":268,"line_end":268,"column_start":10,"column_end":19},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":251868,"byte_end":251878,"line_start":309,"line_end":309,"column_start":23,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":253523,"byte_end":253533,"line_start":359,"line_end":359,"column_start":42,"column_end":52},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":255374,"byte_end":255383,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256730,"byte_end":256739,"line_start":455,"line_end":455,"column_start":23,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1407},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/bstr-0.2.16/src/utf8.rs","byte_start":256833,"byte_end":256842,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":9302}}]}