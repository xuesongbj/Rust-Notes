{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","flate2","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"miniz_oxide\"","--cfg","feature=\"rust_backend\"","-C","metadata=d1e51491ba5106a3","-C","extra-filename=-d1e51491ba5106a3","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","cfg_if=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libcfg_if-2e17af57814e124a.rmeta","--extern","crc32fast=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libcrc32fast-9cf42567e5a40749.rmeta","--extern","libc=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/liblibc-54c15f58fad6709b.rmeta","--extern","miniz_oxide=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libminiz_oxide-b27d72e469a85054.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libflate2-d1e51491ba5106a3.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[11418914449254517539,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","num":18,"id":{"name":"crc32fast","disambiguator":[7566673018788896847,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","num":19,"id":{"name":"cfg_if","disambiguator":[6307414420431848641,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","num":20,"id":{"name":"miniz_oxide","disambiguator":[9656550068195833150,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","num":21,"id":{"name":"adler","disambiguator":[11338974106759928447,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":0,"byte_end":8536,"line_start":1,"line_end":234,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4596,"byte_end":4599,"line_start":110,"line_end":110,"column_start":22,"column_end":25},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4601,"byte_end":4610,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4612,"byte_end":4621,"line_start":110,"line_end":110,"column_start":38,"column_end":47},"alias_span":null,"name":"CrcWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4643,"byte_end":4652,"line_start":111,"line_end":111,"column_start":20,"column_end":29},"alias_span":null,"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4673,"byte_end":4681,"line_start":112,"line_end":112,"column_start":20,"column_end":28},"alias_span":null,"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4704,"byte_end":4712,"line_start":113,"line_end":113,"column_start":22,"column_end":30},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1360},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4714,"byte_end":4727,"line_start":113,"line_end":113,"column_start":32,"column_end":45},"alias_span":null,"name":"CompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4729,"byte_end":4739,"line_start":113,"line_end":113,"column_start":47,"column_end":57},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4741,"byte_end":4756,"line_start":113,"line_end":113,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4741,"byte_end":4756,"line_start":113,"line_end":113,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4758,"byte_end":4764,"line_start":113,"line_end":113,"column_start":76,"column_end":82},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4788,"byte_end":4801,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"alias_span":null,"name":"FlushCompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4803,"byte_end":4818,"line_start":114,"line_end":114,"column_start":37,"column_end":52},"alias_span":null,"name":"FlushDecompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5120,"byte_end":5134,"line_start":130,"line_end":130,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5170,"byte_end":5184,"line_start":131,"line_end":131,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5215,"byte_end":5224,"line_start":132,"line_end":132,"column_start":30,"column_end":39},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5255,"byte_end":5264,"line_start":133,"line_end":133,"column_start":30,"column_end":39},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5295,"byte_end":5309,"line_start":134,"line_end":134,"column_start":30,"column_end":44},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1412},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5342,"byte_end":5353,"line_start":135,"line_end":135,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5386,"byte_end":5397,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5622,"byte_end":5636,"line_start":144,"line_end":144,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5673,"byte_end":5687,"line_start":145,"line_end":145,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5719,"byte_end":5728,"line_start":146,"line_end":146,"column_start":31,"column_end":40},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5760,"byte_end":5769,"line_start":147,"line_end":147,"column_start":31,"column_end":40},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5803,"byte_end":5814,"line_start":148,"line_end":148,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1418},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5848,"byte_end":5859,"line_start":149,"line_end":149,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":994}},{"kind":"Use","ref_id":{"krate":0,"index":1072},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6094,"byte_end":6108,"line_start":157,"line_end":157,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6147,"byte_end":6161,"line_start":158,"line_end":158,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6195,"byte_end":6204,"line_start":159,"line_end":159,"column_start":33,"column_end":42},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6238,"byte_end":6247,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6281,"byte_end":6295,"line_start":161,"line_end":161,"column_start":33,"column_end":47},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1399},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6331,"byte_end":6342,"line_start":162,"line_end":162,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":1013}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6378,"byte_end":6389,"line_start":163,"line_end":163,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":1013}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":0,"byte_end":8536,"line_start":1,"line_end":234,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":79},{"krate":0,"index":125},{"krate":0,"index":283},{"krate":0,"index":316},{"krate":0,"index":659},{"krate":0,"index":733},{"krate":0,"index":815},{"krate":0,"index":972},{"krate":0,"index":994},{"krate":0,"index":1013},{"krate":0,"index":1035},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1038},{"krate":0,"index":1044}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"/ A DEFLATE-based stream compression/decompression library","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":0,"byte_end":60,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":61,"byte_end":64,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides support for compression and decompression of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":65,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ DEFLATE-based streams:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":136,"byte_end":162,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":163,"byte_end":166,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * the DEFLATE format itself","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":167,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/ * the zlib format","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":199,"byte_end":220,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/ * gzip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":221,"byte_end":231,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":232,"byte_end":235,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These three formats are all closely related and largely only differ in their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":236,"byte_end":316,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ headers/footers. This crate has three types in each submodule for dealing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":317,"byte_end":394,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ with these three formats.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":395,"byte_end":424,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":425,"byte_end":428,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":429,"byte_end":449,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":450,"byte_end":453,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In addition to supporting three formats, this crate supports three different","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":454,"byte_end":534,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ backends, controlled through this crate's features:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":535,"byte_end":590,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":591,"byte_end":594,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `default`, or `rust_backend` - this implementation uses the `miniz_oxide`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":595,"byte_end":674,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   crate which is a port of `miniz.c` (below) to Rust. This feature does not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":675,"byte_end":754,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   require a C compiler and only requires Rust code.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":755,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":811,"byte_end":814,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `miniz-sys` - when enabled this feature will enable this crate to instead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":815,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/   use `miniz.c`, distributed with `miniz-sys`, to implement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":895,"byte_end":958,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/   compression/decompression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":959,"byte_end":991,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":992,"byte_end":995,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `zlib` - finally, this feature will enable linking against the `libz`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":996,"byte_end":1071,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   library, typically found on most Linux systems by default. If the library","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1072,"byte_end":1151,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/   isn't found to already be on the system it will be compiled from source","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1152,"byte_end":1229,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/   (this is a C library).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1230,"byte_end":1258,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1259,"byte_end":1262,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ There's various tradeoffs associated with each implementation, but in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1263,"byte_end":1336,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ general you probably won't have to tweak the defaults. The default choice is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1337,"byte_end":1417,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ selected to avoid the need for a C compiler at build time. The `miniz-sys`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1418,"byte_end":1496,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ feature is largely a historical artifact at this point and is unlikely to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1497,"byte_end":1577,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ needed, and `zlib` is often useful if you're already using `zlib` for other","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1578,"byte_end":1657,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ C dependencies. The compression ratios and performance of each of these","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1658,"byte_end":1733,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ feature should be roughly comparable, but you'll likely want to run your own","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1734,"byte_end":1814,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ tests if you're curious about the performance.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1815,"byte_end":1865,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1866,"byte_end":1869,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1870,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This crate consists mainly of three modules, [`read`], [`write`], and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1893,"byte_end":1966,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ [`bufread`]. Each module contains a number of types used to encode and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":1967,"byte_end":2041,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ decode various streams of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2042,"byte_end":2077,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ All types in the [`write`] module work on instances of [`Write`][write],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2082,"byte_end":2158,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whereas all types in the [`read`] module work on instances of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2159,"byte_end":2224,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ [`Read`][read] and [`bufread`] works with [`BufRead`][bufread]. If you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2225,"byte_end":2299,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ are decoding directly from a `&[u8]`, use the [`bufread`] types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2300,"byte_end":2368,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2369,"byte_end":2372,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2373,"byte_end":2380,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2381,"byte_end":2414,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2415,"byte_end":2443,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2444,"byte_end":2460,"line_start":55,"line_end":55,"column_start":1,"column_end":17}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2461,"byte_end":2489,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # fn main() { let _ = run(); }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2494,"byte_end":2528,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ # fn run() -> io::Result<()> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2529,"byte_end":2563,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/ let mut encoder = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2564,"byte_end":2637,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(b\"Example\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2638,"byte_end":2673,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2674,"byte_end":2686,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2687,"byte_end":2694,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2695,"byte_end":2702,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2703,"byte_end":2706,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2707,"byte_end":2710,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Other various types are provided at the top-level of the crate for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2711,"byte_end":2781,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ management and dealing with encoders/decoders. Also note that types which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2782,"byte_end":2859,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ operate over a specific trait often implement the mirroring trait as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2860,"byte_end":2938,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ For example a `flate2::read::DeflateDecoder<T>` *also* implements the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":2939,"byte_end":3012,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ `Write` trait if `T: Write`. That is, the \"dual trait\" is forwarded directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3013,"byte_end":3093,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ to the underlying object if available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3094,"byte_end":3136,"line_start":72,"line_end":72,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3137,"byte_end":3140,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`read`]: read/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3141,"byte_end":3170,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ [`bufread`]: bufread/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3171,"byte_end":3206,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ [`write`]: write/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3207,"byte_end":3238,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/ [read]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3239,"byte_end":3299,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/ [write]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3300,"byte_end":3362,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/ [bufread]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3363,"byte_end":3429,"line_start":79,"line_end":79,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3430,"byte_end":3433,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Async I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3434,"byte_end":3449,"line_start":81,"line_end":81,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3450,"byte_end":3453,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This crate optionally can support async I/O streams with the [Tokio stack] via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3454,"byte_end":3536,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ the `tokio` feature of this crate:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3537,"byte_end":3575,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [Tokio stack]: https://tokio.rs/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3580,"byte_end":3616,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3617,"byte_end":3620,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3621,"byte_end":3632,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ flate2 = { version = \"0.2\", features = [\"tokio\"] }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3633,"byte_end":3687,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3688,"byte_end":3695,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3696,"byte_end":3699,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ All methods are internally capable of working with streams that may return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3700,"byte_end":3778,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ [`ErrorKind::WouldBlock`] when they're not ready to perform the particular","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3779,"byte_end":3857,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3858,"byte_end":3872,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3873,"byte_end":3876,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::WouldBlock`]: https://doc.rust-lang.org/std/io/enum.ErrorKind.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3877,"byte_end":3960,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3961,"byte_end":3964,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Note that care needs to be taken when using these objects, however. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":3965,"byte_end":4040,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ Tokio runtime, in particular, requires that data is fully flushed before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4041,"byte_end":4117,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ dropping streams. For compatibility with blocking streams all streams are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4118,"byte_end":4195,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"/ flushed/written when they are dropped, and this is not always a suitable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4196,"byte_end":4272,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/ time to perform I/O. If I/O streams are flushed before drop, however, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4273,"byte_end":4351,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ these operations will be a noop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4352,"byte_end":4388,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4443,"byte_end":4465,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4466,"byte_end":4505,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4506,"byte_end":4538,"line_start":107,"line_end":107,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11555,"byte_end":11558,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" The CRC calculated by a [`CrcReader`].","sig":null,"attributes":[{"value":"/ The CRC calculated by a [`CrcReader`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11439,"byte_end":11481,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11482,"byte_end":11485,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`CrcReader`]: struct.CrcReader.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11486,"byte_end":11526,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11750,"byte_end":11759,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" A wrapper around a [`Read`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Read`] that calculates the CRC.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11598,"byte_end":11654,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11655,"byte_end":11658,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11659,"byte_end":11721,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11844,"byte_end":11847,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"pub fn new() -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[{"value":"/ Create a new CRC.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11811,"byte_end":11832,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12000,"byte_end":12003,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"pub fn sum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current crc32 checksum.\n","sig":null,"attributes":[{"value":"/ Returns the current crc32 checksum.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11949,"byte_end":11988,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12227,"byte_end":12233,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"pub fn amount(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2<sup>32</sup>.\n","sig":null,"attributes":[{"value":"/ The number of bytes that have been used to calculate the CRC.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12070,"byte_end":12135,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/ This value is only accurate if the amount is lower than 2<sup>32</sup>.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12140,"byte_end":12215,"line_start":41,"line_end":41,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12334,"byte_end":12340,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"pub fn update(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[{"value":"/ Update the CRC with the bytes in `data`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12278,"byte_end":12322,"line_start":46,"line_end":46,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12503,"byte_end":12508,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[{"value":"/ Reset the CRC.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12473,"byte_end":12491,"line_start":52,"line_end":52,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12663,"byte_end":12670,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"pub fn combine(&mut Self, &Crc)","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[{"value":"/ Combine the CRC with the CRC for the subsequent block of bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12584,"byte_end":12651,"line_start":58,"line_end":58,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12880,"byte_end":12883,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"pub fn new(R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[{"value":"/ Create a new CrcReader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12841,"byte_end":12868,"line_start":66,"line_end":66,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13072,"byte_end":13075,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcReader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13025,"byte_end":13060,"line_start":76,"line_end":76,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13187,"byte_end":13197,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13122,"byte_end":13175,"line_start":81,"line_end":81,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13319,"byte_end":13326,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader by reference.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13241,"byte_end":13307,"line_start":86,"line_end":86,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13461,"byte_end":13468,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13373,"byte_end":13449,"line_start":91,"line_end":91,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13575,"byte_end":13580,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcReader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13527,"byte_end":13563,"line_start":96,"line_end":96,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14306,"byte_end":14315,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"CrcWriter","qualname":"::crc::CrcWriter","value":"CrcWriter {  }","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"decl_id":null,"docs":" A wrapper around a [`Write`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Write`] that calculates the CRC.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14151,"byte_end":14208,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14209,"byte_end":14212,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14213,"byte_end":14277,"line_start":124,"line_end":124,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14426,"byte_end":14429,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcWriter<W>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcWriter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14379,"byte_end":14414,"line_start":132,"line_end":132,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14541,"byte_end":14551,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14476,"byte_end":14529,"line_start":137,"line_end":137,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14673,"byte_end":14680,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter by reference.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter by reference.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14595,"byte_end":14661,"line_start":142,"line_end":142,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14815,"byte_end":14822,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the writer that is wrapped by this CrcWriter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14727,"byte_end":14803,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14929,"byte_end":14934,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcWriter<W>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcWriter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14881,"byte_end":14917,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":15056,"byte_end":15059,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcWriter<W>>::new","value":"pub fn new(W) -> CrcWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcWriter.\n","sig":null,"attributes":[{"value":"/ Create a new CrcWriter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":15017,"byte_end":15044,"line_start":159,"line_end":159,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22840,"byte_end":22854,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::bufread::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":21872,"byte_end":21909,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":21910,"byte_end":21913,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":21914,"byte_end":21992,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":21993,"byte_end":22054,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22055,"byte_end":22058,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22059,"byte_end":22127,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22128,"byte_end":22131,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22132,"byte_end":22146,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22147,"byte_end":22150,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22151,"byte_end":22158,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22159,"byte_end":22187,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22188,"byte_end":22204,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22205,"byte_end":22233,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22234,"byte_end":22274,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22275,"byte_end":22297,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22298,"byte_end":22325,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22326,"byte_end":22329,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22330,"byte_end":22347,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", open_hello_world().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22348,"byte_end":22403,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22404,"byte_end":22411,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22412,"byte_end":22417,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22418,"byte_end":22488,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22489,"byte_end":22539,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/    let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22540,"byte_end":22595,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/    let b = BufReader::new(f);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22596,"byte_end":22629,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/    let mut deflater = DeflateEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22630,"byte_end":22700,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/    let mut buffer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22701,"byte_end":22736,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/    deflater.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22737,"byte_end":22779,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/    Ok(buffer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22780,"byte_end":22797,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22798,"byte_end":22803,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22804,"byte_end":22811,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23069,"byte_end":23072,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22936,"byte_end":23010,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23015,"byte_end":23057,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23738,"byte_end":23743,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23359,"byte_end":23428,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23433,"byte_end":23456,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23461,"byte_end":23464,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23469,"byte_end":23544,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23549,"byte_end":23621,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23626,"byte_end":23695,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23700,"byte_end":23726,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23913,"byte_end":23920,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23852,"byte_end":23901,"line_start":78,"line_end":78,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24165,"byte_end":24172,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23965,"byte_end":24022,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24027,"byte_end":24030,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24035,"byte_end":24107,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24112,"byte_end":24153,"line_start":86,"line_end":86,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24300,"byte_end":24310,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24229,"byte_end":24288,"line_start":91,"line_end":91,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24581,"byte_end":24589,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24352,"byte_end":24425,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24430,"byte_end":24433,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24438,"byte_end":24514,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24519,"byte_end":24569,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24823,"byte_end":24832,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24646,"byte_end":24711,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24716,"byte_end":24719,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24724,"byte_end":24793,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24798,"byte_end":24811,"line_start":107,"line_end":107,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26644,"byte_end":26658,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::bufread::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25575,"byte_end":25614,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25615,"byte_end":25618,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25619,"byte_end":25695,"line_start":141,"line_end":141,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25696,"byte_end":25759,"line_start":142,"line_end":142,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25760,"byte_end":25763,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25764,"byte_end":25832,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25833,"byte_end":25836,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25837,"byte_end":25851,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25852,"byte_end":25855,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25856,"byte_end":25863,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25864,"byte_end":25892,"line_start":149,"line_end":149,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25893,"byte_end":25909,"line_start":150,"line_end":150,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25910,"byte_end":25940,"line_start":151,"line_end":151,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25941,"byte_end":25981,"line_start":152,"line_end":152,"column_start":1,"column_end":41}},{"value":"/ use flate2::bufread::DeflateDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25982,"byte_end":26022,"line_start":153,"line_end":153,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26023,"byte_end":26026,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26027,"byte_end":26044,"line_start":155,"line_end":155,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26045,"byte_end":26122,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26123,"byte_end":26169,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26170,"byte_end":26211,"line_start":158,"line_end":158,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26212,"byte_end":26267,"line_start":159,"line_end":159,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26268,"byte_end":26275,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26276,"byte_end":26359,"line_start":161,"line_end":161,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26360,"byte_end":26393,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26394,"byte_end":26454,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26455,"byte_end":26513,"line_start":164,"line_end":164,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26514,"byte_end":26547,"line_start":165,"line_end":165,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26548,"byte_end":26588,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26589,"byte_end":26601,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26602,"byte_end":26607,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26608,"byte_end":26615,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26946,"byte_end":26949,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26846,"byte_end":26918,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26923,"byte_end":26934,"line_start":182,"line_end":182,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27489,"byte_end":27494,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27117,"byte_end":27186,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27191,"byte_end":27214,"line_start":193,"line_end":193,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27219,"byte_end":27222,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27227,"byte_end":27297,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27302,"byte_end":27370,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27375,"byte_end":27446,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27451,"byte_end":27477,"line_start":198,"line_end":198,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27781,"byte_end":27791,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[{"value":"/ Resets the state of this decoder's data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27603,"byte_end":27646,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27651,"byte_end":27654,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder. It will continue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27659,"byte_end":27731,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ reading from the same stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27736,"byte_end":27769,"line_start":207,"line_end":207,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27911,"byte_end":27918,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27850,"byte_end":27899,"line_start":212,"line_end":212,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28163,"byte_end":28170,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27963,"byte_end":28020,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28025,"byte_end":28028,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28033,"byte_end":28105,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28110,"byte_end":28151,"line_start":220,"line_end":220,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28298,"byte_end":28308,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28227,"byte_end":28286,"line_start":225,"line_end":225,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28577,"byte_end":28585,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28350,"byte_end":28417,"line_start":230,"line_end":230,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28422,"byte_end":28425,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28430,"byte_end":28498,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28503,"byte_end":28565,"line_start":233,"line_end":233,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28721,"byte_end":28730,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28642,"byte_end":28709,"line_start":238,"line_end":238,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30606,"byte_end":30620,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::read::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1081}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29679,"byte_end":29716,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29717,"byte_end":29720,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29721,"byte_end":29798,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29799,"byte_end":29871,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29872,"byte_end":29875,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29876,"byte_end":29938,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29939,"byte_end":29942,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29943,"byte_end":29957,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29958,"byte_end":29961,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29962,"byte_end":29969,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29970,"byte_end":29998,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":29999,"byte_end":30015,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30016,"byte_end":30044,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30045,"byte_end":30082,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30083,"byte_end":30086,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30087,"byte_end":30104,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", deflateencoder_read_hello_world().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30105,"byte_end":30175,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30176,"byte_end":30183,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30184,"byte_end":30189,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ // Return a vector containing the Deflate compressed version of hello world","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30190,"byte_end":30269,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ fn deflateencoder_read_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30270,"byte_end":30335,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/    let mut ret_vec = [0;100];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30336,"byte_end":30369,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/    let c = b\"hello world\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30370,"byte_end":30400,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/    let mut deflater = DeflateEncoder::new(&c[..], Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30401,"byte_end":30476,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/    let count = deflater.read(&mut ret_vec)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30477,"byte_end":30525,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/    Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30526,"byte_end":30563,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30564,"byte_end":30569,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30570,"byte_end":30577,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30850,"byte_end":30853,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30717,"byte_end":30791,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30796,"byte_end":30838,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31590,"byte_end":31595,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31061,"byte_end":31130,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31135,"byte_end":31158,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31163,"byte_end":31166,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31171,"byte_end":31246,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31251,"byte_end":31323,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31328,"byte_end":31397,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31402,"byte_end":31428,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31433,"byte_end":31436,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31441,"byte_end":31513,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31518,"byte_end":31578,"line_start":65,"line_end":65,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31791,"byte_end":31798,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31730,"byte_end":31779,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32064,"byte_end":32071,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31864,"byte_end":31921,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31926,"byte_end":31929,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31934,"byte_end":32006,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32011,"byte_end":32052,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32412,"byte_end":32422,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32145,"byte_end":32204,"line_start":84,"line_end":84,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32209,"byte_end":32212,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32217,"byte_end":32292,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32297,"byte_end":32370,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32375,"byte_end":32400,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32721,"byte_end":32729,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32492,"byte_end":32565,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32570,"byte_end":32573,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32578,"byte_end":32654,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32659,"byte_end":32709,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32964,"byte_end":32973,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32787,"byte_end":32852,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32857,"byte_end":32860,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32865,"byte_end":32934,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":32939,"byte_end":32952,"line_start":104,"line_end":104,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34748,"byte_end":34762,"line_start":168,"line_end":168,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::read::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1087}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33678,"byte_end":33717,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33718,"byte_end":33721,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33722,"byte_end":33794,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33795,"byte_end":33872,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33873,"byte_end":33876,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33877,"byte_end":33939,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33940,"byte_end":33943,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33944,"byte_end":33958,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33959,"byte_end":33962,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33963,"byte_end":33970,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33971,"byte_end":33999,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34000,"byte_end":34016,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34017,"byte_end":34047,"line_start":148,"line_end":148,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34048,"byte_end":34088,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/ use flate2::read::DeflateDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34089,"byte_end":34126,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34127,"byte_end":34130,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34131,"byte_end":34148,"line_start":152,"line_end":152,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34149,"byte_end":34226,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34227,"byte_end":34273,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34274,"byte_end":34315,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34316,"byte_end":34371,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34372,"byte_end":34379,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34380,"byte_end":34463,"line_start":158,"line_end":158,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34464,"byte_end":34497,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34498,"byte_end":34558,"line_start":160,"line_end":160,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34559,"byte_end":34617,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34618,"byte_end":34651,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34652,"byte_end":34692,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34693,"byte_end":34705,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34706,"byte_end":34711,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34712,"byte_end":34719,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34959,"byte_end":34962,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34859,"byte_end":34931,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34936,"byte_end":34947,"line_start":174,"line_end":174,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35280,"byte_end":35292,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DeflateDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35063,"byte_end":35132,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35137,"byte_end":35140,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of the intermediate buffer is never increased,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35145,"byte_end":35218,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ and it is recommended for it to be large.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35223,"byte_end":35268,"line_start":182,"line_end":182,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36012,"byte_end":36017,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35490,"byte_end":35559,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35564,"byte_end":35587,"line_start":192,"line_end":192,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35592,"byte_end":35595,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35600,"byte_end":35670,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35675,"byte_end":35743,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35748,"byte_end":35819,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35824,"byte_end":35850,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35855,"byte_end":35858,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35863,"byte_end":35935,"line_start":199,"line_end":199,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35940,"byte_end":36000,"line_start":200,"line_end":200,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36213,"byte_end":36220,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36152,"byte_end":36201,"line_start":206,"line_end":206,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36486,"byte_end":36493,"line_start":215,"line_end":215,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36286,"byte_end":36343,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36348,"byte_end":36351,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36356,"byte_end":36428,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36433,"byte_end":36474,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36834,"byte_end":36844,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36567,"byte_end":36626,"line_start":219,"line_end":219,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36631,"byte_end":36634,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36639,"byte_end":36714,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36719,"byte_end":36792,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36797,"byte_end":36822,"line_start":223,"line_end":223,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37141,"byte_end":37149,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36914,"byte_end":36981,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36986,"byte_end":36989,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":36994,"byte_end":37062,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37067,"byte_end":37129,"line_start":231,"line_end":231,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37286,"byte_end":37295,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37207,"byte_end":37274,"line_start":236,"line_end":236,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38898,"byte_end":38912,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::write::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38204,"byte_end":38241,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38242,"byte_end":38245,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38246,"byte_end":38319,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38320,"byte_end":38393,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38394,"byte_end":38397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38398,"byte_end":38462,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38463,"byte_end":38466,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38467,"byte_end":38481,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38482,"byte_end":38485,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38486,"byte_end":38493,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38494,"byte_end":38522,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38523,"byte_end":38551,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38552,"byte_end":38590,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38591,"byte_end":38594,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38595,"byte_end":38673,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38674,"byte_end":38691,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38692,"byte_end":38695,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38696,"byte_end":38768,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38769,"byte_end":38810,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38811,"byte_end":38853,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38854,"byte_end":38861,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38862,"byte_end":38869,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39242,"byte_end":39245,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39004,"byte_end":39076,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39081,"byte_end":39122,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39127,"byte_end":39130,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39135,"byte_end":39210,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39215,"byte_end":39230,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39479,"byte_end":39486,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39417,"byte_end":39467,"line_start":51,"line_end":51,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39763,"byte_end":39770,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39542,"byte_end":39600,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39605,"byte_end":39608,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39613,"byte_end":39689,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39694,"byte_end":39751,"line_start":59,"line_end":59,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40648,"byte_end":40653,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39834,"byte_end":39904,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39909,"byte_end":39932,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39937,"byte_end":39940,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":39945,"byte_end":40019,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40024,"byte_end":40099,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40104,"byte_end":40148,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40153,"byte_end":40156,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40161,"byte_end":40237,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40242,"byte_end":40310,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40315,"byte_end":40389,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40394,"byte_end":40463,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40468,"byte_end":40471,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40476,"byte_end":40488,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40493,"byte_end":40496,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40501,"byte_end":40572,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40577,"byte_end":40636,"line_start":79,"line_end":79,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41413,"byte_end":41423,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40798,"byte_end":40873,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40878,"byte_end":40881,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40886,"byte_end":40959,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":40964,"byte_end":41040,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41045,"byte_end":41088,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41093,"byte_end":41096,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41101,"byte_end":41113,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41118,"byte_end":41121,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41126,"byte_end":41200,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41205,"byte_end":41228,"line_start":95,"line_end":95,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41233,"byte_end":41236,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41241,"byte_end":41253,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41258,"byte_end":41261,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41266,"byte_end":41337,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41342,"byte_end":41401,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42258,"byte_end":42264,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41494,"byte_end":41548,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41553,"byte_end":41556,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41561,"byte_end":41633,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41638,"byte_end":41697,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41702,"byte_end":41705,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41710,"byte_end":41786,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41791,"byte_end":41866,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41871,"byte_end":41941,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":41946,"byte_end":42019,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42024,"byte_end":42073,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42078,"byte_end":42081,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42086,"byte_end":42098,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42103,"byte_end":42106,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42111,"byte_end":42182,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42187,"byte_end":42246,"line_start":119,"line_end":119,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42949,"byte_end":42961,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<DeflateEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42371,"byte_end":42425,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42430,"byte_end":42433,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42438,"byte_end":42514,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42519,"byte_end":42553,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42558,"byte_end":42622,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42627,"byte_end":42697,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42702,"byte_end":42764,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42769,"byte_end":42772,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42777,"byte_end":42789,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42794,"byte_end":42797,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42802,"byte_end":42873,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":42878,"byte_end":42937,"line_start":136,"line_end":136,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43287,"byte_end":43295,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43067,"byte_end":43140,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43145,"byte_end":43148,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43153,"byte_end":43225,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43230,"byte_end":43275,"line_start":145,"line_end":145,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43538,"byte_end":43547,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43358,"byte_end":43423,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43428,"byte_end":43431,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43436,"byte_end":43508,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43513,"byte_end":43526,"line_start":153,"line_end":153,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45479,"byte_end":45493,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::write::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1099}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44297,"byte_end":44336,"line_start":186,"line_end":186,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44337,"byte_end":44340,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44341,"byte_end":44421,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44422,"byte_end":44468,"line_start":189,"line_end":189,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44469,"byte_end":44472,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44473,"byte_end":44536,"line_start":191,"line_end":191,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44537,"byte_end":44540,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44541,"byte_end":44555,"line_start":193,"line_end":193,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44556,"byte_end":44559,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44560,"byte_end":44567,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44568,"byte_end":44596,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44597,"byte_end":44613,"line_start":197,"line_end":197,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44614,"byte_end":44644,"line_start":198,"line_end":198,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44645,"byte_end":44685,"line_start":199,"line_end":199,"column_start":1,"column_end":41}},{"value":"/ use flate2::write::DeflateDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44686,"byte_end":44724,"line_start":200,"line_end":200,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44725,"byte_end":44728,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44729,"byte_end":44746,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44747,"byte_end":44824,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44825,"byte_end":44871,"line_start":204,"line_end":204,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44872,"byte_end":44913,"line_start":205,"line_end":205,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_writer(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44914,"byte_end":44969,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44970,"byte_end":44977,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44978,"byte_end":45061,"line_start":208,"line_end":208,"column_start":1,"column_end":84}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45062,"byte_end":45098,"line_start":209,"line_end":209,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45099,"byte_end":45159,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45160,"byte_end":45195,"line_start":211,"line_end":211,"column_start":1,"column_end":36}},{"value":"/    let mut deflater = DeflateDecoder::new(writer);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45196,"byte_end":45250,"line_start":212,"line_end":212,"column_start":1,"column_end":55}},{"value":"/    deflater.write_all(&bytes[..])?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45251,"byte_end":45290,"line_start":213,"line_end":213,"column_start":1,"column_end":40}},{"value":"/    writer = deflater.finish()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45291,"byte_end":45326,"line_start":214,"line_end":214,"column_start":1,"column_end":36}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45327,"byte_end":45411,"line_start":215,"line_end":215,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45412,"byte_end":45436,"line_start":216,"line_end":216,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45437,"byte_end":45442,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45443,"byte_end":45450,"line_start":218,"line_end":218,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45782,"byte_end":45785,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<W>>::new","value":"pub fn new(W) -> DeflateDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45587,"byte_end":45662,"line_start":225,"line_end":225,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45667,"byte_end":45670,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45675,"byte_end":45750,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45755,"byte_end":45770,"line_start":228,"line_end":228,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45987,"byte_end":45994,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45925,"byte_end":45975,"line_start":235,"line_end":235,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46271,"byte_end":46278,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46050,"byte_end":46108,"line_start":240,"line_end":240,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46113,"byte_end":46116,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46121,"byte_end":46197,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46202,"byte_end":46259,"line_start":243,"line_end":243,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47059,"byte_end":47064,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46342,"byte_end":46412,"line_start":248,"line_end":248,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46417,"byte_end":46440,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46445,"byte_end":46448,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46453,"byte_end":46527,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46532,"byte_end":46593,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46598,"byte_end":46601,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This will then reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46606,"byte_end":46681,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46686,"byte_end":46756,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46761,"byte_end":46834,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46839,"byte_end":46865,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46870,"byte_end":46873,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46878,"byte_end":46890,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46895,"byte_end":46898,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, and if that I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46903,"byte_end":46975,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ returns an error then that will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":46980,"byte_end":47047,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47805,"byte_end":47815,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47226,"byte_end":47301,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47306,"byte_end":47309,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47314,"byte_end":47387,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47392,"byte_end":47468,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47473,"byte_end":47516,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47521,"byte_end":47524,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47529,"byte_end":47541,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47546,"byte_end":47549,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47554,"byte_end":47628,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47633,"byte_end":47656,"line_start":278,"line_end":278,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47661,"byte_end":47664,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47669,"byte_end":47681,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47686,"byte_end":47689,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47694,"byte_end":47764,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47769,"byte_end":47793,"line_start":283,"line_end":283,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48629,"byte_end":48635,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47886,"byte_end":47940,"line_start":288,"line_end":288,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47945,"byte_end":47948,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":47953,"byte_end":48029,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48034,"byte_end":48068,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48073,"byte_end":48076,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48081,"byte_end":48157,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48162,"byte_end":48237,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48242,"byte_end":48312,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48317,"byte_end":48390,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48395,"byte_end":48444,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48449,"byte_end":48452,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48457,"byte_end":48469,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48474,"byte_end":48477,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48482,"byte_end":48553,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48558,"byte_end":48617,"line_start":302,"line_end":302,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48997,"byte_end":49005,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48742,"byte_end":48812,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48817,"byte_end":48835,"line_start":309,"line_end":309,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48840,"byte_end":48843,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48848,"byte_end":48914,"line_start":311,"line_end":311,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":48919,"byte_end":48985,"line_start":312,"line_end":312,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49175,"byte_end":49184,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49068,"byte_end":49140,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49145,"byte_end":49163,"line_start":318,"line_end":318,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68213,"byte_end":68222,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::bufread::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67251,"byte_end":67279,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67280,"byte_end":67283,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will read uncompressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67284,"byte_end":67367,"line_start":142,"line_end":142,"column_start":1,"column_end":84}},{"value":"/ from the underlying reader and expose the compressed version as a [`BufRead`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67368,"byte_end":67449,"line_start":143,"line_end":143,"column_start":1,"column_end":82}},{"value":"/ interface.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67450,"byte_end":67464,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67465,"byte_end":67468,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67469,"byte_end":67537,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67538,"byte_end":67541,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67542,"byte_end":67556,"line_start":148,"line_end":148,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67557,"byte_end":67560,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67561,"byte_end":67568,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67569,"byte_end":67597,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67598,"byte_end":67614,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67615,"byte_end":67643,"line_start":153,"line_end":153,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67644,"byte_end":67679,"line_start":154,"line_end":154,"column_start":1,"column_end":36}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67680,"byte_end":67702,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67703,"byte_end":67730,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67731,"byte_end":67734,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67735,"byte_end":67814,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ // File wrapped in a BufReader implements BufRead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67815,"byte_end":67868,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67869,"byte_end":67872,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67873,"byte_end":67923,"line_start":161,"line_end":161,"column_start":1,"column_end":51}},{"value":"/     let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67924,"byte_end":67980,"line_start":162,"line_end":162,"column_start":1,"column_end":57}},{"value":"/     let b = BufReader::new(f);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":67981,"byte_end":68015,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/     let mut gz = GzEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68016,"byte_end":68076,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/     let mut buffer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68077,"byte_end":68113,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/     gz.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68114,"byte_end":68151,"line_start":166,"line_end":166,"column_start":1,"column_end":38}},{"value":"/     Ok(buffer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68152,"byte_end":68170,"line_start":167,"line_end":167,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68171,"byte_end":68176,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68177,"byte_end":68184,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68990,"byte_end":68993,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68649,"byte_end":68718,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68723,"byte_end":68726,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68731,"byte_end":68802,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68807,"byte_end":68858,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68863,"byte_end":68866,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68871,"byte_end":68941,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68946,"byte_end":68978,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69748,"byte_end":69755,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69686,"byte_end":69736,"line_start":220,"line_end":220,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":70022,"byte_end":70029,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69821,"byte_end":69879,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69884,"byte_end":69887,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69892,"byte_end":69964,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69969,"byte_end":70010,"line_start":228,"line_end":228,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":70172,"byte_end":70182,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":70103,"byte_end":70160,"line_start":233,"line_end":233,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72546,"byte_end":72555,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::bufread::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71516,"byte_end":71544,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71545,"byte_end":71548,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71549,"byte_end":71625,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71626,"byte_end":71689,"line_start":289,"line_end":289,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71690,"byte_end":71693,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71694,"byte_end":71762,"line_start":291,"line_end":291,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71763,"byte_end":71766,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71767,"byte_end":71781,"line_start":293,"line_end":293,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71782,"byte_end":71785,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71786,"byte_end":71793,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71794,"byte_end":71822,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71823,"byte_end":71839,"line_start":297,"line_end":297,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71840,"byte_end":71870,"line_start":298,"line_end":298,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71871,"byte_end":71906,"line_start":299,"line_end":299,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::GzDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71907,"byte_end":71942,"line_start":300,"line_end":300,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71943,"byte_end":71946,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71947,"byte_end":71964,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71965,"byte_end":72036,"line_start":303,"line_end":303,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72037,"byte_end":72082,"line_start":304,"line_end":304,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72083,"byte_end":72123,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72124,"byte_end":72178,"line_start":306,"line_end":306,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72179,"byte_end":72186,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72187,"byte_end":72192,"line_start":308,"line_end":308,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72193,"byte_end":72271,"line_start":309,"line_end":309,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72272,"byte_end":72308,"line_start":310,"line_end":310,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72309,"byte_end":72312,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72313,"byte_end":72373,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72374,"byte_end":72421,"line_start":313,"line_end":313,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72422,"byte_end":72455,"line_start":314,"line_end":314,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72456,"byte_end":72490,"line_start":315,"line_end":315,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72491,"byte_end":72503,"line_start":316,"line_end":316,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72504,"byte_end":72509,"line_start":317,"line_end":317,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72510,"byte_end":72517,"line_start":318,"line_end":318,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":76205,"byte_end":76208,"line_start":453,"line_end":453,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":76100,"byte_end":76172,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":76177,"byte_end":76193,"line_start":452,"line_end":452,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77155,"byte_end":77161,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77076,"byte_end":77143,"line_start":486,"line_end":486,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77294,"byte_end":77301,"line_start":492,"line_end":492,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77232,"byte_end":77282,"line_start":491,"line_end":491,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77569,"byte_end":77576,"line_start":500,"line_end":500,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77368,"byte_end":77426,"line_start":496,"line_end":496,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77431,"byte_end":77434,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77439,"byte_end":77511,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77516,"byte_end":77557,"line_start":499,"line_end":499,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77722,"byte_end":77732,"line_start":505,"line_end":505,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77651,"byte_end":77710,"line_start":504,"line_end":504,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84041,"byte_end":84055,"line_start":682,"line_end":682,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::bufread::MultiGzDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82503,"byte_end":82573,"line_start":641,"line_end":641,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82574,"byte_end":82577,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82578,"byte_end":82658,"line_start":643,"line_end":643,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82659,"byte_end":82740,"line_start":644,"line_end":644,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream. `MultiGzDecoder` will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82741,"byte_end":82812,"line_start":645,"line_end":645,"column_start":1,"column_end":72}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82813,"byte_end":82886,"line_start":646,"line_end":646,"column_start":1,"column_end":74}},{"value":"/ the first gzip member. The multistream format is commonly used in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82887,"byte_end":82956,"line_start":647,"line_end":647,"column_start":1,"column_end":70}},{"value":"/ bioinformatics, for example when using the BGZF compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82957,"byte_end":83025,"line_start":648,"line_end":648,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83026,"byte_end":83029,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will consume all gzip members","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83030,"byte_end":83115,"line_start":650,"line_end":650,"column_start":1,"column_end":86}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83116,"byte_end":83174,"line_start":651,"line_end":651,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83175,"byte_end":83178,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83179,"byte_end":83247,"line_start":653,"line_end":653,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83248,"byte_end":83251,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83252,"byte_end":83266,"line_start":655,"line_end":655,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83267,"byte_end":83270,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83271,"byte_end":83278,"line_start":657,"line_end":657,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83279,"byte_end":83307,"line_start":658,"line_end":658,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83308,"byte_end":83324,"line_start":659,"line_end":659,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83325,"byte_end":83355,"line_start":660,"line_end":660,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83356,"byte_end":83391,"line_start":661,"line_end":661,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::MultiGzDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83392,"byte_end":83432,"line_start":662,"line_end":662,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83433,"byte_end":83436,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83437,"byte_end":83454,"line_start":664,"line_end":664,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83455,"byte_end":83526,"line_start":665,"line_end":665,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83527,"byte_end":83572,"line_start":666,"line_end":666,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83573,"byte_end":83613,"line_start":667,"line_end":667,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83614,"byte_end":83668,"line_start":668,"line_end":668,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83669,"byte_end":83676,"line_start":669,"line_end":669,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83677,"byte_end":83682,"line_start":670,"line_end":670,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83683,"byte_end":83761,"line_start":671,"line_end":671,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83762,"byte_end":83798,"line_start":672,"line_end":672,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83799,"byte_end":83802,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83803,"byte_end":83863,"line_start":674,"line_end":674,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83864,"byte_end":83916,"line_start":675,"line_end":675,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83917,"byte_end":83950,"line_start":676,"line_end":676,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83951,"byte_end":83985,"line_start":677,"line_end":677,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83986,"byte_end":83998,"line_start":678,"line_end":678,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":83999,"byte_end":84004,"line_start":679,"line_end":679,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84005,"byte_end":84012,"line_start":680,"line_end":680,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84303,"byte_end":84306,"line_start":688,"line_end":688,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84116,"byte_end":84188,"line_start":685,"line_end":685,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84193,"byte_end":84271,"line_start":686,"line_end":686,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84276,"byte_end":84291,"line_start":687,"line_end":687,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84516,"byte_end":84522,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84431,"byte_end":84504,"line_start":694,"line_end":694,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84650,"byte_end":84657,"line_start":700,"line_end":700,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84588,"byte_end":84638,"line_start":699,"line_end":699,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84910,"byte_end":84917,"line_start":708,"line_end":708,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84709,"byte_end":84767,"line_start":704,"line_end":704,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84772,"byte_end":84775,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84780,"byte_end":84852,"line_start":706,"line_end":706,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84857,"byte_end":84898,"line_start":707,"line_end":707,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":85048,"byte_end":85058,"line_start":713,"line_end":713,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84977,"byte_end":85036,"line_start":712,"line_end":712,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91474,"byte_end":91483,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::read::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1229}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90646,"byte_end":90674,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90675,"byte_end":90678,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will read uncompressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90679,"byte_end":90759,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and expose the compressed version as a [`Read`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90760,"byte_end":90838,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ interface.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90839,"byte_end":90853,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90854,"byte_end":90857,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90858,"byte_end":90920,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90921,"byte_end":90924,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90925,"byte_end":90939,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90940,"byte_end":90943,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90944,"byte_end":90951,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90952,"byte_end":90980,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90981,"byte_end":90997,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":90998,"byte_end":91026,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91027,"byte_end":91059,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91060,"byte_end":91063,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Return a vector containing the GZ compressed version of hello world","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91064,"byte_end":91138,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91139,"byte_end":91142,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn gzencode_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91143,"byte_end":91197,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let mut ret_vec = [0;100];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91198,"byte_end":91232,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/     let bytestring = b\"hello world\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91233,"byte_end":91273,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     let mut gz = GzEncoder::new(&bytestring[..], Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91274,"byte_end":91348,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     let count = gz.read(&mut ret_vec)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91349,"byte_end":91392,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/     Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91393,"byte_end":91431,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91432,"byte_end":91437,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91438,"byte_end":91445,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92031,"byte_end":92034,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91690,"byte_end":91759,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91764,"byte_end":91767,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91772,"byte_end":91843,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91848,"byte_end":91899,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91904,"byte_end":91907,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91912,"byte_end":91982,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91987,"byte_end":92019,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92217,"byte_end":92224,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92155,"byte_end":92205,"line_start":63,"line_end":63,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92491,"byte_end":92498,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92290,"byte_end":92348,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92353,"byte_end":92356,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92361,"byte_end":92433,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92438,"byte_end":92479,"line_start":71,"line_end":71,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92641,"byte_end":92651,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92572,"byte_end":92629,"line_start":76,"line_end":76,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94116,"byte_end":94125,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::read::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1235}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93090,"byte_end":93118,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93119,"byte_end":93122,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93123,"byte_end":93199,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93200,"byte_end":93263,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93264,"byte_end":93267,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93268,"byte_end":93330,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93331,"byte_end":93334,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93335,"byte_end":93349,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93350,"byte_end":93353,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93354,"byte_end":93361,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93362,"byte_end":93365,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93366,"byte_end":93394,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93395,"byte_end":93411,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93412,"byte_end":93442,"line_start":111,"line_end":111,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93443,"byte_end":93478,"line_start":112,"line_end":112,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::GzDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93479,"byte_end":93511,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93512,"byte_end":93515,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93516,"byte_end":93533,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93534,"byte_end":93606,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93607,"byte_end":93653,"line_start":117,"line_end":117,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93654,"byte_end":93695,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93696,"byte_end":93751,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93752,"byte_end":93759,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93760,"byte_end":93765,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93766,"byte_end":93844,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93845,"byte_end":93878,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93879,"byte_end":93882,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93883,"byte_end":93943,"line_start":125,"line_end":125,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93944,"byte_end":93991,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":93992,"byte_end":94025,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94026,"byte_end":94060,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94061,"byte_end":94073,"line_start":129,"line_end":129,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94074,"byte_end":94079,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94080,"byte_end":94087,"line_start":131,"line_end":131,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94317,"byte_end":94320,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94212,"byte_end":94284,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94289,"byte_end":94305,"line_start":139,"line_end":139,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94554,"byte_end":94560,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94474,"byte_end":94542,"line_start":148,"line_end":148,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94692,"byte_end":94699,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94630,"byte_end":94680,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94966,"byte_end":94973,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94765,"byte_end":94823,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94828,"byte_end":94831,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94836,"byte_end":94908,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94913,"byte_end":94954,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95118,"byte_end":95128,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95047,"byte_end":95106,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97354,"byte_end":97368,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::read::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":1241}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95826,"byte_end":95896,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95897,"byte_end":95900,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95901,"byte_end":95981,"line_start":200,"line_end":200,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95982,"byte_end":96063,"line_start":201,"line_end":201,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream.  `MultiGzDecoder` will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96064,"byte_end":96136,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96137,"byte_end":96214,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ first gzip member. The multistream format is commonly used in bioinformatics,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96215,"byte_end":96296,"line_start":204,"line_end":204,"column_start":1,"column_end":82}},{"value":"/ for example when using the BGZF compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96297,"byte_end":96349,"line_start":205,"line_end":205,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96350,"byte_end":96353,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume all gzip members","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96354,"byte_end":96436,"line_start":207,"line_end":207,"column_start":1,"column_end":83}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96437,"byte_end":96495,"line_start":208,"line_end":208,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96496,"byte_end":96499,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96500,"byte_end":96562,"line_start":210,"line_end":210,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96563,"byte_end":96566,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96567,"byte_end":96581,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96582,"byte_end":96585,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96586,"byte_end":96593,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96594,"byte_end":96622,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96623,"byte_end":96639,"line_start":216,"line_end":216,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96640,"byte_end":96670,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96671,"byte_end":96706,"line_start":218,"line_end":218,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::MultiGzDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96707,"byte_end":96744,"line_start":219,"line_end":219,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96745,"byte_end":96748,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96749,"byte_end":96766,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96767,"byte_end":96839,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96840,"byte_end":96886,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96887,"byte_end":96928,"line_start":224,"line_end":224,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96929,"byte_end":96984,"line_start":225,"line_end":225,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96985,"byte_end":96992,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96993,"byte_end":96998,"line_start":227,"line_end":227,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":96999,"byte_end":97077,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97078,"byte_end":97111,"line_start":229,"line_end":229,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97112,"byte_end":97115,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97116,"byte_end":97176,"line_start":231,"line_end":231,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97177,"byte_end":97229,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97230,"byte_end":97263,"line_start":233,"line_end":233,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97264,"byte_end":97298,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97299,"byte_end":97311,"line_start":235,"line_end":235,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97312,"byte_end":97317,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97318,"byte_end":97325,"line_start":237,"line_end":237,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97652,"byte_end":97655,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97465,"byte_end":97537,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97542,"byte_end":97620,"line_start":245,"line_end":245,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97625,"byte_end":97640,"line_start":246,"line_end":246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97915,"byte_end":97921,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97829,"byte_end":97903,"line_start":255,"line_end":255,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98053,"byte_end":98060,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97991,"byte_end":98041,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98327,"byte_end":98334,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98126,"byte_end":98184,"line_start":265,"line_end":265,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98189,"byte_end":98192,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98197,"byte_end":98269,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98274,"byte_end":98315,"line_start":268,"line_end":268,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98479,"byte_end":98489,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98408,"byte_end":98467,"line_start":273,"line_end":273,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100200,"byte_end":100209,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::write::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99559,"byte_end":99587,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99588,"byte_end":99591,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99592,"byte_end":99671,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99672,"byte_end":99705,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99706,"byte_end":99709,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99710,"byte_end":99774,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99775,"byte_end":99778,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99779,"byte_end":99793,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99794,"byte_end":99797,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99798,"byte_end":99805,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99806,"byte_end":99834,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99835,"byte_end":99863,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99864,"byte_end":99897,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99898,"byte_end":99901,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99902,"byte_end":99980,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99981,"byte_end":99998,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":99999,"byte_end":100002,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100003,"byte_end":100070,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100071,"byte_end":100112,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100113,"byte_end":100155,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100156,"byte_end":100163,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100164,"byte_end":100171,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100956,"byte_end":100959,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<W>>::new","value":"pub fn new(W, Compression) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100615,"byte_end":100684,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100689,"byte_end":100692,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100697,"byte_end":100768,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100773,"byte_end":100824,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100829,"byte_end":100832,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100837,"byte_end":100909,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ written to the stream `w`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100914,"byte_end":100944,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101118,"byte_end":101125,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101056,"byte_end":101106,"line_start":67,"line_end":67,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101382,"byte_end":101389,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101181,"byte_end":101239,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101244,"byte_end":101247,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101252,"byte_end":101324,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101329,"byte_end":101370,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102068,"byte_end":102078,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101453,"byte_end":101528,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101533,"byte_end":101536,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101541,"byte_end":101614,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101619,"byte_end":101695,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101700,"byte_end":101743,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101748,"byte_end":101751,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101756,"byte_end":101768,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101773,"byte_end":101776,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101781,"byte_end":101855,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101860,"byte_end":101883,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101888,"byte_end":101891,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101896,"byte_end":101908,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101913,"byte_end":101916,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101921,"byte_end":101992,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":101997,"byte_end":102056,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103451,"byte_end":103457,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[{"value":"/ Finish encoding this stream, returning the underlying writer once the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102791,"byte_end":102864,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ encoding is done.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102869,"byte_end":102890,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102895,"byte_end":102898,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102903,"byte_end":102979,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":102984,"byte_end":103059,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103064,"byte_end":103134,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103139,"byte_end":103212,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103217,"byte_end":103266,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103271,"byte_end":103274,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103279,"byte_end":103291,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103296,"byte_end":103299,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103304,"byte_end":103375,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103380,"byte_end":103439,"line_start":130,"line_end":130,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105921,"byte_end":105930,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::write::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104807,"byte_end":104835,"line_start":186,"line_end":186,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104836,"byte_end":104839,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104840,"byte_end":104919,"line_start":188,"line_end":188,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104920,"byte_end":104953,"line_start":189,"line_end":189,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104954,"byte_end":104957,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104958,"byte_end":105022,"line_start":191,"line_end":191,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105023,"byte_end":105026,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105027,"byte_end":105041,"line_start":193,"line_end":193,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105042,"byte_end":105045,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105046,"byte_end":105053,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105054,"byte_end":105082,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105083,"byte_end":105099,"line_start":197,"line_end":197,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105100,"byte_end":105128,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::{GzEncoder, GzDecoder};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105129,"byte_end":105175,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105176,"byte_end":105179,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105180,"byte_end":105197,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105198,"byte_end":105270,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105271,"byte_end":105313,"line_start":203,"line_end":203,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105314,"byte_end":105355,"line_start":204,"line_end":204,"column_start":1,"column_end":42}},{"value":"/ #    assert_eq!(\"Hello World\", decode_writer(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105356,"byte_end":105422,"line_start":205,"line_end":205,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105423,"byte_end":105430,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a gzip encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105431,"byte_end":105511,"line_start":207,"line_end":207,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105512,"byte_end":105548,"line_start":208,"line_end":208,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105549,"byte_end":105609,"line_start":209,"line_end":209,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105610,"byte_end":105645,"line_start":210,"line_end":210,"column_start":1,"column_end":36}},{"value":"/    let mut decoder = GzDecoder::new(writer);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105646,"byte_end":105694,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/    decoder.write_all(&bytes[..])?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105695,"byte_end":105733,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/    writer = decoder.finish()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105734,"byte_end":105768,"line_start":213,"line_end":213,"column_start":1,"column_end":35}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105769,"byte_end":105853,"line_start":214,"line_end":214,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105854,"byte_end":105878,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105879,"byte_end":105884,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":105885,"byte_end":105892,"line_start":217,"line_end":217,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106337,"byte_end":106340,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<W>>::new","value":"pub fn new(W) -> GzDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106142,"byte_end":106217,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106222,"byte_end":106225,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106230,"byte_end":106305,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106310,"byte_end":106325,"line_start":232,"line_end":232,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106669,"byte_end":106675,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<W>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106606,"byte_end":106657,"line_start":242,"line_end":242,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106808,"byte_end":106815,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106746,"byte_end":106796,"line_start":247,"line_end":247,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107102,"byte_end":107109,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106881,"byte_end":106939,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106944,"byte_end":106947,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106952,"byte_end":107028,"line_start":254,"line_end":254,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107033,"byte_end":107090,"line_start":255,"line_end":255,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107762,"byte_end":107772,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107183,"byte_end":107258,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107263,"byte_end":107266,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107271,"byte_end":107344,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107349,"byte_end":107425,"line_start":263,"line_end":263,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107430,"byte_end":107473,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107478,"byte_end":107481,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107486,"byte_end":107498,"line_start":266,"line_end":266,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107503,"byte_end":107506,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107511,"byte_end":107585,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107590,"byte_end":107613,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107618,"byte_end":107621,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107626,"byte_end":107638,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107643,"byte_end":107646,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107651,"byte_end":107721,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107726,"byte_end":107750,"line_start":274,"line_end":274,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108611,"byte_end":108617,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this decoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107868,"byte_end":107922,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107927,"byte_end":107930,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":107935,"byte_end":108011,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108016,"byte_end":108050,"line_start":283,"line_end":283,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108055,"byte_end":108058,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108063,"byte_end":108139,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108144,"byte_end":108219,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108224,"byte_end":108294,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108299,"byte_end":108372,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108377,"byte_end":108426,"line_start":289,"line_end":289,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108431,"byte_end":108434,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108439,"byte_end":108451,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108456,"byte_end":108459,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108464,"byte_end":108535,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":108540,"byte_end":108599,"line_start":294,"line_end":294,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":51873,"byte_end":51881,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"GzHeader","qualname":"::gz::GzHeader","value":"GzHeader {  }","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[{"value":"/ A structure representing the header of a gzip stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":51668,"byte_end":51725,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":51726,"byte_end":51729,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The header can contain metadata about the file that was compressed, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":51730,"byte_end":51804,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":51805,"byte_end":51817,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52124,"byte_end":52132,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzHeader>::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `filename` field of this gzip stream's header, if present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52038,"byte_end":52112,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52300,"byte_end":52305,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzHeader>::extra","value":"pub fn extra(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `extra` field of this gzip stream's header, if present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52217,"byte_end":52288,"line_start":36,"line_end":36,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52472,"byte_end":52479,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzHeader>::comment","value":"pub fn comment(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `comment` field of this gzip stream's header, if present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52387,"byte_end":52460,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52765,"byte_end":52781,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzHeader>::operating_system","value":"pub fn operating_system(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the `operating_system` field of this gzip stream's header.","sig":null,"attributes":[{"value":"/ Returns the `operating_system` field of this gzip stream's header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52563,"byte_end":52633,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52638,"byte_end":52641,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ There are predefined values for various operating systems.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52646,"byte_end":52708,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ 255 means that the value is unknown.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52713,"byte_end":52753,"line_start":49,"line_end":49,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53403,"byte_end":53408,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzHeader>::mtime","value":"pub fn mtime(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" This gives the most recent modification time of the original file being compressed.","sig":null,"attributes":[{"value":"/ This gives the most recent modification time of the original file being compressed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52838,"byte_end":52925,"line_start":54,"line_end":54,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52930,"byte_end":52933,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The time is in Unix format, i.e., seconds since 00:00:00 GMT, Jan. 1, 1970.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52938,"byte_end":53017,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ (Note that this may cause problems for MS-DOS and other systems that use local","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53022,"byte_end":53104,"line_start":57,"line_end":57,"column_start":5,"column_end":87}},{"value":"/ rather than Universal time.) If the compressed data did not come from a file,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53109,"byte_end":53190,"line_start":58,"line_end":58,"column_start":5,"column_end":86}},{"value":"/ `mtime` is set to the time at which compression started.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53195,"byte_end":53255,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ `mtime` = 0 means no time stamp is available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53260,"byte_end":53309,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53314,"byte_end":53317,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The usage of `mtime` is discouraged because of Year 2038 problem.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53322,"byte_end":53391,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53803,"byte_end":53820,"line_start":74,"line_end":74,"column_start":12,"column_end":29},"name":"mtime_as_datetime","qualname":"<GzHeader>::mtime_as_datetime","value":"pub fn mtime_as_datetime(&Self) -> Option<time::SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most recent modification time represented by a date-time type.\n Returns `None` if the value of the underlying counter is 0,\n indicating no time stamp is available.","sig":null,"attributes":[{"value":"/ Returns the most recent modification time represented by a date-time type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53455,"byte_end":53533,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ Returns `None` if the value of the underlying counter is 0,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53538,"byte_end":53601,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ indicating no time stamp is available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53606,"byte_end":53648,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53653,"byte_end":53656,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53661,"byte_end":53664,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The time is measured as seconds since 00:00:00 GMT, Jan. 1 1970.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53669,"byte_end":53737,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ See [`mtime`](#method.mtime) for more detail.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":53742,"byte_end":53791,"line_start":73,"line_end":73,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54893,"byte_end":54902,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"GzBuilder","qualname":"::gz::GzBuilder","value":"GzBuilder {  }","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[{"value":"/ A builder structure to create a new gzip Encoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54097,"byte_end":54150,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54151,"byte_end":54154,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This structure controls header configuration options such as the filename.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54155,"byte_end":54233,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54234,"byte_end":54237,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54238,"byte_end":54252,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54253,"byte_end":54256,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54257,"byte_end":54264,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54265,"byte_end":54293,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54294,"byte_end":54312,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54313,"byte_end":54335,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/ use flate2::GzBuilder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54336,"byte_end":54362,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54363,"byte_end":54391,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54392,"byte_end":54395,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // GzBuilder opens a file and writes a sample string using GzBuilder pattern","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54396,"byte_end":54476,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54477,"byte_end":54480,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # fn sample_builder() -> Result<(), io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54481,"byte_end":54533,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ let f = File::create(\"examples/hello_world.gz\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54534,"byte_end":54587,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"/ let mut gz = GzBuilder::new()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54588,"byte_end":54621,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/                 .filename(\"hello_world.txt\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54622,"byte_end":54670,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/                 .comment(\"test file, please delete\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54671,"byte_end":54727,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/                 .write(f, Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54728,"byte_end":54782,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/ gz.write_all(b\"hello world\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54783,"byte_end":54817,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ gz.finish()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54818,"byte_end":54835,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54836,"byte_end":54848,"line_start":108,"line_end":108,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54849,"byte_end":54856,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":54857,"byte_end":54864,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55137,"byte_end":55140,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<GzBuilder>::new","value":"pub fn new() -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[{"value":"/ Create a new blank builder with no header by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55068,"byte_end":55125,"line_start":121,"line_end":121,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55400,"byte_end":55405,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzBuilder>::mtime","value":"pub fn mtime(Self, u32) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `mtime` field in the gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55337,"byte_end":55388,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55569,"byte_end":55585,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzBuilder>::operating_system","value":"pub fn operating_system(Self, u8) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `operating_system` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `operating_system` field in the gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55495,"byte_end":55557,"line_start":138,"line_end":138,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55748,"byte_end":55753,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzBuilder>::extra","value":"pub fn extra<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `extra` field in the gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55685,"byte_end":55736,"line_start":144,"line_end":144,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56027,"byte_end":56035,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzBuilder>::filename","value":"pub fn filename<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `filename` field in the gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55872,"byte_end":55926,"line_start":150,"line_end":150,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55931,"byte_end":55934,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55939,"byte_end":55951,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55956,"byte_end":55959,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Panics if the `filename` slice contains a zero.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55964,"byte_end":56015,"line_start":154,"line_end":154,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56339,"byte_end":56346,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzBuilder>::comment","value":"pub fn comment<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `comment` field in the gzip header.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56186,"byte_end":56239,"line_start":160,"line_end":160,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56244,"byte_end":56247,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56252,"byte_end":56264,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56269,"byte_end":56272,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Panics if the `comment` slice contains a zero.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56277,"byte_end":56327,"line_start":164,"line_end":164,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56709,"byte_end":56714,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"write","qualname":"<GzBuilder>::write","value":"pub fn write<W: Write>(Self, W, Compression) -> write::GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a writer encoder in the process.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56494,"byte_end":56561,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56566,"byte_end":56569,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56574,"byte_end":56646,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ written out to the supplied parameter `w`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56651,"byte_end":56697,"line_start":173,"line_end":173,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57058,"byte_end":57062,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"read","qualname":"<GzBuilder>::read","value":"pub fn read<R: Read>(Self, R, Compression) -> read::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56848,"byte_end":56915,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56920,"byte_end":56923,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":56928,"byte_end":57001,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57006,"byte_end":57046,"line_start":181,"line_end":181,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57411,"byte_end":57419,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<GzBuilder>::buf_read","value":"pub fn buf_read<R>(Self, R, Compression) -> bufread::GzEncoder<R> where\nR: BufRead","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57201,"byte_end":57268,"line_start":186,"line_end":186,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57273,"byte_end":57276,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57281,"byte_end":57354,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":57359,"byte_end":57399,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115719,"byte_end":115727,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":1288}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory compression stream for blocks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115114,"byte_end":115170,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115171,"byte_end":115174,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115175,"byte_end":115250,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115251,"byte_end":115328,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115329,"byte_end":115405,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115406,"byte_end":115456,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115457,"byte_end":115460,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115461,"byte_end":115539,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115540,"byte_end":115558,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115559,"byte_end":115562,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115563,"byte_end":115625,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115626,"byte_end":115690,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116360,"byte_end":116370,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":1292}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory decompression stream for blocks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115753,"byte_end":115811,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115812,"byte_end":115815,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115816,"byte_end":115891,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115892,"byte_end":115969,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":115970,"byte_end":116046,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116047,"byte_end":116097,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116098,"byte_end":116101,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116102,"byte_end":116180,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116181,"byte_end":116199,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116200,"byte_end":116203,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116204,"byte_end":116266,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116267,"byte_end":116331,"line_start":37,"line_end":37,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116799,"byte_end":116803,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushCompress::None","value":"FlushCompress::None","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116565,"byte_end":116640,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116645,"byte_end":116717,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116722,"byte_end":116794,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117254,"byte_end":117258,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushCompress::Sync","value":"FlushCompress::Sync","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116838,"byte_end":116910,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116915,"byte_end":116988,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116993,"byte_end":117019,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117024,"byte_end":117027,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117032,"byte_end":117107,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117112,"byte_end":117185,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117190,"byte_end":117249,"line_start":58,"line_end":58,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117791,"byte_end":117798,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::FlushCompress::Partial","value":"FlushCompress::Partial","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer, but the output is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117295,"byte_end":117368,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ not aligned to a byte boundary.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117373,"byte_end":117408,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117413,"byte_end":117416,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ All of the input data so far will be available to the decompressor (as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117421,"byte_end":117495,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ with `Flush::Sync`. This completes the current deflate block and follows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117500,"byte_end":117576,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ it with an empty fixed codes block that is 10 bites long, and it assures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117581,"byte_end":117657,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ that enough bytes are output in order for the decompessor to finish the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117662,"byte_end":117737,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ block before the empty fixed code block.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117742,"byte_end":117786,"line_start":68,"line_end":68,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118142,"byte_end":118146,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::FlushCompress::Full","value":"FlushCompress::Full","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[{"value":"/ All output is flushed as with `Flush::Sync` and the compression state is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117838,"byte_end":117914,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ reset so decompression can restart from this point if previous","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117919,"byte_end":117985,"line_start":72,"line_end":72,"column_start":5,"column_end":71}},{"value":"/ compressed data has been damaged or if random access is desired.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":117990,"byte_end":118058,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118063,"byte_end":118066,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Using this option too often can seriously degrade compression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118071,"byte_end":118137,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118374,"byte_end":118380,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushCompress::Finish","value":"FlushCompress::Finish","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118183,"byte_end":118244,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118249,"byte_end":118252,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118257,"byte_end":118331,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118336,"byte_end":118369,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118432,"byte_end":118446,"line_start":85,"line_end":85,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushCompress::_Nonexhaustive","value":"FlushCompress::_Nonexhaustive","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116545,"byte_end":116558,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"FlushCompress","qualname":"::mem::FlushCompress","value":"pub enum FlushCompress {\n    None = ,\n    Sync = ,\n    Partial = ,\n    Full = ,\n    Finish = ,\n    _Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1311}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing\n in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when compressing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116441,"byte_end":116515,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ in-memory data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":116516,"byte_end":116535,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118858,"byte_end":118862,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushDecompress::None","value":"FlushDecompress::None","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118624,"byte_end":118699,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118704,"byte_end":118776,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118781,"byte_end":118853,"line_start":94,"line_end":94,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119313,"byte_end":119317,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushDecompress::Sync","value":"FlushDecompress::Sync","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118897,"byte_end":118969,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118974,"byte_end":119047,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119052,"byte_end":119078,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119083,"byte_end":119086,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119091,"byte_end":119166,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119171,"byte_end":119244,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119249,"byte_end":119308,"line_start":103,"line_end":103,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119545,"byte_end":119551,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushDecompress::Finish","value":"FlushDecompress::Finish","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119354,"byte_end":119415,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119420,"byte_end":119423,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119428,"byte_end":119502,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119507,"byte_end":119540,"line_start":109,"line_end":109,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119603,"byte_end":119617,"line_start":113,"line_end":113,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushDecompress::_Nonexhaustive","value":"FlushDecompress::_Nonexhaustive","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118602,"byte_end":118617,"line_start":91,"line_end":91,"column_start":10,"column_end":25},"name":"FlushDecompress","qualname":"::mem::FlushDecompress","value":"pub enum FlushDecompress { None = , Sync = , Finish = , _Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118496,"byte_end":118558,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/ decompressing in-memory data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":118559,"byte_end":118592,"line_start":90,"line_end":90,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119949,"byte_end":119964,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"DecompressError","qualname":"::mem::DecompressError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[{"value":"/ Error returned when a decompression object finds that the input stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119794,"byte_end":119871,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ bytes was not a valid input stream of bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":119872,"byte_end":119920,"line_start":124,"line_end":124,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120211,"byte_end":120227,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"needs_dictionary","qualname":"<DecompressError>::needs_dictionary","value":"pub fn needs_dictionary(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether decompression failed due to requiring a dictionary.","sig":null,"attributes":[{"value":"/ Indicates whether decompression failed due to requiring a dictionary.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120027,"byte_end":120100,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120105,"byte_end":120108,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The resulting integer is the Adler-32 checksum of the dictionary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120113,"byte_end":120181,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ required.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120186,"byte_end":120199,"line_start":132,"line_end":132,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120864,"byte_end":120877,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"CompressError","qualname":"::mem::CompressError","value":"CompressError {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" Error returned when a compression object is used incorrectly or otherwise\n generates an error.\n","sig":null,"attributes":[{"value":"/ Error returned when a compression object is used incorrectly or otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120734,"byte_end":120811,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ generates an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120812,"byte_end":120835,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121393,"byte_end":121395,"line_start":173,"line_end":173,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[{"value":"/ Indicates success.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121214,"byte_end":121236,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121241,"byte_end":121244,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Means that more input may be needed but isn't available","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121249,"byte_end":121308,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ and/or there's more output to be written but the output buffer is full.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121313,"byte_end":121388,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121874,"byte_end":121882,"line_start":184,"line_end":184,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[{"value":"/ Indicates that forward progress is not possible due to input or output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121402,"byte_end":121476,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ buffers being empty.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121481,"byte_end":121505,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121510,"byte_end":121513,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ For compression it means the input buffer needs some more data or the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121518,"byte_end":121591,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ output buffer needs to be freed up before trying again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121596,"byte_end":121655,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121660,"byte_end":121663,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ For decompression this means that more input is needed to continue or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121668,"byte_end":121741,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the output buffer isn't large enough to contain the result. The function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121746,"byte_end":121822,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ can be called again after fixing both.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121827,"byte_end":121869,"line_start":183,"line_end":183,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122164,"byte_end":122173,"line_start":191,"line_end":191,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[{"value":"/ Indicates that all input has been consumed and all output bytes have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121889,"byte_end":121961,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ been written. Decompression/compression should not be called again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121966,"byte_end":122037,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122042,"byte_end":122045,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ For decompression with zlib streams the adler-32 of the decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122050,"byte_end":122122,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ data has also been verified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122127,"byte_end":122159,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121201,"byte_end":121207,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status { Ok, BufError, StreamEnd, }","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"/ Possible status results of compressing some data or successfully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121043,"byte_end":121111,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ decompressing a block of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":121112,"byte_end":121146,"line_start":166,"line_end":166,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122497,"byte_end":122500,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122198,"byte_end":122266,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122271,"byte_end":122274,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122279,"byte_end":122353,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122358,"byte_end":122431,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122436,"byte_end":122485,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":124893,"byte_end":124901,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":124776,"byte_end":124848,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":124853,"byte_end":124881,"line_start":267,"line_end":267,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":125076,"byte_end":125085,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":124959,"byte_end":125031,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":125036,"byte_end":125064,"line_start":273,"line_end":273,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":126087,"byte_end":126092,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[{"value":"/ Quickly resets this compressor without having to reallocate anything.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":125914,"byte_end":125987,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":125992,"byte_end":125995,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to dropping this object and then creating a new one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":126000,"byte_end":126075,"line_start":299,"line_end":299,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127637,"byte_end":127645,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the output, consuming only as much","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127236,"byte_end":127305,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127310,"byte_end":127369,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127374,"byte_end":127377,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushCompress` parameters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127382,"byte_end":127458,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127463,"byte_end":127466,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127471,"byte_end":127547,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127552,"byte_end":127625,"line_start":335,"line_end":335,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128346,"byte_end":128358,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the extra space of the output, consuming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127847,"byte_end":127922,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ only as much input as needed and writing as much output as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":127927,"byte_end":127999,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128004,"byte_end":128007,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `compress`, except that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128012,"byte_end":128083,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128088,"byte_end":128161,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128166,"byte_end":128241,"line_start":350,"line_end":350,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128246,"byte_end":128316,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128321,"byte_end":128334,"line_start":352,"line_end":352,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":129202,"byte_end":129205,"line_start":380,"line_end":380,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128994,"byte_end":129064,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":129069,"byte_end":129072,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":129077,"byte_end":129152,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":129157,"byte_end":129190,"line_start":379,"line_end":379,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131294,"byte_end":131302,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131175,"byte_end":131247,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131252,"byte_end":131282,"line_start":438,"line_end":438,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131479,"byte_end":131488,"line_start":445,"line_end":445,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131360,"byte_end":131432,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131437,"byte_end":131467,"line_start":444,"line_end":444,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132687,"byte_end":132697,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8], FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the output, consuming only as much","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131547,"byte_end":131618,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131623,"byte_end":131682,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131687,"byte_end":131690,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushDecompress` parameters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131695,"byte_end":131773,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131778,"byte_end":131781,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ If the first call passes `FlushDecompress::Finish` it is assumed that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131786,"byte_end":131859,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ the input and output buffers are both sized large enough to decompress","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131864,"byte_end":131938,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the entire stream in a single call.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131943,"byte_end":131982,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131987,"byte_end":131990,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ A flush value of `FlushDecompress::Finish` indicates that there are no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":131995,"byte_end":132069,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ more source bytes available beside what's already in the input buffer,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132074,"byte_end":132148,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ and the output buffer is large enough to hold the rest of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132153,"byte_end":132218,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/ decompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132223,"byte_end":132245,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132250,"byte_end":132253,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132258,"byte_end":132334,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132339,"byte_end":132412,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132417,"byte_end":132420,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132425,"byte_end":132437,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132442,"byte_end":132445,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132450,"byte_end":132519,"line_start":468,"line_end":468,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132524,"byte_end":132592,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132597,"byte_end":132675,"line_start":470,"line_end":470,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133621,"byte_end":133635,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the extra space in the output vector","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132905,"byte_end":132978,"line_start":480,"line_end":480,"column_start":5,"column_end":78}},{"value":"/ specified by `output`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":132983,"byte_end":133009,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133014,"byte_end":133017,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `decompress`, except that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133022,"byte_end":133095,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133100,"byte_end":133173,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133178,"byte_end":133253,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133258,"byte_end":133328,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133333,"byte_end":133346,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133351,"byte_end":133354,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133359,"byte_end":133371,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133376,"byte_end":133379,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133384,"byte_end":133453,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133458,"byte_end":133526,"line_start":492,"line_end":492,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":133531,"byte_end":133609,"line_start":493,"line_end":493,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135425,"byte_end":135430,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"pub fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[{"value":"/ Performs the equivalent of replacing this decompression state with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135045,"byte_end":135117,"line_start":533,"line_end":533,"column_start":5,"column_end":77}},{"value":"/ freshly allocated copy.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135122,"byte_end":135149,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135154,"byte_end":135157,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function may not allocate memory, though, and attempts to reuse any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135162,"byte_end":135238,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ previously existing resources.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135243,"byte_end":135277,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135282,"byte_end":135285,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ The argument provided here indicates whether the reset state will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135290,"byte_end":135359,"line_start":539,"line_end":539,"column_start":5,"column_end":74}},{"value":"/ attempt to decode a zlib header first or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135364,"byte_end":135413,"line_start":540,"line_end":540,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135673,"byte_end":135680,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"message","qualname":"<DecompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135573,"byte_end":135661,"line_start":549,"line_end":549,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136623,"byte_end":136630,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"message","qualname":"<CompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136523,"byte_end":136611,"line_start":580,"line_end":580,"column_start":5,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":761},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":143993,"byte_end":143998,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Flush","qualname":"::zio::Ops::Flush","value":"type Flush: Flush;","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157845,"byte_end":157856,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::bufread::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157016,"byte_end":157050,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157051,"byte_end":157054,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157055,"byte_end":157133,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157134,"byte_end":157195,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157196,"byte_end":157199,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157200,"byte_end":157268,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157269,"byte_end":157272,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157273,"byte_end":157287,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157288,"byte_end":157291,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157292,"byte_end":157299,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157300,"byte_end":157328,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157329,"byte_end":157357,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157358,"byte_end":157395,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157396,"byte_end":157418,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157419,"byte_end":157446,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157447,"byte_end":157450,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Use a buffered file to compress contents into a Vec<u8>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157451,"byte_end":157513,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157514,"byte_end":157517,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157518,"byte_end":157575,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157576,"byte_end":157628,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/ let b = BufReader::new(f);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157629,"byte_end":157659,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ let mut z = ZlibEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157660,"byte_end":157717,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157718,"byte_end":157750,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ z.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157751,"byte_end":157783,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ # Ok(buffer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157784,"byte_end":157800,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157801,"byte_end":157808,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157809,"byte_end":157816,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158068,"byte_end":158071,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157935,"byte_end":158009,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158014,"byte_end":158056,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158723,"byte_end":158728,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158344,"byte_end":158413,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158418,"byte_end":158441,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158446,"byte_end":158449,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158454,"byte_end":158529,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158534,"byte_end":158606,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158611,"byte_end":158680,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158685,"byte_end":158711,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158898,"byte_end":158905,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158837,"byte_end":158886,"line_start":74,"line_end":74,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159150,"byte_end":159157,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158950,"byte_end":159007,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159012,"byte_end":159015,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159020,"byte_end":159092,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159097,"byte_end":159138,"line_start":82,"line_end":82,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159285,"byte_end":159295,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159214,"byte_end":159273,"line_start":87,"line_end":87,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159566,"byte_end":159574,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159337,"byte_end":159410,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159415,"byte_end":159418,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159423,"byte_end":159499,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159504,"byte_end":159554,"line_start":95,"line_end":95,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159808,"byte_end":159817,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159631,"byte_end":159696,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159701,"byte_end":159704,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159709,"byte_end":159778,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159783,"byte_end":159796,"line_start":103,"line_end":103,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161596,"byte_end":161607,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::bufread::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160548,"byte_end":160584,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160585,"byte_end":160588,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160589,"byte_end":160665,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160666,"byte_end":160729,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160730,"byte_end":160733,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160734,"byte_end":160802,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160803,"byte_end":160806,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160807,"byte_end":160821,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160822,"byte_end":160825,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160826,"byte_end":160833,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160834,"byte_end":160862,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160863,"byte_end":160879,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160880,"byte_end":160910,"line_start":147,"line_end":147,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160911,"byte_end":160948,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/ use flate2::bufread::ZlibDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160949,"byte_end":160986,"line_start":149,"line_end":149,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160987,"byte_end":160990,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160991,"byte_end":161008,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161009,"byte_end":161080,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161081,"byte_end":161124,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161125,"byte_end":161163,"line_start":154,"line_end":154,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_bufreader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161164,"byte_end":161219,"line_start":155,"line_end":155,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161220,"byte_end":161227,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161228,"byte_end":161233,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161234,"byte_end":161314,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161315,"byte_end":161351,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161352,"byte_end":161355,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ fn decode_bufreader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161356,"byte_end":161419,"line_start":161,"line_end":161,"column_start":1,"column_end":64}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161420,"byte_end":161469,"line_start":162,"line_end":162,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161470,"byte_end":161504,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161505,"byte_end":161539,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161540,"byte_end":161553,"line_start":165,"line_end":165,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161554,"byte_end":161559,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161560,"byte_end":161567,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161788,"byte_end":161791,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161688,"byte_end":161760,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161765,"byte_end":161776,"line_start":176,"line_end":176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162421,"byte_end":162426,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162049,"byte_end":162118,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162123,"byte_end":162146,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162151,"byte_end":162154,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162159,"byte_end":162229,"line_start":193,"line_end":193,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162234,"byte_end":162302,"line_start":194,"line_end":194,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162307,"byte_end":162378,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162383,"byte_end":162409,"line_start":196,"line_end":196,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162596,"byte_end":162603,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162535,"byte_end":162584,"line_start":202,"line_end":202,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162848,"byte_end":162855,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162648,"byte_end":162705,"line_start":207,"line_end":207,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162710,"byte_end":162713,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162718,"byte_end":162790,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162795,"byte_end":162836,"line_start":210,"line_end":210,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162983,"byte_end":162993,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162912,"byte_end":162971,"line_start":215,"line_end":215,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163262,"byte_end":163270,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163035,"byte_end":163102,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163107,"byte_end":163110,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163115,"byte_end":163183,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163188,"byte_end":163250,"line_start":223,"line_end":223,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163406,"byte_end":163415,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163327,"byte_end":163394,"line_start":228,"line_end":228,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165162,"byte_end":165173,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::read::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1408}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164352,"byte_end":164386,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164387,"byte_end":164390,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164391,"byte_end":164468,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164469,"byte_end":164541,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164542,"byte_end":164545,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164546,"byte_end":164608,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164609,"byte_end":164612,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164613,"byte_end":164627,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164628,"byte_end":164631,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164632,"byte_end":164639,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164640,"byte_end":164668,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164669,"byte_end":164697,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164698,"byte_end":164732,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164733,"byte_end":164755,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164756,"byte_end":164759,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Open example file and compress the contents using Read interface","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164760,"byte_end":164831,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164832,"byte_end":164835,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164836,"byte_end":164893,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164894,"byte_end":164946,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/ let mut z = ZlibEncoder::new(f, Compression::fast());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":164947,"byte_end":165004,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = [0;50];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165005,"byte_end":165033,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ let byte_count = z.read(&mut buffer)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165034,"byte_end":165076,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ # Ok(buffer[0..byte_count].to_vec())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165077,"byte_end":165117,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165118,"byte_end":165125,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165126,"byte_end":165133,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165397,"byte_end":165400,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165264,"byte_end":165338,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165343,"byte_end":165385,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166125,"byte_end":166130,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165596,"byte_end":165665,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165670,"byte_end":165693,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165698,"byte_end":165701,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165706,"byte_end":165781,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165786,"byte_end":165858,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165863,"byte_end":165932,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165937,"byte_end":165963,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165968,"byte_end":165971,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165976,"byte_end":166048,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166053,"byte_end":166113,"line_start":62,"line_end":62,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166326,"byte_end":166333,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166265,"byte_end":166314,"line_start":68,"line_end":68,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166599,"byte_end":166606,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166399,"byte_end":166456,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166461,"byte_end":166464,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166469,"byte_end":166541,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166546,"byte_end":166587,"line_start":76,"line_end":76,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166947,"byte_end":166957,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166680,"byte_end":166739,"line_start":81,"line_end":81,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166744,"byte_end":166747,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166752,"byte_end":166827,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166832,"byte_end":166905,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":166910,"byte_end":166935,"line_start":85,"line_end":85,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167256,"byte_end":167264,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167027,"byte_end":167100,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167105,"byte_end":167108,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167113,"byte_end":167189,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167194,"byte_end":167244,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167499,"byte_end":167508,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167322,"byte_end":167387,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167392,"byte_end":167395,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167400,"byte_end":167469,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167474,"byte_end":167487,"line_start":101,"line_end":101,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169241,"byte_end":169252,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::read::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1414}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168201,"byte_end":168237,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168238,"byte_end":168241,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168242,"byte_end":168314,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168315,"byte_end":168392,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168393,"byte_end":168396,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168397,"byte_end":168459,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168460,"byte_end":168463,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168464,"byte_end":168478,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168479,"byte_end":168482,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168483,"byte_end":168490,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168491,"byte_end":168519,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168520,"byte_end":168536,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168537,"byte_end":168567,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168568,"byte_end":168605,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"/ use flate2::read::ZlibDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168606,"byte_end":168640,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168641,"byte_end":168644,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168645,"byte_end":168662,"line_start":149,"line_end":149,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168663,"byte_end":168734,"line_start":150,"line_end":150,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168735,"byte_end":168778,"line_start":151,"line_end":151,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168779,"byte_end":168817,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168818,"byte_end":168870,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168871,"byte_end":168878,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168879,"byte_end":168884,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168885,"byte_end":168965,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":168966,"byte_end":168999,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169000,"byte_end":169003,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169004,"byte_end":169064,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169065,"byte_end":169114,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169115,"byte_end":169149,"line_start":161,"line_end":161,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169150,"byte_end":169184,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169185,"byte_end":169198,"line_start":163,"line_end":163,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169199,"byte_end":169204,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169205,"byte_end":169212,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169443,"byte_end":169446,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169343,"byte_end":169415,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169420,"byte_end":169431,"line_start":173,"line_end":173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169773,"byte_end":169785,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<ZlibDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169541,"byte_end":169610,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169615,"byte_end":169618,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that the specified buffer will only be used up to its current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169623,"byte_end":169693,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ length. The buffer's capacity will also not grow over time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169698,"byte_end":169761,"line_start":181,"line_end":181,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170493,"byte_end":170498,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169971,"byte_end":170040,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170045,"byte_end":170068,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170073,"byte_end":170076,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170081,"byte_end":170151,"line_start":193,"line_end":193,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170156,"byte_end":170224,"line_start":194,"line_end":194,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170229,"byte_end":170300,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170305,"byte_end":170331,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170336,"byte_end":170339,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170344,"byte_end":170416,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170421,"byte_end":170481,"line_start":199,"line_end":199,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170694,"byte_end":170701,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170633,"byte_end":170682,"line_start":205,"line_end":205,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170967,"byte_end":170974,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170767,"byte_end":170824,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170829,"byte_end":170832,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170837,"byte_end":170909,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":170914,"byte_end":170955,"line_start":213,"line_end":213,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171315,"byte_end":171325,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171048,"byte_end":171107,"line_start":218,"line_end":218,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171112,"byte_end":171115,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171120,"byte_end":171195,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171200,"byte_end":171273,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171278,"byte_end":171303,"line_start":222,"line_end":222,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171622,"byte_end":171630,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171395,"byte_end":171462,"line_start":227,"line_end":227,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171467,"byte_end":171470,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171475,"byte_end":171543,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171548,"byte_end":171610,"line_start":230,"line_end":230,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171767,"byte_end":171776,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171688,"byte_end":171755,"line_start":235,"line_end":235,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173388,"byte_end":173399,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::write::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1420}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172673,"byte_end":172707,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172708,"byte_end":172711,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172712,"byte_end":172785,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172786,"byte_end":172859,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172860,"byte_end":172863,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172864,"byte_end":172928,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172929,"byte_end":172932,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172933,"byte_end":172947,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172948,"byte_end":172951,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172952,"byte_end":172959,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172960,"byte_end":172988,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":172989,"byte_end":173017,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173018,"byte_end":173053,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173054,"byte_end":173057,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write, assigning the compressed bytes of sample string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173058,"byte_end":173138,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173139,"byte_end":173142,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # fn zlib_encoding() -> std::io::Result<()> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173143,"byte_end":173192,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/ let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173193,"byte_end":173262,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ e.write_all(b\"Hello World\")?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173263,"byte_end":173296,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ let compressed = e.finish()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173297,"byte_end":173330,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173331,"byte_end":173343,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173344,"byte_end":173351,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173352,"byte_end":173359,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173726,"byte_end":173729,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173488,"byte_end":173560,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173565,"byte_end":173606,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173611,"byte_end":173614,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173619,"byte_end":173694,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173699,"byte_end":173714,"line_start":45,"line_end":45,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173956,"byte_end":173963,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173894,"byte_end":173944,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174240,"byte_end":174247,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174019,"byte_end":174077,"line_start":57,"line_end":57,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174082,"byte_end":174085,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174090,"byte_end":174166,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174171,"byte_end":174228,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175062,"byte_end":175067,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174311,"byte_end":174381,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174386,"byte_end":174409,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174414,"byte_end":174417,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174422,"byte_end":174496,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174501,"byte_end":174562,"line_start":69,"line_end":69,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174567,"byte_end":174570,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174575,"byte_end":174651,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174656,"byte_end":174724,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174729,"byte_end":174803,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174808,"byte_end":174877,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174882,"byte_end":174885,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174890,"byte_end":174902,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174907,"byte_end":174910,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174915,"byte_end":174986,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":174991,"byte_end":175050,"line_start":79,"line_end":79,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175827,"byte_end":175837,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175212,"byte_end":175287,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175292,"byte_end":175295,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175300,"byte_end":175373,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175378,"byte_end":175454,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175459,"byte_end":175502,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175507,"byte_end":175510,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175515,"byte_end":175527,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175532,"byte_end":175535,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175540,"byte_end":175614,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175619,"byte_end":175642,"line_start":95,"line_end":95,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175647,"byte_end":175650,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175655,"byte_end":175667,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175672,"byte_end":175675,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175680,"byte_end":175751,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175756,"byte_end":175815,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176672,"byte_end":176678,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175908,"byte_end":175962,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175967,"byte_end":175970,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":175975,"byte_end":176047,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176052,"byte_end":176111,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176116,"byte_end":176119,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176124,"byte_end":176200,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176205,"byte_end":176280,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176285,"byte_end":176355,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176360,"byte_end":176433,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176438,"byte_end":176487,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176492,"byte_end":176495,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176500,"byte_end":176512,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176517,"byte_end":176520,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176525,"byte_end":176596,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176601,"byte_end":176660,"line_start":119,"line_end":119,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177363,"byte_end":177375,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<ZlibEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176785,"byte_end":176839,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176844,"byte_end":176847,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176852,"byte_end":176928,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176933,"byte_end":176967,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":176972,"byte_end":177036,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177041,"byte_end":177111,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177116,"byte_end":177178,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177183,"byte_end":177186,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177191,"byte_end":177203,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177208,"byte_end":177211,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177216,"byte_end":177287,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177292,"byte_end":177351,"line_start":136,"line_end":136,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177701,"byte_end":177709,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compresor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compresor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177481,"byte_end":177554,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177559,"byte_end":177562,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177567,"byte_end":177639,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177644,"byte_end":177689,"line_start":145,"line_end":145,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177952,"byte_end":177961,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177772,"byte_end":177837,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177842,"byte_end":177845,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177850,"byte_end":177922,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":177927,"byte_end":177940,"line_start":153,"line_end":153,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179839,"byte_end":179850,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::write::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178685,"byte_end":178721,"line_start":186,"line_end":186,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178722,"byte_end":178725,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178726,"byte_end":178806,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178807,"byte_end":178853,"line_start":189,"line_end":189,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178854,"byte_end":178857,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178858,"byte_end":178922,"line_start":191,"line_end":191,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178923,"byte_end":178926,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178927,"byte_end":178941,"line_start":193,"line_end":193,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178942,"byte_end":178945,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178946,"byte_end":178953,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178954,"byte_end":178982,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178983,"byte_end":178999,"line_start":197,"line_end":197,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179000,"byte_end":179030,"line_start":198,"line_end":198,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179031,"byte_end":179068,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/ use flate2::write::ZlibDecoder;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179069,"byte_end":179104,"line_start":200,"line_end":200,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179105,"byte_end":179108,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179109,"byte_end":179126,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179127,"byte_end":179201,"line_start":203,"line_end":203,"column_start":1,"column_end":75}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179202,"byte_end":179248,"line_start":204,"line_end":204,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179249,"byte_end":179290,"line_start":205,"line_end":205,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179291,"byte_end":179346,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179347,"byte_end":179354,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179355,"byte_end":179360,"line_start":208,"line_end":208,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179361,"byte_end":179441,"line_start":209,"line_end":209,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179442,"byte_end":179478,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179479,"byte_end":179482,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179483,"byte_end":179543,"line_start":212,"line_end":212,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179544,"byte_end":179579,"line_start":213,"line_end":213,"column_start":1,"column_end":36}},{"value":"/    let mut z = ZlibDecoder::new(writer);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179580,"byte_end":179624,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"/    z.write_all(&bytes[..])?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179625,"byte_end":179657,"line_start":215,"line_end":215,"column_start":1,"column_end":33}},{"value":"/    writer = z.finish()?;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179658,"byte_end":179686,"line_start":216,"line_end":216,"column_start":1,"column_end":29}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179687,"byte_end":179771,"line_start":217,"line_end":217,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179772,"byte_end":179796,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179797,"byte_end":179802,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179803,"byte_end":179810,"line_start":220,"line_end":220,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180136,"byte_end":180139,"line_start":231,"line_end":231,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<W>>::new","value":"pub fn new(W) -> ZlibDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179941,"byte_end":180016,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180021,"byte_end":180024,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ When this decoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180029,"byte_end":180104,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180109,"byte_end":180124,"line_start":230,"line_end":230,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180334,"byte_end":180341,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180272,"byte_end":180322,"line_start":237,"line_end":237,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180618,"byte_end":180625,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180397,"byte_end":180455,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180460,"byte_end":180463,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180468,"byte_end":180544,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180549,"byte_end":180606,"line_start":245,"line_end":245,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181239,"byte_end":181244,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180689,"byte_end":180759,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180764,"byte_end":180787,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180792,"byte_end":180795,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180800,"byte_end":180870,"line_start":253,"line_end":253,"column_start":5,"column_end":75}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180875,"byte_end":180945,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":180950,"byte_end":181023,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181028,"byte_end":181054,"line_start":256,"line_end":256,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181059,"byte_end":181062,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181067,"byte_end":181079,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181084,"byte_end":181087,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181092,"byte_end":181163,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181168,"byte_end":181227,"line_start":261,"line_end":261,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182020,"byte_end":182030,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181405,"byte_end":181480,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181485,"byte_end":181488,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181493,"byte_end":181566,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181571,"byte_end":181647,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181652,"byte_end":181695,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181700,"byte_end":181703,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181708,"byte_end":181720,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181725,"byte_end":181728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181733,"byte_end":181807,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181812,"byte_end":181835,"line_start":277,"line_end":277,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181840,"byte_end":181843,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181848,"byte_end":181860,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181865,"byte_end":181868,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181873,"byte_end":181944,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":181949,"byte_end":182008,"line_start":282,"line_end":282,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182844,"byte_end":182850,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182101,"byte_end":182155,"line_start":287,"line_end":287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182160,"byte_end":182163,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182168,"byte_end":182244,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182249,"byte_end":182283,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182288,"byte_end":182291,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182296,"byte_end":182372,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182377,"byte_end":182452,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182457,"byte_end":182527,"line_start":294,"line_end":294,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182532,"byte_end":182605,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182610,"byte_end":182659,"line_start":296,"line_end":296,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182664,"byte_end":182667,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182672,"byte_end":182684,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182689,"byte_end":182692,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182697,"byte_end":182768,"line_start":300,"line_end":300,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182773,"byte_end":182832,"line_start":301,"line_end":301,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183212,"byte_end":183220,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":182957,"byte_end":183027,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183032,"byte_end":183050,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183055,"byte_end":183058,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183063,"byte_end":183129,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183134,"byte_end":183200,"line_start":311,"line_end":311,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183390,"byte_end":183399,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183283,"byte_end":183355,"line_start":316,"line_end":316,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183360,"byte_end":183378,"line_start":317,"line_end":317,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5079,"byte_end":5083,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991}],"decl_id":null,"docs":" Types which operate over [`Read`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Read`] streams, both encoders and decoders for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4905,"byte_end":4982,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ various formats.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":4983,"byte_end":5003,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5004,"byte_end":5007,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5008,"byte_end":5070,"line_start":128,"line_end":128,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":994},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5579,"byte_end":5584,"line_start":143,"line_end":143,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010}],"decl_id":null,"docs":" Types which operate over [`Write`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Write`] streams, both encoders and decoders for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5402,"byte_end":5480,"line_start":139,"line_end":139,"column_start":1,"column_end":79}},{"value":"/ various formats.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5481,"byte_end":5501,"line_start":140,"line_end":140,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5502,"byte_end":5505,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5506,"byte_end":5570,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":6047,"byte_end":6054,"line_start":156,"line_end":156,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032}],"decl_id":null,"docs":" Types which operate over [`BufRead`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`BufRead`] streams, both encoders and decoders for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5864,"byte_end":5944,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ various formats.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5945,"byte_end":5965,"line_start":153,"line_end":153,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5966,"byte_end":5969,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":5970,"byte_end":6038,"line_start":155,"line_end":155,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7334,"byte_end":7345,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"Compression","qualname":"::Compression","value":"","parent":null,"children":[],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7183,"byte_end":7262,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7263,"byte_end":7277,"line_start":185,"line_end":185,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7639,"byte_end":7642,"line_start":195,"line_end":195,"column_start":18,"column_end":21},"name":"new","qualname":"<Compression>::new","value":"pub const fn new(u32) -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Creates a new description of the compression level with an explicitly\n specified integer.","sig":null,"attributes":[{"value":"/ Creates a new description of the compression level with an explicitly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7376,"byte_end":7449,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ specified integer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7454,"byte_end":7476,"line_start":191,"line_end":191,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7481,"byte_end":7484,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The integer here is typically on a scale of 0-9 where 0 means \"no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7489,"byte_end":7558,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/ compression\" and 9 means \"take as long as you'd like\".","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7563,"byte_end":7621,"line_start":194,"line_end":194,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7829,"byte_end":7833,"line_start":201,"line_end":201,"column_start":18,"column_end":22},"name":"none","qualname":"<Compression>::none","value":"pub const fn none() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[{"value":"/ No compression is to be performed, this may actually inflate data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7710,"byte_end":7779,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/ slightly when encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7784,"byte_end":7811,"line_start":200,"line_end":200,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7949,"byte_end":7953,"line_start":206,"line_end":206,"column_start":18,"column_end":22},"name":"fast","qualname":"<Compression>::fast","value":"pub const fn fast() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7887,"byte_end":7931,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8073,"byte_end":8077,"line_start":211,"line_end":211,"column_start":18,"column_end":22},"name":"best","qualname":"<Compression>::best","value":"pub const fn best() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8007,"byte_end":8055,"line_start":210,"line_end":210,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8237,"byte_end":8242,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"level","qualname":"<Compression>::level","value":"pub fn level(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns an integer representing the compression level, typically on a\n scale of 0-9\n","sig":null,"attributes":[{"value":"/ Returns an integer representing the compression level, typically on a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8131,"byte_end":8204,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ scale of 0-9","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8209,"byte_end":8225,"line_start":216,"line_end":216,"column_start":5,"column_end":21}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9197,"byte_end":9206,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9592,"byte_end":9601,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9928,"byte_end":9937,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":10304,"byte_end":10313,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":10854,"byte_end":10863,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11801,"byte_end":11804,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12822,"byte_end":12831,"line_start":65,"line_end":65,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13006,"byte_end":13015,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13652,"byte_end":13661,"line_start":102,"line_end":102,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13865,"byte_end":13874,"line_start":110,"line_end":110,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14360,"byte_end":14369,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14998,"byte_end":15007,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":15199,"byte_end":15208,"line_start":168,"line_end":168,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22912,"byte_end":22926,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23335,"byte_end":23349,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24914,"byte_end":24928,"line_start":113,"line_end":113,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25185,"byte_end":25199,"line_start":122,"line_end":122,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26822,"byte_end":26836,"line_start":180,"line_end":180,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27093,"byte_end":27107,"line_start":191,"line_end":191,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28812,"byte_end":28826,"line_start":244,"line_end":244,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":29085,"byte_end":29099,"line_start":253,"line_end":253,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30693,"byte_end":30707,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31037,"byte_end":31051,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33053,"byte_end":33067,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33286,"byte_end":33300,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34835,"byte_end":34849,"line_start":172,"line_end":172,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35466,"byte_end":35480,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37375,"byte_end":37389,"line_start":242,"line_end":242,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37610,"byte_end":37624,"line_start":251,"line_end":251,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38980,"byte_end":38994,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43634,"byte_end":43648,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44073,"byte_end":44087,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45563,"byte_end":45577,"line_start":224,"line_end":224,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49271,"byte_end":49285,"line_start":324,"line_end":324,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49710,"byte_end":49724,"line_start":342,"line_end":342,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452118,"byte_end":12452130,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452455,"byte_end":12452462,"line_start":43,"line_end":43,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452731,"byte_end":12452738,"line_start":53,"line_end":53,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454116,"byte_end":12454123,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454396,"byte_end":12454403,"line_start":116,"line_end":116,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454672,"byte_end":12454679,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12456163,"byte_end":12456170,"line_start":173,"line_end":173,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":51251,"byte_end":51263,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68630,"byte_end":68639,"line_start":188,"line_end":188,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69667,"byte_end":69676,"line_start":219,"line_end":219,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":70623,"byte_end":70632,"line_start":252,"line_end":252,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71317,"byte_end":71326,"line_start":276,"line_end":276,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72980,"byte_end":72995,"line_start":347,"line_end":347,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":74017,"byte_end":74023,"line_start":389,"line_end":389,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":74275,"byte_end":74281,"line_start":400,"line_end":400,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":75580,"byte_end":75586,"line_start":433,"line_end":433,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":76081,"byte_end":76090,"line_start":450,"line_end":450,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77057,"byte_end":77066,"line_start":485,"line_end":485,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77827,"byte_end":77836,"line_start":510,"line_end":510,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82123,"byte_end":82132,"line_start":624,"line_end":624,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84092,"byte_end":84106,"line_start":684,"line_end":684,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84407,"byte_end":84421,"line_start":693,"line_end":693,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":85135,"byte_end":85149,"line_start":718,"line_end":718,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":85379,"byte_end":85393,"line_start":727,"line_end":727,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91671,"byte_end":91680,"line_start":49,"line_end":49,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92136,"byte_end":92145,"line_start":62,"line_end":62,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92742,"byte_end":92751,"line_start":82,"line_end":82,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92891,"byte_end":92900,"line_start":88,"line_end":88,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94193,"byte_end":94202,"line_start":137,"line_end":137,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94455,"byte_end":94464,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95219,"byte_end":95228,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95444,"byte_end":95453,"line_start":181,"line_end":181,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97441,"byte_end":97455,"line_start":243,"line_end":243,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97805,"byte_end":97819,"line_start":254,"line_end":254,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98580,"byte_end":98594,"line_start":279,"line_end":279,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98815,"byte_end":98829,"line_start":288,"line_end":288,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100596,"byte_end":100605,"line_start":55,"line_end":55,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103805,"byte_end":103814,"line_start":145,"line_end":145,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104440,"byte_end":104449,"line_start":169,"line_end":169,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104672,"byte_end":104681,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106123,"byte_end":106132,"line_start":228,"line_end":228,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":109626,"byte_end":109633,"line_start":330,"line_end":330,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":109817,"byte_end":109826,"line_start":338,"line_end":338,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":111735,"byte_end":111744,"line_start":396,"line_end":396,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52023,"byte_end":52031,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55052,"byte_end":55061,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120005,"byte_end":120020,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122183,"byte_end":122191,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128977,"byte_end":128987,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135526,"byte_end":135541,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135551,"byte_end":135566,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135871,"byte_end":135876,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136011,"byte_end":136026,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136480,"byte_end":136493,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136503,"byte_end":136516,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136721,"byte_end":136726,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136859,"byte_end":136872,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":144393,"byte_end":144401,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145021,"byte_end":145031,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145729,"byte_end":145742,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145943,"byte_end":145958,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":147554,"byte_end":147560,"line_start":159,"line_end":159,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":150574,"byte_end":150580,"line_start":254,"line_end":254,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":151608,"byte_end":151614,"line_start":284,"line_end":284,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157914,"byte_end":157925,"line_start":46,"line_end":46,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158323,"byte_end":158334,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159899,"byte_end":159910,"line_start":109,"line_end":109,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160164,"byte_end":160175,"line_start":118,"line_end":118,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161667,"byte_end":161678,"line_start":174,"line_end":174,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162028,"byte_end":162039,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163497,"byte_end":163508,"line_start":234,"line_end":234,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163764,"byte_end":163775,"line_start":243,"line_end":243,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165243,"byte_end":165254,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165575,"byte_end":165586,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167588,"byte_end":167599,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167815,"byte_end":167826,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169322,"byte_end":169333,"line_start":171,"line_end":171,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169950,"byte_end":169961,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171856,"byte_end":171867,"line_start":241,"line_end":241,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":172085,"byte_end":172096,"line_start":250,"line_end":250,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173467,"byte_end":173478,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178048,"byte_end":178059,"line_start":159,"line_end":159,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178473,"byte_end":178484,"line_start":177,"line_end":177,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179920,"byte_end":179931,"line_start":226,"line_end":226,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183486,"byte_end":183497,"line_start":323,"line_end":323,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183919,"byte_end":183930,"line_start":341,"line_end":341,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7358,"byte_end":7369,"line_start":189,"line_end":189,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8300,"byte_end":8311,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9197,"byte_end":9206,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9592,"byte_end":9601,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":9928,"byte_end":9937,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":10304,"byte_end":10313,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/bufreader.rs","byte_start":10854,"byte_end":10863,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4417}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":11801,"byte_end":11804,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":12822,"byte_end":12831,"line_start":65,"line_end":65,"column_start":15,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13006,"byte_end":13015,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13652,"byte_end":13661,"line_start":102,"line_end":102,"column_start":24,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":13865,"byte_end":13874,"line_start":110,"line_end":110,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1051},"to":{"krate":1,"index":4417}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14360,"byte_end":14369,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":14998,"byte_end":15007,"line_start":158,"line_end":158,"column_start":16,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/crc.rs","byte_start":15199,"byte_end":15208,"line_start":168,"line_end":168,"column_start":26,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":22912,"byte_end":22926,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":23335,"byte_end":23349,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":24914,"byte_end":24928,"line_start":113,"line_end":113,"column_start":27,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":25185,"byte_end":25199,"line_start":122,"line_end":122,"column_start":36,"column_end":50},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1065},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":26822,"byte_end":26836,"line_start":180,"line_end":180,"column_start":18,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":27093,"byte_end":27107,"line_start":191,"line_end":191,"column_start":9,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":28812,"byte_end":28826,"line_start":244,"line_end":244,"column_start":27,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/bufread.rs","byte_start":29085,"byte_end":29099,"line_start":253,"line_end":253,"column_start":36,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":30693,"byte_end":30707,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":31037,"byte_end":31051,"line_start":55,"line_end":55,"column_start":9,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33053,"byte_end":33067,"line_start":110,"line_end":110,"column_start":24,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":33286,"byte_end":33300,"line_start":119,"line_end":119,"column_start":33,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1079},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":34835,"byte_end":34849,"line_start":172,"line_end":172,"column_start":15,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":35466,"byte_end":35480,"line_start":190,"line_end":190,"column_start":9,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37375,"byte_end":37389,"line_start":242,"line_end":242,"column_start":24,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1085},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/read.rs","byte_start":37610,"byte_end":37624,"line_start":251,"line_end":251,"column_start":33,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1085},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":38980,"byte_end":38994,"line_start":39,"line_end":39,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":43634,"byte_end":43648,"line_start":159,"line_end":159,"column_start":26,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":44073,"byte_end":44087,"line_start":177,"line_end":177,"column_start":32,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1091},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":45563,"byte_end":45577,"line_start":224,"line_end":224,"column_start":16,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49271,"byte_end":49285,"line_start":324,"line_end":324,"column_start":26,"column_end":40},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/deflate/write.rs","byte_start":49710,"byte_end":49724,"line_start":342,"line_end":342,"column_start":32,"column_end":46},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":50266,"byte_end":50270,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":50273,"byte_end":50277,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":50372,"byte_end":50379,"line_start":15,"line_end":15,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":303},"to":{"krate":0,"index":306}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":50673,"byte_end":50680,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":303},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452118,"byte_end":12452130,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452455,"byte_end":12452462,"line_start":43,"line_end":43,"column_start":21,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12452731,"byte_end":12452738,"line_start":53,"line_end":53,"column_start":25,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1129},"to":{"krate":0,"index":306}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454116,"byte_end":12454123,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1129},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454396,"byte_end":12454403,"line_start":116,"line_end":116,"column_start":21,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12454672,"byte_end":12454679,"line_start":126,"line_end":126,"column_start":25,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/rust.rs","byte_start":12456163,"byte_end":12456170,"line_start":173,"line_end":173,"column_start":18,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/ffi/mod.rs","byte_start":51251,"byte_end":51263,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1156},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":68630,"byte_end":68639,"line_start":188,"line_end":188,"column_start":18,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":69667,"byte_end":69676,"line_start":219,"line_end":219,"column_start":9,"column_end":18},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":70623,"byte_end":70632,"line_start":252,"line_end":252,"column_start":27,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1160},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":71317,"byte_end":71326,"line_start":276,"line_end":276,"column_start":36,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1160},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":72980,"byte_end":72995,"line_start":347,"line_end":347,"column_start":6,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":74017,"byte_end":74023,"line_start":389,"line_end":389,"column_start":13,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":74275,"byte_end":74281,"line_start":400,"line_end":400,"column_start":28,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":413},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":75580,"byte_end":75586,"line_start":433,"line_end":433,"column_start":13,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":76081,"byte_end":76090,"line_start":450,"line_end":450,"column_start":18,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77057,"byte_end":77066,"line_start":485,"line_end":485,"column_start":9,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":77827,"byte_end":77836,"line_start":510,"line_end":510,"column_start":27,"column_end":36},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":82123,"byte_end":82132,"line_start":624,"line_end":624,"column_start":36,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1169},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84092,"byte_end":84106,"line_start":684,"line_end":684,"column_start":18,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":84407,"byte_end":84421,"line_start":693,"line_end":693,"column_start":9,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":85135,"byte_end":85149,"line_start":718,"line_end":718,"column_start":27,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1220},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/bufread.rs","byte_start":85379,"byte_end":85393,"line_start":727,"line_end":727,"column_start":36,"column_end":50},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1220},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":91671,"byte_end":91680,"line_start":49,"line_end":49,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92136,"byte_end":92145,"line_start":62,"line_end":62,"column_start":9,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92742,"byte_end":92751,"line_start":82,"line_end":82,"column_start":24,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":92891,"byte_end":92900,"line_start":88,"line_end":88,"column_start":33,"column_end":42},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94193,"byte_end":94202,"line_start":137,"line_end":137,"column_start":15,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":94455,"byte_end":94464,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95219,"byte_end":95228,"line_start":172,"line_end":172,"column_start":24,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1233},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":95444,"byte_end":95453,"line_start":181,"line_end":181,"column_start":33,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1233},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97441,"byte_end":97455,"line_start":243,"line_end":243,"column_start":15,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":97805,"byte_end":97819,"line_start":254,"line_end":254,"column_start":9,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98580,"byte_end":98594,"line_start":279,"line_end":279,"column_start":24,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1239},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/read.rs","byte_start":98815,"byte_end":98829,"line_start":288,"line_end":288,"column_start":33,"column_end":47},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1239},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":100596,"byte_end":100605,"line_start":55,"line_end":55,"column_start":16,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":103805,"byte_end":103814,"line_start":145,"line_end":145,"column_start":26,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1245},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104440,"byte_end":104449,"line_start":169,"line_end":169,"column_start":32,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1245},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":104672,"byte_end":104681,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":106123,"byte_end":106132,"line_start":228,"line_end":228,"column_start":16,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":109626,"byte_end":109633,"line_start":330,"line_end":330,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":616},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":109817,"byte_end":109826,"line_start":338,"line_end":338,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/write.rs","byte_start":111735,"byte_end":111744,"line_start":396,"line_end":396,"column_start":32,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1254},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":52023,"byte_end":52031,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/gz/mod.rs","byte_start":55052,"byte_end":55061,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":120005,"byte_end":120020,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":122183,"byte_end":122191,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":128977,"byte_end":128987,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135526,"byte_end":135541,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1355},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135551,"byte_end":135566,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":135871,"byte_end":135876,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136011,"byte_end":136026,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136480,"byte_end":136493,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1360},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136503,"byte_end":136516,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136721,"byte_end":136726,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"kind":{"Impl":{"id":90}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/mem.rs","byte_start":136859,"byte_end":136872,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":144393,"byte_end":144401,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1287},"to":{"krate":0,"index":760}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145021,"byte_end":145031,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":760}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145729,"byte_end":145742,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1295},"to":{"krate":0,"index":778}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":145943,"byte_end":145958,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1324},"to":{"krate":0,"index":778}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":147554,"byte_end":147560,"line_start":159,"line_end":159,"column_start":24,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":150574,"byte_end":150580,"line_start":254,"line_end":254,"column_start":34,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1382},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zio.rs","byte_start":151608,"byte_end":151614,"line_start":284,"line_end":284,"column_start":33,"column_end":39},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1382},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":157914,"byte_end":157925,"line_start":46,"line_end":46,"column_start":18,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":158323,"byte_end":158334,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":159899,"byte_end":159910,"line_start":109,"line_end":109,"column_start":27,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1392},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":160164,"byte_end":160175,"line_start":118,"line_end":118,"column_start":36,"column_end":47},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1392},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":161667,"byte_end":161678,"line_start":174,"line_end":174,"column_start":18,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":162028,"byte_end":162039,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163497,"byte_end":163508,"line_start":234,"line_end":234,"column_start":27,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1399},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/bufread.rs","byte_start":163764,"byte_end":163775,"line_start":243,"line_end":243,"column_start":36,"column_end":47},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1399},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165243,"byte_end":165254,"line_start":42,"line_end":42,"column_start":15,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":165575,"byte_end":165586,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167588,"byte_end":167599,"line_start":107,"line_end":107,"column_start":24,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1406},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":167815,"byte_end":167826,"line_start":116,"line_end":116,"column_start":33,"column_end":44},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1406},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169322,"byte_end":169333,"line_start":171,"line_end":171,"column_start":15,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":169950,"byte_end":169961,"line_start":189,"line_end":189,"column_start":9,"column_end":20},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":171856,"byte_end":171867,"line_start":241,"line_end":241,"column_start":24,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1412},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/read.rs","byte_start":172085,"byte_end":172096,"line_start":250,"line_end":250,"column_start":33,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1412},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":173467,"byte_end":173478,"line_start":40,"line_end":40,"column_start":16,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178048,"byte_end":178059,"line_start":159,"line_end":159,"column_start":26,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1418},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":178473,"byte_end":178484,"line_start":177,"line_end":177,"column_start":32,"column_end":43},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1418},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":179920,"byte_end":179931,"line_start":226,"line_end":226,"column_start":16,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183486,"byte_end":183497,"line_start":323,"line_end":323,"column_start":26,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1424},"to":{"krate":1,"index":4392}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/zlib/write.rs","byte_start":183919,"byte_end":183930,"line_start":341,"line_end":341,"column_start":32,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1424},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":7358,"byte_end":7369,"line_start":189,"line_end":189,"column_start":6,"column_end":17},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.21/src/lib.rs","byte_start":8300,"byte_end":8311,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":2967}}]}