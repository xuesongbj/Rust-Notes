{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","--cfg","feature=\"with-deprecated\"","-C","metadata=33ca0dc351b2026d","-C","extra-filename=-33ca0dc351b2026d","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libfutures-33ca0dc351b2026d.rmeta"},"prelude":{"crate_id":{"name":"futures","disambiguator":[15335327788532649094,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":0,"byte_end":9312,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6532,"byte_end":6536,"line_start":176,"line_end":176,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6538,"byte_end":6543,"line_start":176,"line_end":176,"column_start":22,"column_end":27},"alias_span":null,"name":"Async","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4266},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6545,"byte_end":6554,"line_start":176,"line_end":176,"column_start":29,"column_end":38},"alias_span":null,"name":"AsyncSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6556,"byte_end":6565,"line_start":176,"line_end":176,"column_start":40,"column_end":49},"alias_span":null,"name":"StartSend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12858,"byte_end":12863,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12865,"byte_end":12870,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12894,"byte_end":12898,"line_start":18,"line_end":18,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12900,"byte_end":12904,"line_start":18,"line_end":18,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":109},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12931,"byte_end":12938,"line_start":19,"line_end":19,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12940,"byte_end":12946,"line_start":19,"line_end":19,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12973,"byte_end":12979,"line_start":20,"line_end":20,"column_start":25,"column_end":31},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12981,"byte_end":12983,"line_start":20,"line_end":20,"column_start":33,"column_end":35},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12985,"byte_end":12988,"line_start":20,"line_end":20,"column_start":37,"column_end":40},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12990,"byte_end":13002,"line_start":20,"line_end":20,"column_start":42,"column_end":54},"alias_span":null,"name":"FutureResult","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13029,"byte_end":13036,"line_start":21,"line_end":21,"column_start":25,"column_end":32},"alias_span":null,"name":"loop_fn","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4336},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13038,"byte_end":13042,"line_start":21,"line_end":21,"column_start":34,"column_end":38},"alias_span":null,"name":"Loop","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4349},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13044,"byte_end":13050,"line_start":21,"line_end":21,"column_start":40,"column_end":46},"alias_span":null,"name":"LoopFn","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13178,"byte_end":13180,"line_start":26,"line_end":26,"column_start":16,"column_end":18},"alias_span":null,"name":"finished","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13194,"byte_end":13196,"line_start":26,"line_end":26,"column_start":32,"column_end":34},"alias_span":null,"name":"Finished","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13336,"byte_end":13339,"line_start":30,"line_end":30,"column_start":16,"column_end":19},"alias_span":null,"name":"failed","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13351,"byte_end":13354,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"alias_span":null,"name":"Failed","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":1,"index":8522},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13495,"byte_end":13501,"line_start":34,"line_end":34,"column_start":16,"column_end":22},"alias_span":null,"name":"done","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13495,"byte_end":13501,"line_start":34,"line_end":34,"column_start":16,"column_end":22},"alias_span":null,"name":"done","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13511,"byte_end":13523,"line_start":34,"line_end":34,"column_start":32,"column_end":44},"alias_span":null,"name":"Done","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13668,"byte_end":13680,"line_start":38,"line_end":38,"column_start":16,"column_end":28},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":13823,"byte_end":13835,"line_start":42,"line_end":42,"column_start":16,"column_end":28},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14107,"byte_end":14114,"line_start":64,"line_end":64,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14139,"byte_end":14146,"line_start":65,"line_end":65,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14178,"byte_end":14191,"line_start":66,"line_end":66,"column_start":31,"column_end":44},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14213,"byte_end":14217,"line_start":67,"line_end":67,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14246,"byte_end":14256,"line_start":68,"line_end":68,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4395},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14279,"byte_end":14283,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14285,"byte_end":14290,"line_start":69,"line_end":69,"column_start":28,"column_end":33},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14292,"byte_end":14297,"line_start":69,"line_end":69,"column_start":35,"column_end":40},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4503},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14299,"byte_end":14304,"line_start":69,"line_end":69,"column_start":42,"column_end":47},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4566},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14326,"byte_end":14329,"line_start":70,"line_end":70,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14354,"byte_end":14360,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4584},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14386,"byte_end":14393,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"FromErr","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4593},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14418,"byte_end":14424,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14449,"byte_end":14455,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4611},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14457,"byte_end":14467,"line_start":74,"line_end":74,"column_start":32,"column_end":42},"alias_span":null,"name":"SelectNext","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4632},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14493,"byte_end":14500,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"alias_span":null,"name":"Select2","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4640},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14522,"byte_end":14526,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4650},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14550,"byte_end":14556,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4663},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14581,"byte_end":14588,"line_start":78,"line_end":78,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":5005},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14728,"byte_end":14739,"line_start":86,"line_end":86,"column_start":33,"column_end":44},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14770,"byte_end":14778,"line_start":87,"line_end":87,"column_start":30,"column_end":38},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4749},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14780,"byte_end":14787,"line_start":87,"line_end":87,"column_start":40,"column_end":47},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14821,"byte_end":14830,"line_start":88,"line_end":88,"column_start":32,"column_end":41},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14832,"byte_end":14845,"line_start":88,"line_end":88,"column_start":43,"column_end":56},"alias_span":null,"name":"SelectAllNext","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4784},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14847,"byte_end":14857,"line_start":88,"line_end":88,"column_start":58,"column_end":68},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":5028},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14890,"byte_end":14898,"line_start":89,"line_end":89,"column_start":31,"column_end":39},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14900,"byte_end":14909,"line_start":89,"line_end":89,"column_start":41,"column_end":50},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4880},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14939,"byte_end":14945,"line_start":90,"line_end":90,"column_start":28,"column_end":34},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":5034},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14947,"byte_end":14957,"line_start":90,"line_end":90,"column_start":36,"column_end":46},"alias_span":null,"name":"SharedItem","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":5043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":14959,"byte_end":14970,"line_start":90,"line_end":90,"column_start":48,"column_end":59},"alias_span":null,"name":"SharedError","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15127,"byte_end":15135,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"alias_span":null,"name":"collect","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":4749},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15300,"byte_end":15307,"line_start":99,"line_end":99,"column_start":29,"column_end":36},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6602,"byte_end":6608,"line_start":179,"line_end":179,"column_start":18,"column_end":24},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6610,"byte_end":6620,"line_start":179,"line_end":179,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90689,"byte_end":90693,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90695,"byte_end":90699,"line_start":22,"line_end":22,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5067},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90773,"byte_end":90777,"line_start":25,"line_end":25,"column_start":15,"column_end":19},"alias_span":null,"name":"IterStream","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90830,"byte_end":90837,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"alias_span":null,"name":"iter_ok","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5074},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90839,"byte_end":90845,"line_start":27,"line_end":27,"column_start":34,"column_end":40},"alias_span":null,"name":"IterOk","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90893,"byte_end":90904,"line_start":29,"line_end":29,"column_start":29,"column_end":40},"alias_span":null,"name":"iter_result","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5083},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90906,"byte_end":90916,"line_start":29,"line_end":29,"column_start":42,"column_end":52},"alias_span":null,"name":"IterResult","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":950},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90955,"byte_end":90961,"line_start":32,"line_end":32,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90963,"byte_end":90969,"line_start":32,"line_end":32,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5098},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91363,"byte_end":91370,"line_start":64,"line_end":64,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5126},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91393,"byte_end":91398,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91443,"byte_end":91449,"line_start":67,"line_end":67,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1063},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91473,"byte_end":91480,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"alias_span":null,"name":"Concat2","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5153},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91504,"byte_end":91509,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91511,"byte_end":91516,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5161},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91541,"byte_end":91547,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91575,"byte_end":91584,"line_start":71,"line_end":71,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5179},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91609,"byte_end":91616,"line_start":72,"line_end":72,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5186},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91638,"byte_end":91642,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5215},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91668,"byte_end":91675,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5227},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91701,"byte_end":91708,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"FromErr","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5236},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91730,"byte_end":91734,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5243},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91758,"byte_end":91770,"line_start":77,"line_end":77,"column_start":23,"column_end":35},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5249},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91795,"byte_end":91802,"line_start":78,"line_end":78,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5258},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91831,"byte_end":91841,"line_start":79,"line_end":79,"column_start":28,"column_end":38},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5267},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91862,"byte_end":91865,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5276},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91890,"byte_end":91896,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5285},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91941,"byte_end":91946,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91948,"byte_end":91958,"line_start":83,"line_end":83,"column_start":30,"column_end":40},"alias_span":null,"name":"MergedItem","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91982,"byte_end":91986,"line_start":84,"line_end":84,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1544},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":91988,"byte_end":91992,"line_start":84,"line_end":84,"column_start":28,"column_end":32},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5321},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92018,"byte_end":92024,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5333},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92046,"byte_end":92054,"line_start":86,"line_end":86,"column_start":21,"column_end":29},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1630},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92080,"byte_end":92087,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5340},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92089,"byte_end":92095,"line_start":87,"line_end":87,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5346},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92120,"byte_end":92126,"line_start":88,"line_end":88,"column_start":23,"column_end":29},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5356},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92148,"byte_end":92152,"line_start":89,"line_end":89,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5363},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92180,"byte_end":92189,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5376},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92211,"byte_end":92215,"line_start":91,"line_end":91,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92243,"byte_end":92252,"line_start":92,"line_end":92,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5396},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92274,"byte_end":92278,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5408},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92303,"byte_end":92309,"line_start":94,"line_end":94,"column_start":24,"column_end":30},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":1870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92311,"byte_end":92317,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5434},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92339,"byte_end":92342,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5445},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92367,"byte_end":92374,"line_start":96,"line_end":96,"column_start":24,"column_end":31},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5482},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92648,"byte_end":92656,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5533},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92694,"byte_end":92709,"line_start":113,"line_end":113,"column_start":37,"column_end":52},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6201},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92743,"byte_end":92754,"line_start":114,"line_end":114,"column_start":33,"column_end":44},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6219},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92782,"byte_end":92788,"line_start":115,"line_end":115,"column_start":27,"column_end":33},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6228},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92817,"byte_end":92824,"line_start":116,"line_end":116,"column_start":28,"column_end":35},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6235},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92850,"byte_end":92854,"line_start":117,"line_end":117,"column_start":25,"column_end":29},"alias_span":null,"name":"Wait","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6265},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92882,"byte_end":92893,"line_start":118,"line_end":118,"column_start":27,"column_end":38},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6272},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92895,"byte_end":92904,"line_start":118,"line_end":118,"column_start":40,"column_end":49},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5808},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92906,"byte_end":92918,"line_start":118,"line_end":118,"column_start":51,"column_end":63},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5809},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92906,"byte_end":92918,"line_start":118,"line_end":118,"column_start":51,"column_end":63},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5911},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92958,"byte_end":92974,"line_start":119,"line_end":119,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6116},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93012,"byte_end":93027,"line_start":120,"line_end":120,"column_start":37,"column_end":52},"alias_span":null,"name":"futures_ordered","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6110},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93029,"byte_end":93043,"line_start":120,"line_end":120,"column_start":54,"column_end":68},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5718},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93159,"byte_end":93166,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6241},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93168,"byte_end":93174,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6249},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93176,"byte_end":93184,"line_start":125,"line_end":125,"column_start":46,"column_end":54},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":6257},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93186,"byte_end":93198,"line_start":125,"line_end":125,"column_start":56,"column_end":68},"alias_span":null,"name":"FutureSender","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":5721},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93200,"byte_end":93209,"line_start":125,"line_end":125,"column_start":70,"column_end":79},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":834}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6656,"byte_end":6662,"line_start":182,"line_end":182,"column_start":17,"column_end":23},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6472},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208491,"byte_end":208497,"line_start":30,"line_end":30,"column_start":27,"column_end":33},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6480},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208523,"byte_end":208527,"line_start":31,"line_end":31,"column_start":25,"column_end":29},"alias_span":null,"name":"Wait","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6279},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209909,"byte_end":209913,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6319},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209944,"byte_end":209955,"line_start":78,"line_end":78,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6335},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209978,"byte_end":209983,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6354},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210005,"byte_end":210009,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6361},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210035,"byte_end":210042,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6371},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210067,"byte_end":210077,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":6341},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210103,"byte_end":210114,"line_start":83,"line_end":83,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkFromErr","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2493},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210138,"byte_end":210144,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":2149}},{"kind":"Use","ref_id":{"krate":0,"index":2548},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6693,"byte_end":6697,"line_start":185,"line_end":185,"column_start":15,"column_end":19},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6850,"byte_end":6854,"line_start":190,"line_end":190,"column_start":18,"column_end":22},"alias_span":null,"name":"done","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6856,"byte_end":6861,"line_start":190,"line_end":190,"column_start":24,"column_end":29},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6863,"byte_end":6869,"line_start":190,"line_end":190,"column_start":31,"column_end":37},"alias_span":null,"name":"failed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6871,"byte_end":6879,"line_start":190,"line_end":190,"column_start":39,"column_end":47},"alias_span":null,"name":"finished","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6881,"byte_end":6885,"line_start":190,"line_end":190,"column_start":49,"column_end":53},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7044,"byte_end":7048,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"alias_span":null,"name":"Done","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7050,"byte_end":7055,"line_start":196,"line_end":196,"column_start":11,"column_end":16},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7057,"byte_end":7063,"line_start":196,"line_end":196,"column_start":18,"column_end":24},"alias_span":null,"name":"Failed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7065,"byte_end":7073,"line_start":196,"line_end":196,"column_start":26,"column_end":34},"alias_span":null,"name":"Finished","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7075,"byte_end":7079,"line_start":196,"line_end":196,"column_start":36,"column_end":40},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7081,"byte_end":7088,"line_start":196,"line_end":196,"column_start":42,"column_end":49},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7090,"byte_end":7097,"line_start":196,"line_end":196,"column_start":51,"column_end":58},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7099,"byte_end":7112,"line_start":196,"line_end":196,"column_start":60,"column_end":73},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7114,"byte_end":7118,"line_start":196,"line_end":196,"column_start":75,"column_end":79},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7120,"byte_end":7130,"line_start":196,"line_end":196,"column_start":81,"column_end":91},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4395},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7136,"byte_end":7140,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7142,"byte_end":7147,"line_start":197,"line_end":197,"column_start":11,"column_end":16},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7149,"byte_end":7154,"line_start":197,"line_end":197,"column_start":18,"column_end":23},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4503},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7156,"byte_end":7161,"line_start":197,"line_end":197,"column_start":25,"column_end":30},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4566},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7163,"byte_end":7166,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7168,"byte_end":7174,"line_start":197,"line_end":197,"column_start":37,"column_end":43},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4593},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7176,"byte_end":7182,"line_start":197,"line_end":197,"column_start":45,"column_end":51},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7184,"byte_end":7190,"line_start":197,"line_end":197,"column_start":53,"column_end":59},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4611},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7196,"byte_end":7206,"line_start":198,"line_end":198,"column_start":5,"column_end":15},"alias_span":null,"name":"SelectNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4640},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7208,"byte_end":7212,"line_start":198,"line_end":198,"column_start":17,"column_end":21},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338277,"byte_end":338282,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338284,"byte_end":338289,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338291,"byte_end":338297,"line_start":34,"line_end":34,"column_start":35,"column_end":41},"alias_span":null,"name":"Unpark","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338299,"byte_end":338307,"line_start":34,"line_end":34,"column_start":43,"column_end":51},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3093},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338309,"byte_end":338312,"line_start":34,"line_end":34,"column_start":53,"column_end":56},"alias_span":null,"name":"Run","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338314,"byte_end":338318,"line_start":34,"line_end":34,"column_start":58,"column_end":62},"alias_span":null,"name":"park","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":6588},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338342,"byte_end":338346,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338348,"byte_end":338358,"line_start":36,"line_end":36,"column_start":27,"column_end":37},"alias_span":null,"name":"AtomicTask","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338360,"byte_end":338367,"line_start":36,"line_end":36,"column_start":39,"column_end":46},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":2829},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338369,"byte_end":338373,"line_start":36,"line_end":36,"column_start":48,"column_end":52},"alias_span":null,"name":"init","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3032},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338375,"byte_end":338385,"line_start":36,"line_end":36,"column_start":54,"column_end":64},"alias_span":null,"name":"is_in_task","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":6515},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338458,"byte_end":338466,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3120},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338468,"byte_end":338485,"line_start":40,"line_end":40,"column_start":31,"column_end":48},"alias_span":null,"name":"with_unpark_event","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338487,"byte_end":338498,"line_start":40,"line_end":40,"column_start":50,"column_end":61},"alias_span":null,"name":"UnparkEvent","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338500,"byte_end":338508,"line_start":40,"line_end":40,"column_start":63,"column_end":71},"alias_span":null,"name":"EventSet","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":6522},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338713,"byte_end":338719,"line_start":46,"line_end":46,"column_start":20,"column_end":26},"alias_span":null,"name":"TaskRc","value":"","parent":{"krate":0,"index":3289}},{"kind":"Use","ref_id":{"krate":0,"index":3089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339129,"byte_end":339135,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"alias_span":null,"name":"Unpark","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339137,"byte_end":339145,"line_start":13,"line_end":13,"column_start":29,"column_end":37},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3093},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339147,"byte_end":339150,"line_start":13,"line_end":13,"column_start":39,"column_end":42},"alias_span":null,"name":"Run","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339174,"byte_end":339179,"line_start":15,"line_end":15,"column_start":21,"column_end":26},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339181,"byte_end":339186,"line_start":15,"line_end":15,"column_start":28,"column_end":33},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339188,"byte_end":339194,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3226},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339196,"byte_end":339207,"line_start":15,"line_end":15,"column_start":43,"column_end":54},"alias_span":null,"name":"with_notify","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3232},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339231,"byte_end":339243,"line_start":17,"line_end":17,"column_start":21,"column_end":33},"alias_span":null,"name":"UnsafeNotify","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":3235},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":339245,"byte_end":339257,"line_start":17,"line_end":17,"column_start":35,"column_end":47},"alias_span":null,"name":"NotifyHandle","value":"","parent":{"krate":0,"index":3341}},{"kind":"Use","ref_id":{"krate":0,"index":6765},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339837,"byte_end":339843,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"alias_span":null,"name":"BiLock","value":"","parent":{"krate":0,"index":3372}},{"kind":"Use","ref_id":{"krate":0,"index":6778},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339845,"byte_end":339856,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"BiLockGuard","value":"","parent":{"krate":0,"index":3372}},{"kind":"Use","ref_id":{"krate":0,"index":6786},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339858,"byte_end":339871,"line_start":17,"line_end":17,"column_start":45,"column_end":58},"alias_span":null,"name":"BiLockAcquire","value":"","parent":{"krate":0,"index":3372}},{"kind":"Use","ref_id":{"krate":0,"index":6792},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339873,"byte_end":339887,"line_start":17,"line_end":17,"column_start":60,"column_end":74},"alias_span":null,"name":"BiLockAcquired","value":"","parent":{"krate":0,"index":3372}},{"kind":"Use","ref_id":{"krate":0,"index":6624},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433261,"byte_end":433269,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":4108}},{"kind":"Use","ref_id":{"krate":0,"index":6625},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433261,"byte_end":433269,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":4108}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7586,"byte_end":7593,"line_start":219,"line_end":219,"column_start":28,"column_end":35},"alias_span":null,"name":"oneshot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6603},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7774,"byte_end":7782,"line_start":224,"line_end":224,"column_start":28,"column_end":36},"alias_span":null,"name":"Oneshot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6609},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7961,"byte_end":7967,"line_start":229,"line_end":229,"column_start":28,"column_end":34},"alias_span":null,"name":"Complete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6624},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8149,"byte_end":8157,"line_start":234,"line_end":234,"column_start":28,"column_end":36},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6625},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8149,"byte_end":8157,"line_start":234,"line_end":234,"column_start":28,"column_end":36},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4997},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8351,"byte_end":8360,"line_start":240,"line_end":240,"column_start":22,"column_end":31},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8362,"byte_end":8369,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"alias_span":null,"name":"collect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4784},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8371,"byte_end":8381,"line_start":240,"line_end":240,"column_start":42,"column_end":52},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8383,"byte_end":8392,"line_start":240,"line_end":240,"column_start":54,"column_end":63},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8562,"byte_end":8571,"line_start":245,"line_end":245,"column_start":22,"column_end":31},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8573,"byte_end":8586,"line_start":245,"line_end":245,"column_start":33,"column_end":46},"alias_span":null,"name":"SelectAllNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4749},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8588,"byte_end":8595,"line_start":245,"line_end":245,"column_start":48,"column_end":55},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5028},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8597,"byte_end":8605,"line_start":245,"line_end":245,"column_start":57,"column_end":65},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9207,"byte_end":9213,"line_start":263,"line_end":263,"column_start":14,"column_end":20},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9215,"byte_end":9221,"line_start":263,"line_end":263,"column_start":22,"column_end":28},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":2548},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9223,"byte_end":9227,"line_start":263,"line_end":263,"column_start":30,"column_end":34},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":4245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9229,"byte_end":9234,"line_start":263,"line_end":263,"column_start":36,"column_end":41},"alias_span":null,"name":"Async","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":4266},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9236,"byte_end":9245,"line_start":263,"line_end":263,"column_start":43,"column_end":52},"alias_span":null,"name":"AsyncSink","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9247,"byte_end":9251,"line_start":263,"line_end":263,"column_start":54,"column_end":58},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9253,"byte_end":9262,"line_start":263,"line_end":263,"column_start":60,"column_end":69},"alias_span":null,"name":"StartSend","value":"","parent":{"krate":0,"index":4219}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9299,"byte_end":9309,"line_start":265,"line_end":265,"column_start":13,"column_end":23},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":4219}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":0,"byte_end":9312,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2706},{"krate":0,"index":3266},{"krate":0,"index":3289},{"krate":0,"index":3341},{"krate":0,"index":3372},{"krate":0,"index":3924},{"krate":0,"index":6875},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6887},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6894},{"krate":0,"index":6897},{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6904},{"krate":0,"index":6907},{"krate":0,"index":6910},{"krate":0,"index":4219}],"decl_id":null,"docs":" Zero-cost Futures in Rust","sig":null,"attributes":[{"value":"/ Zero-cost Futures in Rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is an implementation of futures in Rust which aims to provide","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":34,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ a robust implementation of handling asynchronous computations, ergonomic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":113,"byte_end":189,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ composition and usage, and zero-cost abstractions over what would otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":190,"byte_end":269,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ be written by hand.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":270,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":294,"byte_end":297,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Futures are a concept for an object which is a proxy for another value that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":298,"byte_end":377,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ may not be ready yet. For example issuing an HTTP request may return a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":378,"byte_end":452,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ future for the HTTP response, as it probably hasn't arrived yet. With an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":453,"byte_end":529,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ object representing a value that will eventually be available, futures allow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":530,"byte_end":610,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ for powerful composition of tasks through basic combinators that can perform","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":611,"byte_end":691,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ operations like chaining computations, changing the types of futures, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":692,"byte_end":768,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ waiting for two futures to complete at the same time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":769,"byte_end":826,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":827,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ You can find extensive tutorials and documentations at [https://tokio.rs]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":831,"byte_end":908,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ for both this crate (asynchronous programming in general) as well as the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":909,"byte_end":985,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ Tokio stack to perform async I/O with.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":986,"byte_end":1028,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [https://tokio.rs]: https://tokio.rs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1033,"byte_end":1073,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1074,"byte_end":1077,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Installation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1078,"byte_end":1097,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1098,"byte_end":1101,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1102,"byte_end":1136,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1137,"byte_end":1140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1141,"byte_end":1152,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1153,"byte_end":1171,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ futures = \"0.1\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1172,"byte_end":1191,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1192,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1200,"byte_end":1203,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1204,"byte_end":1219,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1220,"byte_end":1223,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Let's take a look at a few examples of how futures might be used:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1224,"byte_end":1293,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1294,"byte_end":1297,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1298,"byte_end":1305,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ extern crate futures;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1306,"byte_end":1331,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1332,"byte_end":1335,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1336,"byte_end":1352,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1353,"byte_end":1381,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1382,"byte_end":1410,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ use futures::future::Map;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1411,"byte_end":1440,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1441,"byte_end":1444,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // A future is actually a trait implementation, so we can generically take a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1445,"byte_end":1525,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ // future of any integer and return back a future that will resolve to that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1526,"byte_end":1605,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ // value plus 10 more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1606,"byte_end":1632,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1633,"byte_end":1639,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"/ // Note here that like iterators, we're returning the `Map` combinator in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1640,"byte_end":1717,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ // the futures crate, not a boxed abstraction. This is a zero-cost","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1718,"byte_end":1788,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ // construction of a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1789,"byte_end":1821,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ fn add_ten<F>(future: F) -> Map<F, fn(i32) -> i32>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1822,"byte_end":1876,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/     where F: Future<Item=i32>,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1877,"byte_end":1911,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1912,"byte_end":1917,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/     fn add(a: i32) -> i32 { a + 10 }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1918,"byte_end":1958,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/     future.map(add)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1959,"byte_end":1982,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1983,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1989,"byte_end":1992,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // Not only can we modify one future, but we can even compose them together!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":1993,"byte_end":2073,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ // Here we have a function which takes two futures as input, and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2074,"byte_end":2152,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ // future that will calculate the sum of their two values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2153,"byte_end":2215,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/ //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2216,"byte_end":2222,"line_start":60,"line_end":60,"column_start":1,"column_end":7}},{"value":"/ // Above we saw a direct return value of the `Map` combinator, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2223,"byte_end":2293,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ // performance isn't always critical and sometimes it's more ergonomic to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2294,"byte_end":2371,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ // return a trait object like we do here. Note though that there's only one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2372,"byte_end":2451,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ // allocation here, not any for the intermediate futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2452,"byte_end":2513,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ fn add<'a, A, B>(a: A, b: B) -> Box<Future<Item=i32, Error=A::Error> + 'a>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2514,"byte_end":2592,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/     where A: Future<Item=i32> + 'a,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2593,"byte_end":2632,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/           B: Future<Item=i32, Error=A::Error> + 'a,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2633,"byte_end":2688,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2689,"byte_end":2694,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     Box::new(a.join(b).map(|(a, b)| a + b))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2695,"byte_end":2742,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2743,"byte_end":2748,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // Futures also allow chaining computations together, starting another after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2753,"byte_end":2833,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ // the previous finishes. Here we wait for the first computation to finish,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2834,"byte_end":2913,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ // and then decide what to do depending on the result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2914,"byte_end":2972,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"/ fn download_timeout(url: &str,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":2973,"byte_end":3007,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/                     timeout_dur: Duration)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3008,"byte_end":3054,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/                     -> Box<Future<Item=Vec<u8>, Error=io::Error>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3055,"byte_end":3126,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/     use std::io;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3127,"byte_end":3147,"line_start":78,"line_end":78,"column_start":1,"column_end":21}},{"value":"/     use std::net::{SocketAddr, TcpStream};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3148,"byte_end":3194,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3195,"byte_end":3198,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     type IoFuture<T> = Box<Future<Item=T, Error=io::Error>>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3199,"byte_end":3263,"line_start":81,"line_end":81,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3264,"byte_end":3267,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // First thing to do is we need to resolve our URL to an address. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3268,"byte_end":3346,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/     // will likely perform a DNS lookup which may take some time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3347,"byte_end":3416,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/     let addr = resolve(url);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3417,"byte_end":3449,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3450,"byte_end":3453,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // After we acquire the address, we next want to open up a TCP","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3454,"byte_end":3524,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/     // connection.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3525,"byte_end":3547,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/     let tcp = addr.and_then(|addr| connect(&addr));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3548,"byte_end":3603,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     // After the TCP connection is established and ready to go, we're off to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3608,"byte_end":3688,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/     // the races!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3689,"byte_end":3710,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/     let data = tcp.and_then(|conn| download(conn));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3711,"byte_end":3766,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3767,"byte_end":3770,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     // That all might take awhile, though, so let's not wait too long for it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3771,"byte_end":3851,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/     // to all come back. The `select` combinator here returns a future which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3852,"byte_end":3932,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/     // resolves to the first value that's ready plus the next future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":3933,"byte_end":4006,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/     //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4007,"byte_end":4017,"line_start":98,"line_end":98,"column_start":1,"column_end":11}},{"value":"/     // Note we can also use the `then` combinator which is similar to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4018,"byte_end":4091,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/     // `and_then` above except that it receives the result of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4092,"byte_end":4161,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"/     // computation, not just the successful value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4162,"byte_end":4216,"line_start":101,"line_end":101,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4217,"byte_end":4227,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/     // Again note that all the above calls to `and_then` and the below calls","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4228,"byte_end":4308,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/     // to `map` and such require no allocations. We only ever allocate once","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4309,"byte_end":4388,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/     // we hit the `Box::new()` call at the end here, which means we've built","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4389,"byte_end":4469,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/     // up a relatively involved computation with only one box, and even that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4470,"byte_end":4550,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/     // was optional!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4551,"byte_end":4575,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4576,"byte_end":4579,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/     let data = data.map(Ok);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4580,"byte_end":4612,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/     let timeout = timeout(timeout_dur).map(Err);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4613,"byte_end":4665,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4666,"byte_end":4669,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     let ret = data.select(timeout).then(|result| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4670,"byte_end":4724,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/         match result {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4725,"byte_end":4751,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/             // One future succeeded, and it was the one which was","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4752,"byte_end":4821,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/             // downloading data from the connection.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4822,"byte_end":4878,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/             Ok((Ok(data), _other_future)) => Ok(data),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4879,"byte_end":4937,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4938,"byte_end":4941,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/             // The timeout fired, and otherwise no error was found, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":4942,"byte_end":5016,"line_start":118,"line_end":118,"column_start":1,"column_end":75}},{"value":"/             // we translate this to an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5017,"byte_end":5066,"line_start":119,"line_end":119,"column_start":1,"column_end":50}},{"value":"/             Ok((Err(_timeout), _other_future)) => {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5067,"byte_end":5122,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"/                 Err(io::Error::new(io::ErrorKind::Other, \"timeout\"))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5123,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/             }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5196,"byte_end":5213,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5214,"byte_end":5217,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/             // A normal I/O error happened, so we pass that on through.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5218,"byte_end":5293,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/             Err((e, _other_future)) => Err(e),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5294,"byte_end":5344,"line_start":125,"line_end":125,"column_start":1,"column_end":51}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5345,"byte_end":5358,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5359,"byte_end":5370,"line_start":127,"line_end":127,"column_start":1,"column_end":12}},{"value":"/     return Box::new(ret);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5371,"byte_end":5400,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5401,"byte_end":5404,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/     fn resolve(url: &str) -> IoFuture<SocketAddr> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5405,"byte_end":5460,"line_start":130,"line_end":130,"column_start":1,"column_end":56}},{"value":"/         // ...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5461,"byte_end":5479,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"/ #       panic!(\"unimplemented\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5480,"byte_end":5516,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5517,"byte_end":5526,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5527,"byte_end":5530,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     fn connect(hostname: &SocketAddr) -> IoFuture<TcpStream> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5531,"byte_end":5597,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"/         // ...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5598,"byte_end":5616,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ #       panic!(\"unimplemented\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5617,"byte_end":5653,"line_start":137,"line_end":137,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5654,"byte_end":5663,"line_start":138,"line_end":138,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5664,"byte_end":5667,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     fn download(stream: TcpStream) -> IoFuture<Vec<u8>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5668,"byte_end":5729,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/         // ...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5730,"byte_end":5748,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ #       panic!(\"unimplemented\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5749,"byte_end":5785,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5786,"byte_end":5795,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5796,"byte_end":5799,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     fn timeout(stream: Duration) -> IoFuture<()> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5800,"byte_end":5854,"line_start":145,"line_end":145,"column_start":1,"column_end":55}},{"value":"/         // ...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5855,"byte_end":5873,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ #       panic!(\"unimplemented\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5874,"byte_end":5910,"line_start":147,"line_end":147,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5911,"byte_end":5920,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5921,"byte_end":5926,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5927,"byte_end":5945,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5946,"byte_end":5953,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Some more information can also be found in the [README] for now, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":5958,"byte_end":6030,"line_start":153,"line_end":153,"column_start":1,"column_end":73}},{"value":"/ otherwise feel free to jump in to the docs below!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6031,"byte_end":6084,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6085,"byte_end":6088,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [README]: https://github.com/rust-lang-nursery/futures-rs#futures-rs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6089,"byte_end":6161,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"no_std","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6163,"byte_end":6173,"line_start":158,"line_end":158,"column_start":1,"column_end":11}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6174,"byte_end":6227,"line_start":159,"line_end":159,"column_start":1,"column_end":54}},{"value":"allow(bare_trait_objects, unknown_lints)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6228,"byte_end":6272,"line_start":160,"line_end":160,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10059,"byte_end":10063,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Poll","qualname":"::poll::Poll","value":"Result<Async<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Return type of the `Future::poll` method, indicates whether a future's value\n is ready or not.","sig":null,"attributes":[{"value":"/ Return type of the `Future::poll` method, indicates whether a future's value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9721,"byte_end":9801,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ is ready or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9802,"byte_end":9822,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9823,"byte_end":9826,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::Ready(t))` means that a future has successfully resolved","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9827,"byte_end":9900,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ * `Ok(Async::NotReady)` means that a future is not ready to complete yet","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9901,"byte_end":9977,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ * `Err(e)` means that a future has completed with the given failure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":9978,"byte_end":10049,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10284,"byte_end":10289,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Ready","qualname":"::poll::Async::Ready","value":"Async::Ready(T)","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Represents that a value is immediately ready.\n","sig":null,"attributes":[{"value":"/ Represents that a value is immediately ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10230,"byte_end":10279,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10370,"byte_end":10378,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::poll::Async::NotReady","value":"Async::NotReady","parent":{"krate":0,"index":4245},"children":[],"decl_id":null,"docs":" Represents that a value is not ready yet, but may be so later.\n","sig":null,"attributes":[{"value":"/ Represents that a value is not ready yet, but may be so later.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10299,"byte_end":10365,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":4245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10215,"byte_end":10220,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Async","qualname":"::poll::Async","value":"pub enum Async<T> { Ready(T), NotReady, }","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4250}],"decl_id":null,"docs":" Return type of future, indicating whether a value is ready or not.\n","sig":null,"attributes":[{"value":"/ Return type of future, indicating whether a value is ready or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10094,"byte_end":10164,"line_start":22,"line_end":22,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10488,"byte_end":10491,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"map","qualname":"<Async<T>>::map","value":"pub fn map<F, U>(Self, F) -> Async<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Change the success value of this `Async` with the closure provided\n","sig":null,"attributes":[{"value":"/ Change the success value of this `Async` with the closure provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10406,"byte_end":10476,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10755,"byte_end":10763,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<Async<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `Async::Ready`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `Async::Ready`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10701,"byte_end":10743,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10956,"byte_end":10968,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"is_not_ready","qualname":"<Async<T>>::is_not_ready","value":"pub fn is_not_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `Async::NotReady`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `Async::NotReady`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10899,"byte_end":10944,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4268},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11420,"byte_end":11425,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"Ready","qualname":"::poll::AsyncSink::Ready","value":"AsyncSink::Ready","parent":{"krate":0,"index":4266},"children":[],"decl_id":null,"docs":" The `start_send` attempt succeeded, so the sending process has\n *started*; you must use `Sink::poll_complete` to drive the send\n to completion.\n","sig":null,"attributes":[{"value":"/ The `start_send` attempt succeeded, so the sending process has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11254,"byte_end":11320,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ *started*; you must use `Sink::poll_complete` to drive the send","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11325,"byte_end":11392,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11397,"byte_end":11415,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4270},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11634,"byte_end":11642,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::poll::AsyncSink::NotReady","value":"AsyncSink::NotReady(T)","parent":{"krate":0,"index":4266},"children":[],"decl_id":null,"docs":" The `start_send` attempt failed due to the sink being full. The value\n being sent is returned, and the current `Task` will be automatically\n notified again once the sink has room.\n","sig":null,"attributes":[{"value":"/ The `start_send` attempt failed due to the sink being full. The value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11432,"byte_end":11505,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ being sent is returned, and the current `Task` will be automatically","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11510,"byte_end":11582,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ notified again once the sink has room.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11587,"byte_end":11629,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11235,"byte_end":11244,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"AsyncSink","qualname":"::poll::AsyncSink","value":"pub enum AsyncSink<T> { Ready, NotReady(T), }","parent":null,"children":[{"krate":0,"index":4268},{"krate":0,"index":4270}],"decl_id":null,"docs":" The result of an asynchronous attempt to send a value to a sink.\n","sig":null,"attributes":[{"value":"/ The result of an asynchronous attempt to send a value to a sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11116,"byte_end":11184,"line_start":63,"line_end":63,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11764,"byte_end":11767,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"map","qualname":"<AsyncSink<T>>::map","value":"pub fn map<F, U>(Self, F) -> AsyncSink<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Change the NotReady value of this `AsyncSink` with the closure provided\n","sig":null,"attributes":[{"value":"/ Change the NotReady value of this `AsyncSink` with the closure provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11677,"byte_end":11752,"line_start":78,"line_end":78,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12056,"byte_end":12064,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<AsyncSink<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `AsyncSink::Ready`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `AsyncSink::Ready`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11998,"byte_end":12044,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12269,"byte_end":12281,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"is_not_ready","qualname":"<AsyncSink<T>>::is_not_ready","value":"pub fn is_not_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `AsyncSink::NotReady`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `AsyncSink::NotReady`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12208,"byte_end":12257,"line_start":96,"line_end":96,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12473,"byte_end":12482,"line_start":105,"line_end":105,"column_start":10,"column_end":19},"name":"StartSend","qualname":"::poll::StartSend","value":"Result<AsyncSink<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Return type of the `Sink::start_send` method, indicating the outcome of a\n send attempt. See `AsyncSink` for more details.\n","sig":null,"attributes":[{"value":"/ Return type of the `Sink::start_send` method, indicating the outcome of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12334,"byte_end":12411,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ send attempt. See `AsyncSink` for more details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":12412,"byte_end":12463,"line_start":104,"line_end":104,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":74},{"krate":0,"index":101},{"krate":0,"index":120},{"krate":0,"index":153},{"krate":0,"index":180},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":299},{"krate":0,"index":330},{"krate":0,"index":360},{"krate":0,"index":382},{"krate":0,"index":404},{"krate":0,"index":429},{"krate":0,"index":450},{"krate":0,"index":471},{"krate":0,"index":494},{"krate":0,"index":520},{"krate":0,"index":546},{"krate":0,"index":569},{"krate":0,"index":595},{"krate":0,"index":623},{"krate":0,"index":643},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":4690},{"krate":0,"index":4728},{"krate":0,"index":4764},{"krate":0,"index":4793},{"krate":0,"index":4820},{"krate":0,"index":4954},{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4968},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":779},{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":794},{"krate":0,"index":800},{"krate":0,"index":807},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":5052},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":819},{"krate":0,"index":824}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"/ Futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12517,"byte_end":12528,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12529,"byte_end":12532,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the `Future` trait and a number of adaptors for this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12533,"byte_end":12610,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ trait. See the crate docs, and the docs for `Future`, for full detail.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":12611,"byte_end":12685,"line_start":4,"line_end":4,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4287},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56485,"byte_end":56490,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Empty","qualname":"::future::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4290}],"decl_id":null,"docs":" A future which is never resolved.","sig":null,"attributes":[{"value":"/ A future which is never resolved.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56308,"byte_end":56345,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56346,"byte_end":56349,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This future can be created with the `empty` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56350,"byte_end":56407,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56425,"byte_end":56473,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56711,"byte_end":56716,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"empty","qualname":"::future::empty::empty","value":"pub fn empty<T, E>() -> Empty<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56542,"byte_end":56622,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56623,"byte_end":56636,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56637,"byte_end":56640,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return `Async::NotReady`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56641,"byte_end":56703,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57309,"byte_end":57313,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4298}],"decl_id":null,"docs":" A future which defers creation of the actual future until a callback is\n scheduled.","sig":null,"attributes":[{"value":"/ A future which defers creation of the actual future until a callback is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57093,"byte_end":57168,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ scheduled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57169,"byte_end":57183,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57184,"byte_end":57187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the `lazy` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57188,"byte_end":57231,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57249,"byte_end":57297,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":58002,"byte_end":58006,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F, R> where F: FnOnce() -> R, R: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will eventually be the same as the one created\n by the closure provided.","sig":null,"attributes":[{"value":"/ Creates a new future which will eventually be the same as the one created","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57448,"byte_end":57525,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ by the closure provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57526,"byte_end":57554,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57555,"byte_end":57558,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future has a callback scheduled","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57559,"byte_end":57636,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ on it, otherwise the callback never runs. Once run, however, this future is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57637,"byte_end":57716,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ the same as the one the closure creates.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57717,"byte_end":57761,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57762,"byte_end":57765,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57766,"byte_end":57780,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57781,"byte_end":57784,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57785,"byte_end":57792,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57793,"byte_end":57820,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57821,"byte_end":57824,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let a = lazy(|| ok::<u32, u32>(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57825,"byte_end":57864,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57865,"byte_end":57868,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let b = lazy(|| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57869,"byte_end":57916,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57917,"byte_end":57941,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57942,"byte_end":57949,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57950,"byte_end":57986,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":57987,"byte_end":57994,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59269,"byte_end":59275,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4320}],"decl_id":null,"docs":" A future which adapts a function returning `Poll`.","sig":null,"attributes":[{"value":"/ A future which adapts a function returning `Poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59094,"byte_end":59148,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59149,"byte_end":59152,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `poll_fn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59153,"byte_end":59191,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59209,"byte_end":59257,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59709,"byte_end":59716,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, E, F>(F) -> PollFn<F> where F: FnMut() -> ::Poll<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning `Poll`.","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning `Poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59298,"byte_end":59367,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59368,"byte_end":59371,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59372,"byte_end":59438,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59439,"byte_end":59442,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59443,"byte_end":59457,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59458,"byte_end":59461,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59462,"byte_end":59469,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59470,"byte_end":59503,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use futures::{Async, Poll};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59504,"byte_end":59535,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59536,"byte_end":59539,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn read_line() -> Poll<String, std::io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59540,"byte_end":59592,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/     Ok(Async::Ready(\"Hello, World!\".into()))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59593,"byte_end":59641,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59642,"byte_end":59647,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59648,"byte_end":59651,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59652,"byte_end":59693,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59694,"byte_end":59701,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60353,"byte_end":60365,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"FutureResult","qualname":"::future::result_::FutureResult","value":"FutureResult {  }","parent":null,"children":[{"krate":0,"index":4327}],"decl_id":null,"docs":" A future representing a value that is immediately ready.","sig":null,"attributes":[{"value":"/ A future representing a value that is immediately ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60107,"byte_end":60167,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60168,"byte_end":60171,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the `result` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60172,"byte_end":60209,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60234,"byte_end":60282,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60904,"byte_end":60910,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"result","qualname":"::future::result_::result","value":"pub fn result<T, E>(result::Result<T, E>) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60418,"byte_end":60491,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60492,"byte_end":60495,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60496,"byte_end":60575,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60576,"byte_end":60652,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60653,"byte_end":60722,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60723,"byte_end":60726,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60727,"byte_end":60741,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60742,"byte_end":60745,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60746,"byte_end":60753,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60754,"byte_end":60781,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60782,"byte_end":60785,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = result::<u32, u32>(Ok(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60786,"byte_end":60834,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ let future_of_err_2 = result::<u32, u32>(Err(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60835,"byte_end":60888,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":60889,"byte_end":60896,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61353,"byte_end":61355,"line_start":48,"line_end":48,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::result_::ok","value":"pub fn ok<T, E>(T) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61005,"byte_end":61074,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61075,"byte_end":61102,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61103,"byte_end":61106,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61107,"byte_end":61185,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61186,"byte_end":61233,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61234,"byte_end":61237,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61238,"byte_end":61252,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61253,"byte_end":61256,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61257,"byte_end":61264,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61265,"byte_end":61292,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61293,"byte_end":61296,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61297,"byte_end":61337,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61338,"byte_end":61345,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61745,"byte_end":61748,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"err","qualname":"::future::result_::err","value":"pub fn err<T, E>(E) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61413,"byte_end":61489,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61490,"byte_end":61493,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61494,"byte_end":61572,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61573,"byte_end":61620,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61621,"byte_end":61624,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61625,"byte_end":61639,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61640,"byte_end":61643,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61644,"byte_end":61651,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61652,"byte_end":61679,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61680,"byte_end":61683,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61684,"byte_end":61729,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61730,"byte_end":61737,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62393,"byte_end":62398,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Break","qualname":"::future::loop_fn::Loop::Break","value":"Loop::Break(T)","parent":{"krate":0,"index":4336},"children":[],"decl_id":null,"docs":" Indicates that the loop has completed with output `T`.\n","sig":null,"attributes":[{"value":"/ Indicates that the loop has completed with output `T`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62330,"byte_end":62388,"line_start":8,"line_end":8,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4342},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62502,"byte_end":62510,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Continue","qualname":"::future::loop_fn::Loop::Continue","value":"Loop::Continue(S)","parent":{"krate":0,"index":4336},"children":[],"decl_id":null,"docs":" Indicates that the loop function should be called again with input\n state `S`.\n","sig":null,"attributes":[{"value":"/ Indicates that the loop function should be called again with input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62408,"byte_end":62478,"line_start":11,"line_end":11,"column_start":5,"column_end":75}},{"value":"/ state `S`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62483,"byte_end":62497,"line_start":12,"line_end":12,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":4336},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62313,"byte_end":62317,"line_start":7,"line_end":7,"column_start":10,"column_end":14},"name":"Loop","qualname":"::future::loop_fn::Loop","value":"pub enum Loop<T, S> { Break(T), Continue(S), }","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4342}],"decl_id":null,"docs":" The status of a `loop_fn` loop.\n","sig":null,"attributes":[{"value":"/ The status of a `loop_fn` loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62251,"byte_end":62286,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62638,"byte_end":62644,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"LoopFn","qualname":"::future::loop_fn::LoopFn","value":"LoopFn {  }","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4353}],"decl_id":null,"docs":" A future implementing a tail-recursive loop.","sig":null,"attributes":[{"value":"/ A future implementing a tail-recursive loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62518,"byte_end":62566,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62567,"byte_end":62570,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Created by the `loop_fn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62571,"byte_end":62609,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64203,"byte_end":64210,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"loop_fn","qualname":"::future::loop_fn::loop_fn","value":"pub fn loop_fn<S, T, A, F>(S, F) -> LoopFn<A, F> where F: FnMut(S) -> A,\nA: IntoFuture<Item = Loop<T, S>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future implementing a tail-recursive loop.","sig":null,"attributes":[{"value":"/ Creates a new future implementing a tail-recursive loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62712,"byte_end":62772,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62773,"byte_end":62776,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The loop function is immediately called with `initial_state` and should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62777,"byte_end":62852,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ return a value that can be converted to a future. On successful completion,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62853,"byte_end":62932,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ this future should output a `Loop<T, S>` to indicate the status of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":62933,"byte_end":63007,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63008,"byte_end":63017,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63018,"byte_end":63021,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Loop::Break(T)` halts the loop and completes the future with output `T`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63022,"byte_end":63099,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63100,"byte_end":63103,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `Loop::Continue(S)` reinvokes the loop function with state `S`. The returned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63104,"byte_end":63184,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ future will be subsequently polled for a new `Loop<T, S>` value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63185,"byte_end":63253,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63254,"byte_end":63257,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63258,"byte_end":63272,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63273,"byte_end":63276,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63277,"byte_end":63284,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{ok, loop_fn, Future, FutureResult, Loop};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63285,"byte_end":63352,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ use std::io::Error;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63353,"byte_end":63376,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63377,"byte_end":63380,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ struct Client {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63381,"byte_end":63400,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     ping_count: u8,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63401,"byte_end":63424,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63425,"byte_end":63430,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63431,"byte_end":63434,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63435,"byte_end":63452,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/     fn new() -> Self {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63453,"byte_end":63479,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/         Client { ping_count: 0 }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63480,"byte_end":63516,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63517,"byte_end":63526,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63527,"byte_end":63530,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     fn send_ping(self) -> FutureResult<Self, Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63531,"byte_end":63588,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/         ok(Client { ping_count: self.ping_count + 1 })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63589,"byte_end":63647,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63648,"byte_end":63657,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63658,"byte_end":63661,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     fn receive_pong(self) -> FutureResult<(Self, bool), Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63662,"byte_end":63730,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/         let done = self.ping_count >= 5;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63731,"byte_end":63775,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/         ok((self, done))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63776,"byte_end":63804,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63805,"byte_end":63814,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63815,"byte_end":63820,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63821,"byte_end":63824,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let ping_til_done = loop_fn(Client::new(), |client| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63825,"byte_end":63882,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/     client.send_ping()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63883,"byte_end":63909,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/         .and_then(|client| client.receive_pong())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63910,"byte_end":63963,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/         .and_then(|(client, done)| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":63964,"byte_end":64004,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/             if done {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64005,"byte_end":64030,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/                 Ok(Loop::Break(client))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64031,"byte_end":64074,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/             } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64075,"byte_end":64099,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/                 Ok(Loop::Continue(client))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64100,"byte_end":64146,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/             }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64147,"byte_end":64164,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64165,"byte_end":64179,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64180,"byte_end":64187,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64188,"byte_end":64195,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65621,"byte_end":65628,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4362}],"decl_id":null,"docs":" Future for the `and_then` combinator, chaining a computation onto the end of\n another future which completes successfully.","sig":null,"attributes":[{"value":"/ Future for the `and_then` combinator, chaining a computation onto the end of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65356,"byte_end":65436,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ another future which completes successfully.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65437,"byte_end":65485,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65486,"byte_end":65489,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::and_then` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65490,"byte_end":65543,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65561,"byte_end":65609,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66574,"byte_end":66581,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":318}],"decl_id":null,"docs":" Future for the `flatten` combinator, flattening a future-of-a-future to get just\n the result of the final future.","sig":null,"attributes":[{"value":"/ Future for the `flatten` combinator, flattening a future-of-a-future to get just","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66336,"byte_end":66420,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ the result of the final future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66421,"byte_end":66456,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66457,"byte_end":66460,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::flatten` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66461,"byte_end":66513,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66514,"byte_end":66562,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67977,"byte_end":67990,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" Future for the `flatten_stream` combinator, flattening a\n future-of-a-stream to get just the result of the final stream as a stream.","sig":null,"attributes":[{"value":"/ Future for the `flatten_stream` combinator, flattening a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67713,"byte_end":67773,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ future-of-a-stream to get just the result of the final stream as a stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67774,"byte_end":67852,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67853,"byte_end":67856,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::flatten_stream` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67857,"byte_end":67916,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":67917,"byte_end":67965,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71079,"byte_end":71083,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4385}],"decl_id":null,"docs":" A future which \"fuses\" a future once it's been resolved.","sig":null,"attributes":[{"value":"/ A future which \"fuses\" a future once it's been resolved.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70651,"byte_end":70711,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70712,"byte_end":70715,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally futures can behave unpredictable once they're used after a future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70716,"byte_end":70794,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ has been resolved, but `Fuse` is always defined to return `Async::NotReady`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70795,"byte_end":70874,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ from `poll` after it has resolved successfully or returned an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70875,"byte_end":70947,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70948,"byte_end":70951,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::fuse` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":70952,"byte_end":71001,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71019,"byte_end":71067,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71550,"byte_end":71557,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<A>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying future has finished or not.\n \n If this method returns `true`, then all future calls to `poll`\n are guaranteed to return `Ok(Async::NotReady)`. If this returns\n false, then the underlying future has not been driven to\n completion.\n","sig":null,"attributes":[{"value":"/ Returns whether the underlying future has finished or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71239,"byte_end":71301,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71306,"byte_end":71310,"line_start":24,"line_end":24,"column_start":5,"column_end":9}},{"value":"/ If this method returns `true`, then all future calls to `poll`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71315,"byte_end":71381,"line_start":25,"line_end":25,"column_start":5,"column_end":71}},{"value":"/ are guaranteed to return `Ok(Async::NotReady)`. If this returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71386,"byte_end":71453,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/ false, then the underlying future has not been driven to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71458,"byte_end":71518,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"/ completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71523,"byte_end":71538,"line_start":28,"line_end":28,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/into_stream.rs","byte_start":72286,"byte_end":72296,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4391}],"decl_id":null,"docs":" Future that forwards one element from the underlying future\n (whether it is success of error) and emits EOF after that.\n","sig":null,"attributes":[{"value":"/ Future that forwards one element from the underlying future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/into_stream.rs","byte_start":72131,"byte_end":72194,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ (whether it is success of error) and emits EOF after that.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/into_stream.rs","byte_start":72195,"byte_end":72257,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":76610,"byte_end":76614,"line_start":122,"line_end":122,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399}],"decl_id":null,"docs":" Future for the `join` combinator, waiting for two futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":73304,"byte_end":73352,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":76789,"byte_end":76794,"line_start":128,"line_end":128,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"decl_id":null,"docs":" Future for the `join3` combinator, waiting for three futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":73304,"byte_end":73352,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":76972,"byte_end":76977,"line_start":134,"line_end":134,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468}],"decl_id":null,"docs":" Future for the `join4` combinator, waiting for four futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":73304,"byte_end":73352,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":77158,"byte_end":77163,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513}],"decl_id":null,"docs":" Future for the `join5` combinator, waiting for five futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":73304,"byte_end":73352,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78176,"byte_end":78179,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4569},{"krate":0,"index":4570}],"decl_id":null,"docs":" Future for the `map` combinator, changing the type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map` combinator, changing the type of a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":77978,"byte_end":78045,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78046,"byte_end":78049,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::map` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78050,"byte_end":78098,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78116,"byte_end":78164,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":79086,"byte_end":79092,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4578},{"krate":0,"index":4579}],"decl_id":null,"docs":" Future for the `map_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map_err` combinator, changing the error type of a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":78874,"byte_end":78951,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":78952,"byte_end":78955,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::map_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":78956,"byte_end":79008,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":79026,"byte_end":79074,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":79975,"byte_end":79982,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FromErr","qualname":"::future::from_err::FromErr","value":"FromErr {  }","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588}],"decl_id":null,"docs":" Future for the `from_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `from_err` combinator, changing the error type of a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":79761,"byte_end":79839,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":79840,"byte_end":79843,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::from_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":79844,"byte_end":79897,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":79915,"byte_end":79963,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80831,"byte_end":80837,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4597}],"decl_id":null,"docs":" Future for the `or_else` combinator, chaining a computation onto the end of\n a future which fails with an error.","sig":null,"attributes":[{"value":"/ Future for the `or_else` combinator, chaining a computation onto the end of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80577,"byte_end":80656,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a future which fails with an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80657,"byte_end":80696,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80697,"byte_end":80700,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::or_else` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80701,"byte_end":80753,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":80771,"byte_end":80819,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81774,"byte_end":81780,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4606}],"decl_id":null,"docs":" Future for the `select` combinator, waiting for one of two futures to\n complete.","sig":null,"attributes":[{"value":"/ Future for the `select` combinator, waiting for one of two futures to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81553,"byte_end":81626,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81627,"byte_end":81640,"line_start":4,"line_end":4,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81641,"byte_end":81644,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::select` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81645,"byte_end":81696,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81714,"byte_end":81762,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4611},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":82132,"byte_end":82142,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"SelectNext","qualname":"::future::select::SelectNext","value":"SelectNext {  }","parent":null,"children":[{"krate":0,"index":4614}],"decl_id":null,"docs":" Future yielded as the second result in a `Select` future.","sig":null,"attributes":[{"value":"/ Future yielded as the second result in a `Select` future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81876,"byte_end":81937,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81938,"byte_end":81941,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This sentinel future represents the completion of the second future to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":81942,"byte_end":82018,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `select` which finished second.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":82019,"byte_end":82054,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":82072,"byte_end":82120,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84410,"byte_end":84417,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Select2","qualname":"::future::select2::Select2","value":"Select2 {  }","parent":null,"children":[{"krate":0,"index":4635}],"decl_id":null,"docs":" Future for the `select2` combinator, waiting for one of two differently-typed\n futures to complete.","sig":null,"attributes":[{"value":"/ Future for the `select2` combinator, waiting for one of two differently-typed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84105,"byte_end":84186,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ futures to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84187,"byte_end":84211,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84212,"byte_end":84215,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`Future::select2`] method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84216,"byte_end":84270,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84271,"byte_end":84274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Future::select2`]: trait.Future.html#method.select2","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84275,"byte_end":84332,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84333,"byte_end":84381,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4640},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85667,"byte_end":85671,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4644}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"/ Future for the `then` combinator, chaining computations on the end of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85416,"byte_end":85489,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ another future regardless of its outcome.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85490,"byte_end":85535,"line_start":5,"line_end":5,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85536,"byte_end":85539,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::then` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85540,"byte_end":85589,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85607,"byte_end":85655,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4653},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86455,"byte_end":86456,"line_start":8,"line_end":8,"column_start":5,"column_end":6},"name":"A","qualname":"::future::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":4650},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86422,"byte_end":86450,"line_start":7,"line_end":7,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4656},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86499,"byte_end":86500,"line_start":10,"line_end":10,"column_start":5,"column_end":6},"name":"B","qualname":"::future::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":4650},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86465,"byte_end":86494,"line_start":9,"line_end":9,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86403,"byte_end":86409,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":4653},{"krate":0,"index":4656}],"decl_id":null,"docs":" Combines two different futures yielding the same item and error\n types into a single type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures yielding the same item and error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86279,"byte_end":86346,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ types into a single type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86347,"byte_end":86376,"line_start":4,"line_end":4,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86733,"byte_end":86738,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"split","qualname":"<Either<(T, A), (T, B)>>::split","value":"pub fn split(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Splits out the homogeneous type from an either of tuples.","sig":null,"attributes":[{"value":"/ Splits out the homogeneous type from an either of tuples.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86551,"byte_end":86612,"line_start":14,"line_end":14,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86617,"byte_end":86620,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is typically useful when combined with the `Future::select2`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86625,"byte_end":86701,"line_start":16,"line_end":16,"column_start":5,"column_end":81}},{"value":"/ combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86706,"byte_end":86721,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":87841,"byte_end":87848,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4666},{"krate":0,"index":4667}],"decl_id":null,"docs":" Do something with the item of a future, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the item of a future, passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":87648,"byte_end":87706,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":87707,"byte_end":87710,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::inspect` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":87711,"byte_end":87763,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":87781,"byte_end":87829,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5005},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843212,"byte_end":12843223,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5007}],"decl_id":null,"docs":" Future for the `catch_unwind` combinator.","sig":null,"attributes":[{"value":"/ Future for the `catch_unwind` combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843027,"byte_end":12843072,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843073,"byte_end":12843076,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::catch_unwind` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843077,"byte_end":12843134,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843152,"byte_end":12843200,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4749},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844721,"byte_end":12844728,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":4751}],"decl_id":null,"docs":" A future which takes a list of futures and resolves with a vector of the\n completed values.","sig":null,"attributes":[{"value":"/ A future which takes a list of futures and resolves with a vector of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844503,"byte_end":12844579,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ completed values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844580,"byte_end":12844601,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844602,"byte_end":12844605,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This future is created with the `join_all` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844606,"byte_end":12844660,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844661,"byte_end":12844709,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846278,"byte_end":12846286,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I> where I: IntoIterator, I::Item: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the results of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the results of the futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845262,"byte_end":12845342,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845343,"byte_end":12845353,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845354,"byte_end":12845357,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845358,"byte_end":12845437,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845438,"byte_end":12845518,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ were provided. If any future returns an error then all other futures will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845519,"byte_end":12845599,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ canceled and an error will be returned immediately. If all futures complete","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845600,"byte_end":12845679,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ successfully, however, then the returned future will succeed with a `Vec` of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845680,"byte_end":12845760,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ all the successful results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845761,"byte_end":12845792,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845793,"byte_end":12845796,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845797,"byte_end":12845811,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845812,"byte_end":12845815,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845816,"byte_end":12845823,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845824,"byte_end":12845851,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845852,"byte_end":12845855,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let f = join_all(vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845856,"byte_end":12845882,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(1),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845883,"byte_end":12845909,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(2),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845910,"byte_end":12845936,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(3),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845937,"byte_end":12845963,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845964,"byte_end":12845971,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ let f = f.map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845972,"byte_end":12845995,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     assert_eq!(x, [1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12845996,"byte_end":12846029,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846030,"byte_end":12846037,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846038,"byte_end":12846041,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let f = join_all(vec![","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846042,"byte_end":12846068,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/     Box::new(ok::<u32, u32>(1)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846069,"byte_end":12846105,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/     Box::new(err::<u32, u32>(2)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846106,"byte_end":12846143,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     Box::new(ok::<u32, u32>(3)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846144,"byte_end":12846180,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/ ]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846181,"byte_end":12846188,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ let f = f.then(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846189,"byte_end":12846213,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/     assert_eq!(x, Err(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846214,"byte_end":12846244,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/     x","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846245,"byte_end":12846254,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846255,"byte_end":12846262,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846263,"byte_end":12846270,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848489,"byte_end":12848498,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":5024}],"decl_id":null,"docs":" Future for the `select_all` combinator, waiting for one of any of a list of\n futures to complete.","sig":null,"attributes":[{"value":"/ Future for the `select_all` combinator, waiting for one of any of a list of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848253,"byte_end":12848332,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ futures to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848333,"byte_end":12848357,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848358,"byte_end":12848361,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the `select_all` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848362,"byte_end":12848411,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848429,"byte_end":12848477,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":4782},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848566,"byte_end":12848579,"line_start":20,"line_end":20,"column_start":10,"column_end":23},"name":"SelectAllNext","qualname":"::future::select_all::SelectAllNext","value":"A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12849006,"byte_end":12849016,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<<I::Item as IntoFuture>::Future> where\nI: IntoIterator, I::Item: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848589,"byte_end":12848655,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848656,"byte_end":12848659,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848660,"byte_end":12848740,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ completion or failure the item resolved will be returned, along with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848741,"byte_end":12848817,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ index of the future that was ready and the list of all the remaining","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848818,"byte_end":12848890,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848891,"byte_end":12848903,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848904,"byte_end":12848907,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848908,"byte_end":12848920,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848921,"byte_end":12848924,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12848925,"byte_end":12848998,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850715,"byte_end":12850723,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":5030}],"decl_id":null,"docs":" Future for the `select_ok` combinator, waiting for one of any of a list of\n futures to successfully complete. Unlike `select_all`, this future ignores all\n but the last error, if there are any.","sig":null,"attributes":[{"value":"/ Future for the `select_ok` combinator, waiting for one of any of a list of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850381,"byte_end":12850459,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ futures to successfully complete. Unlike `select_all`, this future ignores all","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850460,"byte_end":12850542,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ but the last error, if there are any.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850543,"byte_end":12850584,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850585,"byte_end":12850588,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is created by the `select_ok` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850589,"byte_end":12850637,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850655,"byte_end":12850703,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851271,"byte_end":12851280,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<<I::Item as IntoFuture>::Future> where\nI: IntoIterator, I::Item: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850767,"byte_end":12850861,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850862,"byte_end":12850865,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850866,"byte_end":12850955,"line_start":22,"line_end":22,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12850956,"byte_end":12851040,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851041,"byte_end":12851122,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851123,"byte_end":12851168,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851169,"byte_end":12851172,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851173,"byte_end":12851185,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851186,"byte_end":12851189,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851190,"byte_end":12851263,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4880},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12853929,"byte_end":12853935,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":4882},{"krate":0,"index":4883}],"decl_id":null,"docs":" A future that is cloneable and can be polled in multiple threads.\n Use `Future::shared()` method to convert any future into a `Shared` future.\n","sig":null,"attributes":[{"value":"/ A future that is cloneable and can be polled in multiple threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12853719,"byte_end":12853788,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ Use `Future::shared()` method to convert any future into a `Shared` future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12853789,"byte_end":12853868,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12853869,"byte_end":12853917,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855409,"byte_end":12855412,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.12\", note = \"use `Future::shared` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855268,"byte_end":12855338,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855343,"byte_end":12855378,"line_start":83,"line_end":83,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4905},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855682,"byte_end":12855686,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<F>>::peek","value":"pub fn peek(&Self)\n-> Option<Result<SharedItem<F::Item>, SharedError<F::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" If any clone of this `Shared` has completed execution, returns its result immediately\n without blocking. Otherwise, returns None without triggering the work represented by\n this `Shared`.\n","sig":null,"attributes":[{"value":"/ If any clone of this `Shared` has completed execution, returns its result immediately","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855465,"byte_end":12855554,"line_start":89,"line_end":89,"column_start":5,"column_end":94}},{"value":"/ without blocking. Otherwise, returns None without triggering the work represented by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855559,"byte_end":12855647,"line_start":90,"line_end":90,"column_start":5,"column_end":93}},{"value":"/ this `Shared`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855652,"byte_end":12855670,"line_start":91,"line_end":91,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5034},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860476,"byte_end":12860486,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"SharedItem","qualname":"::future::shared::SharedItem","value":"SharedItem {  }","parent":null,"children":[{"krate":0,"index":5036}],"decl_id":null,"docs":" A wrapped item of the original future that is cloneable and implements Deref\n for ease of use.\n","sig":null,"attributes":[{"value":"/ A wrapped item of the original future that is cloneable and implements Deref","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860339,"byte_end":12860419,"line_start":250,"line_end":250,"column_start":1,"column_end":81}},{"value":"/ for ease of use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860420,"byte_end":12860440,"line_start":251,"line_end":251,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":5043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860777,"byte_end":12860788,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"SharedError","qualname":"::future::shared::SharedError","value":"SharedError {  }","parent":null,"children":[{"krate":0,"index":5045}],"decl_id":null,"docs":" A wrapped error of the original future that is cloneable and implements Deref\n for ease of use.\n","sig":null,"attributes":[{"value":"/ A wrapped error of the original future that is cloneable and implements Deref","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860639,"byte_end":12860720,"line_start":265,"line_end":265,"column_start":1,"column_end":82}},{"value":"/ for ease of use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860721,"byte_end":12860741,"line_start":266,"line_end":266,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":4997},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15651,"byte_end":15660,"line_start":106,"line_end":106,"column_start":14,"column_end":23},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"::std::boxed::Box<Future<Item = T, Error = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Future + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6444,"byte_end":6471,"line_start":169,"line_end":169,"column_start":9,"column_end":36}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15390,"byte_end":15637,"line_start":103,"line_end":105,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":730},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18908,"byte_end":18914,"line_start":178,"line_end":178,"column_start":11,"column_end":17},"name":"Future","qualname":"::future::Future","value":"Future","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":766},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15979,"byte_end":16049,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16050,"byte_end":16092,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16093,"byte_end":16096,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ In addition to the documentation here you can also find more information","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16097,"byte_end":16173,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ about futures [online] at [https://tokio.rs](https://tokio.rs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16174,"byte_end":16240,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16241,"byte_end":16244,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/futures/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16245,"byte_end":16305,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16306,"byte_end":16309,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Futures are used to provide a sentinel through which a value can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16310,"byte_end":16381,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/ referenced. They crucially allow chaining and composing operations through","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16382,"byte_end":16460,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ consumption which allows expressing entire trees of computation as one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16461,"byte_end":16535,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ sentinel value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16536,"byte_end":16555,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16556,"byte_end":16559,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The ergonomics and implementation of the `Future` trait are very similar to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16560,"byte_end":16639,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ the `Iterator` trait in that there is just one methods you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16640,"byte_end":16707,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ to implement, but you get a whole lot of others for free as a result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16708,"byte_end":16781,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16782,"byte_end":16785,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # The `poll` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16786,"byte_end":16809,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16810,"byte_end":16813,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The core method of future, `poll`, is used to attempt to generate the value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16814,"byte_end":16893,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ of a `Future`. This method *does not block* but is allowed to inform the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16894,"byte_end":16970,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/ caller that the value is not ready yet. Implementations of `poll` may","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":16971,"byte_end":17044,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ themselves do work to generate the value, but it's guaranteed that this will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17045,"byte_end":17125,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ never block the calling thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17126,"byte_end":17161,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17162,"byte_end":17165,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ A key aspect of this method is that if the value is not yet available the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17166,"byte_end":17243,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ current task is scheduled to receive a notification when it's later ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17244,"byte_end":17324,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ be made available. This follows what's typically known as a \"readiness\" or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17325,"byte_end":17403,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ \"pull\" model where values are pulled out of futures on demand, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17404,"byte_end":17474,"line_start":148,"line_end":148,"column_start":1,"column_end":71}},{"value":"/ otherwise a task is notified when a value might be ready to get pulled out.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17475,"byte_end":17554,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17555,"byte_end":17558,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The `poll` method is not intended to be called in general, but rather is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17559,"byte_end":17635,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/ typically called in the context of a \"task\" which drives a future to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17636,"byte_end":17708,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/ completion. For more information on this see the `task` module.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17709,"byte_end":17776,"line_start":153,"line_end":153,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17777,"byte_end":17780,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ More information about the details of `poll` and the nitty-gritty of tasks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17781,"byte_end":17859,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ can be [found online at tokio.rs][poll-dox].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17860,"byte_end":17908,"line_start":156,"line_end":156,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17909,"byte_end":17912,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [poll-dox]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17913,"byte_end":17986,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17987,"byte_end":17990,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Combinators","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":17991,"byte_end":18008,"line_start":160,"line_end":160,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18009,"byte_end":18012,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Like iterators, futures provide a large number of combinators to work with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18013,"byte_end":18091,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ futures to express computations in a much more natural method than","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18092,"byte_end":18162,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/ scheduling a number of callbacks. For example the `map` method can change","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18163,"byte_end":18240,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ a `Future<Item=T>` to a `Future<Item=U>` or an `and_then` combinator could","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18241,"byte_end":18319,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ create a future after the first one is done and only be resolved when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18320,"byte_end":18397,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/ second is done.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18398,"byte_end":18417,"line_start":167,"line_end":167,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18418,"byte_end":18421,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Combinators act very similarly to the methods on the `Iterator` trait itself","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18422,"byte_end":18502,"line_start":169,"line_end":169,"column_start":1,"column_end":81}},{"value":"/ or those on `Option` and `Result`. Like with iterators, the combinators are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18503,"byte_end":18582,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ zero-cost and don't impose any extra layers of indirection you wouldn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18583,"byte_end":18658,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ otherwise have to write down.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18659,"byte_end":18692,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18693,"byte_end":18696,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ More information about combinators can be found [on tokio.rs].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18697,"byte_end":18763,"line_start":174,"line_end":174,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18764,"byte_end":18767,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ [on tokio.rs]: https://tokio.rs/docs/going-deeper-futures/futures-mechanics/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18768,"byte_end":18848,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18849,"byte_end":18897,"line_start":177,"line_end":177,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":731},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19017,"byte_end":19021,"line_start":181,"line_end":181,"column_start":10,"column_end":14},"name":"Item","qualname":"::future::Future::Item","value":"type Item;","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18921,"byte_end":18987,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":18992,"byte_end":19007,"line_start":180,"line_end":180,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":732},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19135,"byte_end":19140,"line_start":185,"line_end":185,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::Future::Error","value":"type Error;","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" The type of error that this future will resolve with if it fails in a\n normal fashion.\n","sig":null,"attributes":[{"value":"/ The type of error that this future will resolve with if it fails in a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19028,"byte_end":19101,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ normal fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19106,"byte_end":19125,"line_start":184,"line_end":184,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23847,"byte_end":23851,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"poll","qualname":"::future::Future::poll","value":"pub fn poll(&mut Self) -> Poll<Self::Item, Self::Error>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Query this future to see if its value has become available, registering\n interest if it is not.","sig":null,"attributes":[{"value":"/ Query this future to see if its value has become available, registering","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19147,"byte_end":19222,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ interest if it is not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19227,"byte_end":19253,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19258,"byte_end":19261,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function will check the internal state of the future and assess","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19266,"byte_end":19338,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ whether the value is ready to be produced. Implementers of this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19343,"byte_end":19419,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ should ensure that a call to this **never blocks** as event loops may","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19424,"byte_end":19497,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ not work properly otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19502,"byte_end":19534,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19539,"byte_end":19542,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ When a future is not ready yet, the `Async::NotReady` value will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19547,"byte_end":19618,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ returned. In this situation the future will *also* register interest of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19623,"byte_end":19698,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ the current task in the value being produced. This is done by calling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19703,"byte_end":19776,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ `task::park` to retrieve a handle to the current `Task`. When the future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19781,"byte_end":19857,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ is then ready to make progress (e.g. it should be `poll`ed again) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19862,"byte_end":19935,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ `unpark` method is called on the `Task`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19940,"byte_end":19984,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19989,"byte_end":19992,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ More information about the details of `poll` and the nitty-gritty of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":19997,"byte_end":20069,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ tasks can be [found online at tokio.rs][poll-dox].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20074,"byte_end":20128,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20133,"byte_end":20136,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [poll-dox]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20141,"byte_end":20214,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20219,"byte_end":20222,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Runtime characteristics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20227,"byte_end":20256,"line_start":207,"line_end":207,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20261,"byte_end":20264,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This function, `poll`, is the primary method for 'making progress'","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20269,"byte_end":20339,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ within a tree of futures. For example this method will be called","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20344,"byte_end":20412,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ repeatedly as the internal state machine makes its various transitions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20417,"byte_end":20492,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ Executors are responsible for ensuring that this function is called in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20497,"byte_end":20571,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the right location (e.g. always on an I/O thread or not). Unless it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20576,"byte_end":20650,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ otherwise arranged to be so, it should be ensured that **implementations","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20655,"byte_end":20731,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ of this function finish very quickly**.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20736,"byte_end":20779,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20784,"byte_end":20787,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Returning quickly prevents unnecessarily clogging up threads and/or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20792,"byte_end":20863,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ event loops while a `poll` function call, for example, takes up compute","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20868,"byte_end":20943,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ resources to perform some expensive computation. If it is known ahead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":20948,"byte_end":21021,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ of time that a call to `poll` may end up taking awhile, the work should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21026,"byte_end":21101,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ be offloaded to a thread pool (or something similar) to ensure that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21106,"byte_end":21177,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ `poll` can return quickly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21182,"byte_end":21212,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21217,"byte_end":21220,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Note that the `poll` function is not called repeatedly in a loop for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21225,"byte_end":21297,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ futures typically, but only whenever the future itself is ready. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21302,"byte_end":21373,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ you're familiar with the `poll(2)` or `select(2)` syscalls on Unix","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21378,"byte_end":21448,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ it's worth noting that futures typically do *not* suffer the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21453,"byte_end":21522,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ problems of \"all wakeups must poll all events\". Futures have enough","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21527,"byte_end":21598,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ support for only polling futures which cause a wakeup.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21603,"byte_end":21661,"line_start":229,"line_end":229,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21666,"byte_end":21669,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21674,"byte_end":21692,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21697,"byte_end":21700,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function returns `Async::NotReady` if the future is not ready yet,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21705,"byte_end":21780,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ `Err` if the future is finished but resolved to an error, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21785,"byte_end":21849,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/ `Async::Ready` with the result of this future if it's finished","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21854,"byte_end":21920,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/ successfully. Once a future has finished it is considered a contract","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":21925,"byte_end":21997,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ error to continue polling the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22002,"byte_end":22043,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22048,"byte_end":22051,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned, then the future will internally register","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22056,"byte_end":22127,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ interest in the value being produced for the current task (through","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22132,"byte_end":22202,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ `task::park`). In other words, the current task will receive a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22207,"byte_end":22273,"line_start":241,"line_end":241,"column_start":5,"column_end":71}},{"value":"/ notification (through the `unpark` method) once the value is ready to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22278,"byte_end":22354,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ produced or the future can make progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22359,"byte_end":22404,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22409,"byte_end":22412,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Note that if `NotReady` is returned it only means that *this* task will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22417,"byte_end":22492,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ receive a notification. Historical calls to `poll` with different tasks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22497,"byte_end":22572,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ will not receive notifications. In other words, implementers of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22577,"byte_end":22648,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ `Future` trait need not store a queue of tasks to notify, but only the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22653,"byte_end":22727,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ last task that called this method. Alternatively callers of this method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22732,"byte_end":22807,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ can only rely on the most recent task which call `poll` being notified","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22812,"byte_end":22886,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ when a future is ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22891,"byte_end":22918,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22923,"byte_end":22926,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22931,"byte_end":22943,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22948,"byte_end":22951,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Once a future has completed (returned `Ready` or `Err` from `poll`),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":22956,"byte_end":23028,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ then any future calls to `poll` may panic, block forever, or otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23033,"byte_end":23107,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ cause wrong behavior. The `Future` trait itself provides no guarantees","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23112,"byte_end":23186,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ about the behavior of `poll` after a future has completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23191,"byte_end":23253,"line_start":258,"line_end":258,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23258,"byte_end":23261,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Callers who may call `poll` too many times may want to consider using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23266,"byte_end":23339,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ the `fuse` adaptor which defines the behavior of `poll`, but comes with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23344,"byte_end":23419,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ a little bit of extra cost.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23424,"byte_end":23455,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23460,"byte_end":23463,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Additionally, calls to `poll` must always be made from within the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23468,"byte_end":23537,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ context of a task. If a current task is not set then this method will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23542,"byte_end":23615,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ likely panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23620,"byte_end":23637,"line_start":266,"line_end":266,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23642,"byte_end":23645,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23650,"byte_end":23662,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23667,"byte_end":23670,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This future may have failed to finish the computation, in which case","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23675,"byte_end":23747,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ the `Err` variant will be returned with an appropriate payload of an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23752,"byte_end":23824,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23829,"byte_end":23839,"line_start":272,"line_end":272,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25045,"byte_end":25049,"line_start":297,"line_end":297,"column_start":8,"column_end":12},"name":"wait","qualname":"::future::Future::wait","value":"pub fn wait(Self) -> result::Result<Self::Item, Self::Error> where Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Block the current thread until this future is resolved.","sig":null,"attributes":[{"value":"/ Block the current thread until this future is resolved.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23902,"byte_end":23961,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23966,"byte_end":23969,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This method will consume ownership of this future, driving it to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":23974,"byte_end":24042,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ completion via `poll` and blocking the current thread while it's waiting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24047,"byte_end":24123,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ for the value to become available. Once the future is resolved the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24128,"byte_end":24198,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ result of this future is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24203,"byte_end":24241,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24246,"byte_end":24249,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ > **Note:** This method is not appropriate to call on event loops or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24254,"byte_end":24326,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ >           similar I/O situations because it will prevent the event","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24331,"byte_end":24403,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ >           loop from making progress (this blocks the thread). This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24408,"byte_end":24480,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ >           method should only be called when it's guaranteed that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24485,"byte_end":24559,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ >           blocking work associated with this future will be completed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24564,"byte_end":24639,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ >           by another thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24644,"byte_end":24678,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24683,"byte_end":24686,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24691,"byte_end":24759,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24764,"byte_end":24821,"line_start":290,"line_end":290,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24826,"byte_end":24829,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24834,"byte_end":24846,"line_start":292,"line_end":292,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24851,"byte_end":24854,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This function does not attempt to catch panics. If the `poll` function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24859,"byte_end":24933,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ of this future panics, panics will be propagated to the caller.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":24938,"byte_end":25005,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25010,"byte_end":25037,"line_start":296,"line_end":296,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26370,"byte_end":26375,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::Future::boxed","value":"pub fn boxed(Self) -> BoxFuture<Self::Item, Self::Error> where Self: Sized +\nSend + 'static","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Convenience function for turning this future into a trait object which\n is also `Send`.","sig":null,"attributes":[{"value":"/ Convenience function for turning this future into a trait object which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25188,"byte_end":25262,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ is also `Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25267,"byte_end":25286,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25291,"byte_end":25294,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This simply avoids the need to write `Box::new` and can often help with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25299,"byte_end":25374,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ type inference as well by always returning a trait object. Note that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25379,"byte_end":25451,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ this method requires the `Send` bound and returns a `BoxFuture`, which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25456,"byte_end":25530,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ also encodes this. If you'd like to create a `Box<Future>` without the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25535,"byte_end":25609,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ `Send` bound, then the `Box::new` function can be used instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25614,"byte_end":25681,"line_start":310,"line_end":310,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25686,"byte_end":25689,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25694,"byte_end":25762,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25767,"byte_end":25824,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25829,"byte_end":25832,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25837,"byte_end":25851,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25856,"byte_end":25859,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25864,"byte_end":25871,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25876,"byte_end":25904,"line_start":318,"line_end":318,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{BoxFuture, result};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25909,"byte_end":25954,"line_start":319,"line_end":319,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25959,"byte_end":25962,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let a: BoxFuture<i32, i32> = result(Ok(1)).boxed();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":25967,"byte_end":26022,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26027,"byte_end":26034,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26039,"byte_end":26066,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26090,"byte_end":26337,"line_start":325,"line_end":327,"column_start":5,"column_end":98}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26342,"byte_end":26362,"line_start":328,"line_end":328,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27848,"byte_end":27851,"line_start":371,"line_end":371,"column_start":8,"column_end":11},"name":"map","qualname":"::future::Future::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Item) -> U,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26517,"byte_end":26592,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26597,"byte_end":26620,"line_start":336,"line_end":336,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26625,"byte_end":26628,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26633,"byte_end":26707,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26712,"byte_end":26783,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26788,"byte_end":26850,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26855,"byte_end":26858,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The closure provided will only be called if this future is resolved","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26863,"byte_end":26934,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ successfully. If this future returns an error, panics, or is dropped,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":26939,"byte_end":27012,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ then the closure provided will never be invoked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27017,"byte_end":27069,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27074,"byte_end":27077,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27082,"byte_end":27153,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27158,"byte_end":27229,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27234,"byte_end":27255,"line_start":348,"line_end":348,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27260,"byte_end":27263,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27268,"byte_end":27282,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27287,"byte_end":27290,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27295,"byte_end":27302,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27307,"byte_end":27335,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27340,"byte_end":27364,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27369,"byte_end":27372,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27377,"byte_end":27420,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27425,"byte_end":27468,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.wait(), Ok(4));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27473,"byte_end":27514,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27519,"byte_end":27526,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27531,"byte_end":27534,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Calling `map` on an errored `Future` has no effect:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27539,"byte_end":27594,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27599,"byte_end":27602,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27607,"byte_end":27614,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27619,"byte_end":27647,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27652,"byte_end":27676,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27681,"byte_end":27684,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let future = future::err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27689,"byte_end":27733,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27738,"byte_end":27781,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.wait(), Err(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27786,"byte_end":27828,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":27833,"byte_end":27840,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29254,"byte_end":29261,"line_start":411,"line_end":411,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::Future::map_err","value":"pub fn map_err<F, E>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Map this future's error to a different error, returning a new future.","sig":null,"attributes":[{"value":"/ Map this future's error to a different error, returning a new future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28034,"byte_end":28107,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28112,"byte_end":28115,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Result::map_err` where it will change","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28120,"byte_end":28194,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/ the error type of the underlying future. This is useful for example to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28199,"byte_end":28273,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ ensure that futures have the same error type when used with combinators","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28278,"byte_end":28353,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ like `select` and `join`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28358,"byte_end":28387,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28392,"byte_end":28395,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The closure provided will only be called if this future is resolved","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28400,"byte_end":28471,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ with an error. If this future returns a success, panics, or is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28476,"byte_end":28542,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/ dropped, then the closure provided will never be invoked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28547,"byte_end":28608,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28613,"byte_end":28616,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28621,"byte_end":28692,"line_start":389,"line_end":389,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28697,"byte_end":28723,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28728,"byte_end":28731,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28736,"byte_end":28750,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28755,"byte_end":28758,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28763,"byte_end":28770,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28775,"byte_end":28802,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28807,"byte_end":28810,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let future = err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28815,"byte_end":28851,"line_start":397,"line_end":397,"column_start":5,"column_end":41}},{"value":"/ let new_future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28856,"byte_end":28903,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(new_future.wait(), Err(4));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28908,"byte_end":28950,"line_start":399,"line_end":399,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28955,"byte_end":28962,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28967,"byte_end":28970,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Calling `map_err` on a successful `Future` has no effect:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":28975,"byte_end":29036,"line_start":402,"line_end":402,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29041,"byte_end":29044,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29049,"byte_end":29056,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29061,"byte_end":29088,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29093,"byte_end":29096,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let future = ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29101,"byte_end":29136,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ let new_future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29141,"byte_end":29188,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(new_future.wait(), Ok(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29193,"byte_end":29234,"line_start":409,"line_end":409,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29239,"byte_end":29246,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30281,"byte_end":30289,"line_start":441,"line_end":441,"column_start":8,"column_end":16},"name":"from_err","qualname":"::future::Future::from_err","value":"pub fn from_err<E: From<Self::Error>>(Self) -> FromErr<Self, E> where\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Map this future's error to any error implementing `From` for\n this future's `Error`, returning a new future.","sig":null,"attributes":[{"value":"/ Map this future's error to any error implementing `From` for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29453,"byte_end":29517,"line_start":420,"line_end":420,"column_start":5,"column_end":69}},{"value":"/ this future's `Error`, returning a new future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29522,"byte_end":29572,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29577,"byte_end":29580,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function does for futures what `try!` does for `Result`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29585,"byte_end":29650,"line_start":423,"line_end":423,"column_start":5,"column_end":70}},{"value":"/ by letting the compiler infer the type of the resulting error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29655,"byte_end":29721,"line_start":424,"line_end":424,"column_start":5,"column_end":71}},{"value":"/ Just as `map_err` above, this is useful for example to ensure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29726,"byte_end":29791,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/ that futures have the same error type when used with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29796,"byte_end":29852,"line_start":426,"line_end":426,"column_start":5,"column_end":61}},{"value":"/ combinators like `select` and `join`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29857,"byte_end":29898,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29903,"byte_end":29906,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29911,"byte_end":29982,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":29987,"byte_end":30013,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30018,"byte_end":30021,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30026,"byte_end":30040,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30045,"byte_end":30048,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30053,"byte_end":30060,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30065,"byte_end":30093,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30098,"byte_end":30122,"line_start":436,"line_end":436,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30127,"byte_end":30130,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let future_with_err_u8 = future::err::<(), u8>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30135,"byte_end":30189,"line_start":438,"line_end":438,"column_start":5,"column_end":59}},{"value":"/ let future_with_err_u32 = future_with_err_u8.from_err::<u32>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30194,"byte_end":30261,"line_start":439,"line_end":439,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30266,"byte_end":30273,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31898,"byte_end":31902,"line_start":485,"line_end":485,"column_start":8,"column_end":12},"name":"then","qualname":"::future::Future::then","value":"pub fn then<F, B>(Self, F) -> Then<Self, B, F> where\nF: FnOnce(result::Result<Self::Item, Self::Error>) -> B, B: IntoFuture,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30444,"byte_end":30520,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30525,"byte_end":30568,"line_start":448,"line_end":448,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30573,"byte_end":30576,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function can be used to ensure a computation runs regardless of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30581,"byte_end":30653,"line_start":450,"line_end":450,"column_start":5,"column_end":77}},{"value":"/ the conclusion of the future. The closure provided will be yielded a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30658,"byte_end":30730,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ `Result` once the future is complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30735,"byte_end":30776,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30781,"byte_end":30784,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30789,"byte_end":30864,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30869,"byte_end":30943,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":30948,"byte_end":31020,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31025,"byte_end":31096,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31101,"byte_end":31127,"line_start":458,"line_end":458,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31132,"byte_end":31135,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped or panics then the closure `f` will not be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31140,"byte_end":31212,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/ run.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31217,"byte_end":31225,"line_start":461,"line_end":461,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31230,"byte_end":31233,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31238,"byte_end":31309,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31314,"byte_end":31340,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31345,"byte_end":31348,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31353,"byte_end":31367,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31372,"byte_end":31375,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31380,"byte_end":31387,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31392,"byte_end":31420,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31425,"byte_end":31449,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31454,"byte_end":31457,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31462,"byte_end":31510,"line_start":472,"line_end":472,"column_start":5,"column_end":53}},{"value":"/ let future_of_4 = future_of_1.then(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31515,"byte_end":31559,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/     x.map(|y| y + 3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31564,"byte_end":31588,"line_start":474,"line_end":474,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31593,"byte_end":31600,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31605,"byte_end":31608,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31613,"byte_end":31666,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/ let future_of_4 = future_of_err_1.then(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31671,"byte_end":31719,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/     match x {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31724,"byte_end":31741,"line_start":479,"line_end":479,"column_start":5,"column_end":22}},{"value":"/         Ok(_) => panic!(\"expected an error\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31746,"byte_end":31795,"line_start":480,"line_end":480,"column_start":5,"column_end":54}},{"value":"/         Err(y) => future::ok::<u32, u32>(y + 3),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31800,"byte_end":31852,"line_start":481,"line_end":481,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31857,"byte_end":31866,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31871,"byte_end":31878,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":31883,"byte_end":31890,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33474,"byte_end":33482,"line_start":526,"line_end":526,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::Future::and_then","value":"pub fn and_then<F, B>(Self, F) -> AndThen<Self, B, F> where\nF: FnOnce(Self::Item) -> B, B: IntoFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Execute another future after this one has resolved successfully.","sig":null,"attributes":[{"value":"/ Execute another future after this one has resolved successfully.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32151,"byte_end":32219,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function can be used to chain two futures together and ensure that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ the final future isn't resolved until both have finished. The closure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32312,"byte_end":32385,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ provided is yielded the successful result of this future and returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32390,"byte_end":32462,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ another value which can be converted into a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32467,"byte_end":32522,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32527,"byte_end":32530,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Note that because `Result` implements the `IntoFuture` trait this method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32535,"byte_end":32611,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ can also be useful for chaining fallible and serial computations onto","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32616,"byte_end":32689,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ the end of one future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32694,"byte_end":32720,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32725,"byte_end":32728,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped, panics, or completes with an error then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32733,"byte_end":32807,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ provided closure `f` is never called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32812,"byte_end":32853,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32858,"byte_end":32861,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32866,"byte_end":32937,"line_start":507,"line_end":507,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32942,"byte_end":32968,"line_start":508,"line_end":508,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32973,"byte_end":32976,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":32981,"byte_end":32995,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33000,"byte_end":33003,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33008,"byte_end":33015,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33020,"byte_end":33048,"line_start":513,"line_end":513,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33053,"byte_end":33099,"line_start":514,"line_end":514,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33104,"byte_end":33107,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33112,"byte_end":33160,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/ let future_of_4 = future_of_1.and_then(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33165,"byte_end":33213,"line_start":517,"line_end":517,"column_start":5,"column_end":53}},{"value":"/     Ok(x + 3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33218,"byte_end":33235,"line_start":518,"line_end":518,"column_start":5,"column_end":22}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33240,"byte_end":33247,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33252,"byte_end":33255,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33260,"byte_end":33313,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/ future_of_err_1.and_then(|_| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33318,"byte_end":33378,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/     panic!(\"should not be called in case of an error\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33383,"byte_end":33442,"line_start":523,"line_end":523,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33447,"byte_end":33454,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33459,"byte_end":33466,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35056,"byte_end":35063,"line_start":567,"line_end":567,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::Future::or_else","value":"pub fn or_else<F, B>(Self, F) -> OrElse<Self, B, F> where\nF: FnOnce(Self::Error) -> B, B: IntoFuture<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Execute another future if this one resolves with an error.","sig":null,"attributes":[{"value":"/ Execute another future if this one resolves with an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33733,"byte_end":33795,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33800,"byte_end":33803,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Return a future that passes along this future's value if it succeeds,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33808,"byte_end":33881,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ and otherwise passes the error to the closure `f` and waits for the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33886,"byte_end":33957,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ future it returns. The closure may also simply return a value that can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":33962,"byte_end":34036,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ be converted into a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34041,"byte_end":34072,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34077,"byte_end":34080,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ Note that because `Result` implements the `IntoFuture` trait this method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34085,"byte_end":34161,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ can also be useful for chaining together fallback computations, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34166,"byte_end":34239,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/ when one fails, the next is attempted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34244,"byte_end":34286,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34291,"byte_end":34294,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped, panics, or completes successfully then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34299,"byte_end":34372,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ provided closure `f` is never called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34377,"byte_end":34418,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34423,"byte_end":34426,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34431,"byte_end":34502,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34507,"byte_end":34533,"line_start":549,"line_end":549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34538,"byte_end":34541,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34546,"byte_end":34560,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34565,"byte_end":34568,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34573,"byte_end":34580,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34585,"byte_end":34613,"line_start":554,"line_end":554,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34618,"byte_end":34664,"line_start":555,"line_end":555,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34669,"byte_end":34672,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34677,"byte_end":34730,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/ let future_of_4 = future_of_err_1.or_else(|x| -> Result<u32, u32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34735,"byte_end":34806,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/     Ok(x + 3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34811,"byte_end":34828,"line_start":559,"line_end":559,"column_start":5,"column_end":22}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34833,"byte_end":34840,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34845,"byte_end":34848,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34853,"byte_end":34901,"line_start":562,"line_end":562,"column_start":5,"column_end":53}},{"value":"/ future_of_1.or_else(|_| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34906,"byte_end":34961,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/     panic!(\"should not be called in case of success\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":34966,"byte_end":35024,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35029,"byte_end":35036,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35041,"byte_end":35048,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37067,"byte_end":37073,"line_start":625,"line_end":625,"column_start":8,"column_end":14},"name":"select","qualname":"::future::Future::select","value":"pub fn select<B>(Self, B) -> Select<Self, B::Future> where B: IntoFuture<Item\n= Self::Item, Error = Self::Item>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Waits for either one of two futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two futures to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35311,"byte_end":35363,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35368,"byte_end":35371,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits for either this or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35376,"byte_end":35450,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ the `other` future to complete. The returned future will finish with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35455,"byte_end":35527,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ both the value resolved and a future representing the completion of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35532,"byte_end":35607,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ other work. Both futures must have the same item and error type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35612,"byte_end":35680,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35685,"byte_end":35688,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35693,"byte_end":35765,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35770,"byte_end":35798,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35803,"byte_end":35806,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35811,"byte_end":35825,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35830,"byte_end":35833,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35838,"byte_end":35851,"line_start":587,"line_end":587,"column_start":5,"column_end":18}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35856,"byte_end":35884,"line_start":588,"line_end":588,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35889,"byte_end":35913,"line_start":589,"line_end":589,"column_start":5,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35918,"byte_end":35938,"line_start":590,"line_end":590,"column_start":5,"column_end":25}},{"value":"/ use std::time;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35943,"byte_end":35961,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35966,"byte_end":35969,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ let future1 = future::lazy(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":35974,"byte_end":36009,"line_start":593,"line_end":593,"column_start":5,"column_end":40}},{"value":"/     thread::sleep(time::Duration::from_secs(5));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36014,"byte_end":36066,"line_start":594,"line_end":594,"column_start":5,"column_end":57}},{"value":"/     future::ok::<char, ()>('a')","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36071,"byte_end":36106,"line_start":595,"line_end":595,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36111,"byte_end":36118,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36123,"byte_end":36126,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let future2 = future::lazy(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36131,"byte_end":36166,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/     thread::sleep(time::Duration::from_secs(3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36171,"byte_end":36223,"line_start":599,"line_end":599,"column_start":5,"column_end":57}},{"value":"/     future::ok::<char, ()>('b')","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36228,"byte_end":36263,"line_start":600,"line_end":600,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36268,"byte_end":36275,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36280,"byte_end":36283,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let (value, last_future) = future1.select(future2).wait().ok().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36288,"byte_end":36364,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(value, 'a');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36369,"byte_end":36396,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(last_future.wait().unwrap(), 'b');","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36401,"byte_end":36450,"line_start":605,"line_end":605,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36455,"byte_end":36462,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36467,"byte_end":36470,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ A poor-man's `join` implemented on top of `select`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36475,"byte_end":36530,"line_start":608,"line_end":608,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36535,"byte_end":36538,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36543,"byte_end":36550,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36555,"byte_end":36583,"line_start":611,"line_end":611,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36588,"byte_end":36612,"line_start":612,"line_end":612,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36617,"byte_end":36620,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ fn join<A>(a: A, b: A) -> Box<Future<Item=(u32, u32), Error=u32>>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36625,"byte_end":36694,"line_start":614,"line_end":614,"column_start":5,"column_end":74}},{"value":"/     where A: Future<Item = u32, Error = u32> + 'static,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36699,"byte_end":36758,"line_start":615,"line_end":615,"column_start":5,"column_end":64}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36763,"byte_end":36768,"line_start":616,"line_end":616,"column_start":5,"column_end":10}},{"value":"/     Box::new(a.select(b).then(|res| -> Box<Future<Item=_, Error=_>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36773,"byte_end":36846,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/         match res {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36851,"byte_end":36874,"line_start":618,"line_end":618,"column_start":5,"column_end":28}},{"value":"/             Ok((a, b)) => Box::new(b.map(move |b| (a, b))),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36879,"byte_end":36942,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/             Err((a, _)) => Box::new(future::err(a)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":36947,"byte_end":37003,"line_start":620,"line_end":620,"column_start":5,"column_end":61}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37008,"byte_end":37021,"line_start":621,"line_end":621,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37026,"byte_end":37037,"line_start":622,"line_end":622,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37042,"byte_end":37047,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37052,"byte_end":37059,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38981,"byte_end":38988,"line_start":671,"line_end":671,"column_start":8,"column_end":15},"name":"select2","qualname":"::future::Future::select2","value":"pub fn select2<B>(Self, B) -> Select2<Self, B::Future> where B: IntoFuture,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37426,"byte_end":37496,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37501,"byte_end":37504,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits for either this or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37509,"byte_end":37583,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ the `other` future to complete. The returned future will finish with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37588,"byte_end":37660,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ both the value resolved and a future representing the completion of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37665,"byte_end":37740,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ other work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37745,"byte_end":37760,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37765,"byte_end":37768,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37773,"byte_end":37845,"line_start":641,"line_end":641,"column_start":5,"column_end":77}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37850,"byte_end":37878,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37883,"byte_end":37886,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37891,"byte_end":37958,"line_start":644,"line_end":644,"column_start":5,"column_end":72}},{"value":"/ success/error type you can use the `Either::split` method to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":37963,"byte_end":38027,"line_start":645,"line_end":645,"column_start":5,"column_end":69}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38032,"byte_end":38082,"line_start":646,"line_end":646,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38087,"byte_end":38090,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38095,"byte_end":38109,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38114,"byte_end":38117,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38122,"byte_end":38129,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38134,"byte_end":38162,"line_start":651,"line_end":651,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38167,"byte_end":38207,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38212,"byte_end":38215,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // A poor-man's join implemented on top of select2","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38220,"byte_end":38274,"line_start":654,"line_end":654,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38279,"byte_end":38282,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> Box<Future<Item=(A::Item, B::Item), Error=E>>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38287,"byte_end":38368,"line_start":656,"line_end":656,"column_start":5,"column_end":86}},{"value":"/     where A: Future<Error = E> + 'static,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38373,"byte_end":38418,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/           B: Future<Error = E> + 'static,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38423,"byte_end":38468,"line_start":658,"line_end":658,"column_start":5,"column_end":50}},{"value":"/           E: 'static,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38473,"byte_end":38498,"line_start":659,"line_end":659,"column_start":5,"column_end":30}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38503,"byte_end":38508,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/     Box::new(a.select2(b).then(|res| -> Box<Future<Item=_, Error=_>> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38513,"byte_end":38587,"line_start":661,"line_end":661,"column_start":5,"column_end":79}},{"value":"/         match res {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38592,"byte_end":38615,"line_start":662,"line_end":662,"column_start":5,"column_end":28}},{"value":"/             Ok(Either::A((x, b))) => Box::new(b.map(move |y| (x, y))),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38620,"byte_end":38694,"line_start":663,"line_end":663,"column_start":5,"column_end":79}},{"value":"/             Ok(Either::B((y, a))) => Box::new(a.map(move |x| (x, y))),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38699,"byte_end":38773,"line_start":664,"line_end":664,"column_start":5,"column_end":79}},{"value":"/             Err(Either::A((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38778,"byte_end":38845,"line_start":665,"line_end":665,"column_start":5,"column_end":72}},{"value":"/             Err(Either::B((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38850,"byte_end":38917,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38922,"byte_end":38935,"line_start":667,"line_end":667,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38940,"byte_end":38951,"line_start":668,"line_end":668,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38956,"byte_end":38961,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":38966,"byte_end":38973,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40386,"byte_end":40390,"line_start":716,"line_end":716,"column_start":8,"column_end":12},"name":"join","qualname":"::future::Future::join","value":"pub fn join<B>(Self, B) -> Join<Self, B::Future> where B: IntoFuture<Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39142,"byte_end":39213,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39218,"byte_end":39221,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits both this and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39226,"byte_end":39299,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/ `other` future to complete. The returned future will finish with a tuple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39304,"byte_end":39380,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/ of both results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39385,"byte_end":39405,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39410,"byte_end":39413,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Both futures must have the same error type, and if either finishes with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39418,"byte_end":39493,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ an error then the other will be dropped and that error will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39498,"byte_end":39564,"line_start":684,"line_end":684,"column_start":5,"column_end":71}},{"value":"/ returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39569,"byte_end":39582,"line_start":685,"line_end":685,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39587,"byte_end":39590,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39595,"byte_end":39666,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39671,"byte_end":39697,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39702,"byte_end":39705,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39710,"byte_end":39724,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39729,"byte_end":39732,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39737,"byte_end":39744,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39749,"byte_end":39777,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39782,"byte_end":39806,"line_start":694,"line_end":694,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39811,"byte_end":39814,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let a = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39819,"byte_end":39857,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/ let b = future::ok::<u32, u32>(2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39862,"byte_end":39900,"line_start":697,"line_end":697,"column_start":5,"column_end":43}},{"value":"/ let pair = a.join(b);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39905,"byte_end":39930,"line_start":698,"line_end":698,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39935,"byte_end":39938,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.wait(), Ok((1, 2)));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39943,"byte_end":39983,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":39988,"byte_end":39995,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40000,"byte_end":40003,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ If one or both of the joined `Future`s is errored, the resulting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40008,"byte_end":40076,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/ `Future` will be errored:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40081,"byte_end":40110,"line_start":704,"line_end":704,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40115,"byte_end":40118,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40123,"byte_end":40130,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40135,"byte_end":40163,"line_start":707,"line_end":707,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40168,"byte_end":40192,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40197,"byte_end":40200,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let a = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40205,"byte_end":40243,"line_start":710,"line_end":710,"column_start":5,"column_end":43}},{"value":"/ let b = future::err::<u32, u32>(2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40248,"byte_end":40287,"line_start":711,"line_end":711,"column_start":5,"column_end":44}},{"value":"/ let pair = a.join(b);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40292,"byte_end":40317,"line_start":712,"line_end":712,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40322,"byte_end":40325,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.wait(), Err(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40330,"byte_end":40366,"line_start":714,"line_end":714,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40371,"byte_end":40378,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40697,"byte_end":40702,"line_start":725,"line_end":725,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::Future::join3","value":"pub fn join3<B, C>(Self, B, C) -> Join3<Self, B::Future, C::Future> where\nB: IntoFuture<Error = Self::Error>, C: IntoFuture<Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40647,"byte_end":40689,"line_start":724,"line_end":724,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41013,"byte_end":41018,"line_start":734,"line_end":734,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::Future::join4","value":"pub fn join4<B, C, D>(Self, B, C, D)\n-> Join4<Self, B::Future, C::Future, D::Future> where B: IntoFuture<Error =\nSelf::Error>, C: IntoFuture<Error = Self::Error>, D: IntoFuture<Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":40963,"byte_end":41005,"line_start":733,"line_end":733,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41436,"byte_end":41441,"line_start":745,"line_end":745,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::Future::join5","value":"pub fn join5<B, C, D, E>(Self, B, C, D, E)\n-> Join5<Self, B::Future, C::Future, D::Future, E::Future> where\nB: IntoFuture<Error = Self::Error>, C: IntoFuture<Error = Self::Error>,\nD: IntoFuture<Error = Self::Error>, E: IntoFuture<Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41386,"byte_end":41428,"line_start":744,"line_end":744,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42685,"byte_end":42696,"line_start":778,"line_end":778,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::Future::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41916,"byte_end":41969,"line_start":757,"line_end":757,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41974,"byte_end":41977,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":41982,"byte_end":42056,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42061,"byte_end":42124,"line_start":760,"line_end":760,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42129,"byte_end":42132,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42137,"byte_end":42151,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42156,"byte_end":42159,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42164,"byte_end":42171,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42176,"byte_end":42204,"line_start":765,"line_end":765,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42209,"byte_end":42233,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42238,"byte_end":42241,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(17);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42246,"byte_end":42289,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/ let mut stream = future.into_stream();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42294,"byte_end":42336,"line_start":769,"line_end":769,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42341,"byte_end":42399,"line_start":770,"line_end":770,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42404,"byte_end":42458,"line_start":771,"line_end":771,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42463,"byte_end":42466,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let future = future::err::<bool, _>(19);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42471,"byte_end":42515,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/ let mut stream = future.into_stream();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42520,"byte_end":42562,"line_start":774,"line_end":774,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(Err(19), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42567,"byte_end":42606,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42611,"byte_end":42665,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42670,"byte_end":42677,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44137,"byte_end":44144,"line_start":820,"line_end":820,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::Future::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoFuture,\n<<Self as Future>::Item as IntoFuture>::Error: From<<Self as Future>::Error>,\nSelf: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42797,"byte_end":42872,"line_start":784,"line_end":784,"column_start":5,"column_end":80}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42877,"byte_end":42913,"line_start":785,"line_end":785,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42918,"byte_end":42921,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":42926,"byte_end":42995,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ computation out the final result. This method can only be called","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43000,"byte_end":43068,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ when the successful result of this future itself implements the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43073,"byte_end":43140,"line_start":789,"line_end":789,"column_start":5,"column_end":72}},{"value":"/ `IntoFuture` trait and the error can be created from this future's error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43145,"byte_end":43221,"line_start":790,"line_end":790,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43226,"byte_end":43235,"line_start":791,"line_end":791,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43240,"byte_end":43243,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.and_then(|x| x)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43248,"byte_end":43312,"line_start":793,"line_end":793,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43317,"byte_end":43320,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43325,"byte_end":43396,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43401,"byte_end":43427,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43432,"byte_end":43435,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43440,"byte_end":43454,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43459,"byte_end":43462,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43467,"byte_end":43474,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43479,"byte_end":43507,"line_start":801,"line_end":801,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43512,"byte_end":43536,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43541,"byte_end":43544,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let nested_future = future::ok::<_, u32>(future::ok::<u32, u32>(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43549,"byte_end":43621,"line_start":804,"line_end":804,"column_start":5,"column_end":77}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43626,"byte_end":43667,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.wait(), Ok(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43672,"byte_end":43709,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43714,"byte_end":43721,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43726,"byte_end":43729,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Calling `flatten` on an errored `Future`, or if the inner `Future` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43734,"byte_end":43807,"line_start":809,"line_end":809,"column_start":5,"column_end":78}},{"value":"/ errored, will result in an errored `Future`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43812,"byte_end":43860,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43865,"byte_end":43868,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43873,"byte_end":43880,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43885,"byte_end":43913,"line_start":813,"line_end":813,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43918,"byte_end":43942,"line_start":814,"line_end":814,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43947,"byte_end":43950,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let nested_future = future::ok::<_, u32>(future::err::<u32, u32>(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":43955,"byte_end":44028,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44033,"byte_end":44074,"line_start":817,"line_end":817,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.wait(), Err(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44079,"byte_end":44117,"line_start":818,"line_end":818,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44122,"byte_end":44129,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45538,"byte_end":45552,"line_start":860,"line_end":860,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::Future::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where\n<Self as Future>::Item: stream::Stream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44548,"byte_end":44623,"line_start":832,"line_end":832,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44628,"byte_end":44651,"line_start":833,"line_end":833,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44656,"byte_end":44659,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44664,"byte_end":44736,"line_start":835,"line_end":835,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44741,"byte_end":44814,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44819,"byte_end":44833,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44838,"byte_end":44841,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44846,"byte_end":44916,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44921,"byte_end":44939,"line_start":840,"line_end":840,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44944,"byte_end":44947,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44952,"byte_end":44966,"line_start":842,"line_end":842,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44971,"byte_end":44974,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44979,"byte_end":44986,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":44991,"byte_end":45019,"line_start":845,"line_end":845,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45024,"byte_end":45048,"line_start":846,"line_end":846,"column_start":5,"column_end":29}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45053,"byte_end":45077,"line_start":847,"line_end":847,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45082,"byte_end":45085,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45090,"byte_end":45130,"line_start":849,"line_end":849,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = future::ok::<_, bool>(stream::iter_ok(stream_items));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45135,"byte_end":45217,"line_start":850,"line_end":850,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45222,"byte_end":45225,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45230,"byte_end":45283,"line_start":852,"line_end":852,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45288,"byte_end":45291,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream.wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45296,"byte_end":45329,"line_start":854,"line_end":854,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Ok(17), iter.next().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45334,"byte_end":45379,"line_start":855,"line_end":855,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Ok(18), iter.next().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45384,"byte_end":45429,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Ok(19), iter.next().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45434,"byte_end":45479,"line_start":857,"line_end":857,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45484,"byte_end":45518,"line_start":858,"line_end":858,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45523,"byte_end":45530,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47113,"byte_end":47117,"line_start":900,"line_end":900,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::Future::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45732,"byte_end":45805,"line_start":867,"line_end":867,"column_start":5,"column_end":78}},{"value":"/ completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45810,"byte_end":45824,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45829,"byte_end":45832,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Currently once a future has returned `Ready` or `Err` from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45837,"byte_end":45899,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ `poll` any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45904,"byte_end":45976,"line_start":871,"line_end":871,"column_start":5,"column_end":77}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":45981,"byte_end":46053,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46058,"byte_end":46132,"line_start":873,"line_end":873,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46137,"byte_end":46163,"line_start":874,"line_end":874,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46168,"byte_end":46171,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ Once a future has been `fuse`d and it returns a completion from `poll`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46176,"byte_end":46251,"line_start":876,"line_end":876,"column_start":5,"column_end":80}},{"value":"/ then it will forever return `NotReady` from `poll` again (never","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46256,"byte_end":46323,"line_start":877,"line_end":877,"column_start":5,"column_end":72}},{"value":"/ resolve).  This, unlike the trait's `poll` method, is guaranteed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46328,"byte_end":46397,"line_start":878,"line_end":878,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46402,"byte_end":46405,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop this future as soon as it's been completed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46410,"byte_end":46485,"line_start":880,"line_end":880,"column_start":5,"column_end":80}},{"value":"/ ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46490,"byte_end":46545,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46550,"byte_end":46553,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46558,"byte_end":46572,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46577,"byte_end":46580,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46585,"byte_end":46596,"line_start":885,"line_end":885,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46601,"byte_end":46629,"line_start":886,"line_end":886,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46634,"byte_end":46658,"line_start":887,"line_end":887,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46663,"byte_end":46666,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::ok::<i32, u32>(2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46671,"byte_end":46718,"line_start":889,"line_end":889,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.poll(), Ok(Async::Ready(2)));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46723,"byte_end":46774,"line_start":890,"line_end":890,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46779,"byte_end":46782,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ // Normally, a call such as this would panic:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46787,"byte_end":46836,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ //future.poll();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46841,"byte_end":46861,"line_start":893,"line_end":893,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46866,"byte_end":46869,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ // This, however, is guaranteed to not panic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46874,"byte_end":46922,"line_start":895,"line_end":895,"column_start":5,"column_end":53}},{"value":"/ let mut future = future::ok::<i32, u32>(2).fuse();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46927,"byte_end":46981,"line_start":896,"line_end":896,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(future.poll(), Ok(Async::Ready(2)));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":46986,"byte_end":47037,"line_start":897,"line_end":897,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(future.poll(), Ok(Async::NotReady));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47042,"byte_end":47093,"line_start":898,"line_end":898,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47098,"byte_end":47105,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47885,"byte_end":47892,"line_start":923,"line_end":923,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::Future::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Do something with the item of a future, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the item of a future, passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47269,"byte_end":47327,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47332,"byte_end":47335,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47340,"byte_end":47408,"line_start":909,"line_end":909,"column_start":5,"column_end":73}},{"value":"/ While working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47413,"byte_end":47492,"line_start":910,"line_end":910,"column_start":5,"column_end":84}},{"value":"/ various parts in the pipeline. To do that, insert a call to inspect().","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47497,"byte_end":47571,"line_start":911,"line_end":911,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47576,"byte_end":47579,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47584,"byte_end":47598,"line_start":913,"line_end":913,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47603,"byte_end":47606,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47611,"byte_end":47618,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47623,"byte_end":47651,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47656,"byte_end":47680,"line_start":917,"line_end":917,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47685,"byte_end":47688,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47693,"byte_end":47736,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47741,"byte_end":47819,"line_start":920,"line_end":920,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.wait(), Ok(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47824,"byte_end":47865,"line_start":921,"line_end":921,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":47870,"byte_end":47877,"line_start":922,"line_end":922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49489,"byte_end":49501,"line_start":962,"line_end":962,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::Future::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48091,"byte_end":48145,"line_start":930,"line_end":930,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48150,"byte_end":48153,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48158,"byte_end":48233,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48238,"byte_end":48312,"line_start":933,"line_end":933,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48317,"byte_end":48391,"line_start":934,"line_end":934,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48396,"byte_end":48447,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48452,"byte_end":48455,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48460,"byte_end":48535,"line_start":937,"line_end":937,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48540,"byte_end":48610,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48615,"byte_end":48682,"line_start":939,"line_end":939,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48687,"byte_end":48762,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48767,"byte_end":48839,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48844,"byte_end":48847,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48852,"byte_end":48920,"line_start":943,"line_end":943,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48925,"byte_end":48982,"line_start":944,"line_end":944,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48987,"byte_end":48990,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":48995,"byte_end":49009,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49014,"byte_end":49017,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49022,"byte_end":49033,"line_start":948,"line_end":948,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49038,"byte_end":49066,"line_start":949,"line_end":949,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49071,"byte_end":49117,"line_start":950,"line_end":950,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49122,"byte_end":49125,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::ok::<i32, u32>(2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49130,"byte_end":49177,"line_start":952,"line_end":952,"column_start":5,"column_end":52}},{"value":"/ assert!(future.catch_unwind().wait().is_ok());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49182,"byte_end":49232,"line_start":953,"line_end":953,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49237,"byte_end":49240,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::lazy(|| -> FutureResult<i32, u32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49245,"byte_end":49309,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/     panic!();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49314,"byte_end":49331,"line_start":956,"line_end":956,"column_start":5,"column_end":22}},{"value":"/     future::ok::<i32, u32>(2)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49336,"byte_end":49369,"line_start":957,"line_end":957,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49374,"byte_end":49381,"line_start":958,"line_end":958,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().wait().is_err());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49386,"byte_end":49437,"line_start":959,"line_end":959,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49442,"byte_end":49449,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49454,"byte_end":49481,"line_start":961,"line_end":961,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51241,"byte_end":51247,"line_start":1011,"line_end":1011,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::Future::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49631,"byte_end":49706,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49711,"byte_end":49734,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49739,"byte_end":49742,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ The shared() method provides a method to convert any future into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49747,"byte_end":49817,"line_start":971,"line_end":971,"column_start":5,"column_end":75}},{"value":"/ cloneable future. It enables a future to be polled by multiple threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49822,"byte_end":49897,"line_start":972,"line_end":972,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49902,"byte_end":49905,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ The returned `Shared` future resolves successfully with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49910,"byte_end":49969,"line_start":974,"line_end":974,"column_start":5,"column_end":64}},{"value":"/ `SharedItem<Self::Item>` or erroneously with `SharedError<Self::Error>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":49974,"byte_end":50050,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/ Both `SharedItem` and `SharedError` implements `Deref` to allow shared","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50055,"byte_end":50129,"line_start":976,"line_end":976,"column_start":5,"column_end":79}},{"value":"/ access to the underlying result. Ownership of `Self::Item` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50134,"byte_end":50200,"line_start":977,"line_end":977,"column_start":5,"column_end":71}},{"value":"/ `Self::Error` cannot currently be reclaimed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50205,"byte_end":50253,"line_start":978,"line_end":978,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50258,"byte_end":50261,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50266,"byte_end":50334,"line_start":980,"line_end":980,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50339,"byte_end":50396,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50401,"byte_end":50404,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50409,"byte_end":50423,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50428,"byte_end":50431,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50436,"byte_end":50443,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50448,"byte_end":50476,"line_start":986,"line_end":986,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50481,"byte_end":50505,"line_start":987,"line_end":987,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50510,"byte_end":50513,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50518,"byte_end":50560,"line_start":989,"line_end":989,"column_start":5,"column_end":47}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50565,"byte_end":50599,"line_start":990,"line_end":990,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50604,"byte_end":50638,"line_start":991,"line_end":991,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(6, *shared1.wait().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50643,"byte_end":50687,"line_start":992,"line_end":992,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(6, *shared2.wait().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50692,"byte_end":50736,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50741,"byte_end":50748,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50753,"byte_end":50756,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50761,"byte_end":50768,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50773,"byte_end":50793,"line_start":997,"line_end":997,"column_start":5,"column_end":25}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50798,"byte_end":50826,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50831,"byte_end":50855,"line_start":999,"line_end":999,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50860,"byte_end":50863,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50868,"byte_end":50910,"line_start":1001,"line_end":1001,"column_start":5,"column_end":47}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50915,"byte_end":50949,"line_start":1002,"line_end":1002,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50954,"byte_end":50988,"line_start":1003,"line_end":1003,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":50993,"byte_end":51038,"line_start":1004,"line_end":1004,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, *shared2.wait().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51043,"byte_end":51091,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51096,"byte_end":51103,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, *shared1.wait().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51108,"byte_end":51152,"line_start":1007,"line_end":1007,"column_start":5,"column_end":49}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51157,"byte_end":51189,"line_start":1008,"line_end":1008,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51194,"byte_end":51201,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51206,"byte_end":51233,"line_start":1010,"line_end":1010,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":789},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51910,"byte_end":51920,"line_start":1039,"line_end":1039,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Class of types which can be converted into a future.","sig":null,"attributes":[{"value":"/ Class of types which can be converted into a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51722,"byte_end":51778,"line_start":1035,"line_end":1035,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51779,"byte_end":51782,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to the `IntoIterator` trait and is intended to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51783,"byte_end":51863,"line_start":1037,"line_end":1037,"column_start":1,"column_end":81}},{"value":"/ used in a very similar fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51864,"byte_end":51899,"line_start":1038,"line_end":1038,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51989,"byte_end":51995,"line_start":1041,"line_end":1041,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::IntoFuture::Future","value":"type Future: Future<Item=Self::Item, Error=Self::Error>;","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":51927,"byte_end":51979,"line_start":1040,"line_end":1040,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":791},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52102,"byte_end":52106,"line_start":1044,"line_end":1044,"column_start":10,"column_end":14},"name":"Item","qualname":"::future::IntoFuture::Item","value":"type Item;","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52046,"byte_end":52092,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":792},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52169,"byte_end":52174,"line_start":1046,"line_end":1046,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::IntoFuture::Error","value":"type Error;","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" The error that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The error that the future may resolve with.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52112,"byte_end":52159,"line_start":1045,"line_end":1045,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52236,"byte_end":52247,"line_start":1049,"line_end":1049,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":789},"children":[],"decl_id":null,"docs":" Consumes this object and produces a future.\n","sig":null,"attributes":[{"value":"/ Consumes this object and produces a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52181,"byte_end":52228,"line_start":1048,"line_end":1048,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":807},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52796,"byte_end":52806,"line_start":1076,"line_end":1076,"column_start":11,"column_end":21},"name":"FutureFrom","qualname":"::future::FutureFrom","value":"FutureFrom<T>: Sized","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"decl_id":null,"docs":" Asynchronous conversion from a type `T`.","sig":null,"attributes":[{"value":"/ Asynchronous conversion from a type `T`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52643,"byte_end":52687,"line_start":1072,"line_end":1072,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52688,"byte_end":52691,"line_start":1073,"line_end":1073,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to `std::convert::From`, adapted to asynchronous","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52692,"byte_end":52768,"line_start":1074,"line_end":1074,"column_start":1,"column_end":77}},{"value":"/ computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52769,"byte_end":52785,"line_start":1075,"line_end":1075,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":809},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52867,"byte_end":52873,"line_start":1078,"line_end":1078,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::FutureFrom::Future","value":"type Future: Future<Item=Self, Error=Self::Error>;","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" The future for the conversion.\n","sig":null,"attributes":[{"value":"/ The future for the conversion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52823,"byte_end":52857,"line_start":1077,"line_end":1077,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":810},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52966,"byte_end":52971,"line_start":1081,"line_end":1081,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::FutureFrom::Error","value":"type Error;","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Possible errors during conversion.\n","sig":null,"attributes":[{"value":"/ Possible errors during conversion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52918,"byte_end":52956,"line_start":1080,"line_end":1080,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53040,"byte_end":53051,"line_start":1084,"line_end":1084,"column_start":8,"column_end":19},"name":"future_from","qualname":"::future::FutureFrom::future_from","value":"pub fn future_from(T) -> Self::Future","parent":{"krate":0,"index":807},"children":[],"decl_id":null,"docs":" Consume the given value, beginning the conversion.\n","sig":null,"attributes":[{"value":"/ Consume the given value, beginning the conversion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52978,"byte_end":53032,"line_start":1083,"line_end":1083,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":812},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53525,"byte_end":53533,"line_start":1095,"line_end":1095,"column_start":11,"column_end":19},"name":"Executor","qualname":"::future::Executor","value":"Executor<F: Future<Item = (), Error = ()>>","parent":null,"children":[{"krate":0,"index":814}],"decl_id":null,"docs":" A trait for types which can spawn fresh futures.","sig":null,"attributes":[{"value":"/ A trait for types which can spawn fresh futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53075,"byte_end":53127,"line_start":1087,"line_end":1087,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53128,"byte_end":53131,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ This trait is typically implemented for \"executors\", or those types which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53132,"byte_end":53209,"line_start":1089,"line_end":1089,"column_start":1,"column_end":78}},{"value":"/ can execute futures to completion. Futures passed to `Spawn::spawn`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53210,"byte_end":53281,"line_start":1090,"line_end":1090,"column_start":1,"column_end":72}},{"value":"/ typically get turned into a *task* and are then driven to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53282,"byte_end":53355,"line_start":1091,"line_end":1091,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53356,"byte_end":53359,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ On spawn, the executor takes ownership of the future and becomes responsible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53360,"byte_end":53440,"line_start":1093,"line_end":1093,"column_start":1,"column_end":81}},{"value":"/ to call `Future::poll()` whenever a readiness notification is raised.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53441,"byte_end":53514,"line_start":1094,"line_end":1094,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54549,"byte_end":54556,"line_start":1116,"line_end":1116,"column_start":8,"column_end":15},"name":"execute","qualname":"::future::Executor::execute","value":"pub fn execute(&Self, F) -> Result<(), ExecuteError<F>>","parent":{"krate":0,"index":812},"children":[],"decl_id":null,"docs":" Spawns a future to run on this `Executor`, typically in the\n \"background\".","sig":null,"attributes":[{"value":"/ Spawns a future to run on this `Executor`, typically in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53574,"byte_end":53637,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/ \"background\".","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53642,"byte_end":53659,"line_start":1097,"line_end":1097,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53664,"byte_end":53667,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This function will return immediately, and schedule the future `future`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53672,"byte_end":53747,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/ to run on `self`. The details of scheduling and execution are left to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53752,"byte_end":53825,"line_start":1100,"line_end":1100,"column_start":5,"column_end":78}},{"value":"/ the implementations of `Executor`, but this is typically a primary point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53830,"byte_end":53906,"line_start":1101,"line_end":1101,"column_start":5,"column_end":81}},{"value":"/ for injecting concurrency in a futures-based system. Futures spawned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53911,"byte_end":53983,"line_start":1102,"line_end":1102,"column_start":5,"column_end":77}},{"value":"/ through this `execute` function tend to run concurrently while they're","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":53988,"byte_end":54062,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"/ waiting on events.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54067,"byte_end":54089,"line_start":1104,"line_end":1104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54094,"byte_end":54097,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54102,"byte_end":54114,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54119,"byte_end":54122,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ Implementers of this trait are allowed to reject accepting this future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54127,"byte_end":54201,"line_start":1108,"line_end":1108,"column_start":5,"column_end":79}},{"value":"/ as well. This can happen for various reason such as:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54206,"byte_end":54262,"line_start":1109,"line_end":1109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54267,"byte_end":54270,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ * The executor is shut down","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54275,"byte_end":54306,"line_start":1111,"line_end":1111,"column_start":5,"column_end":36}},{"value":"/ * The executor has run out of capacity to execute futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54311,"byte_end":54372,"line_start":1112,"line_end":1112,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54377,"byte_end":54380,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ The decision is left to the caller how to work with this form of error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54385,"byte_end":54460,"line_start":1114,"line_end":1114,"column_start":5,"column_end":80}},{"value":"/ The error returned transfers ownership of the future back to the caller.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54465,"byte_end":54541,"line_start":1115,"line_end":1115,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":815},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54675,"byte_end":54687,"line_start":1120,"line_end":1120,"column_start":12,"column_end":24},"name":"ExecuteError","qualname":"::future::ExecuteError","value":"ExecuteError {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"decl_id":null,"docs":" Errors returned from the `Spawn::spawn` function.\n","sig":null,"attributes":[{"value":"/ Errors returned from the `Spawn::spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54610,"byte_end":54663,"line_start":1119,"line_end":1119,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5053},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55131,"byte_end":55139,"line_start":1133,"line_end":1133,"column_start":5,"column_end":13},"name":"Shutdown","qualname":"::future::ExecuteErrorKind::Shutdown","value":"ExecuteErrorKind::Shutdown","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" This executor has shut down and will no longer accept new futures to\n spawn.\n","sig":null,"attributes":[{"value":"/ This executor has shut down and will no longer accept new futures to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55039,"byte_end":55111,"line_start":1131,"line_end":1131,"column_start":5,"column_end":77}},{"value":"/ spawn.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55116,"byte_end":55126,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5055},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55288,"byte_end":55298,"line_start":1137,"line_end":1137,"column_start":5,"column_end":15},"name":"NoCapacity","qualname":"::future::ExecuteErrorKind::NoCapacity","value":"ExecuteErrorKind::NoCapacity","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" This executor has no more capacity to run more futures. Other futures\n need to finish before this executor can accept another.\n","sig":null,"attributes":[{"value":"/ This executor has no more capacity to run more futures. Other futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55146,"byte_end":55219,"line_start":1135,"line_end":1135,"column_start":5,"column_end":78}},{"value":"/ need to finish before this executor can accept another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55224,"byte_end":55283,"line_start":1136,"line_end":1136,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55324,"byte_end":55339,"line_start":1140,"line_end":1140,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::future::ExecuteErrorKind::__Nonexhaustive","value":"ExecuteErrorKind::__Nonexhaustive","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5052},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55016,"byte_end":55032,"line_start":1130,"line_end":1130,"column_start":10,"column_end":26},"name":"ExecuteErrorKind","qualname":"::future::ExecuteErrorKind","value":"pub enum ExecuteErrorKind { Shutdown, NoCapacity, __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":5053},{"krate":0,"index":5055},{"krate":0,"index":5057}],"decl_id":null,"docs":" Kinds of errors that can be returned from the `Execute::spawn` function.","sig":null,"attributes":[{"value":"/ Kinds of errors that can be returned from the `Execute::spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54739,"byte_end":54815,"line_start":1125,"line_end":1125,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54816,"byte_end":54819,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ Executors which may not always be able to accept a future may return one of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54820,"byte_end":54899,"line_start":1127,"line_end":1127,"column_start":1,"column_end":80}},{"value":"/ these errors, indicating why it was unable to spawn a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":54900,"byte_end":54965,"line_start":1128,"line_end":1128,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55417,"byte_end":55420,"line_start":1145,"line_end":1145,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecuteError<F>>::new","value":"pub fn new(ExecuteErrorKind, F) -> ExecuteError<F>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ExecuteError`\n","sig":null,"attributes":[{"value":"/ Create a new `ExecuteError`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55374,"byte_end":55405,"line_start":1144,"line_end":1144,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55632,"byte_end":55636,"line_start":1153,"line_end":1153,"column_start":12,"column_end":16},"name":"kind","qualname":"<ExecuteError<F>>::kind","value":"pub fn kind(&Self) -> ExecuteErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the associated reason for the error\n","sig":null,"attributes":[{"value":"/ Returns the associated reason for the error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55573,"byte_end":55620,"line_start":1152,"line_end":1152,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55774,"byte_end":55785,"line_start":1158,"line_end":1158,"column_start":12,"column_end":23},"name":"into_future","qualname":"<ExecuteError<F>>::into_future","value":"pub fn into_future(Self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the original future that was spawned.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the original future that was spawned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55695,"byte_end":55762,"line_start":1157,"line_end":1157,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":834},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":1010},{"krate":0,"index":1033},{"krate":0,"index":1098},{"krate":0,"index":1121},{"krate":0,"index":1155},{"krate":0,"index":1191},{"krate":0,"index":1221},{"krate":0,"index":1254},{"krate":0,"index":1282},{"krate":0,"index":1318},{"krate":0,"index":1349},{"krate":0,"index":1375},{"krate":0,"index":1409},{"krate":0,"index":1441},{"krate":0,"index":1477},{"krate":0,"index":1509},{"krate":0,"index":1533},{"krate":0,"index":1553},{"krate":0,"index":1590},{"krate":0,"index":1622},{"krate":0,"index":1641},{"krate":0,"index":1665},{"krate":0,"index":1695},{"krate":0,"index":1739},{"krate":0,"index":1769},{"krate":0,"index":1813},{"krate":0,"index":1850},{"krate":0,"index":1883},{"krate":0,"index":1907},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":5455},{"krate":0,"index":5458},{"krate":0,"index":5509},{"krate":0,"index":5560},{"krate":0,"index":5601},{"krate":0,"index":5640},{"krate":0,"index":5668},{"krate":0,"index":5686},{"krate":0,"index":5755},{"krate":0,"index":5822},{"krate":0,"index":6045},{"krate":0,"index":6139},{"krate":0,"index":6142},{"krate":0,"index":6145},{"krate":0,"index":6148},{"krate":0,"index":6151},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6167},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6187},{"krate":0,"index":6190},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":2068},{"krate":0,"index":2138},{"krate":0,"index":2144}],"decl_id":null,"docs":" Asynchronous streams","sig":null,"attributes":[{"value":"/ Asynchronous streams","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":89883,"byte_end":89907,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":89908,"byte_end":89911,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the `Stream` trait and a number of adaptors for this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":89912,"byte_end":89989,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ trait. This trait is very similar to the `Iterator` trait in the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":89990,"byte_end":90067,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ library except that it expresses the concept of blocking as well. A stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90068,"byte_end":90146,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ here is a sequential sequence of values which may take some amount of time","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90147,"byte_end":90225,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ in between to produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90226,"byte_end":90252,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90253,"byte_end":90256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A stream may request that it is blocked between values while the next value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90257,"byte_end":90336,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ is calculated, and provides a way to get notified once the next value is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90337,"byte_end":90413,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ ready as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90414,"byte_end":90432,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90433,"byte_end":90436,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90437,"byte_end":90505,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90506,"byte_end":90535,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90536,"byte_end":90539,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":90540,"byte_end":90610,"line_start":16,"line_end":16,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5067},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132577,"byte_end":132581,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132365,"byte_end":132441,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132442,"byte_end":132445,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132446,"byte_end":132499,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132517,"byte_end":132565,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133195,"byte_end":133199,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<J, T, E>(J) -> Iter<J::IntoIter> where J: IntoIterator<Item =\nResult<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` over `Result`s into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` over `Result`s into a `Stream` which is always ready","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132602,"byte_end":132681,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132682,"byte_end":132710,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132711,"byte_end":132714,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter simply","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132715,"byte_end":132795,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ always calls `iter.next()` and returns that.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132796,"byte_end":132844,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132845,"byte_end":132848,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132849,"byte_end":132860,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132861,"byte_end":132880,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132881,"byte_end":132884,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![Ok(17), Err(false), Ok(19)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132885,"byte_end":132953,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":132954,"byte_end":133012,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Err(false), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133013,"byte_end":133055,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133056,"byte_end":133114,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133115,"byte_end":133169,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133170,"byte_end":133177,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133178,"byte_end":133187,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":5074},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133792,"byte_end":133798,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"IterOk","qualname":"::stream::iter_ok::IterOk","value":"IterOk {  }","parent":null,"children":[{"krate":0,"index":5077},{"krate":0,"index":5078}],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133580,"byte_end":133656,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133657,"byte_end":133660,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133661,"byte_end":133714,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133732,"byte_end":133780,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134385,"byte_end":134392,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"iter_ok","qualname":"::stream::iter_ok::iter_ok","value":"pub fn iter_ok<I, E>(I) -> IterOk<I::IntoIter, E> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133868,"byte_end":133932,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133933,"byte_end":133961,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133962,"byte_end":133965,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":133966,"byte_end":134039,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134040,"byte_end":134095,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134096,"byte_end":134099,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134100,"byte_end":134111,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134112,"byte_end":134131,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134132,"byte_end":134135,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter_ok::<_, ()>(vec![17, 19]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134136,"byte_end":134196,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134197,"byte_end":134255,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134256,"byte_end":134314,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134315,"byte_end":134369,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134370,"byte_end":134377,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5083},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135012,"byte_end":135022,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterResult","qualname":"::stream::iter_result::IterResult","value":"IterResult {  }","parent":null,"children":[{"krate":0,"index":5085}],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":134800,"byte_end":134876,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":134877,"byte_end":134880,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":134881,"byte_end":134934,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":134952,"byte_end":135000,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135634,"byte_end":135645,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"iter_result","qualname":"::stream::iter_result::iter_result","value":"pub fn iter_result<J, T, E>(J) -> IterResult<J::IntoIter> where\nJ: IntoIterator<Item = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` over `Result`s into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` over `Result`s into a `Stream` which is always ready","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135044,"byte_end":135123,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135124,"byte_end":135152,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135153,"byte_end":135156,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter simply","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135157,"byte_end":135237,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ always calls `iter.next()` and returns that.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135238,"byte_end":135286,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135287,"byte_end":135290,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135291,"byte_end":135302,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135303,"byte_end":135322,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135323,"byte_end":135326,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter_result(vec![Ok(17), Err(false), Ok(19)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135327,"byte_end":135402,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135403,"byte_end":135461,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Err(false), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135462,"byte_end":135504,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135505,"byte_end":135563,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135564,"byte_end":135618,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135619,"byte_end":135626,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136412,"byte_end":136418,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093}],"decl_id":null,"docs":" Stream that produces the same element repeatedly.","sig":null,"attributes":[{"value":"/ Stream that produces the same element repeatedly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136213,"byte_end":136266,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136267,"byte_end":136270,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the `stream::repeat` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136271,"byte_end":136334,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136352,"byte_end":136400,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":950},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":137055,"byte_end":137061,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T, E>(T) -> Repeat<T, E> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136497,"byte_end":136557,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136558,"byte_end":136561,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Stream never produces an error or EOF. Note that you likely want to avoid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136562,"byte_end":136639,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136640,"byte_end":136712,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136713,"byte_end":136770,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136771,"byte_end":136774,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136775,"byte_end":136786,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136787,"byte_end":136806,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136807,"byte_end":136810,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::repeat::<_, bool>(10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136811,"byte_end":136862,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136863,"byte_end":136921,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136922,"byte_end":136980,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":136981,"byte_end":137039,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":137040,"byte_end":137047,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137708,"byte_end":137715,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5104}],"decl_id":null,"docs":" A stream combinator which chains a computation onto values produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto values produced by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137473,"byte_end":137549,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137550,"byte_end":137561,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137562,"byte_end":137565,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::and_then` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137566,"byte_end":137630,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":137648,"byte_end":137696,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138208,"byte_end":138215,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<S, F, U>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138101,"byte_end":138174,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138179,"byte_end":138196,"line_start":34,"line_end":34,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138524,"byte_end":138531,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<S, F, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138263,"byte_end":138330,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138335,"byte_end":138366,"line_start":40,"line_end":40,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138371,"byte_end":138374,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138379,"byte_end":138452,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138457,"byte_end":138512,"line_start":43,"line_end":43,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138826,"byte_end":138836,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<S, F, U>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138591,"byte_end":138653,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138658,"byte_end":138661,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138666,"byte_end":138738,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138743,"byte_end":138814,"line_start":51,"line_end":51,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5126},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140868,"byte_end":140873,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5129}],"decl_id":null,"docs":" An adapter for chaining the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for chaining the output of two streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140641,"byte_end":140695,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140696,"byte_end":140699,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The resulting stream produces items from first stream and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140700,"byte_end":140766,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ from second stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140767,"byte_end":140790,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":140808,"byte_end":140856,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142249,"byte_end":142256,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Concat2","qualname":"::stream::concat::Concat2","value":"Concat2 {  }","parent":null,"children":[{"krate":0,"index":1065}],"decl_id":null,"docs":" A stream combinator to concatenate the results of a stream into the first\n yielded item.","sig":null,"attributes":[{"value":"/ A stream combinator to concatenate the results of a stream into the first","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142025,"byte_end":142102,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ yielded item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142103,"byte_end":142120,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142121,"byte_end":142124,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::concat2` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142125,"byte_end":142188,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142189,"byte_end":142237,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143582,"byte_end":143588,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":1079}],"decl_id":null,"docs":" A stream combinator to concatenate the results of a stream into the first\n yielded item.","sig":null,"attributes":[{"value":"/ A stream combinator to concatenate the results of a stream into the first","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143284,"byte_end":143361,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ yielded item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143362,"byte_end":143379,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143380,"byte_end":143383,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::concat` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143384,"byte_end":143446,"line_start":60,"line_end":60,"column_start":1,"column_end":63}},{"value":"deprecated(since = \"0.1.18\", note = \"please use `Stream::Concat2` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143447,"byte_end":143521,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143522,"byte_end":143570,"line_start":62,"line_end":62,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146690,"byte_end":146695,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5156}],"decl_id":null,"docs":" A stream which contains no elements.","sig":null,"attributes":[{"value":"/ A stream which contains no elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146502,"byte_end":146542,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146543,"byte_end":146546,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream can be created with the `stream::empty` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146547,"byte_end":146612,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146630,"byte_end":146678,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146877,"byte_end":146882,"line_start":18,"line_end":18,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T, E>() -> Empty<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146747,"byte_end":146795,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146796,"byte_end":146799,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146800,"byte_end":146869,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":5161},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147413,"byte_end":147419,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5164},{"krate":0,"index":5165}],"decl_id":null,"docs":" A stream combinator used to filter the results of a stream and only yield\n some values.","sig":null,"attributes":[{"value":"/ A stream combinator used to filter the results of a stream and only yield","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147174,"byte_end":147251,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ some values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147252,"byte_end":147268,"line_start":5,"line_end":5,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147269,"byte_end":147272,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::filter` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147273,"byte_end":147335,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147353,"byte_end":147401,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147754,"byte_end":147761,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147647,"byte_end":147720,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147725,"byte_end":147742,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148070,"byte_end":148077,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147809,"byte_end":147876,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147881,"byte_end":147912,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147917,"byte_end":147920,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147925,"byte_end":147998,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148003,"byte_end":148058,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148372,"byte_end":148382,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148137,"byte_end":148199,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148204,"byte_end":148207,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148212,"byte_end":148284,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148289,"byte_end":148360,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5170},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149769,"byte_end":149778,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5173},{"krate":0,"index":5174}],"decl_id":null,"docs":" A combinator used to filter the results of a stream and simultaneously map\n them to a different type.","sig":null,"attributes":[{"value":"/ A combinator used to filter the results of a stream and simultaneously map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149512,"byte_end":149590,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ them to a different type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149591,"byte_end":149620,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149621,"byte_end":149624,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is returned by the `Stream::filter_map` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149625,"byte_end":149691,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":149709,"byte_end":149757,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150129,"byte_end":150136,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150022,"byte_end":150095,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150100,"byte_end":150117,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150445,"byte_end":150452,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150184,"byte_end":150251,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150256,"byte_end":150287,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150292,"byte_end":150295,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150300,"byte_end":150373,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150378,"byte_end":150433,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150747,"byte_end":150757,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150512,"byte_end":150574,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150579,"byte_end":150582,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150587,"byte_end":150659,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150664,"byte_end":150735,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5179},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152137,"byte_end":152144,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5182}],"decl_id":null,"docs":" A combinator used to flatten a stream-of-streams into one long stream of\n elements.","sig":null,"attributes":[{"value":"/ A combinator used to flatten a stream-of-streams into one long stream of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":151901,"byte_end":151977,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":151978,"byte_end":151991,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":151992,"byte_end":151995,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator is created by the `Stream::flatten` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":151996,"byte_end":152059,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152077,"byte_end":152125,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152556,"byte_end":152563,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152449,"byte_end":152522,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152527,"byte_end":152544,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152872,"byte_end":152879,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152611,"byte_end":152678,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152683,"byte_end":152714,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152719,"byte_end":152722,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152727,"byte_end":152800,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152805,"byte_end":152860,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153174,"byte_end":153184,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152939,"byte_end":153001,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153006,"byte_end":153009,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153014,"byte_end":153086,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153091,"byte_end":153162,"line_start":47,"line_end":47,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":154814,"byte_end":154818,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193}],"decl_id":null,"docs":" A future used to collect all the results of a stream into one generic type.","sig":null,"attributes":[{"value":"/ A future used to collect all the results of a stream into one generic type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":154595,"byte_end":154674,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":154675,"byte_end":154678,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This future is returned by the `Stream::fold` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":154679,"byte_end":154736,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":154754,"byte_end":154802,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157305,"byte_end":157312,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221}],"decl_id":null,"docs":" A stream combinator which executes a unit closure over each item on a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which executes a unit closure over each item on a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157073,"byte_end":157146,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157147,"byte_end":157158,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157159,"byte_end":157162,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is returned by the `Stream::for_each` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157163,"byte_end":157227,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157245,"byte_end":157293,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5227},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158608,"byte_end":158615,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"FromErr","qualname":"::stream::from_err::FromErr","value":"FromErr {  }","parent":null,"children":[{"krate":0,"index":5230},{"krate":0,"index":5231}],"decl_id":null,"docs":" A stream combinator to change the error type of a stream.","sig":null,"attributes":[{"value":"/ A stream combinator to change the error type of a stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158411,"byte_end":158472,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158473,"byte_end":158476,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::from_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158477,"byte_end":158530,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158548,"byte_end":158596,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158939,"byte_end":158946,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FromErr<S, E>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158832,"byte_end":158905,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158910,"byte_end":158927,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159255,"byte_end":159262,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FromErr<S, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158994,"byte_end":159061,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159066,"byte_end":159097,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159102,"byte_end":159105,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159110,"byte_end":159183,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159188,"byte_end":159243,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159557,"byte_end":159567,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FromErr<S, E>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159322,"byte_end":159384,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159389,"byte_end":159392,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159397,"byte_end":159469,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159474,"byte_end":159545,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5236},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160839,"byte_end":160843,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5238},{"krate":0,"index":5239}],"decl_id":null,"docs":" A stream which \"fuse\"s a stream once it's terminated.","sig":null,"attributes":[{"value":"/ A stream which \"fuse\"s a stream once it's terminated.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160529,"byte_end":160586,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160587,"byte_end":160590,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Normally streams can behave unpredictably when used after they have already","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160591,"byte_end":160670,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ finished, but `Fuse` continues to return `None` from `poll` forever when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160671,"byte_end":160747,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ finished.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160748,"byte_end":160761,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160779,"byte_end":160827,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162160,"byte_end":162167,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<S>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161891,"byte_end":161953,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161958,"byte_end":161961,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161966,"byte_end":162034,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162039,"byte_end":162105,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162110,"byte_end":162148,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162321,"byte_end":162328,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162214,"byte_end":162287,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162292,"byte_end":162309,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162637,"byte_end":162644,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162376,"byte_end":162443,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162448,"byte_end":162479,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162484,"byte_end":162487,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162492,"byte_end":162565,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162570,"byte_end":162625,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162939,"byte_end":162949,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162704,"byte_end":162766,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162771,"byte_end":162774,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162779,"byte_end":162851,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":162856,"byte_end":162927,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163255,"byte_end":163267,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5245}],"decl_id":null,"docs":" A combinator used to temporarily convert a stream into a future.","sig":null,"attributes":[{"value":"/ A combinator used to temporarily convert a stream into a future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163040,"byte_end":163108,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163109,"byte_end":163112,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This future is returned by the `Stream::into_future` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163113,"byte_end":163177,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163195,"byte_end":163243,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163811,"byte_end":163818,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<S>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&S>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163418,"byte_end":163491,"line_start":18,"line_end":18,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163496,"byte_end":163513,"line_start":19,"line_end":19,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163518,"byte_end":163521,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163526,"byte_end":163607,"line_start":21,"line_end":21,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163612,"byte_end":163695,"line_start":22,"line_end":22,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163700,"byte_end":163779,"line_start":23,"line_end":23,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163784,"byte_end":163799,"line_start":24,"line_end":24,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164429,"byte_end":164436,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163882,"byte_end":163949,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163954,"byte_end":163985,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163990,"byte_end":163993,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163998,"byte_end":164071,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164076,"byte_end":164131,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164136,"byte_end":164139,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164144,"byte_end":164225,"line_start":35,"line_end":35,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164230,"byte_end":164313,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164318,"byte_end":164397,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164402,"byte_end":164417,"line_start":38,"line_end":38,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":165029,"byte_end":165039,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<S>>::into_inner","value":"pub fn into_inner(Self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164508,"byte_end":164570,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164575,"byte_end":164578,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164583,"byte_end":164655,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164660,"byte_end":164731,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164736,"byte_end":164739,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164744,"byte_end":164825,"line_start":48,"line_end":48,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164830,"byte_end":164913,"line_start":49,"line_end":49,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":164918,"byte_end":164997,"line_start":50,"line_end":50,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":165002,"byte_end":165017,"line_start":51,"line_end":51,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5249},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":165969,"byte_end":165976,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5252},{"krate":0,"index":5253}],"decl_id":null,"docs":" Do something with the items of a stream, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the items of a stream, passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":165775,"byte_end":165834,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":165835,"byte_end":165838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::inspect` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":165839,"byte_end":165891,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":165909,"byte_end":165957,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166358,"byte_end":166365,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166251,"byte_end":166324,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166329,"byte_end":166346,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166674,"byte_end":166681,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166413,"byte_end":166480,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166485,"byte_end":166516,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166521,"byte_end":166524,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166529,"byte_end":166602,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166607,"byte_end":166662,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166976,"byte_end":166986,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166741,"byte_end":166803,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166808,"byte_end":166811,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166816,"byte_end":166888,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166893,"byte_end":166964,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5258},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168207,"byte_end":168217,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5261},{"krate":0,"index":5262}],"decl_id":null,"docs":" Do something with the error of a stream, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error of a stream, passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168009,"byte_end":168068,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168069,"byte_end":168072,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::inspect_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168073,"byte_end":168129,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168147,"byte_end":168195,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168609,"byte_end":168616,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168502,"byte_end":168575,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168580,"byte_end":168597,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168925,"byte_end":168932,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168664,"byte_end":168731,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168736,"byte_end":168767,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168772,"byte_end":168775,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168780,"byte_end":168853,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168858,"byte_end":168913,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169227,"byte_end":169237,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168992,"byte_end":169054,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169059,"byte_end":169062,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169067,"byte_end":169139,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169144,"byte_end":169215,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170390,"byte_end":170393,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271}],"decl_id":null,"docs":" A stream combinator which will change the type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the type of a stream from one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170166,"byte_end":170237,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ type to another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170238,"byte_end":170258,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170259,"byte_end":170262,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `Stream::map` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170263,"byte_end":170312,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170330,"byte_end":170378,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170718,"byte_end":170725,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170611,"byte_end":170684,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170689,"byte_end":170706,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171034,"byte_end":171041,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170773,"byte_end":170840,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170845,"byte_end":170876,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170881,"byte_end":170884,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170889,"byte_end":170962,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170967,"byte_end":171022,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171336,"byte_end":171346,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171101,"byte_end":171163,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171168,"byte_end":171171,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171176,"byte_end":171248,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171253,"byte_end":171324,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172476,"byte_end":172482,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5279},{"krate":0,"index":5280}],"decl_id":null,"docs":" A stream combinator which will change the error type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the error type of a stream from one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172242,"byte_end":172319,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ type to another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172320,"byte_end":172340,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172341,"byte_end":172344,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `Stream::map_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172345,"byte_end":172398,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172416,"byte_end":172464,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172817,"byte_end":172824,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172710,"byte_end":172783,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172788,"byte_end":172805,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173133,"byte_end":173140,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172872,"byte_end":172939,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172944,"byte_end":172975,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172980,"byte_end":172983,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172988,"byte_end":173061,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173066,"byte_end":173121,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173435,"byte_end":173445,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173200,"byte_end":173262,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173267,"byte_end":173270,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173275,"byte_end":173347,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173352,"byte_end":173423,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5285},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174714,"byte_end":174719,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174395,"byte_end":174448,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174449,"byte_end":174452,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174453,"byte_end":174524,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174525,"byte_end":174599,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174600,"byte_end":174636,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":174654,"byte_end":174702,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175259,"byte_end":175264,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"First","qualname":"::stream::merge::MergedItem::First","value":"MergedItem::First(I1)","parent":{"krate":0,"index":5295},"children":[],"decl_id":null,"docs":" An item from the first stream\n","sig":null,"attributes":[{"value":"/ An item from the first stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175221,"byte_end":175254,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175313,"byte_end":175319,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Second","qualname":"::stream::merge::MergedItem::Second","value":"MergedItem::Second(I2)","parent":{"krate":0,"index":5295},"children":[],"decl_id":null,"docs":" An item from the second stream\n","sig":null,"attributes":[{"value":"/ An item from the second stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175274,"byte_end":175308,"line_start":36,"line_end":36,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175361,"byte_end":175365,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Both","qualname":"::stream::merge::MergedItem::Both","value":"MergedItem::Both(I1, I2)","parent":{"krate":0,"index":5295},"children":[],"decl_id":null,"docs":" Items from both streams\n","sig":null,"attributes":[{"value":"/ Items from both streams","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175329,"byte_end":175356,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":5295},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175196,"byte_end":175206,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MergedItem","qualname":"::stream::merge::MergedItem","value":"pub enum MergedItem<I1, I2> { First(I1), Second(I2), Both(I1, I2), }","parent":null,"children":[{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5304}],"decl_id":null,"docs":" An item returned from a merge stream, which represents an item from one or\n both of the underlying streams.\n","sig":null,"attributes":[{"value":"/ An item returned from a merge stream, which represents an item from one or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175055,"byte_end":175133,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ both of the underlying streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175134,"byte_end":175169,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177125,"byte_end":177129,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":176936,"byte_end":176989,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":176990,"byte_end":176993,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":176994,"byte_end":177047,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177065,"byte_end":177113,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177402,"byte_end":177406,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T, E>(Result<T, E>) -> Once<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of single element","sig":null,"attributes":[{"value":"/ Creates a stream of single element","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177160,"byte_end":177198,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177199,"byte_end":177202,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177203,"byte_end":177214,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177215,"byte_end":177234,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177235,"byte_end":177238,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::once::<(), _>(Err(17));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177239,"byte_end":177291,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(Err(17), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177292,"byte_end":177331,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177332,"byte_end":177386,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177387,"byte_end":177394,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178072,"byte_end":178078,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5327}],"decl_id":null,"docs":" A stream combinator which chains a computation onto errors produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto errors produced by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":177838,"byte_end":177914,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":177915,"byte_end":177926,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":177927,"byte_end":177930,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::or_else` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":177931,"byte_end":177994,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178012,"byte_end":178060,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5333},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180259,"byte_end":180267,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":179967,"byte_end":180014,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180015,"byte_end":180018,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180019,"byte_end":180076,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180077,"byte_end":180134,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180135,"byte_end":180181,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180199,"byte_end":180247,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181562,"byte_end":181566,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<S>>::peek","value":"pub fn peek(&mut Self) -> Poll<Option<&S::Item>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181324,"byte_end":181386,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181391,"byte_end":181394,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181399,"byte_end":181472,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181477,"byte_end":181550,"line_start":61,"line_end":61,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5340},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182200,"byte_end":182206,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5342}],"decl_id":null,"docs":" A stream which adapts a function returning `Poll`.","sig":null,"attributes":[{"value":"/ A stream which adapts a function returning `Poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182025,"byte_end":182079,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182080,"byte_end":182083,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `poll_fn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182084,"byte_end":182122,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182140,"byte_end":182188,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182748,"byte_end":182755,"line_start":32,"line_end":32,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, E, F>(F) -> PollFn<F> where F: FnMut() -> Poll<Option<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping around a function returning `Poll`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping around a function returning `Poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182229,"byte_end":182298,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182299,"byte_end":182302,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream delegates to the wrapped function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182303,"byte_end":182369,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182370,"byte_end":182373,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182374,"byte_end":182388,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182389,"byte_end":182392,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182393,"byte_end":182400,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182401,"byte_end":182434,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use futures::{Async, Poll};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182435,"byte_end":182466,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182467,"byte_end":182470,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182471,"byte_end":182500,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182501,"byte_end":182504,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move || -> Poll<Option<String>, std::io::Error> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182505,"byte_end":182584,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/     if counter == 0 { return Ok(Async::Ready(None)); }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182585,"byte_end":182643,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182644,"byte_end":182665,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/     Ok(Async::Ready(Some(\"Hello, World!\".to_owned())))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182666,"byte_end":182724,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182725,"byte_end":182732,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182733,"byte_end":182740,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183472,"byte_end":183478,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183105,"byte_end":183158,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183159,"byte_end":183162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from either of the underlying streams as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183163,"byte_end":183240,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ they become available, and the streams are polled in a round-robin fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183241,"byte_end":183320,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ Errors, however, are not merged: you get at most one error at a time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183321,"byte_end":183394,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183412,"byte_end":183460,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5356},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185369,"byte_end":185373,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":5359}],"decl_id":null,"docs":" A stream combinator which skips a number of elements before continuing.","sig":null,"attributes":[{"value":"/ A stream combinator which skips a number of elements before continuing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185151,"byte_end":185226,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185227,"byte_end":185230,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::skip` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185231,"byte_end":185291,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185309,"byte_end":185357,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185673,"byte_end":185680,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185566,"byte_end":185639,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185644,"byte_end":185661,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185989,"byte_end":185996,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185728,"byte_end":185795,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185800,"byte_end":185831,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185836,"byte_end":185839,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185844,"byte_end":185917,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185922,"byte_end":185977,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186291,"byte_end":186301,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186056,"byte_end":186118,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186123,"byte_end":186126,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186131,"byte_end":186203,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186208,"byte_end":186279,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5363},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187563,"byte_end":187572,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5370}],"decl_id":null,"docs":" A stream combinator which skips elements of a stream while a predicate\n holds.","sig":null,"attributes":[{"value":"/ A stream combinator which skips elements of a stream while a predicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187329,"byte_end":187403,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ holds.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187404,"byte_end":187414,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187415,"byte_end":187418,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::skip_while` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187419,"byte_end":187485,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":187503,"byte_end":187551,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188169,"byte_end":188176,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<S, P, R>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188062,"byte_end":188135,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188140,"byte_end":188157,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188485,"byte_end":188492,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<S, P, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188224,"byte_end":188291,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188296,"byte_end":188327,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188332,"byte_end":188335,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188340,"byte_end":188413,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188418,"byte_end":188473,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188787,"byte_end":188797,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<S, P, R>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188552,"byte_end":188614,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188619,"byte_end":188622,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188627,"byte_end":188699,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188704,"byte_end":188775,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":190940,"byte_end":190944,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5379}],"decl_id":null,"docs":" A stream combinator which returns a maximum number of elements.","sig":null,"attributes":[{"value":"/ A stream combinator which returns a maximum number of elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":190730,"byte_end":190797,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":190798,"byte_end":190801,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::take` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":190802,"byte_end":190862,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":190880,"byte_end":190928,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191244,"byte_end":191251,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191137,"byte_end":191210,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191215,"byte_end":191232,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191560,"byte_end":191567,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191299,"byte_end":191366,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191371,"byte_end":191402,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191407,"byte_end":191410,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191415,"byte_end":191488,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191493,"byte_end":191548,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191862,"byte_end":191872,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191627,"byte_end":191689,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191694,"byte_end":191697,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191702,"byte_end":191774,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191779,"byte_end":191850,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193220,"byte_end":193229,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390}],"decl_id":null,"docs":" A stream combinator which takes elements from a stream while a predicate\n holds.","sig":null,"attributes":[{"value":"/ A stream combinator which takes elements from a stream while a predicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":192984,"byte_end":193060,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ holds.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193061,"byte_end":193071,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193072,"byte_end":193075,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::take_while` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193076,"byte_end":193142,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193160,"byte_end":193208,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193822,"byte_end":193829,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<S, P, R>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193715,"byte_end":193788,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193793,"byte_end":193810,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194138,"byte_end":194145,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<S, P, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193877,"byte_end":193944,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193949,"byte_end":193980,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193985,"byte_end":193988,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193993,"byte_end":194066,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194071,"byte_end":194126,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194440,"byte_end":194450,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<S, P, R>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194205,"byte_end":194267,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194272,"byte_end":194275,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194280,"byte_end":194352,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194357,"byte_end":194428,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196542,"byte_end":196546,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402}],"decl_id":null,"docs":" A stream combinator which chains a computation onto each item produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto each item produced by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196308,"byte_end":196387,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196388,"byte_end":196399,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196400,"byte_end":196403,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::then` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196404,"byte_end":196464,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196482,"byte_end":196530,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200194,"byte_end":200200,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, It>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nOption<Fut>, Fut: IntoFuture<Item = (It, T)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198525,"byte_end":198595,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198596,"byte_end":198599,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198600,"byte_end":198669,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198670,"byte_end":198751,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198752,"byte_end":198783,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198784,"byte_end":198787,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198788,"byte_end":198867,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198868,"byte_end":198947,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":198948,"byte_end":199002,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199003,"byte_end":199006,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199007,"byte_end":199087,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Ok(Async::Ready(None))` in future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199088,"byte_end":199163,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199164,"byte_end":199186,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199187,"byte_end":199190,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `Future`, the error will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199191,"byte_end":199265,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ returned by the `Stream`.  The `Stream` will then yield","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199266,"byte_end":199325,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ `Ok(Async::Ready(None))` in future calls to `poll()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199326,"byte_end":199383,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199384,"byte_end":199387,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199388,"byte_end":199465,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199466,"byte_end":199538,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199539,"byte_end":199616,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199617,"byte_end":199677,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199678,"byte_end":199681,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199682,"byte_end":199695,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199696,"byte_end":199699,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199700,"byte_end":199711,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use futures::stream::{self, Stream};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199712,"byte_end":199752,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ use futures::future::{self, Future};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199753,"byte_end":199793,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199794,"byte_end":199797,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::unfold(0, |state| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199798,"byte_end":199846,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199847,"byte_end":199870,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199871,"byte_end":199910,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199911,"byte_end":199948,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/         let fut = future::ok::<_, u32>((yielded, next_state));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":199949,"byte_end":200015,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/         Some(fut)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200016,"byte_end":200037,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200038,"byte_end":200054,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200055,"byte_end":200071,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200072,"byte_end":200081,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200082,"byte_end":200089,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200090,"byte_end":200093,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect().wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200094,"byte_end":200135,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200136,"byte_end":200178,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200179,"byte_end":200186,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5408},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200626,"byte_end":200632,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413}],"decl_id":null,"docs":" A stream which creates futures, polls them and return their result","sig":null,"attributes":[{"value":"/ A stream which creates futures, polls them and return their result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200406,"byte_end":200476,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200477,"byte_end":200480,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by the `futures::stream::unfold` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200481,"byte_end":200548,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200566,"byte_end":200614,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5434},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202713,"byte_end":202716,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202394,"byte_end":202447,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202448,"byte_end":202451,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202452,"byte_end":202523,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202524,"byte_end":202598,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202616,"byte_end":202652,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":202653,"byte_end":202701,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5445},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204489,"byte_end":204496,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Forward","qualname":"::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":5448},{"krate":0,"index":5449},{"krate":0,"index":5450}],"decl_id":null,"docs":" Future for the `Stream::forward` combinator, which sends a stream of values\n to a sink and then waits until the sink has fully flushed those values.\n","sig":null,"attributes":[{"value":"/ Future for the `Stream::forward` combinator, which sends a stream of values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204256,"byte_end":204335,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ to a sink and then waits until the sink has fully flushed those values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204336,"byte_end":204411,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204429,"byte_end":204477,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205137,"byte_end":205145,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"sink_ref","qualname":"<Forward<T, U>>::sink_ref","value":"pub fn sink_ref(&Self) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204991,"byte_end":205036,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205041,"byte_end":205125,"line_start":34,"line_end":34,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205354,"byte_end":205362,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"sink_mut","qualname":"<Forward<T, U>>::sink_mut","value":"pub fn sink_mut(&mut Self) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205207,"byte_end":205253,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205258,"byte_end":205342,"line_start":40,"line_end":40,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205580,"byte_end":205590,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"stream_ref","qualname":"<Forward<T, U>>::stream_ref","value":"pub fn stream_ref(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner stream.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205432,"byte_end":205479,"line_start":45,"line_end":45,"column_start":5,"column_end":52}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205484,"byte_end":205568,"line_start":46,"line_end":46,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205824,"byte_end":205834,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"stream_mut","qualname":"<Forward<T, U>>::stream_mut","value":"pub fn stream_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner stream.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205675,"byte_end":205723,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":205728,"byte_end":205812,"line_start":52,"line_end":52,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":5482},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861843,"byte_end":12861851,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486}],"decl_id":null,"docs":" An adaptor for a stream of futures to execute the futures concurrently, if\n possible.","sig":null,"attributes":[{"value":"/ An adaptor for a stream of futures to execute the futures concurrently, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861476,"byte_end":12861554,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861555,"byte_end":12861568,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861569,"byte_end":12861572,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of pending futures, and then return their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861573,"byte_end":12861653,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ results in the order that they were pulled out of the original stream. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861654,"byte_end":12861733,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ is created by the `Stream::buffered` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861734,"byte_end":12861782,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12861783,"byte_end":12861831,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863018,"byte_end":12863025,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffered<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862911,"byte_end":12862984,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862989,"byte_end":12863006,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5495},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863343,"byte_end":12863350,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffered<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863082,"byte_end":12863149,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863154,"byte_end":12863185,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863190,"byte_end":12863193,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863198,"byte_end":12863271,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863276,"byte_end":12863331,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863650,"byte_end":12863660,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffered<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863415,"byte_end":12863477,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863482,"byte_end":12863485,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863490,"byte_end":12863562,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863567,"byte_end":12863638,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5533},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865915,"byte_end":12865930,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537}],"decl_id":null,"docs":" An adaptor for a stream of futures to execute the futures concurrently, if\n possible, delivering results as they become available.","sig":null,"attributes":[{"value":"/ An adaptor for a stream of futures to execute the futures concurrently, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865525,"byte_end":12865603,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ possible, delivering results as they become available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865604,"byte_end":12865662,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865663,"byte_end":12865666,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of pending futures, and then return their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865667,"byte_end":12865747,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ results in the order that they complete. This is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865748,"byte_end":12865815,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ `Stream::buffer_unordered` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865816,"byte_end":12865854,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12865855,"byte_end":12865903,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5545},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867005,"byte_end":12867012,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufferUnordered<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866898,"byte_end":12866971,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866976,"byte_end":12866993,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5546},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867330,"byte_end":12867337,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufferUnordered<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867069,"byte_end":12867136,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867141,"byte_end":12867172,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867177,"byte_end":12867180,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867185,"byte_end":12867258,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867263,"byte_end":12867318,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5547},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867637,"byte_end":12867647,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferUnordered<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867402,"byte_end":12867464,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867469,"byte_end":12867472,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867477,"byte_end":12867549,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867554,"byte_end":12867625,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6201},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12869792,"byte_end":12869803,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":6203}],"decl_id":null,"docs":" Stream for the `catch_unwind` combinator.","sig":null,"attributes":[{"value":"/ Stream for the `catch_unwind` combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12869607,"byte_end":12869652,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12869653,"byte_end":12869656,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::catch_unwind` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12869657,"byte_end":12869714,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12869732,"byte_end":12869780,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6219},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871898,"byte_end":12871904,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6224}],"decl_id":null,"docs":" An adaptor that chunks up elements in a vector.","sig":null,"attributes":[{"value":"/ An adaptor that chunks up elements in a vector.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871561,"byte_end":12871612,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871613,"byte_end":12871616,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of items in the stream and pass on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871617,"byte_end":12871694,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ vector used for buffering when a specified capacity has been reached. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871695,"byte_end":12871773,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ is created by the `Stream::chunks` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871774,"byte_end":12871820,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12871838,"byte_end":12871886,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5632},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873141,"byte_end":12873148,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chunks<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873034,"byte_end":12873107,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873112,"byte_end":12873129,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5633},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873466,"byte_end":12873473,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chunks<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873205,"byte_end":12873272,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873277,"byte_end":12873308,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873313,"byte_end":12873316,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873321,"byte_end":12873394,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873399,"byte_end":12873454,"line_start":73,"line_end":73,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873773,"byte_end":12873783,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chunks<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873538,"byte_end":12873600,"line_start":78,"line_end":78,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873605,"byte_end":12873608,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873613,"byte_end":12873685,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873690,"byte_end":12873761,"line_start":81,"line_end":81,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6228},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12875918,"byte_end":12875925,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6230},{"krate":0,"index":6231}],"decl_id":null,"docs":" A future which collects all of the values of a stream into a vector.","sig":null,"attributes":[{"value":"/ A future which collects all of the values of a stream into a vector.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12875704,"byte_end":12875776,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12875777,"byte_end":12875780,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This future is created by the `Stream::collect` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12875781,"byte_end":12875840,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12875858,"byte_end":12875906,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6235},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877263,"byte_end":12877267,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Wait","qualname":"::stream::wait::Wait","value":"Wait {  }","parent":null,"children":[{"krate":0,"index":6237}],"decl_id":null,"docs":" A stream combinator which converts an asynchronous stream to a **blocking\n iterator**.","sig":null,"attributes":[{"value":"/ A stream combinator which converts an asynchronous stream to a **blocking","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12876866,"byte_end":12876943,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ iterator**.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12876944,"byte_end":12876959,"line_start":5,"line_end":5,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12876960,"byte_end":12876963,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `Stream::wait` method, this function transforms any stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12876964,"byte_end":12877041,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ into a standard iterator. This is implemented by blocking the current thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877042,"byte_end":12877122,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ while items on the underlying stream aren't ready yet.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877123,"byte_end":12877181,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"must_use = \"iterators do nothing unless advanced\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877182,"byte_end":12877234,"line_start":10,"line_end":10,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5677},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877437,"byte_end":12877444,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Wait<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877330,"byte_end":12877403,"line_start":17,"line_end":17,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877408,"byte_end":12877425,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5678},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877762,"byte_end":12877769,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Wait<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877501,"byte_end":12877568,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877573,"byte_end":12877604,"line_start":24,"line_end":24,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877609,"byte_end":12877612,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877617,"byte_end":12877690,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877695,"byte_end":12877750,"line_start":27,"line_end":27,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12878069,"byte_end":12878079,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Wait<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877834,"byte_end":12877896,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877901,"byte_end":12877904,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877909,"byte_end":12877981,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877986,"byte_end":12878057,"line_start":35,"line_end":35,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":5718},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879313,"byte_end":12879320,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"channel","qualname":"::stream::channel::channel","value":"pub fn channel<T, E>() -> (Sender<T, E>, Receiver<T, E>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878670,"byte_end":12878740,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878741,"byte_end":12878744,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878745,"byte_end":12878822,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878823,"byte_end":12878897,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878898,"byte_end":12878974,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The `Sender::send` method will only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12878975,"byte_end":12879050,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ allow sending one message and the next message can only be sent once the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879051,"byte_end":12879127,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ first was consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879128,"byte_end":12879151,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879152,"byte_end":12879155,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879156,"byte_end":12879235,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879236,"byte_end":12879305,"line_start":23,"line_end":23,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":6241},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879624,"byte_end":12879630,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Sender","qualname":"::stream::channel::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6244}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879456,"byte_end":12879523,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879524,"byte_end":12879527,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method in the `stream` module.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879528,"byte_end":12879595,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880032,"byte_end":12880040,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::stream::channel::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6252}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879681,"byte_end":12879752,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879753,"byte_end":12879756,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879757,"byte_end":12879837,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879838,"byte_end":12879909,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ `channel` method in the `stream` module.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879910,"byte_end":12879954,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12879955,"byte_end":12880003,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5721},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880186,"byte_end":12880195,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"SendError","qualname":"::stream::channel::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of the channel is dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of the channel is dropped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880093,"byte_end":12880174,"line_start":48,"line_end":48,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":6257},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880285,"byte_end":12880297,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"FutureSender","qualname":"::stream::channel::FutureSender","value":"FutureSender {  }","parent":null,"children":[{"krate":0,"index":6260}],"decl_id":null,"docs":" Future returned by `Sender::send`.\n","sig":null,"attributes":[{"value":"/ Future returned by `Sender::send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880218,"byte_end":12880256,"line_start":51,"line_end":51,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881570,"byte_end":12881574,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T, E>>::send","value":"pub fn send(Self, Result<T, E>) -> FutureSender<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value along this channel to the receiver.","sig":null,"attributes":[{"value":"/ Sends a new value along this channel to the receiver.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881346,"byte_end":12881403,"line_start":95,"line_end":95,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881408,"byte_end":12881411,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This method consumes the sender and returns a future which will resolve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881416,"byte_end":12881491,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ to the sender again when the value sent has been consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881496,"byte_end":12881558,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6265},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882209,"byte_end":12882220,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882143,"byte_end":12882180,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882500,"byte_end":12882507,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite(Self, SplitSink<S>) -> Result<S, ReuniteError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882266,"byte_end":12882334,"line_start":13,"line_end":13,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882339,"byte_end":12882413,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882418,"byte_end":12882488,"line_start":15,"line_end":15,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6272},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882984,"byte_end":12882993,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::split::SplitSink","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882920,"byte_end":12882955,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5797},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883271,"byte_end":12883278,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883037,"byte_end":12883105,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883110,"byte_end":12883184,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883189,"byte_end":12883259,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":5808},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884634,"byte_end":12884646,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884483,"byte_end":12884561,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884562,"byte_end":12884622,"line_start":84,"line_end":84,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884650,"byte_end":12884666,"line_start":85,"line_end":85,"column_start":28,"column_end":44},"name":"0","qualname":"::stream::split::ReuniteError::0","value":"stream::split::SplitSink<T>","parent":{"krate":0,"index":5808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5812},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884668,"byte_end":12884686,"line_start":85,"line_end":85,"column_start":46,"column_end":64},"name":"1","qualname":"::stream::split::ReuniteError::1","value":"stream::split::SplitStream<T>","parent":{"krate":0,"index":5808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5822},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","parent":null,"children":[{"krate":0,"index":5823},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5833},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5839},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5865},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5875},{"krate":0,"index":5878},{"krate":0,"index":5879},{"krate":0,"index":5882},{"krate":0,"index":5885},{"krate":0,"index":5888},{"krate":0,"index":5891},{"krate":0,"index":5894},{"krate":0,"index":5895},{"krate":0,"index":5898},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5911},{"krate":0,"index":5916},{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5926},{"krate":0,"index":5934},{"krate":0,"index":5943},{"krate":0,"index":5946},{"krate":0,"index":5949},{"krate":0,"index":5958},{"krate":0,"index":5973},{"krate":0,"index":5976},{"krate":0,"index":5979},{"krate":0,"index":6920},{"krate":0,"index":6926},{"krate":0,"index":5983},{"krate":0,"index":5989},{"krate":0,"index":5992},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6005},{"krate":0,"index":6009},{"krate":0,"index":6013},{"krate":0,"index":6017},{"krate":0,"index":6019},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":6028},{"krate":0,"index":6030},{"krate":0,"index":6033},{"krate":0,"index":6036},{"krate":0,"index":6038},{"krate":0,"index":6040}],"decl_id":null,"docs":" An unbounded set of futures.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6444,"byte_end":6471,"line_start":169,"line_end":169,"column_start":9,"column_end":36}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885258,"byte_end":12885290,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5911},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887401,"byte_end":12887417,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885735,"byte_end":12885767,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885768,"byte_end":12885771,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" also serves a special function in this library, providing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885772,"byte_end":12885851,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the ability to maintain a set of futures that and manage driving them all","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885852,"byte_end":12885929,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885930,"byte_end":12885948,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885949,"byte_end":12885952,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this set and their realized values are yielded as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12885953,"byte_end":12886030,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ they are ready. This structure is optimized to manage a large number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886031,"byte_end":12886106,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ futures. Futures managed by `FuturesUnordered` will only be polled when they","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886107,"byte_end":12886187,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ generate notifications. This reduces the required amount of work needed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886188,"byte_end":12886266,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ coordinate large numbers of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886267,"byte_end":12886307,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886308,"byte_end":12886311,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesUnordered` is first created, it does not contain any futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886312,"byte_end":12886392,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ Calling `poll` in this state will result in `Ok(Async::Ready(None))` to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886393,"byte_end":12886471,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ returned. Futures are submitted to the set using `push`; however, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886472,"byte_end":12886545,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ future will **not** be polled at this point. `FuturesUnordered` will only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886546,"byte_end":12886623,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ poll managed futures when `FuturesUnordered::poll` is called. As such, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886624,"byte_end":12886701,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886702,"byte_end":12886760,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886761,"byte_end":12886764,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If `FuturesUnordered::poll` returns `Ok(Async::Ready(None))` this means that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886765,"byte_end":12886845,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ the set is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886846,"byte_end":12886922,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ to the set at a later time. At that point, a call to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886923,"byte_end":12886979,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ `FuturesUnordered::poll` will either return the future's resolved value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12886980,"byte_end":12887055,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ **or** `Ok(Async::NotReady)` if the future has not yet completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887056,"byte_end":12887125,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887126,"byte_end":12887129,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesUnordered` via the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887130,"byte_end":12887198,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ `futures_unordered` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887199,"byte_end":12887280,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ empty set with the `FuturesUnordered::new` constructor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887281,"byte_end":12887340,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887341,"byte_end":12887389,"line_start":46,"line_end":46,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12890242,"byte_end":12890245,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<T>>::new","value":"pub fn new() -> FuturesUnordered<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesUnordered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesUnordered`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12890016,"byte_end":12890062,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12890067,"byte_end":12890070,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesUnordered` does not contain any futures and, in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12890075,"byte_end":12890152,"line_start":127,"line_end":127,"column_start":5,"column_end":82}},{"value":"/ state, `FuturesUnordered::poll` will return `Ok(Async::Ready(None))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12890157,"byte_end":12890230,"line_start":128,"line_end":128,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5951},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891187,"byte_end":12891190,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891049,"byte_end":12891104,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891109,"byte_end":12891112,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891117,"byte_end":12891175,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891298,"byte_end":12891306,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891237,"byte_end":12891286,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5953},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891667,"byte_end":12891671,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891357,"byte_end":12891388,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891393,"byte_end":12891396,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the set for managing. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891401,"byte_end":12891473,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted future. The caller must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891478,"byte_end":12891552,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ ensure that `FuturesUnordered::poll` is called in order to receive task","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891557,"byte_end":12891632,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ notifications.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891637,"byte_end":12891655,"line_start":172,"line_end":172,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":5954},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12892702,"byte_end":12892710,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12892621,"byte_end":12892690,"line_start":195,"line_end":195,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6920},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12903963,"byte_end":12903970,"line_start":468,"line_end":468,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12903892,"byte_end":12903951,"line_start":467,"line_end":467,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6110},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914510,"byte_end":12914524,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912547,"byte_end":12912581,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912582,"byte_end":12912585,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912586,"byte_end":12912665,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912666,"byte_end":12912737,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912738,"byte_end":12912814,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912815,"byte_end":12912863,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912864,"byte_end":12912867,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912868,"byte_end":12912947,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912948,"byte_end":12913023,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913024,"byte_end":12913102,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913103,"byte_end":12913183,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913184,"byte_end":12913213,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913214,"byte_end":12913217,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913218,"byte_end":12913296,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Ok(Async::Ready(None))` to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913297,"byte_end":12913375,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913376,"byte_end":12913451,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913452,"byte_end":12913527,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913528,"byte_end":12913603,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913604,"byte_end":12913662,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913663,"byte_end":12913666,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Ok(Async::Ready(None))` this means that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913667,"byte_end":12913745,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913746,"byte_end":12913824,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913825,"byte_end":12913883,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913884,"byte_end":12913957,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ **or** `Ok(Async::NotReady)` if the future has not yet completed. When","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12913958,"byte_end":12914032,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914033,"byte_end":12914109,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ return `Ok(Async::NotReady)` until the first future completes, even if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914110,"byte_end":12914184,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914185,"byte_end":12914238,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914239,"byte_end":12914242,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914243,"byte_end":12914309,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ `futures_ordered` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914310,"byte_end":12914389,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ empty queue with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914390,"byte_end":12914449,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914450,"byte_end":12914498,"line_start":83,"line_end":83,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915358,"byte_end":12915373,"line_start":104,"line_end":104,"column_start":8,"column_end":23},"name":"futures_ordered","qualname":"::stream::futures_ordered::futures_ordered","value":"pub fn futures_ordered<I>(I)\n-> FuturesOrdered<<I::Item as IntoFuture>::Future> where I: IntoIterator,\nI::Item: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Converts a list of futures into a `Stream` of results from the futures.","sig":null,"attributes":[{"value":"/ Converts a list of futures into a `Stream` of results from the futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914724,"byte_end":12914799,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914800,"byte_end":12914803,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This function will take an list of futures (e.g. a vector, an iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914804,"byte_end":12914879,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ etc), and return a stream. The stream will yield items as they become","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914880,"byte_end":12914953,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/ available on the futures internally, in the order that their originating","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12914954,"byte_end":12915030,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ futures were submitted to the queue. If the futures complete out of order,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915031,"byte_end":12915109,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ items will be stored internally within `FuturesOrdered` until all preceding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915110,"byte_end":12915189,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ items have been yielded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915190,"byte_end":12915218,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915219,"byte_end":12915222,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that the returned queue can also be used to dynamically push more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915223,"byte_end":12915297,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ futures into the queue as they become available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915298,"byte_end":12915350,"line_start":103,"line_end":103,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6123},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916034,"byte_end":12916037,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<T>>::new","value":"pub fn new() -> FuturesOrdered<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915814,"byte_end":12915858,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915863,"byte_end":12915866,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915871,"byte_end":12915946,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll` will return `Ok(Async::Ready(None))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915951,"byte_end":12916022,"line_start":129,"line_end":129,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6124},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916551,"byte_end":12916554,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916278,"byte_end":12916335,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916340,"byte_end":12916343,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916348,"byte_end":12916411,"line_start":141,"line_end":141,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916416,"byte_end":12916480,"line_start":142,"line_end":142,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916485,"byte_end":12916539,"line_start":143,"line_end":143,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6125},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916706,"byte_end":12916714,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916643,"byte_end":12916694,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6126},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12917132,"byte_end":12917136,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916813,"byte_end":12916846,"line_start":153,"line_end":153,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916851,"byte_end":12916854,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916859,"byte_end":12916935,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12916940,"byte_end":12917014,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12917019,"byte_end":12917092,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12917097,"byte_end":12917120,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":6193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93543,"byte_end":93552,"line_start":132,"line_end":132,"column_start":14,"column_end":23},"name":"BoxStream","qualname":"::stream::BoxStream","value":"::std::boxed::Box<Stream<Item = T, Error = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Stream + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6444,"byte_end":6471,"line_start":169,"line_end":169,"column_start":9,"column_end":36}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93282,"byte_end":93529,"line_start":129,"line_end":131,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95899,"byte_end":95905,"line_start":184,"line_end":184,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2136}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93858,"byte_end":93926,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93927,"byte_end":93930,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ `Stream` is a trait to represent any source of sequential events or items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93931,"byte_end":94008,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ which acts like an iterator but long periods of time may pass between","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94009,"byte_end":94082,"line_start":147,"line_end":147,"column_start":1,"column_end":74}},{"value":"/ items. Like `Future` the methods of `Stream` never block and it is thus","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94083,"byte_end":94158,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ suitable for programming in an asynchronous fashion. This trait is very","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94159,"byte_end":94234,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ similar to the `Iterator` trait in the standard library where `Some` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94235,"byte_end":94310,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ used to signal elements of the stream and `None` is used to indicate that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94311,"byte_end":94388,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"/ the stream is finished.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94389,"byte_end":94416,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94417,"byte_end":94420,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Like futures a stream has basic combinators to transform the stream, perform","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94421,"byte_end":94501,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ more work on each item, etc.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94502,"byte_end":94534,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94535,"byte_end":94538,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94539,"byte_end":94607,"line_start":157,"line_end":157,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94608,"byte_end":94637,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94638,"byte_end":94641,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94642,"byte_end":94712,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94713,"byte_end":94716,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Streams as Futures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94717,"byte_end":94741,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94742,"byte_end":94745,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Any instance of `Stream` can also be viewed as a `Future` where the resolved","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94746,"byte_end":94826,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ value is the next item in the stream along with the rest of the stream. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94827,"byte_end":94906,"line_start":165,"line_end":165,"column_start":1,"column_end":80}},{"value":"/ `into_future` adaptor can be used here to convert any stream into a future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94907,"byte_end":94985,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ for use with other future methods like `join` and `select`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":94986,"byte_end":95049,"line_start":167,"line_end":167,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95050,"byte_end":95053,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95054,"byte_end":95066,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95067,"byte_end":95070,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Streams, like futures, can also model errors in their computation. All","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95071,"byte_end":95145,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ streams have an associated `Error` type like with futures. Currently as of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95146,"byte_end":95224,"line_start":172,"line_end":172,"column_start":1,"column_end":79}},{"value":"/ the 0.1 release of this library an error on a stream **does not terminate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95225,"byte_end":95302,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ the stream**. That is, after one error is received, another error may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95303,"byte_end":95379,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ received from the same stream (it's valid to keep polling).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95380,"byte_end":95443,"line_start":175,"line_end":175,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95444,"byte_end":95447,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This property of streams, however, is [being considered] for change in 0.2","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95448,"byte_end":95526,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/ where an error on a stream is similar to `None`, it terminates the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95527,"byte_end":95604,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/ entirely. If one of these use cases suits you perfectly and not the other,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95605,"byte_end":95683,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ please feel welcome to comment on [the issue][being considered]!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95684,"byte_end":95752,"line_start":180,"line_end":180,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95753,"byte_end":95756,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [being considered]: https://github.com/rust-lang-nursery/futures-rs/issues/206","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95757,"byte_end":95839,"line_start":182,"line_end":182,"column_start":1,"column_end":83}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95840,"byte_end":95888,"line_start":183,"line_end":183,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95977,"byte_end":95981,"line_start":186,"line_end":186,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95912,"byte_end":95967,"line_start":185,"line_end":185,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96045,"byte_end":96050,"line_start":189,"line_end":189,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::Stream::Error","value":"type Error;","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" The type of error this stream may generate.\n","sig":null,"attributes":[{"value":"/ The type of error this stream may generate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":95988,"byte_end":96035,"line_start":188,"line_end":188,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97361,"byte_end":97365,"line_start":216,"line_end":216,"column_start":8,"column_end":12},"name":"poll","qualname":"::stream::Stream::poll","value":"pub fn poll(&mut Self) -> Poll<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, returning `None` if\n the stream is finished.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, returning `None` if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96057,"byte_end":96131,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ the stream is finished.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96136,"byte_end":96163,"line_start":192,"line_end":192,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96168,"byte_end":96171,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This method, like `Future::poll`, is the sole method of pulling out a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96176,"byte_end":96249,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ value from a stream. This method must also be run within the context of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96254,"byte_end":96329,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ a task typically and implementors of this trait must ensure that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96334,"byte_end":96402,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ implementations of this method do not block, as it may cause consumers","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96407,"byte_end":96481,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ to behave badly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96486,"byte_end":96506,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96511,"byte_end":96514,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96519,"byte_end":96537,"line_start":200,"line_end":200,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96542,"byte_end":96545,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then this stream's next value is not ready","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96550,"byte_end":96622,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ yet and implementations will ensure that the current task will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96627,"byte_end":96696,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ notified when the next value may be ready. If `Some` is returned then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96701,"byte_end":96774,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ the returned value represents the next value on the stream. `Err`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96779,"byte_end":96848,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ indicates an error happened, while `Ok` indicates whether there was a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96853,"byte_end":96926,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ new item on the stream or whether the stream has terminated.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":96931,"byte_end":96995,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97000,"byte_end":97003,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97008,"byte_end":97020,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97025,"byte_end":97028,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Once a stream is finished, that is `Ready(None)` has been returned,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97033,"byte_end":97104,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ further calls to `poll` may result in a panic or other \"bad behavior\".","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97109,"byte_end":97183,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ If this is difficult to guard against then the `fuse` adapter can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97188,"byte_end":97260,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ used to ensure that `poll` always has well-defined semantics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97265,"byte_end":97330,"line_start":214,"line_end":214,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98818,"byte_end":98822,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"wait","qualname":"::stream::Stream::wait","value":"pub fn wait(Self) -> Wait<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Creates an iterator which blocks the current thread until each item of\n this stream is resolved.","sig":null,"attributes":[{"value":"/ Creates an iterator which blocks the current thread until each item of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97649,"byte_end":97723,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ this stream is resolved.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97728,"byte_end":97756,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97761,"byte_end":97764,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method will consume ownership of this stream, returning an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97769,"byte_end":97836,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ implementation of a standard iterator. This iterator will *block the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97841,"byte_end":97913,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/ current thread* on each call to `next` if the item in the stream isn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97918,"byte_end":97992,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ ready yet.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":97997,"byte_end":98011,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98016,"byte_end":98019,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ > **Note:** This method is not appropriate to call on event loops or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98024,"byte_end":98096,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ >           similar I/O situations because it will prevent the event","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98101,"byte_end":98173,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ >           loop from making progress (this blocks the thread). This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98178,"byte_end":98250,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ >           method should only be called when it's guaranteed that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98255,"byte_end":98329,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ >           blocking work associated with this stream will be completed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98334,"byte_end":98409,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ >           by another thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98414,"byte_end":98448,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98453,"byte_end":98456,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98461,"byte_end":98529,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98534,"byte_end":98591,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98596,"byte_end":98599,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98604,"byte_end":98616,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98621,"byte_end":98624,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The returned iterator does not attempt to catch panics. If the `poll`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98629,"byte_end":98702,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ function panics, panics will be propagated to the caller of `next`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98707,"byte_end":98778,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98783,"byte_end":98810,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100075,"byte_end":100080,"line_start":277,"line_end":277,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::Stream::boxed","value":"pub fn boxed(Self) -> BoxStream<Self::Item, Self::Error> where Self: Sized +\nSend + 'static","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Convenience function for turning this stream into a trait object.","sig":null,"attributes":[{"value":"/ Convenience function for turning this stream into a trait object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98910,"byte_end":98979,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98984,"byte_end":98987,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This simply avoids the need to write `Box::new` and can often help with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":98992,"byte_end":99067,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ type inference as well by always returning a trait object. Note that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99072,"byte_end":99144,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ this method requires the `Send` bound and returns a `BoxStream`, which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99149,"byte_end":99223,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ also encodes this. If you'd like to create a `Box<Stream>` without the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99228,"byte_end":99302,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ `Send` bound, then the `Box::new` function can be used instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99307,"byte_end":99374,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99379,"byte_end":99382,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99387,"byte_end":99455,"line_start":259,"line_end":259,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99460,"byte_end":99517,"line_start":260,"line_end":260,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99522,"byte_end":99525,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99530,"byte_end":99544,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99549,"byte_end":99552,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99557,"byte_end":99564,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99569,"byte_end":99596,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99601,"byte_end":99629,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99634,"byte_end":99637,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99642,"byte_end":99679,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ let a: BoxStream<i32, ()> = rx.boxed();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99684,"byte_end":99727,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99732,"byte_end":99739,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99744,"byte_end":99771,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":99795,"byte_end":100042,"line_start":273,"line_end":275,"column_start":5,"column_end":98}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100047,"byte_end":100067,"line_start":276,"line_end":276,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100736,"byte_end":100747,"line_start":292,"line_end":292,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::Stream::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Converts this stream into a `Future`.","sig":null,"attributes":[{"value":"/ Converts this stream into a `Future`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100223,"byte_end":100264,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100269,"byte_end":100272,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ A stream can be viewed as a future which will resolve to a pair containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100277,"byte_end":100355,"line_start":285,"line_end":285,"column_start":5,"column_end":83}},{"value":"/ the next element of the stream plus the remaining stream. If the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100360,"byte_end":100435,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ terminates, then the next element is `None` and the remaining stream is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100440,"byte_end":100515,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ still passed back, to allow reclamation of its resources.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100520,"byte_end":100581,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100586,"byte_end":100589,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100594,"byte_end":100672,"line_start":290,"line_end":290,"column_start":5,"column_end":83}},{"value":"/ placing everything into the \"world of futures\".","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100677,"byte_end":100728,"line_start":291,"line_end":291,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101504,"byte_end":101507,"line_start":317,"line_end":317,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::Stream::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> U,\nSelf: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Converts a stream of type `T` to a stream of type `U`.","sig":null,"attributes":[{"value":"/ Converts a stream of type `T` to a stream of type `U`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100845,"byte_end":100903,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100908,"byte_end":100911,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100916,"byte_end":100988,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ they are made available, and the callback will be executed inline with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":100993,"byte_end":101067,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"/ calls to `poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101072,"byte_end":101092,"line_start":302,"line_end":302,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101097,"byte_end":101100,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101105,"byte_end":101176,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101181,"byte_end":101252,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101257,"byte_end":101278,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101283,"byte_end":101286,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101291,"byte_end":101305,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101310,"byte_end":101313,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101318,"byte_end":101325,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101330,"byte_end":101358,"line_start":311,"line_end":311,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101363,"byte_end":101391,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101396,"byte_end":101399,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101404,"byte_end":101448,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ let rx = rx.map(|x| x + 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101453,"byte_end":101484,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101489,"byte_end":101496,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102326,"byte_end":102333,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::Stream::map_err","value":"pub fn map_err<U, F>(Self, F) -> MapErr<Self, F> where F: FnMut(Self::Error)\n-> U, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Converts a stream of error type `T` to a stream of error type `U`.","sig":null,"attributes":[{"value":"/ Converts a stream of error type `T` to a stream of error type `U`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101652,"byte_end":101722,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101727,"byte_end":101730,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all errors of this stream as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101735,"byte_end":101805,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ they are made available, and the callback will be executed inline with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101810,"byte_end":101884,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ calls to `poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101889,"byte_end":101909,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101914,"byte_end":101917,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101922,"byte_end":101993,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map_err` methods in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":101998,"byte_end":102073,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102078,"byte_end":102099,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102104,"byte_end":102107,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102112,"byte_end":102126,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102131,"byte_end":102134,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102139,"byte_end":102146,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102151,"byte_end":102179,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102184,"byte_end":102212,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102217,"byte_end":102220,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102225,"byte_end":102269,"line_start":340,"line_end":340,"column_start":5,"column_end":49}},{"value":"/ let rx = rx.map_err(|()| 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102274,"byte_end":102306,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102311,"byte_end":102318,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103398,"byte_end":103404,"line_start":373,"line_end":373,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::Stream::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102486,"byte_end":102558,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102563,"byte_end":102577,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102582,"byte_end":102585,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102590,"byte_end":102666,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ be run against them. If the predicate returns `true` then the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102671,"byte_end":102743,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ will yield the value, but if the predicate returns `false` then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102748,"byte_end":102819,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ value will be discarded and the next value will be produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102824,"byte_end":102888,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102893,"byte_end":102896,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102901,"byte_end":102972,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102977,"byte_end":102980,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":102985,"byte_end":103056,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103061,"byte_end":103135,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103140,"byte_end":103161,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103166,"byte_end":103169,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103174,"byte_end":103188,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103193,"byte_end":103196,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103201,"byte_end":103208,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103213,"byte_end":103241,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103246,"byte_end":103274,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103279,"byte_end":103282,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103287,"byte_end":103331,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/ let evens = rx.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103336,"byte_end":103378,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103383,"byte_end":103390,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104584,"byte_end":104594,"line_start":409,"line_end":409,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::Stream::filter_map","value":"pub fn filter_map<F, B>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<B>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103556,"byte_end":103631,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ them to a different type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103636,"byte_end":103665,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103670,"byte_end":103673,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103678,"byte_end":103753,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate returns `Some(e)` then the stream will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103758,"byte_end":103833,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ yield the value `e`, but if the predicate returns `None` then the next","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103838,"byte_end":103912,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ value will be produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103917,"byte_end":103944,"line_start":386,"line_end":386,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103949,"byte_end":103952,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":103957,"byte_end":104028,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104033,"byte_end":104036,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104041,"byte_end":104112,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104117,"byte_end":104195,"line_start":391,"line_end":391,"column_start":5,"column_end":83}},{"value":"/ standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104200,"byte_end":104221,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104226,"byte_end":104229,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104234,"byte_end":104248,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104253,"byte_end":104256,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104261,"byte_end":104268,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104273,"byte_end":104301,"line_start":397,"line_end":397,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104306,"byte_end":104334,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104339,"byte_end":104342,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104347,"byte_end":104391,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ let evens_plus_one = rx.filter_map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104396,"byte_end":104440,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     if x % 0 == 2 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104445,"byte_end":104468,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/         Some(x + 1)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104473,"byte_end":104496,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104501,"byte_end":104517,"line_start":404,"line_end":404,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104522,"byte_end":104538,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104543,"byte_end":104552,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104557,"byte_end":104564,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104569,"byte_end":104576,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106008,"byte_end":106012,"line_start":448,"line_end":448,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::Stream::then","value":"pub fn then<F, U>(Self, F) -> Then<Self, F, U> where\nF: FnMut(Result<Self::Item, Self::Error>) -> U, U: IntoFuture, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the resulting\n item to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the resulting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104760,"byte_end":104835,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ item to the provided closure `f`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104840,"byte_end":104877,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104882,"byte_end":104885,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This function can be used to ensure a computation runs regardless of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104890,"byte_end":104962,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ the next value on the stream. The closure provided will be yielded a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":104967,"byte_end":105039,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ `Result` once a value is ready, and the returned future will then be run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105044,"byte_end":105120,"line_start":421,"line_end":421,"column_start":5,"column_end":81}},{"value":"/ to completion to produce the next value on this stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105125,"byte_end":105184,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105189,"byte_end":105192,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105197,"byte_end":105272,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105277,"byte_end":105351,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105356,"byte_end":105428,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105433,"byte_end":105504,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105509,"byte_end":105535,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105540,"byte_end":105543,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105548,"byte_end":105619,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105624,"byte_end":105650,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105655,"byte_end":105658,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105663,"byte_end":105677,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105682,"byte_end":105685,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105690,"byte_end":105697,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105702,"byte_end":105730,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105735,"byte_end":105763,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105768,"byte_end":105771,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105776,"byte_end":105820,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105825,"byte_end":105828,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.then(|result| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105833,"byte_end":105864,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/     match result {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105869,"byte_end":105891,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/         Ok(e) => Ok(e + 3),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105896,"byte_end":105927,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/         Err(()) => Err(4),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105932,"byte_end":105962,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105967,"byte_end":105976,"line_start":445,"line_end":445,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105981,"byte_end":105988,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":105993,"byte_end":106000,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107720,"byte_end":107728,"line_start":495,"line_end":495,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::Stream::and_then","value":"pub fn and_then<F, U>(Self, F) -> AndThen<Self, F, U> where\nF: FnMut(Self::Item) -> U, U: IntoFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106212,"byte_end":106288,"line_start":456,"line_end":456,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106293,"byte_end":106333,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106338,"byte_end":106341,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106346,"byte_end":106422,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106427,"byte_end":106503,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106508,"byte_end":106581,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106586,"byte_end":106628,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106633,"byte_end":106636,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106641,"byte_end":106714,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106719,"byte_end":106750,"line_start":465,"line_end":465,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106755,"byte_end":106758,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106763,"byte_end":106838,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106843,"byte_end":106917,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106922,"byte_end":106994,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":106999,"byte_end":107070,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107075,"byte_end":107101,"line_start":471,"line_end":471,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107106,"byte_end":107109,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107114,"byte_end":107185,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107190,"byte_end":107216,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107221,"byte_end":107224,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107229,"byte_end":107301,"line_start":476,"line_end":476,"column_start":5,"column_end":77}},{"value":"/ success or error, use `for_each` instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107306,"byte_end":107351,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107356,"byte_end":107359,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107364,"byte_end":107378,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107383,"byte_end":107386,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107391,"byte_end":107398,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107403,"byte_end":107431,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107436,"byte_end":107464,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107469,"byte_end":107472,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107477,"byte_end":107521,"line_start":485,"line_end":485,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107526,"byte_end":107529,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107534,"byte_end":107569,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/     if result % 2 == 0 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107574,"byte_end":107602,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/         Ok(result)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107607,"byte_end":107629,"line_start":489,"line_end":489,"column_start":5,"column_end":27}},{"value":"/     } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107634,"byte_end":107650,"line_start":490,"line_end":490,"column_start":5,"column_end":21}},{"value":"/         Err(())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107655,"byte_end":107674,"line_start":491,"line_end":491,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107679,"byte_end":107688,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107693,"byte_end":107700,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107705,"byte_end":107712,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108963,"byte_end":108970,"line_start":522,"line_end":522,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::Stream::or_else","value":"pub fn or_else<F, U>(Self, F) -> OrElse<Self, F, U> where\nF: FnMut(Self::Error) -> U, U: IntoFuture<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":107935,"byte_end":108000,"line_start":503,"line_end":503,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108005,"byte_end":108054,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108059,"byte_end":108062,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108067,"byte_end":108146,"line_start":506,"line_end":506,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108151,"byte_end":108225,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108230,"byte_end":108306,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108311,"byte_end":108356,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108361,"byte_end":108364,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108369,"byte_end":108444,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108449,"byte_end":108489,"line_start":512,"line_end":512,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108494,"byte_end":108497,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108502,"byte_end":108577,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108582,"byte_end":108656,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108661,"byte_end":108733,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108738,"byte_end":108809,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108814,"byte_end":108840,"line_start":518,"line_end":518,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108845,"byte_end":108848,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108853,"byte_end":108924,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":108929,"byte_end":108955,"line_start":521,"line_end":521,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110320,"byte_end":110327,"line_start":563,"line_end":563,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::Stream::collect","value":"pub fn collect(Self) -> Collect<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Collect all of the values of this stream into a vector, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Collect all of the values of this stream into a vector, returning a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109174,"byte_end":109245,"line_start":530,"line_end":530,"column_start":5,"column_end":76}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109250,"byte_end":109305,"line_start":531,"line_end":531,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109310,"byte_end":109313,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109318,"byte_end":109392,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ collect them into a `Vec<Self::Item>`. If an error happens then all","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109397,"byte_end":109468,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109473,"byte_end":109543,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109548,"byte_end":109551,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved whenever an error happens or when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109556,"byte_end":109630,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ the stream returns `Ok(None)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109635,"byte_end":109669,"line_start":538,"line_end":538,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109674,"byte_end":109677,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109682,"byte_end":109750,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109755,"byte_end":109812,"line_start":541,"line_end":541,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109817,"byte_end":109820,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109825,"byte_end":109839,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109844,"byte_end":109847,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109852,"byte_end":109859,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109864,"byte_end":109884,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109889,"byte_end":109892,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109897,"byte_end":109925,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109930,"byte_end":109958,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109963,"byte_end":109966,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":109971,"byte_end":110011,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110016,"byte_end":110019,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110024,"byte_end":110046,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/     for i in (0..5).rev() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110051,"byte_end":110082,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/         tx = tx.send(i + 1).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110087,"byte_end":110135,"line_start":555,"line_end":555,"column_start":5,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110140,"byte_end":110149,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110154,"byte_end":110161,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110166,"byte_end":110169,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let mut result = rx.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110174,"byte_end":110208,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.wait(), Ok(vec![5, 4, 3, 2, 1]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110213,"byte_end":110268,"line_start":560,"line_end":560,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110273,"byte_end":110280,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110285,"byte_end":110312,"line_start":562,"line_end":562,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111532,"byte_end":111539,"line_start":599,"line_end":599,"column_start":8,"column_end":15},"name":"concat2","qualname":"::stream::Stream::concat2","value":"pub fn concat2(Self) -> Concat2<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Concatenate all results of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all results of a stream into a single extendable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110421,"byte_end":110485,"line_start":569,"line_end":569,"column_start":5,"column_end":69}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110490,"byte_end":110554,"line_start":570,"line_end":570,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110559,"byte_end":110562,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110567,"byte_end":110631,"line_start":572,"line_end":572,"column_start":5,"column_end":69}},{"value":"/ of all the successful results of the stream. If the stream is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110636,"byte_end":110701,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned. If an error occurs,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110706,"byte_end":110772,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/ all the results will be dropped and the error will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110777,"byte_end":110844,"line_start":575,"line_end":575,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110849,"byte_end":110852,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The name `concat2` is an intermediate measure until the release of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110857,"byte_end":110927,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ futures 0.2, at which point it will be renamed back to `concat`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":110932,"byte_end":111000,"line_start":578,"line_end":578,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111005,"byte_end":111008,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111013,"byte_end":111027,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111032,"byte_end":111035,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111040,"byte_end":111047,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111052,"byte_end":111072,"line_start":583,"line_end":583,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111077,"byte_end":111080,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111085,"byte_end":111113,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111118,"byte_end":111146,"line_start":586,"line_end":586,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111151,"byte_end":111154,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111159,"byte_end":111199,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111204,"byte_end":111207,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111212,"byte_end":111239,"line_start":590,"line_end":590,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111244,"byte_end":111275,"line_start":591,"line_end":591,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111280,"byte_end":111306,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/         tx = tx.send(vec![n + 1, n + 2, n + 3]).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111311,"byte_end":111379,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111384,"byte_end":111393,"line_start":594,"line_end":594,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111398,"byte_end":111405,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ let result = rx.concat2();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111410,"byte_end":111440,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(result.wait(), Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111445,"byte_end":111512,"line_start":597,"line_end":597,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111517,"byte_end":111524,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112898,"byte_end":112904,"line_start":639,"line_end":639,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::Stream::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Concatenate all results of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all results of a stream into a single extendable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111741,"byte_end":111805,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111810,"byte_end":111874,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111879,"byte_end":111882,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111887,"byte_end":111951,"line_start":609,"line_end":609,"column_start":5,"column_end":69}},{"value":"/ of all the successful results of the stream. If an error occurs,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":111956,"byte_end":112024,"line_start":610,"line_end":610,"column_start":5,"column_end":73}},{"value":"/ all the results will be dropped and the error will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112029,"byte_end":112096,"line_start":611,"line_end":611,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112101,"byte_end":112104,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112109,"byte_end":112123,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112128,"byte_end":112131,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112136,"byte_end":112143,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112148,"byte_end":112168,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112173,"byte_end":112176,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112181,"byte_end":112209,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112214,"byte_end":112242,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112247,"byte_end":112250,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112255,"byte_end":112295,"line_start":621,"line_end":621,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112300,"byte_end":112303,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112308,"byte_end":112335,"line_start":623,"line_end":623,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112340,"byte_end":112371,"line_start":624,"line_end":624,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112376,"byte_end":112402,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/         tx = tx.send(vec![n + 1, n + 2, n + 3]).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112407,"byte_end":112475,"line_start":626,"line_end":626,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112480,"byte_end":112489,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112494,"byte_end":112501,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ let result = rx.concat();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112506,"byte_end":112535,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.wait(), Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112540,"byte_end":112607,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112612,"byte_end":112619,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112624,"byte_end":112627,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112632,"byte_end":112644,"line_start":633,"line_end":633,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112649,"byte_end":112652,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ It's important to note that this function will panic if the stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112657,"byte_end":112727,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ is empty, which is the reason for its deprecation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112732,"byte_end":112786,"line_start":636,"line_end":636,"column_start":5,"column_end":59}},{"value":"deprecated(since = \"0.1.14\", note = \"please use `Stream::concat2` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112791,"byte_end":112865,"line_start":637,"line_end":637,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":112870,"byte_end":112890,"line_start":638,"line_end":638,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114006,"byte_end":114010,"line_start":669,"line_end":669,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::Stream::fold","value":"pub fn fold<F, T, Fut>(Self, T, F) -> Fold<Self, F, Fut, T> where\nF: FnMut(T, Self::Item) -> Fut, Fut: IntoFuture<Item = T>,\nSelf::Error: From<Fut::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Execute an accumulating computation over a stream, collecting all the\n values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating computation over a stream, collecting all the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113094,"byte_end":113167,"line_start":646,"line_end":646,"column_start":5,"column_end":78}},{"value":"/ values into one final result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113172,"byte_end":113205,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113210,"byte_end":113213,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113218,"byte_end":113288,"line_start":649,"line_end":649,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113293,"byte_end":113369,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113374,"byte_end":113450,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113455,"byte_end":113525,"line_start":652,"line_end":652,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113530,"byte_end":113556,"line_start":653,"line_end":653,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113561,"byte_end":113564,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ If an error happens then collected state will be dropped and the error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113569,"byte_end":113643,"line_start":655,"line_end":655,"column_start":5,"column_end":79}},{"value":"/ will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113648,"byte_end":113669,"line_start":656,"line_end":656,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113674,"byte_end":113677,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113682,"byte_end":113696,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113701,"byte_end":113704,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113709,"byte_end":113716,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113721,"byte_end":113749,"line_start":661,"line_end":661,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113754,"byte_end":113778,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113783,"byte_end":113807,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113812,"byte_end":113815,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter_ok::<_, ()>(0..6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113820,"byte_end":113875,"line_start":665,"line_end":665,"column_start":5,"column_end":60}},{"value":"/ let sum = number_stream.fold(0, |acc, x| future::ok(acc + x));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113880,"byte_end":113946,"line_start":666,"line_end":666,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(sum.wait(), Ok(15));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113951,"byte_end":113986,"line_start":667,"line_end":667,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":113991,"byte_end":113998,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115435,"byte_end":115442,"line_start":711,"line_end":711,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::Stream::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream,\n<Self::Item as Stream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114276,"byte_end":114341,"line_start":678,"line_end":678,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114346,"byte_end":114349,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114354,"byte_end":114427,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114432,"byte_end":114505,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114510,"byte_end":114583,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114588,"byte_end":114658,"line_start":683,"line_end":683,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114663,"byte_end":114666,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114671,"byte_end":114678,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114683,"byte_end":114703,"line_start":686,"line_end":686,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114708,"byte_end":114711,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114716,"byte_end":114744,"line_start":688,"line_end":688,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114749,"byte_end":114777,"line_start":689,"line_end":689,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114782,"byte_end":114785,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114790,"byte_end":114835,"line_start":691,"line_end":691,"column_start":5,"column_end":50}},{"value":"/ let (tx2, rx2) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114840,"byte_end":114885,"line_start":692,"line_end":692,"column_start":5,"column_end":50}},{"value":"/ let (tx3, rx3) = mpsc::channel(1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114890,"byte_end":114928,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114933,"byte_end":114936,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114941,"byte_end":114963,"line_start":695,"line_end":695,"column_start":5,"column_end":27}},{"value":"/     tx1.send(1).wait().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":114968,"byte_end":115003,"line_start":696,"line_end":696,"column_start":5,"column_end":40}},{"value":"/        .send(2).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115008,"byte_end":115044,"line_start":697,"line_end":697,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115049,"byte_end":115056,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115061,"byte_end":115083,"line_start":699,"line_end":699,"column_start":5,"column_end":27}},{"value":"/     tx2.send(3).wait().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115088,"byte_end":115123,"line_start":700,"line_end":700,"column_start":5,"column_end":40}},{"value":"/        .send(4).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115128,"byte_end":115164,"line_start":701,"line_end":701,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115169,"byte_end":115176,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115181,"byte_end":115203,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/     tx3.send(rx1).wait().unwrap()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115208,"byte_end":115245,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/        .send(rx2).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115250,"byte_end":115288,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115293,"byte_end":115300,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115305,"byte_end":115308,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let mut result = rx3.flatten().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115313,"byte_end":115358,"line_start":708,"line_end":708,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(result.wait(), Ok(vec![1, 2, 3, 4]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115363,"byte_end":115415,"line_start":709,"line_end":709,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115420,"byte_end":115427,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115987,"byte_end":115997,"line_start":726,"line_end":726,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::Stream::skip_while","value":"pub fn skip_while<P, R>(Self, P) -> SkipWhile<Self, P, R> where\nP: FnMut(&Self::Item) -> R, R: IntoFuture<Item = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the predicate provided resolves to\n `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the predicate provided resolves to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115634,"byte_end":115707,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115712,"byte_end":115723,"line_start":720,"line_end":720,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115728,"byte_end":115731,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115736,"byte_end":115809,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ stream until the `predicate` resolves to `false`. Once one element","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115814,"byte_end":115884,"line_start":723,"line_end":723,"column_start":5,"column_end":75}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115889,"byte_end":115963,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":115968,"byte_end":115979,"line_start":725,"line_end":725,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116555,"byte_end":116565,"line_start":740,"line_end":740,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::Stream::take_while","value":"pub fn take_while<P, R>(Self, P) -> TakeWhile<Self, P, R> where\nP: FnMut(&Self::Item) -> R, R: IntoFuture<Item = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Take elements from this stream while the predicate provided resolves to\n `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the predicate provided resolves to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116224,"byte_end":116299,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116304,"byte_end":116315,"line_start":735,"line_end":735,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116320,"byte_end":116323,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116328,"byte_end":116403,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ stream until the `predicate` resolves to `false`. Once one element","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116408,"byte_end":116478,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116483,"byte_end":116547,"line_start":739,"line_end":739,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117544,"byte_end":117552,"line_start":762,"line_end":762,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::Stream::for_each","value":"pub fn for_each<F, U>(Self, F) -> ForEach<Self, F, U> where\nF: FnMut(Self::Item) -> U, U: IntoFuture<Item = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided closure for each\n element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided closure for each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116792,"byte_end":116867,"line_start":748,"line_end":748,"column_start":5,"column_end":80}},{"value":"/ element on the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116872,"byte_end":116898,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116903,"byte_end":116906,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream resolves","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116911,"byte_end":116985,"line_start":751,"line_end":751,"column_start":5,"column_end":79}},{"value":"/ to successfully, producing a future. That future will then be executed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":116990,"byte_end":117064,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ to completion before moving on to the next item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117069,"byte_end":117121,"line_start":753,"line_end":753,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117126,"byte_end":117129,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Item` type is `()` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117134,"byte_end":117204,"line_start":755,"line_end":755,"column_start":5,"column_end":75}},{"value":"/ errors are otherwise threaded through. Any error on the stream or in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117209,"byte_end":117285,"line_start":756,"line_end":756,"column_start":5,"column_end":81}},{"value":"/ closure will cause iteration to be halted immediately and the future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117290,"byte_end":117362,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ will resolve to that error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117367,"byte_end":117398,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117403,"byte_end":117406,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117411,"byte_end":117484,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `and_then` instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117489,"byte_end":117536,"line_start":761,"line_end":761,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118311,"byte_end":118319,"line_start":781,"line_end":781,"column_start":8,"column_end":16},"name":"from_err","qualname":"::stream::Stream::from_err","value":"pub fn from_err<E: From<Self::Error>>(Self) -> FromErr<Self, E> where\nSelf: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Map this stream's error to any error implementing `From` for\n this stream's `Error`, returning a new stream.","sig":null,"attributes":[{"value":"/ Map this stream's error to any error implementing `From` for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117768,"byte_end":117832,"line_start":770,"line_end":770,"column_start":5,"column_end":69}},{"value":"/ this stream's `Error`, returning a new stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117837,"byte_end":117887,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117892,"byte_end":117895,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This function does for streams what `try!` does for `Result`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117900,"byte_end":117965,"line_start":773,"line_end":773,"column_start":5,"column_end":70}},{"value":"/ by letting the compiler infer the type of the resulting error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":117970,"byte_end":118036,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/ Just as `map_err` above, this is useful for example to ensure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118041,"byte_end":118106,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ that streams have the same error type when used with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118111,"byte_end":118167,"line_start":776,"line_end":776,"column_start":5,"column_end":61}},{"value":"/ combinators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118172,"byte_end":118188,"line_start":777,"line_end":777,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118193,"byte_end":118196,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118201,"byte_end":118272,"line_start":779,"line_end":779,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118277,"byte_end":118303,"line_start":780,"line_end":780,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118866,"byte_end":118870,"line_start":797,"line_end":797,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::Stream::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `amt` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `amt` items of the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118440,"byte_end":118513,"line_start":787,"line_end":787,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118518,"byte_end":118521,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Once `amt` items have been yielded from this stream then it will always","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118526,"byte_end":118601,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118606,"byte_end":118641,"line_start":790,"line_end":790,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118646,"byte_end":118649,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118654,"byte_end":118666,"line_start":792,"line_end":792,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118671,"byte_end":118674,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Any errors yielded from underlying stream, before the desired amount of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118679,"byte_end":118754,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ items is reached, are passed through and do not affect the total number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118759,"byte_end":118834,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ of items taken.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118839,"byte_end":118858,"line_start":796,"line_end":796,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119357,"byte_end":119361,"line_start":812,"line_end":812,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::Stream::skip","value":"pub fn skip(Self, u64) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `amt` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `amt` items of the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":118973,"byte_end":119047,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119052,"byte_end":119055,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Once `amt` items have been skipped from this stream then it will always","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119060,"byte_end":119135,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119140,"byte_end":119186,"line_start":806,"line_end":806,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119191,"byte_end":119194,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119199,"byte_end":119211,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119216,"byte_end":119219,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ All errors yielded from underlying stream are passed through and do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119224,"byte_end":119299,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/ affect the total number of items skipped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119304,"byte_end":119349,"line_start":811,"line_end":811,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120230,"byte_end":120234,"line_start":833,"line_end":833,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::Stream::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Fuse a stream such that `poll` will never again be called once it has\n finished.","sig":null,"attributes":[{"value":"/ Fuse a stream such that `poll` will never again be called once it has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119464,"byte_end":119537,"line_start":818,"line_end":818,"column_start":5,"column_end":78}},{"value":"/ finished.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119542,"byte_end":119555,"line_start":819,"line_end":819,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119560,"byte_end":119563,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Currently once a stream has returned `None` from `poll` any further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119568,"byte_end":119639,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/ calls could exhibit bad behavior such as block forever, panic, never","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119644,"byte_end":119716,"line_start":822,"line_end":822,"column_start":5,"column_end":77}},{"value":"/ return, etc. If it is known that `poll` may be called after stream has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119721,"byte_end":119795,"line_start":823,"line_end":823,"column_start":5,"column_end":79}},{"value":"/ already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119800,"byte_end":119872,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ defined semantics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119877,"byte_end":119899,"line_start":825,"line_end":825,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119904,"byte_end":119907,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ Once a stream has been `fuse`d and it finishes, then it will forever","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119912,"byte_end":119984,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/ return `None` from `poll`. This, unlike for the traits `poll` method,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":119989,"byte_end":120062,"line_start":828,"line_end":828,"column_start":5,"column_end":78}},{"value":"/ is guaranteed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120067,"byte_end":120085,"line_start":829,"line_end":829,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120090,"byte_end":120093,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Also note that as soon as this stream returns `None` it will be dropped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120098,"byte_end":120173,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/ to reclaim resources associated with it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120178,"byte_end":120222,"line_start":832,"line_end":832,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120973,"byte_end":120979,"line_start":858,"line_end":858,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::Stream::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120322,"byte_end":120369,"line_start":839,"line_end":839,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120374,"byte_end":120377,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120382,"byte_end":120456,"line_start":841,"line_end":841,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120461,"byte_end":120498,"line_start":842,"line_end":842,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120503,"byte_end":120506,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120511,"byte_end":120518,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120523,"byte_end":120551,"line_start":845,"line_end":845,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120556,"byte_end":120580,"line_start":846,"line_end":846,"column_start":5,"column_end":29}},{"value":"/ use futures::future;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120585,"byte_end":120609,"line_start":847,"line_end":847,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120614,"byte_end":120617,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter_ok::<_, ()>(1..5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120622,"byte_end":120674,"line_start":849,"line_end":849,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120679,"byte_end":120682,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref().take(2).fold(0, |a, b| future::ok(a + b)).wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120687,"byte_end":120766,"line_start":851,"line_end":851,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(sum, Ok(3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120771,"byte_end":120798,"line_start":852,"line_end":852,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120803,"byte_end":120806,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120811,"byte_end":120846,"line_start":854,"line_end":854,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2).fold(0, |a, b| future::ok(a + b)).wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120851,"byte_end":120921,"line_start":855,"line_end":855,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(sum, Ok(7));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120926,"byte_end":120953,"line_start":856,"line_end":856,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":120958,"byte_end":120965,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122608,"byte_end":122620,"line_start":898,"line_end":898,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::Stream::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121060,"byte_end":121114,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121119,"byte_end":121122,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121127,"byte_end":121202,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121207,"byte_end":121210,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121215,"byte_end":121290,"line_start":868,"line_end":868,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121295,"byte_end":121369,"line_start":869,"line_end":869,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121374,"byte_end":121448,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121453,"byte_end":121502,"line_start":871,"line_end":871,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121507,"byte_end":121510,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121515,"byte_end":121590,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121595,"byte_end":121665,"line_start":874,"line_end":874,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121670,"byte_end":121737,"line_start":875,"line_end":875,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Stream` trait is also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121742,"byte_end":121817,"line_start":876,"line_end":876,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<S>` where `S` implements `Stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121822,"byte_end":121894,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121899,"byte_end":121902,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121907,"byte_end":121975,"line_start":879,"line_end":879,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":121980,"byte_end":122037,"line_start":880,"line_end":880,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122042,"byte_end":122045,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122050,"byte_end":122064,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122069,"byte_end":122072,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122077,"byte_end":122088,"line_start":884,"line_end":884,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122093,"byte_end":122121,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122126,"byte_end":122150,"line_start":886,"line_end":886,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122155,"byte_end":122158,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter_ok::<_, bool>(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122163,"byte_end":122239,"line_start":888,"line_end":888,"column_start":5,"column_end":81}},{"value":"/ // panic on second element","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122244,"byte_end":122274,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122279,"byte_end":122333,"line_start":890,"line_end":890,"column_start":5,"column_end":59}},{"value":"/ let mut iter = stream_panicking.catch_unwind().wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122338,"byte_end":122396,"line_start":891,"line_end":891,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122401,"byte_end":122404,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ok(10), iter.next().unwrap().ok().unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122409,"byte_end":122468,"line_start":893,"line_end":893,"column_start":5,"column_end":64}},{"value":"/ assert!(iter.next().unwrap().is_err());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122473,"byte_end":122516,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122521,"byte_end":122556,"line_start":895,"line_end":895,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122561,"byte_end":122568,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122573,"byte_end":122600,"line_start":897,"line_end":897,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123502,"byte_end":123510,"line_start":918,"line_end":918,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::Stream::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where\nSelf::Item: IntoFuture<Error = <Self as Stream>::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122748,"byte_end":122811,"line_start":904,"line_end":904,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122816,"byte_end":122819,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122824,"byte_end":122899,"line_start":906,"line_end":906,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `amt` futures and then return results in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122904,"byte_end":122978,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ same order as the underlying stream. No more than `amt` futures will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":122983,"byte_end":123058,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ buffered at any point in time, and less than `amt` may also be buffered","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123063,"byte_end":123138,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123143,"byte_end":123185,"line_start":910,"line_end":910,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123190,"byte_end":123193,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's result, with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123198,"byte_end":123268,"line_start":912,"line_end":912,"column_start":5,"column_end":75}},{"value":"/ errors passed through whenever they occur.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123273,"byte_end":123319,"line_start":913,"line_end":913,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123324,"byte_end":123327,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123332,"byte_end":123400,"line_start":915,"line_end":915,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123405,"byte_end":123462,"line_start":916,"line_end":916,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123467,"byte_end":123494,"line_start":917,"line_end":917,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124445,"byte_end":124461,"line_start":939,"line_end":939,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::Stream::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: IntoFuture<Error = <Self as Stream>::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123694,"byte_end":123769,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123774,"byte_end":123777,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123782,"byte_end":123857,"line_start":927,"line_end":927,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `amt` futures and then return results in the order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123862,"byte_end":123934,"line_start":928,"line_end":928,"column_start":5,"column_end":77}},{"value":"/ in which they complete. No more than `amt` futures will be buffered at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":123939,"byte_end":124013,"line_start":929,"line_end":929,"column_start":5,"column_end":79}},{"value":"/ any point in time, and less than `amt` may also be buffered depending on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124018,"byte_end":124094,"line_start":930,"line_end":930,"column_start":5,"column_end":81}},{"value":"/ the state of each future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124099,"byte_end":124128,"line_start":931,"line_end":931,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124133,"byte_end":124136,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's result, with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124141,"byte_end":124211,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ errors passed through whenever they occur.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124216,"byte_end":124262,"line_start":934,"line_end":934,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124267,"byte_end":124270,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124275,"byte_end":124343,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124348,"byte_end":124405,"line_start":937,"line_end":937,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124410,"byte_end":124437,"line_start":938,"line_end":938,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125017,"byte_end":125022,"line_start":953,"line_end":953,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::Stream::merge","value":"pub fn merge<S>(Self, S) -> Merge<Self, S> where S: Stream<Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124660,"byte_end":124713,"line_start":946,"line_end":946,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124718,"byte_end":124721,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124726,"byte_end":124797,"line_start":948,"line_end":948,"column_start":5,"column_end":76}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124802,"byte_end":124876,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124881,"byte_end":124917,"line_start":950,"line_end":950,"column_start":5,"column_end":41}},{"value":"deprecated(note = \"functionality provided by `select` now\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124922,"byte_end":124984,"line_start":951,"line_end":951,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":124989,"byte_end":125009,"line_start":952,"line_end":952,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125486,"byte_end":125489,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::Stream::zip","value":"pub fn zip<S>(Self, S) -> Zip<Self, S> where S: Stream<Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125182,"byte_end":125230,"line_start":960,"line_end":960,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125235,"byte_end":125238,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125243,"byte_end":125316,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If an error happens, then that error will be returned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125321,"byte_end":125397,"line_start":963,"line_end":963,"column_start":5,"column_end":81}},{"value":"/ immediately. If either stream ends then the zipped stream will also end.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125402,"byte_end":125478,"line_start":964,"line_end":964,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126399,"byte_end":126404,"line_start":991,"line_end":991,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::Stream::chain","value":"pub fn chain<S>(Self, S) -> Chain<Self, S> where S: Stream<Item = Self::Item,\nError = Self::Item>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Adapter for chaining two stream.","sig":null,"attributes":[{"value":"/ Adapter for chaining two stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125645,"byte_end":125681,"line_start":972,"line_end":972,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125686,"byte_end":125689,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125694,"byte_end":125765,"line_start":974,"line_end":974,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125770,"byte_end":125846,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125851,"byte_end":125854,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125859,"byte_end":125870,"line_start":977,"line_end":977,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125875,"byte_end":125903,"line_start":978,"line_end":978,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125908,"byte_end":125932,"line_start":979,"line_end":979,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125937,"byte_end":125940,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter_result(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":125945,"byte_end":126009,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/ let stream2 = stream::iter_result(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126014,"byte_end":126077,"line_start":982,"line_end":982,"column_start":5,"column_end":68}},{"value":"/ let mut chain = stream1.chain(stream2).wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126082,"byte_end":126132,"line_start":983,"line_end":983,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126137,"byte_end":126140,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(Ok(10)), chain.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126145,"byte_end":126188,"line_start":985,"line_end":985,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(Err(false)), chain.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126193,"byte_end":126240,"line_start":986,"line_end":986,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(Err(true)), chain.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126245,"byte_end":126291,"line_start":987,"line_end":987,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some(Ok(20)), chain.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126296,"byte_end":126339,"line_start":988,"line_end":988,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, chain.next());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126344,"byte_end":126379,"line_start":989,"line_end":989,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126384,"byte_end":126391,"line_start":990,"line_end":990,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126728,"byte_end":126736,"line_start":1001,"line_end":1001,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::Stream::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126582,"byte_end":126637,"line_start":998,"line_end":998,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126642,"byte_end":126645,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126650,"byte_end":126720,"line_start":1000,"line_end":1000,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127790,"byte_end":127796,"line_start":1028,"line_end":1028,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::Stream::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126828,"byte_end":126895,"line_start":1007,"line_end":1007,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126900,"byte_end":126903,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126908,"byte_end":126982,"line_start":1009,"line_end":1009,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":126987,"byte_end":127059,"line_start":1010,"line_end":1010,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127064,"byte_end":127116,"line_start":1011,"line_end":1011,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127121,"byte_end":127124,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127129,"byte_end":127202,"line_start":1013,"line_end":1013,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127207,"byte_end":127281,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127286,"byte_end":127361,"line_start":1015,"line_end":1015,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127366,"byte_end":127438,"line_start":1016,"line_end":1016,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127443,"byte_end":127455,"line_start":1017,"line_end":1017,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127460,"byte_end":127463,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ Errors are passed through the stream unbuffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127468,"byte_end":127520,"line_start":1019,"line_end":1019,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127525,"byte_end":127528,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127533,"byte_end":127601,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127606,"byte_end":127663,"line_start":1022,"line_end":1022,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127668,"byte_end":127671,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127676,"byte_end":127688,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127693,"byte_end":127696,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This method will panic of `capacity` is zero.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127701,"byte_end":127750,"line_start":1026,"line_end":1026,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127755,"byte_end":127782,"line_start":1027,"line_end":1027,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128474,"byte_end":128480,"line_start":1045,"line_end":1045,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::Stream::select","value":"pub fn select<S>(Self, S) -> Select<Self, S> where S: Stream<Item =\nSelf::Item, Error = Self::Item>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Creates a stream that selects the next element from either this stream\n or the provided one, whichever is ready first.","sig":null,"attributes":[{"value":"/ Creates a stream that selects the next element from either this stream","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127915,"byte_end":127989,"line_start":1034,"line_end":1034,"column_start":5,"column_end":79}},{"value":"/ or the provided one, whichever is ready first.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":127994,"byte_end":128044,"line_start":1035,"line_end":1035,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128049,"byte_end":128052,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from both streams. Each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128057,"byte_end":128127,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128132,"byte_end":128208,"line_start":1038,"line_end":1038,"column_start":5,"column_end":81}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128213,"byte_end":128261,"line_start":1039,"line_end":1039,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128266,"byte_end":128269,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The `select` function is similar to `merge` except that it requires both","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128274,"byte_end":128350,"line_start":1041,"line_end":1041,"column_start":5,"column_end":81}},{"value":"/ streams to have the same item and error types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128355,"byte_end":128405,"line_start":1042,"line_end":1042,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128410,"byte_end":128413,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ Error are passed through from either stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128418,"byte_end":128466,"line_start":1044,"line_end":1044,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129410,"byte_end":129417,"line_start":1066,"line_end":1066,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::Stream::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<SinkItem =\nSelf::Item>, Self::Error: From<S::SinkError>, Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128661,"byte_end":128736,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128741,"byte_end":128779,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128784,"byte_end":128787,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128792,"byte_end":128865,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128870,"byte_end":128946,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, and the sink has fully processed received item,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":128951,"byte_end":129023,"line_start":1057,"line_end":1057,"column_start":5,"column_end":77}},{"value":"/ flushed successfully, and closed successfully.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129028,"byte_end":129078,"line_start":1058,"line_end":1058,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129083,"byte_end":129086,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ Doing `stream.forward(sink)` is roughly equivalent to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129091,"byte_end":129148,"line_start":1060,"line_end":1060,"column_start":5,"column_end":62}},{"value":"/ `sink.send_all(stream)`. The returned future will exhaust all items from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129153,"byte_end":129229,"line_start":1061,"line_end":1061,"column_start":5,"column_end":81}},{"value":"/ `self`, sending them all to `sink`. Furthermore the `sink` will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129234,"byte_end":129304,"line_start":1062,"line_end":1062,"column_start":5,"column_end":75}},{"value":"/ closed and flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129309,"byte_end":129332,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129337,"byte_end":129340,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ On completion, the pair `(stream, sink)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129345,"byte_end":129402,"line_start":1065,"line_end":1065,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130077,"byte_end":130082,"line_start":1084,"line_end":1084,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::Stream::split","value":"pub fn split(Self) -> (SplitSink<Self>, SplitStream<Self>) where\nSelf: super::sink::Sink + Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Stream` and `Sink`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Stream` and `Sink`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129625,"byte_end":129697,"line_start":1074,"line_end":1074,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129702,"byte_end":129714,"line_start":1075,"line_end":1075,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129719,"byte_end":129722,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129727,"byte_end":129800,"line_start":1077,"line_end":1077,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129805,"byte_end":129867,"line_start":1078,"line_end":1078,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129872,"byte_end":129894,"line_start":1079,"line_end":1079,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129899,"byte_end":129902,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129907,"byte_end":129975,"line_start":1081,"line_end":1081,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":129980,"byte_end":130037,"line_start":1082,"line_end":1082,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130042,"byte_end":130069,"line_start":1083,"line_end":1083,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130522,"byte_end":130529,"line_start":1095,"line_end":1095,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::Stream::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130219,"byte_end":130292,"line_start":1090,"line_end":1090,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130297,"byte_end":130300,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130305,"byte_end":130374,"line_start":1092,"line_end":1092,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130379,"byte_end":130448,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130453,"byte_end":130514,"line_start":1094,"line_end":1094,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130952,"byte_end":130963,"line_start":1107,"line_end":1107,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::Stream::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2068},"children":[],"decl_id":null,"docs":" Do something with the error of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error of this stream, afterwards passing it on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130676,"byte_end":130749,"line_start":1102,"line_end":1102,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130754,"byte_end":130757,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::inspect` method where it allows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130762,"byte_end":130829,"line_start":1104,"line_end":1104,"column_start":5,"column_end":72}},{"value":"/ easily inspecting the error as it passes through the stream, for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130834,"byte_end":130902,"line_start":1105,"line_end":1105,"column_start":5,"column_end":73}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":130907,"byte_end":130944,"line_start":1106,"line_end":1106,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131927,"byte_end":131944,"line_start":1135,"line_end":1135,"column_start":8,"column_end":25},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"pub fn futures_unordered<I>(I)\n-> FuturesUnordered<<I::Item as IntoFuture>::Future> where I: IntoIterator,\nI::Item: IntoFuture","parent":null,"children":[],"decl_id":null,"docs":" Converts a list of futures into a `Stream` of results from the futures.","sig":null,"attributes":[{"value":"/ Converts a list of futures into a `Stream` of results from the futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131320,"byte_end":131395,"line_start":1124,"line_end":1124,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131396,"byte_end":131399,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ This function will take an list of futures (e.g. a vector, an iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131400,"byte_end":131475,"line_start":1126,"line_end":1126,"column_start":1,"column_end":76}},{"value":"/ etc), and return a stream. The stream will yield items as they become","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131476,"byte_end":131549,"line_start":1127,"line_end":1127,"column_start":1,"column_end":74}},{"value":"/ available on the futures internally, in the order that they become","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131550,"byte_end":131620,"line_start":1128,"line_end":1128,"column_start":1,"column_end":71}},{"value":"/ available. This function is similar to `buffer_unordered` in that it may","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131621,"byte_end":131697,"line_start":1129,"line_end":1129,"column_start":1,"column_end":77}},{"value":"/ return items in a different order than in the list specified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131698,"byte_end":131763,"line_start":1130,"line_end":1130,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131764,"byte_end":131767,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131768,"byte_end":131840,"line_start":1132,"line_end":1132,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131841,"byte_end":131891,"line_start":1133,"line_end":1133,"column_start":1,"column_end":51}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":131892,"byte_end":131919,"line_start":1134,"line_end":1134,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2231},{"krate":0,"index":2286},{"krate":0,"index":2312},{"krate":0,"index":2352},{"krate":0,"index":2382},{"krate":0,"index":2422},{"krate":0,"index":2463},{"krate":0,"index":6391},{"krate":0,"index":6435},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6455},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2575}],"decl_id":null,"docs":" Asynchronous sinks","sig":null,"attributes":[{"value":"/ Asynchronous sinks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":207837,"byte_end":207859,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":207860,"byte_end":207863,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains the `Sink` trait, along with a number of adapter types","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":207864,"byte_end":207943,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ for it. An overview is available in the documentation for the trait itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":207944,"byte_end":208023,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208024,"byte_end":208027,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208028,"byte_end":208096,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208097,"byte_end":208126,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208127,"byte_end":208130,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208131,"byte_end":208201,"line_start":9,"line_end":9,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6279},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":227181,"byte_end":227185,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287}],"decl_id":null,"docs":" Sink for the `Sink::with` combinator, chaining a computation to run *prior*\n to pushing a value into the underlying sink.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::with` combinator, chaining a computation to run *prior*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":226970,"byte_end":227049,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ to pushing a value into the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":227050,"byte_end":227098,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":227123,"byte_end":227169,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228538,"byte_end":228545,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<With<S, U, F, Fut>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228481,"byte_end":228526,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228649,"byte_end":228656,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<With<S, U, F, Fut>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228591,"byte_end":228637,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228947,"byte_end":228957,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<With<S, U, F, Fut>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228714,"byte_end":228774,"line_start":84,"line_end":84,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228779,"byte_end":228782,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228787,"byte_end":228859,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228864,"byte_end":228935,"line_start":87,"line_end":87,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6319},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231327,"byte_end":231338,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6328}],"decl_id":null,"docs":" Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator\n to run prior to pushing a value into the underlying sink\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231092,"byte_end":231190,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ to run prior to pushing a value into the underlying sink","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231191,"byte_end":231251,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231269,"byte_end":231315,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232076,"byte_end":232083,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WithFlatMap<S, U, F, St>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232019,"byte_end":232064,"line_start":45,"line_end":45,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232187,"byte_end":232194,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WithFlatMap<S, U, F, St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232129,"byte_end":232175,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232485,"byte_end":232495,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithFlatMap<S, U, F, St>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232252,"byte_end":232312,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232317,"byte_end":232320,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232325,"byte_end":232397,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":232402,"byte_end":232473,"line_start":58,"line_end":58,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234768,"byte_end":234773,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":6337}],"decl_id":null,"docs":" Future for the `Sink::flush` combinator, which polls the sink until all data\n has been flushed.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::flush` combinator, which polls the sink until all data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234588,"byte_end":234668,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ has been flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234669,"byte_end":234690,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234708,"byte_end":234756,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234966,"byte_end":234973,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flush<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234909,"byte_end":234954,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235148,"byte_end":235155,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flush<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235090,"byte_end":235136,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235342,"byte_end":235352,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flush<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Flush` and return the inner sink.\n","sig":null,"attributes":[{"value":"/ Consume the `Flush` and return the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235280,"byte_end":235330,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6341},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236135,"byte_end":236146,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SinkFromErr","qualname":"::sink::from_err::SinkFromErr","value":"SinkFromErr {  }","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6345}],"decl_id":null,"docs":" A sink combinator to change the error type of a sink.","sig":null,"attributes":[{"value":"/ A sink combinator to change the error type of a sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":235937,"byte_end":235994,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":235995,"byte_end":235998,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Sink::from_err` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":235999,"byte_end":236050,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236075,"byte_end":236123,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236422,"byte_end":236429,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkFromErr<S, E>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236365,"byte_end":236410,"line_start":25,"line_end":25,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236533,"byte_end":236540,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkFromErr<S, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236475,"byte_end":236521,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236831,"byte_end":236841,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkFromErr<S, E>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236598,"byte_end":236658,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236663,"byte_end":236666,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236671,"byte_end":236743,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236748,"byte_end":236819,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6354},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":237908,"byte_end":237912,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":6356},{"krate":0,"index":6357}],"decl_id":null,"docs":" Future for the `Sink::send` combinator, which sends a value to a sink and\n then waits until the sink has fully flushed.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::send` combinator, which sends a value to a sink and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":237704,"byte_end":237781,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ then waits until the sink has fully flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":237782,"byte_end":237830,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":237848,"byte_end":237896,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238197,"byte_end":238204,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Send<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238140,"byte_end":238185,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238374,"byte_end":238381,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Send<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238316,"byte_end":238362,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6361},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":239704,"byte_end":239711,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"decl_id":null,"docs":" Future for the `Sink::send_all` combinator, which sends a stream of values\n to a sink and then waits until the sink has fully flushed those values.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::send_all` combinator, which sends a stream of values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":239472,"byte_end":239550,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to a sink and then waits until the sink has fully flushed those values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":239551,"byte_end":239626,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":239644,"byte_end":239692,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6371},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242303,"byte_end":242313,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":6374},{"krate":0,"index":6375}],"decl_id":null,"docs":" Sink for the `Sink::sink_map_err` combinator.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::sink_map_err` combinator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242172,"byte_end":242221,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242245,"byte_end":242291,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242540,"byte_end":242547,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkMapErr<S, E>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242483,"byte_end":242528,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242651,"byte_end":242658,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkMapErr<S, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242593,"byte_end":242639,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242949,"byte_end":242959,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkMapErr<S, E>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242716,"byte_end":242776,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242781,"byte_end":242784,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242789,"byte_end":242861,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242866,"byte_end":242937,"line_start":31,"line_end":31,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244291,"byte_end":244297,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"/ Sink that clones incoming items and forwards them to two sinks at the same time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244038,"byte_end":244122,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244123,"byte_end":244126,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Backpressure from any downstream sink propagates up, which means that this sink","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244127,"byte_end":244210,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ can only process items as fast as its _slowest_ downstream sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244211,"byte_end":244279,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244647,"byte_end":244657,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<A, B>>::into_inner","value":"pub fn into_inner(Self) -> (A, B)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244413,"byte_end":244474,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244479,"byte_end":244482,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244487,"byte_end":244556,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244561,"byte_end":244635,"line_start":19,"line_end":19,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6472},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919197,"byte_end":12919203,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476}],"decl_id":null,"docs":" Sink for the `Sink::buffer` combinator, which buffers up to some fixed\n number of values when the underlying sink is unable to accept them.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::buffer` combinator, which buffers up to some fixed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12918975,"byte_end":12919049,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ number of values when the underlying sink is unable to accept them.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919050,"byte_end":12919121,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919139,"byte_end":12919185,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":6419},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919604,"byte_end":12919611,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffer<S>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919547,"byte_end":12919592,"line_start":29,"line_end":29,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6420},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919715,"byte_end":12919722,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffer<S>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919657,"byte_end":12919703,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6421},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12920013,"byte_end":12920023,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffer<S>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919780,"byte_end":12919840,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919845,"byte_end":12919848,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919853,"byte_end":12919925,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919930,"byte_end":12920001,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922129,"byte_end":12922133,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Wait","qualname":"::sink::wait::Wait","value":"Wait {  }","parent":null,"children":[{"krate":0,"index":6482}],"decl_id":null,"docs":" A sink combinator which converts an asynchronous sink to a **blocking\n sink**.","sig":null,"attributes":[{"value":"/ A sink combinator which converts an asynchronous sink to a **blocking","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12921758,"byte_end":12921831,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ sink**.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12921832,"byte_end":12921843,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12921844,"byte_end":12921847,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `Sink::wait` method, this function transforms any sink into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12921848,"byte_end":12921928,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ blocking version. This is implemented by blocking the current thread when a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12921929,"byte_end":12922008,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ sink is otherwise unable to make progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922009,"byte_end":12922055,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"must_use = \"sinks do nothing unless used\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922056,"byte_end":12922100,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":6446},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922938,"byte_end":12922942,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"send","qualname":"<Wait<S>>::send","value":"pub fn send(&mut Self, S::SinkItem) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value to this sink, blocking the current thread until it's able\n to do so.","sig":null,"attributes":[{"value":"/ Sends a value to this sink, blocking the current thread until it's able","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922293,"byte_end":12922368,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ to do so.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922373,"byte_end":12922386,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922391,"byte_end":12922394,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This function will take the `value` provided and call the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922399,"byte_end":12922471,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ sink's `start_send` function until it's ready to accept the value. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922476,"byte_end":12922549,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ the function returns `NotReady` then the current thread is blocked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922554,"byte_end":12922624,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ until it is otherwise ready to accept the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922629,"byte_end":12922681,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922686,"byte_end":12922689,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922694,"byte_end":12922712,"line_start":31,"line_end":31,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922717,"byte_end":12922720,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If `Ok(())` is returned then the `value` provided was successfully sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922725,"byte_end":12922800,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ along the sink, and if `Err(e)` is returned then an error occurred","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922805,"byte_end":12922875,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ which prevented the value from being sent.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922880,"byte_end":12922926,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6447},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923431,"byte_end":12923436,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"flush","qualname":"<Wait<S>>::flush","value":"pub fn flush(&mut Self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Flushes any buffered data in this sink, blocking the current thread\n until it's entirely flushed.","sig":null,"attributes":[{"value":"/ Flushes any buffered data in this sink, blocking the current thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923050,"byte_end":12923121,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ until it's entirely flushed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923126,"byte_end":12923158,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923163,"byte_end":12923166,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `poll_complete` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923171,"byte_end":12923243,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ until it returns that it's ready to proceed. If the method returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923248,"byte_end":12923318,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ `NotReady` the current thread will be blocked until it's otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923323,"byte_end":12923393,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ ready to proceed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923398,"byte_end":12923419,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6448},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923833,"byte_end":12923838,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"close","qualname":"<Wait<S>>::close","value":"pub fn close(&mut Self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Close this sink, blocking the current thread until it's entirely closed.","sig":null,"attributes":[{"value":"/ Close this sink, blocking the current thread until it's entirely closed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923520,"byte_end":12923596,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923601,"byte_end":12923604,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `close` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923609,"byte_end":12923673,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ until it returns that it's closed. If the method returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923678,"byte_end":12923738,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/ `NotReady` the current thread will be blocked until it's otherwise closed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12923743,"byte_end":12923821,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":6462},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209216,"byte_end":209223,"line_start":55,"line_end":55,"column_start":14,"column_end":21},"name":"BoxSink","qualname":"::sink::BoxSink","value":"::std::boxed::Box<Sink<SinkItem = T, SinkError = T> + ::core::marker::Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Sink + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6444,"byte_end":6471,"line_start":169,"line_end":169,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211567,"byte_end":211571,"line_start":117,"line_end":117,"column_start":11,"column_end":15},"name":"Sink","qualname":"::sink::Sink","value":"Sink","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2559},{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573}],"decl_id":null,"docs":" A `Sink` is a value into which other values can be sent, asynchronously.","sig":null,"attributes":[{"value":"/ A `Sink` is a value into which other values can be sent, asynchronously.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210147,"byte_end":210223,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210224,"byte_end":210227,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Basic examples of sinks include the sending side of:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210228,"byte_end":210284,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210285,"byte_end":210288,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - Channels","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210289,"byte_end":210303,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/ - Sockets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210304,"byte_end":210317,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/ - Pipes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210318,"byte_end":210329,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210330,"byte_end":210333,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ In addition to such \"primitive\" sinks, it's typical to layer additional","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210334,"byte_end":210409,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ functionality, such as buffering, on top of an existing sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210410,"byte_end":210475,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210476,"byte_end":210479,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Sending to a sink is \"asynchronous\" in the sense that the value may not be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210480,"byte_end":210558,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ sent in its entirety immediately. Instead, values are sent in a two-phase","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210559,"byte_end":210636,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ way: first by initiating a send, and then by polling for completion. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210637,"byte_end":210714,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ two-phase setup is analogous to buffered writing in synchronous code, where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210715,"byte_end":210794,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ writes often succeed immediately, but internally are buffered and are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210795,"byte_end":210868,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ *actually* written only upon flushing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210869,"byte_end":210911,"line_start":102,"line_end":102,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210912,"byte_end":210915,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ In addition, the `Sink` may be *full*, in which case it is not even possible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210916,"byte_end":210996,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ to start the sending process.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":210997,"byte_end":211030,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211031,"byte_end":211034,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ As with `Future` and `Stream`, the `Sink` trait is built from a few core","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211035,"byte_end":211111,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ required methods, and a host of default methods for working in a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211112,"byte_end":211180,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/ higher-level way. The `Sink::send_all` combinator is of particular","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211181,"byte_end":211251,"line_start":109,"line_end":109,"column_start":1,"column_end":71}},{"value":"/ importance: you can use it to send an entire stream to a sink, which is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211252,"byte_end":211327,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ the simplest way to ultimately consume a sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211328,"byte_end":211378,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211379,"byte_end":211382,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211383,"byte_end":211451,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211452,"byte_end":211481,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211482,"byte_end":211485,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211486,"byte_end":211556,"line_start":116,"line_end":116,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211632,"byte_end":211640,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"name":"SinkItem","qualname":"::sink::Sink::SinkItem","value":"type SinkItem;","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" The type of value that the sink accepts.\n","sig":null,"attributes":[{"value":"/ The type of value that the sink accepts.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211578,"byte_end":211622,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211721,"byte_end":211730,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"name":"SinkError","qualname":"::sink::Sink::SinkError","value":"type SinkError;","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" The type of value produced by the sink when an error occurs.\n","sig":null,"attributes":[{"value":"/ The type of value produced by the sink when an error occurs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211647,"byte_end":211711,"line_start":121,"line_end":121,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213693,"byte_end":213703,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"start_send","qualname":"::sink::Sink::start_send","value":"pub fn start_send(&mut Self, Self::SinkItem)\n-> StartSend<Self::SinkItem, Self::SinkError>","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Begin the process of sending a value to the sink.","sig":null,"attributes":[{"value":"/ Begin the process of sending a value to the sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211737,"byte_end":211790,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211795,"byte_end":211798,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ As the name suggests, this method only *begins* the process of sending","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211803,"byte_end":211877,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ the item. If the sink employs buffering, the item isn't fully processed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211882,"byte_end":211957,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ until the buffer is fully flushed. Since sinks are designed to work with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":211962,"byte_end":212038,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ asynchronous I/O, the process of actually writing out the data to an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212043,"byte_end":212115,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ underlying object takes place asynchronously. **You *must* use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212120,"byte_end":212186,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/ `poll_complete` in order to drive completion of a send**. In particular,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212191,"byte_end":212267,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `start_send` does not begin the flushing process","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212272,"byte_end":212324,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212329,"byte_end":212332,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212337,"byte_end":212355,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212360,"byte_end":212363,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method returns `AsyncSink::Ready` if the sink was able to start","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212368,"byte_end":212440,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ sending `item`. In that case, you *must* ensure that you call","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212445,"byte_end":212510,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/ `poll_complete` to process the sent item to completion. Note, however,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212515,"byte_end":212589,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ that several calls to `start_send` can be made prior to calling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212594,"byte_end":212661,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ `poll_complete`, which will work on completing all pending items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212666,"byte_end":212735,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212740,"byte_end":212743,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The method returns `AsyncSink::NotReady` if the sink was unable to begin","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212748,"byte_end":212824,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ sending, usually due to being full. The sink must have attempted to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212829,"byte_end":212900,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ complete processing any outstanding requests (equivalent to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212905,"byte_end":212968,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/ `poll_complete`) before yielding this result. The current task will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":212973,"byte_end":213047,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ automatically scheduled for notification when the sink may be ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213052,"byte_end":213126,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ receive new values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213131,"byte_end":213154,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213159,"byte_end":213162,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213167,"byte_end":213179,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213184,"byte_end":213187,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If the sink encounters an error other than being temporarily full, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213192,"byte_end":213265,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ uses the `Err` variant to signal that error. In most cases, such errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213270,"byte_end":213345,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ mean that the sink will permanently be unable to receive items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213350,"byte_end":213417,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213422,"byte_end":213425,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213430,"byte_end":213442,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213447,"byte_end":213450,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method may panic in a few situations, depending on the specific","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213455,"byte_end":213527,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ sink:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213532,"byte_end":213541,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213546,"byte_end":213549,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - It is called outside of the context of a task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213554,"byte_end":213606,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/ - A previous call to `start_send` or `poll_complete` yielded an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213611,"byte_end":213685,"line_start":161,"line_end":161,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216032,"byte_end":216045,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::sink::Sink::poll_complete","value":"pub fn poll_complete(&mut Self) -> Poll<(), Self::SinkError>","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Flush all output from this sink, if necessary.","sig":null,"attributes":[{"value":"/ Flush all output from this sink, if necessary.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213807,"byte_end":213857,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213862,"byte_end":213865,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Some sinks may buffer intermediate data as an optimization to improve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213870,"byte_end":213943,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ throughput. In other words, if a sink has a corresponding receiver then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":213948,"byte_end":214023,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ a successful `start_send` above may not guarantee that the value is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214028,"byte_end":214099,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ actually ready to be received by the receiver. This function is intended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214104,"byte_end":214180,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ to be used to ensure that values do indeed make their way to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214185,"byte_end":214253,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ receiver.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214258,"byte_end":214271,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214276,"byte_end":214279,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to process any pending requests on behalf of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214284,"byte_end":214359,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ the sink and drive it to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214364,"byte_end":214404,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214409,"byte_end":214412,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214417,"byte_end":214435,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214440,"byte_end":214443,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::Ready(()))` when no buffered items remain. If this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214448,"byte_end":214521,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ value is returned then it is guaranteed that all previous values sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214526,"byte_end":214599,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ via `start_send` will be guaranteed to be available to a listening","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214604,"byte_end":214674,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ receiver.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214679,"byte_end":214692,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214697,"byte_end":214700,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::NotReady)` if there is more work left to do, in which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214705,"byte_end":214781,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ case the current task is scheduled to wake up when more progress may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214786,"byte_end":214861,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214866,"byte_end":214879,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214884,"byte_end":214887,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214892,"byte_end":214904,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214909,"byte_end":214912,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the sink encounters an error while processing one of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214917,"byte_end":214990,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ its pending requests. Due to the buffered nature of requests, it is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":214995,"byte_end":215070,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ generally possible to correlate the error with a particular request. As","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215075,"byte_end":215150,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ with `start_send`, these errors are generally \"fatal\" for continued use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215155,"byte_end":215230,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ of the sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215235,"byte_end":215251,"line_start":194,"line_end":194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215256,"byte_end":215259,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215264,"byte_end":215276,"line_start":196,"line_end":196,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215281,"byte_end":215284,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This method may panic in a few situations, depending on the specific sink:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215289,"byte_end":215367,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215372,"byte_end":215375,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ - It is called outside of the context of a task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215380,"byte_end":215432,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ - A previous call to `start_send` or `poll_complete` yielded an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215437,"byte_end":215511,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215516,"byte_end":215519,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Compatibility nodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215524,"byte_end":215549,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215554,"byte_end":215557,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The name of this method may be slightly misleading as the original","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215562,"byte_end":215632,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ intention was to have this method be more general than just flushing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215637,"byte_end":215709,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ requests. Over time though it was decided to trim back the ambitions of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215714,"byte_end":215789,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ this method to what it's always done, just flushing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215794,"byte_end":215850,"line_start":208,"line_end":208,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215855,"byte_end":215858,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ In the 0.2 release series of futures this method will be renamed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215863,"byte_end":215934,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ `poll_flush`. For 0.1, however, the breaking change is not happening","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":215939,"byte_end":216011,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ yet.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216016,"byte_end":216024,"line_start":212,"line_end":212,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219424,"byte_end":219429,"line_start":281,"line_end":281,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::Sink::close","value":"pub fn close(&mut Self) -> Poll<(), Self::SinkError>","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" A method to indicate that no more values will ever be pushed into this\n sink.","sig":null,"attributes":[{"value":"/ A method to indicate that no more values will ever be pushed into this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216092,"byte_end":216166,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216171,"byte_end":216180,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216185,"byte_end":216188,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method is used to indicate that a sink will no longer even be given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216193,"byte_end":216269,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ another value by the caller. That is, the `start_send` method above will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216274,"byte_end":216350,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ be called no longer (nor `poll_complete`). This method is intended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216355,"byte_end":216428,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ model \"graceful shutdown\" in various protocols where the intent to shut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216433,"byte_end":216508,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ down is followed by a little more blocking work.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216513,"byte_end":216565,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216570,"byte_end":216573,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Callers of this function should work it it in a similar fashion to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216578,"byte_end":216648,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ `poll_complete`. Once called it may return `NotReady` which indicates","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216653,"byte_end":216726,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ that more external work needs to happen to make progress. The current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216731,"byte_end":216804,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ task will be scheduled to receive a notification in such an event,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216809,"byte_end":216879,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ however.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216884,"byte_end":216896,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216901,"byte_end":216904,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that this function will imply `poll_complete` above. That is, if a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216909,"byte_end":216984,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ sink has buffered data, then it'll be flushed out during a `close`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":216989,"byte_end":217059,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/ operation. It is not necessary to have `poll_complete` return `Ready`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217064,"byte_end":217137,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ before a `close` is called. Once a `close` is called, though,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217142,"byte_end":217207,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ `poll_complete` cannot be called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217212,"byte_end":217249,"line_start":234,"line_end":234,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217254,"byte_end":217257,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217262,"byte_end":217280,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217285,"byte_end":217288,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_complete`, returns a `Poll`. The value is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217293,"byte_end":217364,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ `Ready` once the close operation has completed. At that point it should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217369,"byte_end":217444,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ be safe to drop the sink and deallocate associated resources.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217449,"byte_end":217514,"line_start":240,"line_end":240,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217519,"byte_end":217522,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If the value returned is `NotReady` then the sink is not yet closed and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217527,"byte_end":217602,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ work needs to be done to close it. The work has been scheduled and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217607,"byte_end":217681,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ current task will receive a notification when it's next ready to call","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217686,"byte_end":217759,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ this method again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217764,"byte_end":217786,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217791,"byte_end":217794,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Finally, this function may also return an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217799,"byte_end":217851,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217856,"byte_end":217859,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217864,"byte_end":217876,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217881,"byte_end":217884,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This function will return an `Err` if any operation along the way during","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217889,"byte_end":217965,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the close operation fails. An error typically is fatal for a sink and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":217970,"byte_end":218046,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ unable to be recovered from, but in specific situations this may not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218051,"byte_end":218123,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/ always be true.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218128,"byte_end":218147,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218152,"byte_end":218155,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Note that it's also typically an error to call `start_send` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218160,"byte_end":218226,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/ `poll_complete` after the `close` function is called. This method will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218231,"byte_end":218305,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ *initiate* a close, and continuing to send values after that (or attempt","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218310,"byte_end":218386,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ to flush) may result in strange behavior, panics, errors, etc. Once this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218391,"byte_end":218467,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ method is called, it must be the only method called on this `Sink`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218472,"byte_end":218543,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218548,"byte_end":218551,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218556,"byte_end":218568,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218573,"byte_end":218576,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method may panic or cause panics if:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218581,"byte_end":218626,"line_start":264,"line_end":264,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218631,"byte_end":218634,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * It is called outside the context of a future's task","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218639,"byte_end":218696,"line_start":266,"line_end":266,"column_start":5,"column_end":62}},{"value":"/ * It is called and then `start_send` or `poll_complete` is called","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218701,"byte_end":218770,"line_start":267,"line_end":267,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218775,"byte_end":218778,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Compatibility notes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218783,"byte_end":218808,"line_start":269,"line_end":269,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218813,"byte_end":218816,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function is currently by default a provided function,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218821,"byte_end":218893,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ defaulted to calling `poll_complete` above. This function was added","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218898,"byte_end":218969,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ in the 0.1 series of the crate as a backwards-compatible addition. It","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":218974,"byte_end":219047,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ is intended that in the 0.2 series the method will no longer be a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219052,"byte_end":219121,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/ default method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219126,"byte_end":219145,"line_start":275,"line_end":275,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219150,"byte_end":219153,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ It is highly recommended to consider this method a required method and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219158,"byte_end":219232,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ to implement it whenever you implement `Sink` locally. It is especially","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219237,"byte_end":219312,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ crucial to be sure to close inner sinks, if applicable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219317,"byte_end":219376,"line_start":279,"line_end":279,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219381,"byte_end":219416,"line_start":280,"line_end":280,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220031,"byte_end":220035,"line_start":296,"line_end":296,"column_start":8,"column_end":12},"name":"wait","qualname":"::sink::Sink::wait","value":"pub fn wait(Self) -> Wait<Self> where Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Creates a new object which will produce a synchronous sink.","sig":null,"attributes":[{"value":"/ Creates a new object which will produce a synchronous sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219661,"byte_end":219724,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219729,"byte_end":219732,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The sink returned does **not** implement the `Sink` trait, and instead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219737,"byte_end":219811,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ only has two methods: `send` and `flush`. These two methods correspond","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219816,"byte_end":219890,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ to `start_send` and `poll_complete` above except are executed in a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219895,"byte_end":219965,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ blocking fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219970,"byte_end":219991,"line_start":294,"line_end":294,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":219996,"byte_end":220023,"line_start":295,"line_end":295,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220690,"byte_end":220694,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::Sink::with","value":"pub fn with<U, F, Fut>(Self, F) -> With<Self, U, F, Fut> where F: FnMut(U) ->\nFut, Fut: IntoFuture<Item = Self::SinkItem>,\nFut::Error: From<Self::SinkError>, Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220123,"byte_end":220170,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220175,"byte_end":220178,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220183,"byte_end":220254,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220259,"byte_end":220310,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220315,"byte_end":220318,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220323,"byte_end":220398,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220403,"byte_end":220479,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220484,"byte_end":220553,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220558,"byte_end":220561,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220566,"byte_end":220638,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220643,"byte_end":220682,"line_start":312,"line_end":312,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":222033,"byte_end":222046,"line_start":352,"line_end":352,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::Sink::with_flat_map","value":"pub fn with_flat_map<U, F, St>(Self, F) -> WithFlatMap<Self, U, F, St> where\nF: FnMut(U) -> St, St: Stream<Item = Self::SinkItem, Error = Self::SinkItem>,\nSelf: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":220950,"byte_end":220997,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221002,"byte_end":221005,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221010,"byte_end":221081,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221086,"byte_end":221137,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221142,"byte_end":221145,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221150,"byte_end":221221,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221226,"byte_end":221302,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221307,"byte_end":221338,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221343,"byte_end":221346,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221351,"byte_end":221423,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221428,"byte_end":221472,"line_start":332,"line_end":332,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221477,"byte_end":221480,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221485,"byte_end":221499,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/ ---","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221504,"byte_end":221511,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ Using this function with an iterator through use of the `stream::iter_ok()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221516,"byte_end":221595,"line_start":336,"line_end":336,"column_start":5,"column_end":84}},{"value":"/ function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221600,"byte_end":221612,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221617,"byte_end":221620,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221625,"byte_end":221632,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221637,"byte_end":221665,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221670,"byte_end":221694,"line_start":341,"line_end":341,"column_start":5,"column_end":29}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221699,"byte_end":221727,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221732,"byte_end":221735,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel::<i32>(5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221740,"byte_end":221783,"line_start":344,"line_end":344,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221788,"byte_end":221791,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let tx = tx.with_flat_map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221796,"byte_end":221831,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/     stream::iter_ok(vec![42; x].into_iter().map(|y| y))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221836,"byte_end":221895,"line_start":347,"line_end":347,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221900,"byte_end":221907,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ tx.send(5).wait().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221912,"byte_end":221943,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rx.collect().wait(), Ok(vec![42, 42, 42, 42, 42]))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":221948,"byte_end":222013,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":222018,"byte_end":222025,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":222779,"byte_end":222791,"line_start":375,"line_end":375,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::Sink::sink_map_err","value":"pub fn sink_map_err<F, E>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::SinkError) -> E, Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":222725,"byte_end":222771,"line_start":374,"line_end":374,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223173,"byte_end":223186,"line_start":386,"line_end":386,"column_start":8,"column_end":21},"name":"sink_from_err","qualname":"::sink::Sink::sink_from_err","value":"pub fn sink_from_err<E: From<Self::SinkError>>(Self)\n-> from_err::SinkFromErr<Self, E> where Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Map this sink's error to any error implementing `From` for this sink's\n `Error`, returning a new sink.","sig":null,"attributes":[{"value":"/ Map this sink's error to any error implementing `From` for this sink's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":222954,"byte_end":223028,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ `Error`, returning a new sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223033,"byte_end":223067,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223072,"byte_end":223075,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_from_err().from_err()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223080,"byte_end":223165,"line_start":385,"line_end":385,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223973,"byte_end":223979,"line_start":406,"line_end":406,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::Sink::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self> where Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223326,"byte_end":223375,"line_start":393,"line_end":393,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223380,"byte_end":223383,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `amt` items when the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223388,"byte_end":223460,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ sink is unwilling to accept additional items. Calling `poll_complete` on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223465,"byte_end":223541,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223546,"byte_end":223618,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223623,"byte_end":223661,"line_start":398,"line_end":398,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223666,"byte_end":223669,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223674,"byte_end":223746,"line_start":400,"line_end":400,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223751,"byte_end":223790,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223795,"byte_end":223798,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223803,"byte_end":223871,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223876,"byte_end":223933,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":223938,"byte_end":223965,"line_start":405,"line_end":405,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224267,"byte_end":224273,"line_start":416,"line_end":416,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::Sink::fanout","value":"pub fn fanout<S>(Self, S) -> Fanout<Self, S> where Self: Sized,\nSelf::SinkItem: Clone, S: Sink<SinkItem = Self::SinkItem, SinkError =\nSelf::SinkItem>","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224088,"byte_end":224123,"line_start":412,"line_end":412,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224128,"byte_end":224131,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224136,"byte_end":224218,"line_start":414,"line_end":414,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224223,"byte_end":224259,"line_start":415,"line_end":415,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224811,"byte_end":224816,"line_start":430,"line_end":430,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::Sink::flush","value":"pub fn flush(Self) -> Flush<Self> where Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" A future that completes when the sink has finished processing all\n pending requests.","sig":null,"attributes":[{"value":"/ A future that completes when the sink has finished processing all","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224500,"byte_end":224569,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/ pending requests.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224574,"byte_end":224595,"line_start":425,"line_end":425,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224600,"byte_end":224603,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The sink itself is returned after flushing is complete; this adapter is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224608,"byte_end":224683,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ intended to be used when you want to stop sending to the sink until","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224688,"byte_end":224759,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ all current requests are processed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224764,"byte_end":224803,"line_start":429,"line_end":429,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225276,"byte_end":225280,"line_start":444,"line_end":444,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::Sink::send","value":"pub fn send(Self, Self::SinkItem) -> Send<Self> where Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224906,"byte_end":224979,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":224984,"byte_end":225022,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225027,"byte_end":225030,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225035,"byte_end":225109,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `send_all`, rather than flushing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225114,"byte_end":225186,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ between each item.**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225191,"byte_end":225215,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225220,"byte_end":225223,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ On completion, the sink is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225228,"byte_end":225268,"line_start":443,"line_end":443,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":226137,"byte_end":226145,"line_start":464,"line_end":464,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::Sink::send_all","value":"pub fn send_all<S>(Self, S) -> SendAll<Self, S> where S: Stream<Item =\nSelf::SinkItem>, Self::SinkError: From<S::Error>, Self: Sized","parent":{"krate":0,"index":2548},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225396,"byte_end":225471,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225476,"byte_end":225514,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225519,"byte_end":225522,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225527,"byte_end":225600,"line_start":453,"line_end":453,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225605,"byte_end":225681,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, the sink has been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225686,"byte_end":225761,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ flushed, and the sink has been closed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225766,"byte_end":225808,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225813,"byte_end":225816,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225821,"byte_end":225879,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225884,"byte_end":225959,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`, closing `self` when all items have been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":225964,"byte_end":226041,"line_start":460,"line_end":460,"column_start":5,"column_end":82}},{"value":"/ received.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":226046,"byte_end":226059,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":226064,"byte_end":226067,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ On completion, the pair `(sink, source)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":226072,"byte_end":226129,"line_start":463,"line_end":463,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281483,"byte_end":281493,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"AtomicTask","qualname":"::task_impl::atomic_task::AtomicTask","value":"AtomicTask {  }","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754}],"decl_id":null,"docs":" A synchronization primitive for task notification.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task notification.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280463,"byte_end":280517,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280518,"byte_end":280521,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `AtomicTask` will coordinate concurrent notifications with the consumer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280522,"byte_end":280597,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ potentially \"updating\" the underlying task to notify. This is useful in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280598,"byte_end":280673,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280674,"byte_end":280748,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280749,"byte_end":280829,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280830,"byte_end":280853,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280854,"byte_end":280857,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280858,"byte_end":280938,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `notify` after producing the computation (this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":280939,"byte_end":281015,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281016,"byte_end":281092,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `notify` to be called **before** `register`. This results in a no-op.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281093,"byte_end":281166,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281167,"byte_end":281170,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicTask` may be reused for any number of calls to `register` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281171,"byte_end":281251,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ `notify`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281252,"byte_end":281265,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281266,"byte_end":281269,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `AtomicTask` does not provide any memory ordering guarantees, as such the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281270,"byte_end":281347,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ user should use caution and use other synchronization primitives to guard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281348,"byte_end":281425,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ the result of the underlying computation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":281426,"byte_end":281471,"line_start":26,"line_end":26,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286666,"byte_end":286669,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicTask>::new","value":"pub fn new() -> AtomicTask","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicTask` initialized with the given `Task`\n","sig":null,"attributes":[{"value":"/ Create an `AtomicTask` initialized with the given `Task`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286594,"byte_end":286654,"line_start":138,"line_end":138,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287090,"byte_end":287098,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicTask>::register","value":"pub fn register(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Registers the current task to be notified on calls to `notify`.","sig":null,"attributes":[{"value":"/ Registers the current task to be notified on calls to `notify`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286927,"byte_end":286994,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286999,"byte_end":287002,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is the same as calling `register_task` with `task::current()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287007,"byte_end":287078,"line_start":152,"line_end":152,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":288051,"byte_end":288064,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"register_task","qualname":"<AtomicTask>::register_task","value":"pub fn register_task(&Self, Task)","parent":null,"children":[],"decl_id":null,"docs":" Registers the provided task to be notified on calls to `notify`.","sig":null,"attributes":[{"value":"/ Registers the provided task to be notified on calls to `notify`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287165,"byte_end":287233,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287238,"byte_end":287241,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287246,"byte_end":287321,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `notify` that happen after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287326,"byte_end":287402,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287407,"byte_end":287479,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287484,"byte_end":287524,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287529,"byte_end":287532,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287537,"byte_end":287611,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ calling `notify`. This will result in the `register` caller's current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287616,"byte_end":287689,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ task being notified once.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287694,"byte_end":287723,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287728,"byte_end":287731,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287736,"byte_end":287811,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287816,"byte_end":287891,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287896,"byte_end":287972,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":287977,"byte_end":288039,"line_start":171,"line_end":171,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":290991,"byte_end":290997,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"notify","qualname":"<AtomicTask>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the task that last called `register`.","sig":null,"attributes":[{"value":"/ Notifies the task that last called `register`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":290850,"byte_end":290900,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":290905,"byte_end":290908,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":290913,"byte_end":290979,"line_start":236,"line_end":236,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296749,"byte_end":296753,"line_start":134,"line_end":134,"column_start":15,"column_end":19},"name":"init","qualname":"::task_impl::core::init","value":"pub unsafe fn init(fn() -> *mut u8, fn(: *mut u8)) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Initialize the `futures` task system.","sig":null,"attributes":[{"value":"/ Initialize the `futures` task system.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294511,"byte_end":294552,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294553,"byte_end":294556,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This function is an unsafe low-level implementation detail typically only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294557,"byte_end":294634,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ used by crates using `futures` in `no_std` context. Users of this crate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294635,"byte_end":294710,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ who also use the standard library never need to invoke this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294711,"byte_end":294784,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294785,"byte_end":294788,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The task system in the `futures` crate relies on some notion of \"local","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294789,"byte_end":294863,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ storage\" for the running thread and/or context. The `task::current` function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294864,"byte_end":294944,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ can get invoked in any context, for example, and needs to be able to return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294945,"byte_end":295024,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ a `Task`. Typically with the standard library this is supported with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295025,"byte_end":295097,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ thread-local-storage, but this is not available in `no_std` contexts!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295098,"byte_end":295171,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295172,"byte_end":295175,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This function is provided to allow `no_std` contexts to continue to be able","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295176,"byte_end":295255,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ to use the standard task system in this crate. The functions provided here","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295256,"byte_end":295334,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ will be used as-if they were thread-local-storage getters/setters. The `get`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295335,"byte_end":295415,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ function provided is used to retrieve the current thread-local value of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295416,"byte_end":295495,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ task system's pointer, returning null if not initialized. The `set` function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295496,"byte_end":295576,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ updates the value of the pointer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295577,"byte_end":295614,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295615,"byte_end":295618,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295619,"byte_end":295637,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295638,"byte_end":295641,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function will return whether initialization succeeded or not. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295642,"byte_end":295717,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ function can be called concurrently and only the first invocation will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295718,"byte_end":295792,"line_start":116,"line_end":116,"column_start":1,"column_end":75}},{"value":"/ succeed. If `false` is returned then the `get` and `set` pointers provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295793,"byte_end":295871,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ were *not* registered for use with the task system, but if `true` was","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295872,"byte_end":295945,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ provided then they will be called when the task system is used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":295946,"byte_end":296013,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296014,"byte_end":296017,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Note that while safe to call concurrently it's recommended to still perform","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296018,"byte_end":296097,"line_start":121,"line_end":121,"column_start":1,"column_end":80}},{"value":"/ external synchronization when calling this function. This task system is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296098,"byte_end":296174,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ not guaranteed to be ready to go until a call to this function returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296175,"byte_end":296249,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ `true`. In other words, if you call this function and see `false`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296250,"byte_end":296324,"line_start":124,"line_end":124,"column_start":1,"column_end":75}},{"value":"/ task system may not be ready to go as another thread may still be calling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296325,"byte_end":296402,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `init`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296403,"byte_end":296414,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296415,"byte_end":296418,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296419,"byte_end":296433,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296434,"byte_end":296437,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe due to the requirements on the behavior of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296438,"byte_end":296512,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ `get` and `set` functions. The pointers returned from these functions must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296513,"byte_end":296591,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ reflect the semantics specified above and must also be thread-local,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296592,"byte_end":296664,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ depending on the definition of a \"thread\" in the calling context.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":296665,"byte_end":296734,"line_start":133,"line_end":133,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":6515},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327520,"byte_end":327528,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task_impl::std::data::LocalKey","value":"LocalKey { __key, __init }","parent":null,"children":[{"krate":0,"index":6517},{"krate":0,"index":6518}],"decl_id":null,"docs":" A key for task-local data stored in a future's task.","sig":null,"attributes":[{"value":"/ A key for task-local data stored in a future's task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326783,"byte_end":326839,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326840,"byte_end":326843,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro and performs very","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326844,"byte_end":326915,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ similarly to the `thread_local!` macro and `std::thread::LocalKey` types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326916,"byte_end":326993,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ Data associated with a `LocalKey<T>` is stored inside of a future's task,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326994,"byte_end":327071,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ and the data is destroyed when the future is completed and the task is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327072,"byte_end":327146,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ destroyed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327147,"byte_end":327161,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327162,"byte_end":327165,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Task-local data can migrate between threads and hence requires a `Send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327166,"byte_end":327241,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ bound. Additionally, task-local data also requires the `'static` bound to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327242,"byte_end":327319,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ ensure it lives long enough. When a key is accessed for the first time the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327320,"byte_end":327398,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ task's data is initialized with the provided initialization expression to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327399,"byte_end":327476,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ the macro.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327477,"byte_end":327491,"line_start":57,"line_end":57,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":6517},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327720,"byte_end":327725,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"__key","qualname":"::task_impl::std::data::LocalKey::__key","value":"fn() -> core::any::TypeId","parent":{"krate":0,"index":6515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6518},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327770,"byte_end":327776,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"__init","qualname":"::task_impl::std::data::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":6515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":329169,"byte_end":329173,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Access this task-local key, running the provided closure with a\n reference to the value.","sig":null,"attributes":[{"value":"/ Access this task-local key, running the provided closure with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328247,"byte_end":328314,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ reference to the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328319,"byte_end":328346,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328351,"byte_end":328354,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function will access this task-local key to retrieve the data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328359,"byte_end":328429,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ associated with the current task and this key. If this is the first time","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328434,"byte_end":328510,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ this key has been accessed on this task, then the key will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328515,"byte_end":328580,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ initialized with the initialization expression provided at the time the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328585,"byte_end":328660,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ `task_local!` macro was called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328665,"byte_end":328700,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328705,"byte_end":328708,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be provided a shared reference to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328713,"byte_end":328780,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ underlying data associated with this task-local-key. The data itself is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328785,"byte_end":328860,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ stored inside of the current task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328865,"byte_end":328903,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328908,"byte_end":328911,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328916,"byte_end":328928,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328933,"byte_end":328936,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function can possibly panic for a number of reasons:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328941,"byte_end":329002,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":329007,"byte_end":329010,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * If there is not a current task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":329015,"byte_end":329052,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ * If the initialization expression is run and it panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":329057,"byte_end":329116,"line_start":112,"line_end":112,"column_start":5,"column_end":64}},{"value":"/ * If the closure provided panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":329121,"byte_end":329157,"line_start":113,"line_end":113,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6522},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333188,"byte_end":333194,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"TaskRc","qualname":"::task_impl::std::task_rc::TaskRc","value":"TaskRc {  }","parent":null,"children":[{"krate":0,"index":6524},{"krate":0,"index":6525}],"decl_id":null,"docs":" A reference to a piece of data that's accessible only within a specific\n `Task`.","sig":null,"attributes":[{"value":"/ A reference to a piece of data that's accessible only within a specific","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":332847,"byte_end":332922,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ `Task`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":332923,"byte_end":332934,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":332935,"byte_end":332938,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This data is `Send` even when `A` is not `Sync`, because the data stored","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":332939,"byte_end":333015,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ within is accessed in a single-threaded way. The thread accessing it may","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333016,"byte_end":333092,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ change over time, if the task migrates, so `A` must be `Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333093,"byte_end":333159,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334148,"byte_end":334151,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<TaskRc<A>>::new","value":"pub fn new(A) -> TaskRc<A>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new piece of task-local data into this task, returning a\n reference to it.","sig":null,"attributes":[{"value":"/ Inserts a new piece of task-local data into this task, returning a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333425,"byte_end":333495,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ reference to it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333500,"byte_end":333520,"line_start":77,"line_end":77,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333525,"byte_end":333528,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Ownership of the data will be transferred to the task, and the data will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333533,"byte_end":333609,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ be destroyed when the task itself is destroyed. The returned value can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333614,"byte_end":333688,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ be passed to the `with` method to get a reference back to the original","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333693,"byte_end":333767,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333772,"byte_end":333781,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333786,"byte_end":333789,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that the returned handle is cloneable and copyable and can be sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333794,"byte_end":333869,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ to other futures which will be associated with the same task. All","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333874,"byte_end":333943,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ futures will then have access to this data when passed the reference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333948,"byte_end":334020,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ back.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334025,"byte_end":334034,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334039,"byte_end":334042,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334047,"byte_end":334059,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334064,"byte_end":334067,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function will panic if a task is not currently running.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334072,"byte_end":334136,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334843,"byte_end":334847,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"with","qualname":"<TaskRc<A>>::with","value":"pub fn with<F, R>(&Self, F) -> R where F: FnOnce(&A) -> R","parent":null,"children":[],"decl_id":null,"docs":" Operate with a reference to the underlying data.","sig":null,"attributes":[{"value":"/ Operate with a reference to the underlying data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334295,"byte_end":334347,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334352,"byte_end":334355,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method should be passed a handle previously returned by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334360,"byte_end":334424,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/ `Task::insert`. That handle, when passed back into this method, will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334429,"byte_end":334501,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ retrieve a reference to the original data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334506,"byte_end":334552,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334557,"byte_end":334560,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334565,"byte_end":334577,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334582,"byte_end":334585,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method will panic if a task is not currently running or if `self`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334590,"byte_end":334664,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ does not belong to the task that is currently running. That is, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334669,"byte_end":334739,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ another task generated the `data` handle passed in, this method will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334744,"byte_end":334816,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":334821,"byte_end":334831,"line_start":110,"line_end":110,"column_start":5,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":298771,"byte_end":298781,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"is_in_task","qualname":"::task_impl::std::is_in_task","value":"pub fn is_in_task() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the caller is running in a task (and so can use task_local!).\n","sig":null,"attributes":[{"value":"/ Return whether the caller is running in a task (and so can use task_local!).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":298683,"byte_end":298763,"line_start":32,"line_end":32,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303810,"byte_end":303821,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"poll_future","qualname":"<Spawn<F>>::poll_future","value":"pub fn poll_future(&mut Self, Arc<Unpark>) -> Poll<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_future_notify` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303702,"byte_end":303773,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303778,"byte_end":303798,"line_start":224,"line_end":224,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304279,"byte_end":304290,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"wait_future","qualname":"<Spawn<F>>::wait_future","value":"pub fn wait_future(&mut Self) -> Result<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the internal future to complete, blocking this thread's\n execution until it does.","sig":null,"attributes":[{"value":"/ Waits for the internal future to complete, blocking this thread's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303957,"byte_end":304026,"line_start":229,"line_end":229,"column_start":5,"column_end":74}},{"value":"/ execution until it does.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304031,"byte_end":304059,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304064,"byte_end":304067,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This function will call `poll_future` in a loop, waiting for the future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304072,"byte_end":304147,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ to complete. When a future cannot make progress it will use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304152,"byte_end":304215,"line_start":233,"line_end":233,"column_start":5,"column_end":68}},{"value":"/ `thread::park` to block the current thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304220,"byte_end":304267,"line_start":234,"line_end":234,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304690,"byte_end":304697,"line_start":251,"line_end":251,"column_start":12,"column_end":19},"name":"execute","qualname":"<Spawn<F>>::execute","value":"pub fn execute(Self, Arc<Executor>) where F: Future<Item = (), Error = ()> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304640,"byte_end":304653,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":304658,"byte_end":304678,"line_start":250,"line_end":250,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305463,"byte_end":305474,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"name":"poll_stream","qualname":"<Spawn<S>>::poll_stream","value":"pub fn poll_stream(&mut Self, Arc<Unpark>) -> Poll<Option<S::Item>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_stream_notify` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305336,"byte_end":305407,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305412,"byte_end":305432,"line_start":270,"line_end":270,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305759,"byte_end":305770,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"wait_stream","qualname":"<Spawn<S>>::wait_stream","value":"pub fn wait_stream(&mut Self) -> Option<Result<S::Item, S::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait_future`, except only waits for the next element to arrive on\n the underlying stream.\n","sig":null,"attributes":[{"value":"/ Like `wait_future`, except only waits for the next element to arrive on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305641,"byte_end":305716,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305721,"byte_end":305747,"line_start":278,"line_end":278,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306390,"byte_end":306400,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Spawn<S>>::start_send","value":"pub fn start_send(&mut Self, S::SinkItem, &Arc<Unpark>)\n-> StartSend<S::SinkItem, S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `start_send_notify` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306283,"byte_end":306353,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306358,"byte_end":306378,"line_start":297,"line_end":297,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306729,"byte_end":306739,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<Spawn<S>>::poll_flush","value":"pub fn poll_flush(&mut Self, &Arc<Unpark>) -> Poll<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_flush_notify` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306603,"byte_end":306673,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306678,"byte_end":306698,"line_start":304,"line_end":304,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307217,"byte_end":307226,"line_start":316,"line_end":316,"column_start":12,"column_end":21},"name":"wait_send","qualname":"<Spawn<S>>::wait_send","value":"pub fn wait_send(&mut Self, S::SinkItem) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to send `value` on this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to send `value` on this sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306906,"byte_end":306981,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306986,"byte_end":306989,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This function will send the `value` on the sink that this task wraps. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306994,"byte_end":307070,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ the sink is not ready to send the value yet then the current thread will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307075,"byte_end":307151,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ be blocked until it's able to send the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307156,"byte_end":307205,"line_start":315,"line_end":315,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308010,"byte_end":308020,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"name":"wait_flush","qualname":"<Spawn<S>>::wait_flush","value":"pub fn wait_flush(&mut Self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to flush this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to flush this sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307643,"byte_end":307708,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307713,"byte_end":307716,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `poll_complete` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307721,"byte_end":307793,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ until it returns that it's ready, proxying out errors upwards to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307798,"byte_end":307870,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ caller if one occurs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307875,"byte_end":307900,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307905,"byte_end":307908,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The thread will be blocked until `poll_complete` returns that it's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307913,"byte_end":307983,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ ready.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":307988,"byte_end":307998,"line_start":337,"line_end":337,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308580,"byte_end":308590,"line_start":355,"line_end":355,"column_start":12,"column_end":22},"name":"wait_close","qualname":"<Spawn<S>>::wait_close","value":"pub fn wait_close(&mut Self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to close this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to close this sink.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308314,"byte_end":308379,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308384,"byte_end":308387,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This function will close the sink that this task wraps. If the sink","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308392,"byte_end":308463,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ is not ready to be close yet, then the current thread will be blocked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308468,"byte_end":308541,"line_start":353,"line_end":353,"column_start":5,"column_end":78}},{"value":"/ until it's closed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308546,"byte_end":308568,"line_start":354,"line_end":354,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309305,"byte_end":309311,"line_start":376,"line_end":376,"column_start":11,"column_end":17},"name":"Unpark","qualname":"::task_impl::std::Unpark","value":"Unpark: Send + Sync","parent":null,"children":[{"krate":0,"index":3090}],"decl_id":null,"docs":" A trait which represents a sink of notifications that a future is ready to\n make progress.","sig":null,"attributes":[{"value":"/ A trait which represents a sink of notifications that a future is ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308877,"byte_end":308955,"line_start":368,"line_end":368,"column_start":1,"column_end":79}},{"value":"/ make progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308956,"byte_end":308974,"line_start":369,"line_end":369,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308975,"byte_end":308978,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ This trait is provided as an argument to the `Spawn::poll_future` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":308979,"byte_end":309052,"line_start":371,"line_end":371,"column_start":1,"column_end":74}},{"value":"/ `Spawn::poll_stream` functions. It's transitively used as part of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309053,"byte_end":309126,"line_start":372,"line_end":372,"column_start":1,"column_end":74}},{"value":"/ `Task::unpark` method to internally deliver notifications of readiness of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309127,"byte_end":309206,"line_start":373,"line_end":373,"column_start":1,"column_end":80}},{"value":"/ future to move forward.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309207,"byte_end":309234,"line_start":374,"line_end":374,"column_start":1,"column_end":28}},{"value":"deprecated(note = \"recommended to use `Notify` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309235,"byte_end":309294,"line_start":375,"line_end":375,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309574,"byte_end":309580,"line_start":382,"line_end":382,"column_start":8,"column_end":14},"name":"unpark","qualname":"::task_impl::std::Unpark::unpark","value":"pub fn unpark(&Self)","parent":{"krate":0,"index":3089},"children":[],"decl_id":null,"docs":" Indicates that an associated future and/or task are ready to make\n progress.","sig":null,"attributes":[{"value":"/ Indicates that an associated future and/or task are ready to make","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309331,"byte_end":309400,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309405,"byte_end":309418,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309423,"byte_end":309426,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Typically this means that the receiver of the notification should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309431,"byte_end":309500,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ arrange for the future to get poll'd in a prompt fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309505,"byte_end":309566,"line_start":381,"line_end":381,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310150,"byte_end":310158,"line_start":396,"line_end":396,"column_start":11,"column_end":19},"name":"Executor","qualname":"::task_impl::std::Executor","value":"Executor: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":3092}],"decl_id":null,"docs":" A trait representing requests to poll futures.","sig":null,"attributes":[{"value":"/ A trait representing requests to poll futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309592,"byte_end":309642,"line_start":385,"line_end":385,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309643,"byte_end":309646,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This trait is an argument to the `Spawn::execute` which is used to run a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309647,"byte_end":309723,"line_start":387,"line_end":387,"column_start":1,"column_end":77}},{"value":"/ future to completion. An executor will receive requests to run a future and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309724,"byte_end":309803,"line_start":388,"line_end":388,"column_start":1,"column_end":80}},{"value":"/ an executor is responsible for ensuring that happens in a timely fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309804,"byte_end":309881,"line_start":389,"line_end":389,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309882,"byte_end":309885,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Note that this trait is likely to be deprecated and/or renamed to avoid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309886,"byte_end":309961,"line_start":391,"line_end":391,"column_start":1,"column_end":76}},{"value":"/ clashing with the `future::Executor` trait. If you've got a use case for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309962,"byte_end":310038,"line_start":392,"line_end":392,"column_start":1,"column_end":77}},{"value":"/ this or would like to comment on the name please let us know!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310039,"byte_end":310104,"line_start":393,"line_end":393,"column_start":1,"column_end":66}},{"value":"deprecated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310105,"byte_end":310118,"line_start":394,"line_end":394,"column_start":1,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310119,"byte_end":310139,"line_start":395,"line_end":395,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310259,"byte_end":310266,"line_start":398,"line_end":398,"column_start":8,"column_end":15},"name":"execute","qualname":"::task_impl::std::Executor::execute","value":"pub fn execute(&Self, Run)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Requests that `Run` is executed soon on the given executor.\n","sig":null,"attributes":[{"value":"/ Requests that `Run` is executed soon on the given executor.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310188,"byte_end":310251,"line_start":397,"line_end":397,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310396,"byte_end":310399,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"Run","qualname":"::task_impl::std::Run","value":"Run {  }","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3095}],"decl_id":null,"docs":" Units of work submitted to an `Executor`, currently only created\n internally.\n","sig":null,"attributes":[{"value":"/ Units of work submitted to an `Executor`, currently only created","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310286,"byte_end":310354,"line_start":401,"line_end":401,"column_start":1,"column_end":69}},{"value":"/ internally.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310355,"byte_end":310370,"line_start":402,"line_end":402,"column_start":1,"column_end":16}},{"value":"deprecated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310371,"byte_end":310384,"line_start":403,"line_end":403,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310724,"byte_end":310727,"line_start":419,"line_end":419,"column_start":12,"column_end":15},"name":"run","qualname":"<Run>::run","value":"pub fn run(Self)","parent":null,"children":[],"decl_id":null,"docs":" Actually run the task (invoking `poll` on its future) on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Actually run the task (invoking `poll` on its future) on the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310624,"byte_end":310696,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/ thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310701,"byte_end":310712,"line_start":418,"line_end":418,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315573,"byte_end":315590,"line_start":576,"line_end":576,"column_start":8,"column_end":25},"name":"with_unpark_event","qualname":"::task_impl::std::with_unpark_event","value":"pub fn with_unpark_event<F, R>(UnparkEvent, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" For the duration of the given callback, add an \"unpark event\" to be\n triggered when the task handle is used to unpark the task.","sig":null,"attributes":[{"value":"/ For the duration of the given callback, add an \"unpark event\" to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314473,"byte_end":314544,"line_start":552,"line_end":552,"column_start":1,"column_end":72}},{"value":"/ triggered when the task handle is used to unpark the task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314545,"byte_end":314607,"line_start":553,"line_end":553,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314608,"byte_end":314611,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ Unpark events are used to pass information about what event caused a task to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314612,"byte_end":314692,"line_start":555,"line_end":555,"column_start":1,"column_end":81}},{"value":"/ be unparked. In some cases, tasks are waiting on a large number of possible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314693,"byte_end":314772,"line_start":556,"line_end":556,"column_start":1,"column_end":80}},{"value":"/ events, and need precise information about the wakeup to avoid extraneous","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314773,"byte_end":314850,"line_start":557,"line_end":557,"column_start":1,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314851,"byte_end":314863,"line_start":558,"line_end":558,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314864,"byte_end":314867,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ Every `Task` handle comes with a set of unpark events which will fire when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314868,"byte_end":314946,"line_start":560,"line_end":560,"column_start":1,"column_end":79}},{"value":"/ `unpark` is called. When fired, these events insert an identifier into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":314947,"byte_end":315023,"line_start":561,"line_end":561,"column_start":1,"column_end":77}},{"value":"/ concurrent set, which the task can read from to determine what events","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315024,"byte_end":315097,"line_start":562,"line_end":562,"column_start":1,"column_end":74}},{"value":"/ occurred.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315098,"byte_end":315111,"line_start":563,"line_end":563,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315112,"byte_end":315115,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ This function immediately invokes the closure, `f`, but arranges things so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315116,"byte_end":315194,"line_start":565,"line_end":565,"column_start":1,"column_end":79}},{"value":"/ that `task::park` will produce a `Task` handle that includes the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315195,"byte_end":315269,"line_start":566,"line_end":566,"column_start":1,"column_end":75}},{"value":"/ unpark event.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315270,"byte_end":315287,"line_start":567,"line_end":567,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315288,"byte_end":315291,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315292,"byte_end":315304,"line_start":569,"line_end":569,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315305,"byte_end":315308,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ This function will panic if a task is not currently being executed. That","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315309,"byte_end":315385,"line_start":571,"line_end":571,"column_start":1,"column_end":77}},{"value":"/ is, this method can be dangerous to call outside of an implementation of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315386,"byte_end":315462,"line_start":572,"line_end":572,"column_start":1,"column_end":77}},{"value":"/ `poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315463,"byte_end":315474,"line_start":573,"line_end":573,"column_start":1,"column_end":12}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315475,"byte_end":315544,"line_start":574,"line_end":574,"column_start":1,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315545,"byte_end":315565,"line_start":575,"line_end":575,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6583},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316333,"byte_end":316344,"line_start":600,"line_end":600,"column_start":12,"column_end":23},"name":"UnparkEvent","qualname":"::task_impl::std::UnparkEvent","value":"UnparkEvent {  }","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585}],"decl_id":null,"docs":" A set insertion to trigger upon `unpark`.","sig":null,"attributes":[{"value":"/ A set insertion to trigger upon `unpark`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315923,"byte_end":315968,"line_start":591,"line_end":591,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315969,"byte_end":315972,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ Unpark events are used to communicate information about *why* an unpark","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":315973,"byte_end":316048,"line_start":593,"line_end":593,"column_start":1,"column_end":76}},{"value":"/ occurred, in particular populating sets with event identifiers so that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316049,"byte_end":316127,"line_start":594,"line_end":594,"column_start":1,"column_end":79}},{"value":"/ unparked task can avoid extraneous polling. See `with_unpark_event` for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316128,"byte_end":316203,"line_start":595,"line_end":595,"column_start":1,"column_end":76}},{"value":"/ more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316204,"byte_end":316213,"line_start":596,"line_end":596,"column_start":1,"column_end":10}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316231,"byte_end":316300,"line_start":598,"line_end":598,"column_start":1,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316301,"byte_end":316321,"line_start":599,"line_end":599,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316607,"byte_end":316610,"line_start":610,"line_end":610,"column_start":12,"column_end":15},"name":"new","qualname":"<UnparkEvent>::new","value":"pub fn new(Arc<EventSet>, usize) -> UnparkEvent","parent":null,"children":[],"decl_id":null,"docs":" Construct an unpark event that will insert `id` into `set` when\n triggered.\n","sig":null,"attributes":[{"value":"/ Construct an unpark event that will insert `id` into `set` when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316435,"byte_end":316502,"line_start":607,"line_end":607,"column_start":5,"column_end":72}},{"value":"/ triggered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316507,"byte_end":316521,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316526,"byte_end":316595,"line_start":609,"line_end":609,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317390,"byte_end":317398,"line_start":637,"line_end":637,"column_start":11,"column_end":19},"name":"EventSet","qualname":"::task_impl::std::EventSet","value":"EventSet: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":3130}],"decl_id":null,"docs":" A concurrent set which allows for the insertion of `usize` values.","sig":null,"attributes":[{"value":"/ A concurrent set which allows for the insertion of `usize` values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317057,"byte_end":317127,"line_start":632,"line_end":632,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317128,"byte_end":317131,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ `EventSet`s are used to communicate precise information about the event(s)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317132,"byte_end":317210,"line_start":634,"line_end":634,"column_start":1,"column_end":79}},{"value":"/ that triggered a task notification. See `task::with_unpark_event` for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317211,"byte_end":317293,"line_start":635,"line_end":635,"column_start":1,"column_end":83}},{"value":"deprecated(since = \"0.1.18\", note =\n             \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317294,"byte_end":317379,"line_start":636,"line_end":636,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317472,"byte_end":317478,"line_start":639,"line_end":639,"column_start":8,"column_end":14},"name":"insert","qualname":"::task_impl::std::EventSet::insert","value":"pub fn insert(&Self, usize)","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":" Insert the given ID into the set\n","sig":null,"attributes":[{"value":"/ Insert the given ID into the set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317428,"byte_end":317464,"line_start":638,"line_end":638,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254193,"byte_end":254197,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Task","qualname":"::task_impl::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":6589},{"krate":0,"index":6590},{"krate":0,"index":6591}],"decl_id":null,"docs":" A handle to a \"task\", which represents a single lightweight \"thread\" of\n execution driving a future to completion.","sig":null,"attributes":[{"value":"/ A handle to a \"task\", which represents a single lightweight \"thread\" of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252670,"byte_end":252745,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ execution driving a future to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252746,"byte_end":252791,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252792,"byte_end":252795,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ In general, futures are composed into large units of work, which are then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252796,"byte_end":252873,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ spawned as tasks onto an *executor*. The executor is responsible for polling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252874,"byte_end":252954,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ the future as notifications arrive, until the future terminates.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":252955,"byte_end":253023,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253024,"byte_end":253027,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This is obtained by the `task::current` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253028,"byte_end":253081,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253082,"byte_end":253085,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # FAQ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253086,"byte_end":253095,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253096,"byte_end":253099,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Why does `Task` not implement `Eq` and `Hash`?","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253100,"byte_end":253154,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253155,"byte_end":253158,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A valid use case for `Task` to implement these two traits has not been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253159,"byte_end":253233,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ encountered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253234,"byte_end":253250,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253251,"byte_end":253254,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Usually, this question is asked by someone who wants to store a `Task`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253255,"byte_end":253329,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ instance in a `HashSet`. This seems like an obvious way to implement a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253330,"byte_end":253404,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ future aware, multi-handle structure; e.g. a multi-producer channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253405,"byte_end":253477,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253478,"byte_end":253481,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ In this case, the idea is that whenever a `start_send` is called on one of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253482,"byte_end":253560,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ the channel's send handles, if the channel is at capacity, the current task","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253561,"byte_end":253640,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ is stored in a set. Then, when capacity is available, a task is removed from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253641,"byte_end":253721,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ the set and notified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253722,"byte_end":253747,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253748,"byte_end":253751,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The problem with this strategy is that multiple `Sender` handles can be used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253752,"byte_end":253832,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ on the same task. In this case, when the second handle is used and the task","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253833,"byte_end":253912,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/ is stored in a set, there already is an entry. Then, when the first","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253913,"byte_end":253984,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ handle is dropped, this entry is cleared, resulting in a dead lock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":253985,"byte_end":254056,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254057,"byte_end":254060,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [here](https://github.com/rust-lang-nursery/futures-rs/issues/670) for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254061,"byte_end":254139,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ more discussion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254140,"byte_end":254160,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254161,"byte_end":254164,"line_start":84,"line_end":84,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255462,"byte_end":255469,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"current","qualname":"::task_impl::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task to call `notify` at a later date.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task to call `notify` at a later date.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254323,"byte_end":254397,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254398,"byte_end":254401,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ The returned handle implements the `Send` and `'static` bounds and may also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254402,"byte_end":254481,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ be cheaply cloned. This is useful for squirreling away the handle into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254482,"byte_end":254558,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ location which is then later signaled that a future can make progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254559,"byte_end":254633,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254634,"byte_end":254637,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Implementations of the `Future` trait typically use this function if they","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254638,"byte_end":254715,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ would otherwise perform a blocking operation. When something isn't ready","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254716,"byte_end":254792,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ yet, this `current` function is called to acquire a handle to the current","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254793,"byte_end":254870,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ task, and then the future arranges it such that when the blocking operation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254871,"byte_end":254950,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ otherwise finishes (perhaps in the background) it will `notify` the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254951,"byte_end":255022,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ returned handle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255023,"byte_end":255043,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255044,"byte_end":255047,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ It's sometimes necessary to pass extra information to the task when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255048,"byte_end":255119,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ unparking it, so that the task knows something about *why* it was woken.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255120,"byte_end":255196,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ See the `FutureQueue` documentation for details on how to do this.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255197,"byte_end":255267,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255268,"byte_end":255271,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255272,"byte_end":255284,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255285,"byte_end":255288,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function will panic if a task is not currently being executed. That","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255289,"byte_end":255365,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/ is, this method can be dangerous to call outside of an implementation of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255366,"byte_end":255442,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ `poll`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255443,"byte_end":255454,"line_start":116,"line_end":116,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255790,"byte_end":255794,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"park","qualname":"::task_impl::park","value":"pub fn park() -> Task","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `current`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255738,"byte_end":255782,"line_start":131,"line_end":131,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256316,"byte_end":256322,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"notify","qualname":"<Task>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicate that the task should attempt to poll its future in a timely\n fashion.","sig":null,"attributes":[{"value":"/ Indicate that the task should attempt to poll its future in a timely","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255840,"byte_end":255912,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255917,"byte_end":255929,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255934,"byte_end":255937,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ It's typically guaranteed that, after calling `notify`, `poll` will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255942,"byte_end":256013,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ be called at least once subsequently (unless the future has terminated).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256018,"byte_end":256094,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ If the task is currently polling its future when `notify` is called, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256099,"byte_end":256174,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ must poll the future *again* afterwards, ensuring that all relevant","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256179,"byte_end":256250,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ events are eventually observed by the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256255,"byte_end":256304,"line_start":144,"line_end":144,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256477,"byte_end":256483,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Task>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `notify`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256422,"byte_end":256465,"line_start":151,"line_end":151,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258639,"byte_end":258649,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"is_current","qualname":"<Task>::is_current","value":"pub fn is_current(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` when called from within the context of the task.","sig":null,"attributes":[{"value":"/ Returns `true` when called from within the context of the task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256526,"byte_end":256593,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256598,"byte_end":256601,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ In other words, the task is currently running on the thread calling the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256606,"byte_end":256681,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ function. Note that this is currently, and has historically, been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256686,"byte_end":256755,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ implemented by tracking an `id` on every instance of `Spawn` created.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256760,"byte_end":256833,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ When a `Spawn` is being polled it stores in thread-local-storage the id","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256838,"byte_end":256913,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of the instance, and then `task::current` will return a `Task` that also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256918,"byte_end":256994,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ stores this id.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":256999,"byte_end":257018,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257023,"byte_end":257026,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The intention of this function was to answer questions like \"if I","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257031,"byte_end":257100,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ `notify` this task, is it equivalent to `task::current().notify()`?\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257105,"byte_end":257177,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ The answer \"yes\" may be able to avoid some extra work to block the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257182,"byte_end":257252,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ current task, such as sending a task along a channel or updating a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257257,"byte_end":257327,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ stored `Task` somewhere. An answer of \"no\" typically results in doing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257332,"byte_end":257405,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ the work anyway.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257410,"byte_end":257430,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257435,"byte_end":257438,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Unfortunately this function has been somewhat buggy in the past and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257443,"byte_end":257517,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ not intended to be supported in the future. By simply matching `id` the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257522,"byte_end":257597,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ intended question above isn't accurately taking into account, for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257602,"byte_end":257671,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ example, unpark events (now deprecated, but still a feature). Thus many","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257676,"byte_end":257751,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ old users of this API weren't fully accounting for the question it was","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257756,"byte_end":257830,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ intended they were asking.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257835,"byte_end":257865,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257870,"byte_end":257873,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This API continues to be implemented but will in the future, e.g. in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257878,"byte_end":257954,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ 0.1.x series of this crate, eventually return `false` unconditionally.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":257959,"byte_end":258033,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ It is intended that this function will be removed in the next breaking","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258038,"byte_end":258112,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ change of this crate. If you'd like to continue to be able to answer the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258117,"byte_end":258193,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ example question above, it's recommended you use the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258198,"byte_end":258254,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/ `will_notify_current` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258259,"byte_end":258292,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258297,"byte_end":258300,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If you've got questions about this though please let us know! We'd like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258305,"byte_end":258380,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to learn about other use cases here that we did not consider.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258385,"byte_end":258450,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258455,"byte_end":258458,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258463,"byte_end":258475,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258480,"byte_end":258483,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function will panic if no current future is being polled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258488,"byte_end":258554,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"deprecated(note = \"intended to be removed, see docs for details\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258559,"byte_end":258627,"line_start":192,"line_end":192,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259722,"byte_end":259741,"line_start":216,"line_end":216,"column_start":12,"column_end":31},"name":"will_notify_current","qualname":"<Task>::will_notify_current","value":"pub fn will_notify_current(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This function is intended as a performance optimization for structures\n which store a `Task` internally.","sig":null,"attributes":[{"value":"/ This function is intended as a performance optimization for structures","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258724,"byte_end":258798,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ which store a `Task` internally.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258803,"byte_end":258839,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258844,"byte_end":258847,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The purpose of this function is to answer the question \"if I `notify`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258852,"byte_end":258925,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ this task is it equivalent to `task::current().notify()`\". An answer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":258930,"byte_end":259002,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ \"yes\" may mean that you don't actually need to call `task::current()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259007,"byte_end":259080,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ and store it, but rather you can simply leave a stored task in place. An","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259085,"byte_end":259161,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ answer of \"no\" typically means that you need to call `task::current()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259166,"byte_end":259240,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ and store it somewhere.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259245,"byte_end":259272,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259277,"byte_end":259280,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ As this is purely a performance optimization a valid implementation for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259285,"byte_end":259360,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ this function is to always return `false`. A best effort is done to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259365,"byte_end":259436,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ return `true` where possible, but false negatives may happen. Note that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259441,"byte_end":259516,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ this function will not return a false positive, however.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259521,"byte_end":259581,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259586,"byte_end":259589,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259594,"byte_end":259606,"line_start":212,"line_end":212,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259611,"byte_end":259614,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This function will panic if no current future is being polled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259619,"byte_end":259685,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"allow(deprecated)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259690,"byte_end":259710,"line_start":215,"line_end":215,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260619,"byte_end":260624,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"Spawn","qualname":"::task_impl::Spawn","value":"Spawn {  }","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187}],"decl_id":null,"docs":" Representation of a spawned future/stream.","sig":null,"attributes":[{"value":"/ Representation of a spawned future/stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260062,"byte_end":260108,"line_start":231,"line_end":231,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260109,"byte_end":260112,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ This object is returned by the `spawn` function in this module. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260113,"byte_end":260185,"line_start":233,"line_end":233,"column_start":1,"column_end":73}},{"value":"/ represents a \"fused task and future\", storing all necessary pieces of a task","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260186,"byte_end":260266,"line_start":234,"line_end":234,"column_start":1,"column_end":81}},{"value":"/ and owning the top-level future that's being driven as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260267,"byte_end":260331,"line_start":235,"line_end":235,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260332,"byte_end":260335,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ A `Spawn` can be poll'd for completion or execution of the current thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260336,"byte_end":260413,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ can be blocked indefinitely until a notification arrives. This can be used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260414,"byte_end":260492,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ with either futures or streams, with different methods being available on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260493,"byte_end":260570,"line_start":239,"line_end":239,"column_start":1,"column_end":78}},{"value":"/ `Spawn` depending which is used.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260571,"byte_end":260607,"line_start":240,"line_end":240,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261213,"byte_end":261218,"line_start":257,"line_end":257,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task_impl::spawn","value":"pub fn spawn<T>(T) -> Spawn<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future or stream, returning it and the new task responsible for\n running it to completion.","sig":null,"attributes":[{"value":"/ Spawns a future or stream, returning it and the new task responsible for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260688,"byte_end":260764,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ running it to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260765,"byte_end":260794,"line_start":248,"line_end":248,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260795,"byte_end":260798,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This function is the termination endpoint for running futures. This method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260799,"byte_end":260877,"line_start":250,"line_end":250,"column_start":1,"column_end":79}},{"value":"/ will conceptually allocate a new task to run the given object, which is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260878,"byte_end":260953,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ normally either a `Future` or `Stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260954,"byte_end":260997,"line_start":252,"line_end":252,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":260998,"byte_end":261001,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ This function is similar to the `thread::spawn` function but does not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261002,"byte_end":261075,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ attempt to run code in the background. The future will not make progress","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261076,"byte_end":261152,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ until the methods on `Spawn` are called in turn.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261153,"byte_end":261205,"line_start":256,"line_end":256,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261445,"byte_end":261452,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spawn<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the object the Spawn is wrapping.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the object the Spawn is wrapping.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261370,"byte_end":261433,"line_start":266,"line_end":266,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261573,"byte_end":261580,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spawn<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the object the Spawn is wrapping.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the object the Spawn is wrapping.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261497,"byte_end":261561,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261698,"byte_end":261708,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spawn<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consume the Spawn, returning its inner object\n","sig":null,"attributes":[{"value":"/ Consume the Spawn, returning its inner object","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261637,"byte_end":261686,"line_start":276,"line_end":276,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261878,"byte_end":261892,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"poll_fn_notify","qualname":"<Spawn<T>>::poll_fn_notify","value":"pub fn poll_fn_notify<N, F, R>(&mut Self, &N, usize, F) -> R where\nF: FnOnce(&mut T) -> R, N: Clone + Into<NotifyHandle>","parent":null,"children":[],"decl_id":null,"docs":" Calls the provided closure, scheduling notifications to be sent to the\n `notify` argument.\n","sig":null,"attributes":[{"value":"/ Calls the provided closure, scheduling notifications to be sent to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261765,"byte_end":261839,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/ `notify` argument.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261844,"byte_end":261866,"line_start":282,"line_end":282,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263828,"byte_end":263846,"line_start":323,"line_end":323,"column_start":12,"column_end":30},"name":"poll_future_notify","qualname":"<Spawn<T>>::poll_future_notify","value":"pub fn poll_future_notify<N>(&mut Self, &N, usize) -> Poll<T::Item, T::Error>\nwhere N: Clone + Into<NotifyHandle>, T: Future","parent":null,"children":[],"decl_id":null,"docs":" Polls the internal future, scheduling notifications to be sent to the\n `notify` argument.","sig":null,"attributes":[{"value":"/ Polls the internal future, scheduling notifications to be sent to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262229,"byte_end":262302,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/ `notify` argument.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262307,"byte_end":262329,"line_start":295,"line_end":295,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262334,"byte_end":262337,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This method will poll the internal future, testing if it's completed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262342,"byte_end":262414,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ yet. The `notify` argument is used as a sink for notifications sent to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262419,"byte_end":262493,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ this future. That is, while the future is being polled, any call to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262498,"byte_end":262569,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ `task::current()` will return a handle that contains the `notify`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262574,"byte_end":262643,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ specified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262648,"byte_end":262662,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262667,"byte_end":262670,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ If this function returns `NotReady`, then the `notify` should have been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262675,"byte_end":262750,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ scheduled to receive a notification when poll can be called again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262755,"byte_end":262825,"line_start":304,"line_end":304,"column_start":5,"column_end":75}},{"value":"/ Otherwise if `Ready` or `Err` is returned, the `Spawn` task can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262830,"byte_end":262900,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ safely destroyed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262905,"byte_end":262926,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262931,"byte_end":262934,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Note that `notify` itself is passed as a shared reference, and is itself","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":262939,"byte_end":263015,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ not required to be a `NotifyHandle`. The `Clone` and `Into` trait bounds","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263020,"byte_end":263096,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ will be used to convert this `notify` to a `NotifyHandle` if necessary.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263101,"byte_end":263176,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ This construction can avoid an unnecessary atomic reference count bump","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263181,"byte_end":263255,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ in some situations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263260,"byte_end":263283,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263288,"byte_end":263291,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ## Unsafety and `id`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263296,"byte_end":263320,"line_start":314,"line_end":314,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263325,"byte_end":263328,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function and all other `*_notify` functions on this type will treat","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263333,"byte_end":263409,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ the `id` specified very carefully, explicitly calling functions like the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263414,"byte_end":263490,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ `notify` argument's `clone_id` and `drop_id` functions. It should be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263495,"byte_end":263567,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ safe to encode a pointer itself into the `id` specified, such as an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263572,"byte_end":263643,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/ `Arc<N>` or a `Box<N>`. The `clone_id` and `drop_id` functions are then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263648,"byte_end":263723,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ intended to be sufficient for the memory management related to that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263728,"byte_end":263799,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/ pointer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":263804,"byte_end":263816,"line_start":322,"line_end":322,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264196,"byte_end":264214,"line_start":333,"line_end":333,"column_start":12,"column_end":30},"name":"poll_stream_notify","qualname":"<Spawn<T>>::poll_stream_notify","value":"pub fn poll_stream_notify<N>(&mut Self, &N, usize)\n-> Poll<Option<T::Item>, T::Error> where N: Clone + Into<NotifyHandle>,\nT: Stream","parent":null,"children":[],"decl_id":null,"docs":" Like `poll_future_notify`, except polls the underlying stream.\n","sig":null,"attributes":[{"value":"/ Like `poll_future_notify`, except polls the underlying stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264118,"byte_end":264184,"line_start":332,"line_end":332,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264802,"byte_end":264819,"line_start":348,"line_end":348,"column_start":12,"column_end":29},"name":"start_send_notify","qualname":"<Spawn<T>>::start_send_notify","value":"pub fn start_send_notify<N>(&mut Self, T::SinkItem, &N, usize)\n-> StartSend<T::SinkItem, T::SinkError> where N: Clone + Into<NotifyHandle>,\nT: Sink","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `start_send` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `start_send` method with this task in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264527,"byte_end":264598,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264603,"byte_end":264606,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264611,"byte_end":264685,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264690,"byte_end":264765,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":264770,"byte_end":264790,"line_start":347,"line_end":347,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265472,"byte_end":265489,"line_start":364,"line_end":364,"column_start":12,"column_end":29},"name":"poll_flush_notify","qualname":"<Spawn<T>>::poll_flush_notify","value":"pub fn poll_flush_notify<N>(&mut Self, &N, usize) -> Poll<(), T::SinkError>\nwhere N: Clone + Into<NotifyHandle>, T: Sink","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `poll_complete` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `poll_complete` method with this task in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265194,"byte_end":265268,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265273,"byte_end":265276,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265281,"byte_end":265355,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265360,"byte_end":265435,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265440,"byte_end":265460,"line_start":363,"line_end":363,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":266067,"byte_end":266079,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"close_notify","qualname":"<Spawn<T>>::close_notify","value":"pub fn close_notify<N>(&mut Self, &N, usize) -> Poll<(), T::SinkError> where\nN: Clone + Into<NotifyHandle>, T: Sink","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `close` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `close` method with this task in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265797,"byte_end":265863,"line_start":374,"line_end":374,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265868,"byte_end":265871,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265876,"byte_end":265950,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":265955,"byte_end":266030,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":266035,"byte_end":266055,"line_start":378,"line_end":378,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267778,"byte_end":267784,"line_start":426,"line_end":426,"column_start":11,"column_end":17},"name":"Notify","qualname":"::task_impl::Notify","value":"Notify: Send + Sync","parent":null,"children":[{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225}],"decl_id":null,"docs":" A trait which represents a sink of notifications that a future is ready to\n make progress.","sig":null,"attributes":[{"value":"/ A trait which represents a sink of notifications that a future is ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":266927,"byte_end":267005,"line_start":411,"line_end":411,"column_start":1,"column_end":79}},{"value":"/ make progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267006,"byte_end":267024,"line_start":412,"line_end":412,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267025,"byte_end":267028,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ This trait is provided as an argument to the `Spawn::*_notify` family of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267029,"byte_end":267105,"line_start":414,"line_end":414,"column_start":1,"column_end":77}},{"value":"/ functions. It's transitively used as part of the `Task::notify` method to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267106,"byte_end":267183,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ internally deliver notifications of readiness of a future to move forward.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267184,"byte_end":267262,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267263,"byte_end":267266,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ An instance of `Notify` has one primary method, `notify`, which is given a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267267,"byte_end":267345,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/ contextual argument as to what's being notified. This contextual argument is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267346,"byte_end":267426,"line_start":419,"line_end":419,"column_start":1,"column_end":81}},{"value":"/ *also* provided to the `Spawn::*_notify` family of functions and can be used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267427,"byte_end":267507,"line_start":420,"line_end":420,"column_start":1,"column_end":81}},{"value":"/ to reuse an instance of `Notify` across many futures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267508,"byte_end":267565,"line_start":421,"line_end":421,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267566,"byte_end":267569,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Instances of `Notify` must be safe to share across threads, and the methods","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267570,"byte_end":267649,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/ be invoked concurrently. They must also live for the `'static` lifetime,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267650,"byte_end":267726,"line_start":424,"line_end":424,"column_start":1,"column_end":77}},{"value":"/ not containing any stack references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267727,"byte_end":267767,"line_start":425,"line_end":425,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268670,"byte_end":268676,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"notify","qualname":"::task_impl::Notify::notify","value":"pub fn notify(&Self, usize)","parent":{"krate":0,"index":3222},"children":[],"decl_id":null,"docs":" Indicates that an associated future and/or task are ready to make\n progress.","sig":null,"attributes":[{"value":"/ Indicates that an associated future and/or task are ready to make","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267804,"byte_end":267873,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ progress.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267878,"byte_end":267891,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267896,"byte_end":267899,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Typically this means that the receiver of the notification should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267904,"byte_end":267973,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ arrange for the future to get poll'd in a prompt fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267978,"byte_end":268039,"line_start":431,"line_end":431,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268044,"byte_end":268047,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This method takes an `id` as an argument which was transitively passed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268052,"byte_end":268126,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ in from the original call to `Spawn::*_notify`. This id can be used to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268131,"byte_end":268205,"line_start":434,"line_end":434,"column_start":5,"column_end":79}},{"value":"/ disambiguate which precise future became ready for polling.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268210,"byte_end":268273,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268278,"byte_end":268281,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268286,"byte_end":268298,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268303,"byte_end":268306,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Since `unpark` may be invoked from arbitrary contexts, it should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268311,"byte_end":268379,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ endeavor not to panic and to do as little work as possible. However, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268384,"byte_end":268459,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ is not guaranteed not to panic, and callers should be wary. If a panic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268464,"byte_end":268538,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ occurs, that panic may or may not be propagated to the end-user of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268543,"byte_end":268617,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ future that you'd otherwise wake up.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268622,"byte_end":268662,"line_start":443,"line_end":443,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269825,"byte_end":269833,"line_start":466,"line_end":466,"column_start":8,"column_end":16},"name":"clone_id","qualname":"::task_impl::Notify::clone_id","value":"pub fn clone_id(&Self, usize) -> usize","parent":{"krate":0,"index":3222},"children":[],"decl_id":null,"docs":" This function is called whenever a new copy of `id` is needed.","sig":null,"attributes":[{"value":"/ This function is called whenever a new copy of `id` is needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268701,"byte_end":268767,"line_start":446,"line_end":446,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268772,"byte_end":268775,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This is called in one of two situations:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268780,"byte_end":268824,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268829,"byte_end":268832,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ * A `Task` is being created through `task::current` while a future is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268837,"byte_end":268910,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/   being polled. In that case the instance of `Notify` passed in to one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268915,"byte_end":268989,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/   of the `poll_*` functions is called with the `id` passed into the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":268994,"byte_end":269070,"line_start":452,"line_end":452,"column_start":5,"column_end":81}},{"value":"/   `poll_*` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269075,"byte_end":269099,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/ * A `Task` is itself being cloned. Each `Task` contains its own id and a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269104,"byte_end":269180,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/   handle to the `Notify` behind it, and the task's `Notify` is used to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269185,"byte_end":269259,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/   clone the internal `id` to assign to the new task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269264,"byte_end":269320,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269325,"byte_end":269328,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The `id` returned here will be stored in the `Task`-to-be and used later","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269333,"byte_end":269409,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ to pass to `notify` when the `Task::notify` function is called on that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269414,"byte_end":269488,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ `Task`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269493,"byte_end":269504,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269509,"byte_end":269512,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Note that typically this is just the identity function, passing through","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269517,"byte_end":269592,"line_start":462,"line_end":462,"column_start":5,"column_end":80}},{"value":"/ the identifier. For more unsafe situations, however, if `id` is itself a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269597,"byte_end":269673,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ pointer of some kind this can be used as a hook to \"clone\" the pointer,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269678,"byte_end":269753,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/ depending on what that means for the specified pointer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269758,"byte_end":269817,"line_start":465,"line_end":465,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270335,"byte_end":270342,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"drop_id","qualname":"::task_impl::Notify::drop_id","value":"pub fn drop_id(&Self, usize)","parent":{"krate":0,"index":3222},"children":[],"decl_id":null,"docs":" All instances of `Task` store an `id` that they're going to internally\n notify with, and this function is called when the `Task` is dropped.","sig":null,"attributes":[{"value":"/ All instances of `Task` store an `id` that they're going to internally","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269885,"byte_end":269959,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ notify with, and this function is called when the `Task` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":269964,"byte_end":270036,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270041,"byte_end":270044,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This function provides a hook for schemes which encode pointers in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270049,"byte_end":270124,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/ `id` argument to deallocate resources associated with the pointer. It's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270129,"byte_end":270204,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ guaranteed that after this function is called the `Task` containing this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270209,"byte_end":270285,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ `id` will no longer use the `id`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270290,"byte_end":270327,"line_start":476,"line_end":476,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271523,"byte_end":271534,"line_start":503,"line_end":503,"column_start":8,"column_end":19},"name":"with_notify","qualname":"::task_impl::with_notify","value":"pub fn with_notify<F, T, R>(&T, usize, F) -> R where F: FnOnce() -> R,\nT: Clone + Into<NotifyHandle>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `NotifyHandle` of the current task for the duration of the provided\n closure.","sig":null,"attributes":[{"value":"/ Sets the `NotifyHandle` of the current task for the duration of the provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270390,"byte_end":270470,"line_start":482,"line_end":482,"column_start":1,"column_end":81}},{"value":"/ closure.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270471,"byte_end":270483,"line_start":483,"line_end":483,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270484,"byte_end":270487,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ This function takes a type that can be converted into a notify handle,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270488,"byte_end":270562,"line_start":485,"line_end":485,"column_start":1,"column_end":75}},{"value":"/ `notify` and `id`, and a closure `f`. The closure `f` will be executed such","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270563,"byte_end":270642,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/ that calls to `task::current()` will store a reference to the notify handle","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270643,"byte_end":270722,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/ provided, not the one previously in the environment.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270723,"byte_end":270779,"line_start":488,"line_end":488,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270780,"byte_end":270783,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `task::current()` in the closure provided *will not* be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270784,"byte_end":270862,"line_start":490,"line_end":490,"column_start":1,"column_end":79}},{"value":"/ equivalent to `task::current()` before this method is called. The two tasks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270863,"byte_end":270942,"line_start":491,"line_end":491,"column_start":1,"column_end":80}},{"value":"/ returned will notify different handles, and the task handles pulled out","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":270943,"byte_end":271018,"line_start":492,"line_end":492,"column_start":1,"column_end":76}},{"value":"/ during the duration of this closure will not notify the previous task. It's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271019,"byte_end":271098,"line_start":493,"line_end":493,"column_start":1,"column_end":80}},{"value":"/ recommended that you call `task::current()` in some capacity before calling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271099,"byte_end":271178,"line_start":494,"line_end":494,"column_start":1,"column_end":80}},{"value":"/ this function to ensure that calls to `task::current()` inside of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271179,"byte_end":271253,"line_start":495,"line_end":495,"column_start":1,"column_end":75}},{"value":"/ closure can transitively wake up the outer task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271254,"byte_end":271306,"line_start":496,"line_end":496,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271307,"byte_end":271310,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271311,"byte_end":271323,"line_start":498,"line_end":498,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271324,"byte_end":271327,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ This function will panic if it is called outside the context of a future's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271328,"byte_end":271406,"line_start":500,"line_end":500,"column_start":1,"column_end":79}},{"value":"/ task. This is only valid to call once you've already entered a future via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271407,"byte_end":271484,"line_start":501,"line_end":501,"column_start":1,"column_end":78}},{"value":"/ `Spawn::poll_*` functions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271485,"byte_end":271515,"line_start":502,"line_end":502,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":3232},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274493,"byte_end":274505,"line_start":566,"line_end":566,"column_start":18,"column_end":30},"name":"UnsafeNotify","qualname":"::task_impl::UnsafeNotify","value":"UnsafeNotify: Notify","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3234}],"decl_id":null,"docs":" An unsafe trait for implementing custom forms of memory management behind a\n `Task`.","sig":null,"attributes":[{"value":"/ An unsafe trait for implementing custom forms of memory management behind a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":271931,"byte_end":272010,"line_start":520,"line_end":520,"column_start":1,"column_end":80}},{"value":"/ `Task`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272011,"byte_end":272022,"line_start":521,"line_end":521,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272023,"byte_end":272026,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ The `futures` critically relies on \"notification handles\" to extract for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272027,"byte_end":272103,"line_start":523,"line_end":523,"column_start":1,"column_end":77}},{"value":"/ futures to contain and then later inform that they're ready to make","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272104,"byte_end":272175,"line_start":524,"line_end":524,"column_start":1,"column_end":72}},{"value":"/ progress. These handles, however, must be cheap to create and cheap","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272176,"byte_end":272247,"line_start":525,"line_end":525,"column_start":1,"column_end":72}},{"value":"/ to clone to ensure that this operation is efficient throughout the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272248,"byte_end":272318,"line_start":526,"line_end":526,"column_start":1,"column_end":71}},{"value":"/ execution of a program.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272319,"byte_end":272346,"line_start":527,"line_end":527,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272347,"byte_end":272350,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Typically this sort of memory management is done in the standard library","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272351,"byte_end":272427,"line_start":529,"line_end":529,"column_start":1,"column_end":77}},{"value":"/ with the `Arc` type. An `Arc` is relatively cheap to allocate an is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272428,"byte_end":272499,"line_start":530,"line_end":530,"column_start":1,"column_end":72}},{"value":"/ quite cheap to clone and pass around. Plus, it's 100% safe!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272500,"byte_end":272563,"line_start":531,"line_end":531,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272564,"byte_end":272567,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ When working outside the standard library, however, you don't always have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272568,"byte_end":272645,"line_start":533,"line_end":533,"column_start":1,"column_end":78}},{"value":"/ and `Arc` type available to you. This trait, `UnsafeNotify`, is intended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272646,"byte_end":272722,"line_start":534,"line_end":534,"column_start":1,"column_end":77}},{"value":"/ to be the \"unsafe version\" of the `Notify` trait. This trait encodes the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272723,"byte_end":272799,"line_start":535,"line_end":535,"column_start":1,"column_end":77}},{"value":"/ memory management operations of a `Task`'s notification handle, allowing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272800,"byte_end":272876,"line_start":536,"line_end":536,"column_start":1,"column_end":77}},{"value":"/ custom implementations for the memory management of a notification handle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272877,"byte_end":272955,"line_start":537,"line_end":537,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272956,"byte_end":272959,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ Put another way, the core notification type in this library,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":272960,"byte_end":273024,"line_start":539,"line_end":539,"column_start":1,"column_end":65}},{"value":"/ `NotifyHandle`, simply internally contains an instance of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273025,"byte_end":273086,"line_start":540,"line_end":540,"column_start":1,"column_end":62}},{"value":"/ `*mut UnsafeNotify`. This \"unsafe trait object\" is then used exclusively","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273087,"byte_end":273163,"line_start":541,"line_end":541,"column_start":1,"column_end":77}},{"value":"/ to operate with, dynamically dispatching calls to clone, drop, and notify.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273164,"byte_end":273242,"line_start":542,"line_end":542,"column_start":1,"column_end":79}},{"value":"/ Critically though as a raw pointer it doesn't require a particular form","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273243,"byte_end":273318,"line_start":543,"line_end":543,"column_start":1,"column_end":76}},{"value":"/ of memory management, allowing external implementations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273319,"byte_end":273379,"line_start":544,"line_end":544,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273380,"byte_end":273383,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ A default implementation of the `UnsafeNotify` trait is provided for the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273384,"byte_end":273460,"line_start":546,"line_end":546,"column_start":1,"column_end":77}},{"value":"/ `Arc` type in the standard library. If the `use_std` feature of this crate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273461,"byte_end":273539,"line_start":547,"line_end":547,"column_start":1,"column_end":79}},{"value":"/ is not available however, you'll be required to implement your own","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273540,"byte_end":273610,"line_start":548,"line_end":548,"column_start":1,"column_end":71}},{"value":"/ instance of this trait to pass it into `NotifyHandle::new`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273611,"byte_end":273674,"line_start":549,"line_end":549,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273675,"byte_end":273678,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273679,"byte_end":273693,"line_start":551,"line_end":551,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273694,"byte_end":273697,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ This trait is manually encoding the memory management of the underlying","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273698,"byte_end":273773,"line_start":553,"line_end":553,"column_start":1,"column_end":76}},{"value":"/ handle, and as a result is quite unsafe to implement! Implementors of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273774,"byte_end":273847,"line_start":554,"line_end":554,"column_start":1,"column_end":74}},{"value":"/ this trait must guarantee:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273848,"byte_end":273878,"line_start":555,"line_end":555,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273879,"byte_end":273882,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ * Calls to `clone_raw` produce uniquely owned handles. It should be safe","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273883,"byte_end":273959,"line_start":557,"line_end":557,"column_start":1,"column_end":77}},{"value":"/   to drop the current handle and have the returned handle still be valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":273960,"byte_end":274037,"line_start":558,"line_end":558,"column_start":1,"column_end":78}},{"value":"/ * Calls to `drop_raw` work with `self` as a raw pointer, deallocating","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274038,"byte_end":274111,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/   resources associated with it. This is a pretty unsafe operation as it's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274112,"byte_end":274189,"line_start":560,"line_end":560,"column_start":1,"column_end":78}},{"value":"/   invalidating the `self` pointer, so extreme care needs to be taken.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274190,"byte_end":274263,"line_start":561,"line_end":561,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274264,"byte_end":274267,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ In general it's recommended to review the trait documentation as well as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274268,"byte_end":274344,"line_start":563,"line_end":563,"column_start":1,"column_end":77}},{"value":"/ the implementation for `Arc` in this crate. When in doubt ping the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274345,"byte_end":274415,"line_start":564,"line_end":564,"column_start":1,"column_end":71}},{"value":"/ `futures` authors to clarify an unsafety question here.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274416,"byte_end":274475,"line_start":565,"line_end":565,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275320,"byte_end":275329,"line_start":582,"line_end":582,"column_start":15,"column_end":24},"name":"clone_raw","qualname":"::task_impl::UnsafeNotify::clone_raw","value":"pub unsafe fn clone_raw(&Self) -> NotifyHandle","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.","sig":null,"attributes":[{"value":"/ Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274520,"byte_end":274590,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274595,"byte_end":274598,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This function will create a new uniquely owned handle that under the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274603,"byte_end":274675,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ hood references the same notification instance. In other words calls","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274680,"byte_end":274752,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ to `notify` on the returned handle should be equivalent to calls to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274757,"byte_end":274828,"line_start":571,"line_end":571,"column_start":5,"column_end":76}},{"value":"/ `notify` on this handle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274833,"byte_end":274861,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274866,"byte_end":274869,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274874,"byte_end":274888,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274893,"byte_end":274896,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This trait is unsafe to implement, as are all these methods. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274901,"byte_end":274970,"line_start":576,"line_end":576,"column_start":5,"column_end":74}},{"value":"/ method is also unsafe to call as it's asserting the `UnsafeNotify`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274975,"byte_end":275045,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ value is in a consistent state. In general it's recommended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275050,"byte_end":275116,"line_start":578,"line_end":578,"column_start":5,"column_end":71}},{"value":"/ review the trait documentation as well as the implementation for `Arc`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275121,"byte_end":275195,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ in this crate. When in doubt ping the `futures` authors to clarify","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275200,"byte_end":275270,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ an unsafety question here.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275275,"byte_end":275305,"line_start":581,"line_end":581,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276386,"byte_end":276394,"line_start":607,"line_end":607,"column_start":15,"column_end":23},"name":"drop_raw","qualname":"::task_impl::UnsafeNotify::drop_raw","value":"pub unsafe fn drop_raw(&Self)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Drops this instance of `UnsafeNotify`, deallocating resources\n associated with it.","sig":null,"attributes":[{"value":"/ Drops this instance of `UnsafeNotify`, deallocating resources","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275359,"byte_end":275424,"line_start":584,"line_end":584,"column_start":5,"column_end":70}},{"value":"/ associated with it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275429,"byte_end":275452,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275457,"byte_end":275460,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have a signature such as:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275465,"byte_end":275521,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275526,"byte_end":275529,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275534,"byte_end":275547,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/ fn drop_raw(self: *mut Self);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275552,"byte_end":275585,"line_start":590,"line_end":590,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275590,"byte_end":275597,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275602,"byte_end":275605,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Unfortunately in Rust today that signature is not object safe.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275610,"byte_end":275676,"line_start":593,"line_end":593,"column_start":5,"column_end":71}},{"value":"/ Nevertheless it's recommended to implement this function *as if* that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275681,"byte_end":275754,"line_start":594,"line_end":594,"column_start":5,"column_end":78}},{"value":"/ were its signature. As such it is not safe to call on an invalid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275759,"byte_end":275827,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"/ pointer, nor is the validity of the pointer guaranteed after this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275832,"byte_end":275901,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ function returns.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275906,"byte_end":275927,"line_start":597,"line_end":597,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275932,"byte_end":275935,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275940,"byte_end":275954,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275959,"byte_end":275962,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ This trait is unsafe to implement, as are all these methods. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":275967,"byte_end":276036,"line_start":601,"line_end":601,"column_start":5,"column_end":74}},{"value":"/ method is also unsafe to call as it's asserting the `UnsafeNotify`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276041,"byte_end":276111,"line_start":602,"line_end":602,"column_start":5,"column_end":75}},{"value":"/ value is in a consistent state. In general it's recommended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276116,"byte_end":276182,"line_start":603,"line_end":603,"column_start":5,"column_end":71}},{"value":"/ review the trait documentation as well as the implementation for `Arc`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276187,"byte_end":276261,"line_start":604,"line_end":604,"column_start":5,"column_end":79}},{"value":"/ in this crate. When in doubt ping the `futures` authors to clarify","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276266,"byte_end":276336,"line_start":605,"line_end":605,"column_start":5,"column_end":75}},{"value":"/ an unsafety question here.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276341,"byte_end":276371,"line_start":606,"line_end":606,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277702,"byte_end":277714,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"NotifyHandle","qualname":"::task_impl::NotifyHandle","value":"NotifyHandle {  }","parent":null,"children":[{"krate":0,"index":3236}],"decl_id":null,"docs":" A `NotifyHandle` is the core value through which notifications are routed\n in the `futures` crate.","sig":null,"attributes":[{"value":"/ A `NotifyHandle` is the core value through which notifications are routed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276406,"byte_end":276483,"line_start":610,"line_end":610,"column_start":1,"column_end":78}},{"value":"/ in the `futures` crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276484,"byte_end":276511,"line_start":611,"line_end":611,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276512,"byte_end":276515,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ All instances of `Task` will contain a `NotifyHandle` handle internally.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276516,"byte_end":276592,"line_start":613,"line_end":613,"column_start":1,"column_end":77}},{"value":"/ This handle itself contains a trait object pointing to an instance of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276593,"byte_end":276670,"line_start":614,"line_end":614,"column_start":1,"column_end":78}},{"value":"/ `Notify` trait, allowing notifications to get routed through it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276671,"byte_end":276739,"line_start":615,"line_end":615,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276740,"byte_end":276743,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ The `NotifyHandle` type internally does not codify any particular memory","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276744,"byte_end":276820,"line_start":617,"line_end":617,"column_start":1,"column_end":77}},{"value":"/ management strategy. Internally it contains an instance of `*mut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276821,"byte_end":276889,"line_start":618,"line_end":618,"column_start":1,"column_end":69}},{"value":"/ UnsafeNotify`, and more details about that trait can be found on its own","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276890,"byte_end":276966,"line_start":619,"line_end":619,"column_start":1,"column_end":77}},{"value":"/ documentation. Consequently, though, the one constructor of this type,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":276967,"byte_end":277041,"line_start":620,"line_end":620,"column_start":1,"column_end":75}},{"value":"/ `NotifyHandle::new`, is `unsafe` to call. It is not recommended to call","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277042,"byte_end":277117,"line_start":621,"line_end":621,"column_start":1,"column_end":76}},{"value":"/ this constructor directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277118,"byte_end":277148,"line_start":622,"line_end":622,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277149,"byte_end":277152,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ If you're working with the standard library then it's recommended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277153,"byte_end":277225,"line_start":624,"line_end":624,"column_start":1,"column_end":73}},{"value":"/ work with the `Arc` type. If you have a struct, `T`, which implements the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277226,"byte_end":277303,"line_start":625,"line_end":625,"column_start":1,"column_end":78}},{"value":"/ `Notify` trait, then you can construct this with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277304,"byte_end":277356,"line_start":626,"line_end":626,"column_start":1,"column_end":53}},{"value":"/ `NotifyHandle::from(t: Arc<T>)`. The coercion to `UnsafeNotify` will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277357,"byte_end":277429,"line_start":627,"line_end":627,"column_start":1,"column_end":73}},{"value":"/ happen automatically and safely for you.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277430,"byte_end":277474,"line_start":628,"line_end":628,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277475,"byte_end":277478,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ When working externally from the standard library it's recommended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277479,"byte_end":277552,"line_start":630,"line_end":630,"column_start":1,"column_end":74}},{"value":"/ provide a similar safe constructor for your custom type as opposed to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277553,"byte_end":277626,"line_start":631,"line_end":631,"column_start":1,"column_end":74}},{"value":"/ recommending an invocation of `NotifyHandle::new` directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277627,"byte_end":277690,"line_start":632,"line_end":632,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278356,"byte_end":278359,"line_start":651,"line_end":651,"column_start":19,"column_end":22},"name":"new","qualname":"<NotifyHandle>::new","value":"pub unsafe fn new(*mut UnsafeNotify) -> NotifyHandle","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `NotifyHandle` directly.","sig":null,"attributes":[{"value":"/ Constructs a new `NotifyHandle` directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277849,"byte_end":277894,"line_start":641,"line_end":641,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277899,"byte_end":277902,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Note that most code will not need to call this. Implementers of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277907,"byte_end":277978,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/ `UnsafeNotify` trait will typically provide a wrapper that calls this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277983,"byte_end":278056,"line_start":644,"line_end":644,"column_start":5,"column_end":78}},{"value":"/ but you otherwise shouldn't call it directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278061,"byte_end":278110,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278115,"byte_end":278118,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ If you're working with the standard library then it's recommended to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278123,"byte_end":278195,"line_start":647,"line_end":647,"column_start":5,"column_end":77}},{"value":"/ use the `NotifyHandle::from` function instead which works with the safe","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278200,"byte_end":278275,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ `Arc` type and the safe `Notify` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278280,"byte_end":278323,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278328,"byte_end":278337,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278536,"byte_end":278542,"line_start":656,"line_end":656,"column_start":12,"column_end":18},"name":"notify","qualname":"<NotifyHandle>::notify","value":"pub fn notify(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying instance of `Notify` with the provided `id`.\n","sig":null,"attributes":[{"value":"/ Invokes the underlying instance of `Notify` with the provided `id`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278453,"byte_end":278524,"line_start":655,"line_end":655,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3306},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3319},{"krate":0,"index":3322},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3338}],"decl_id":null,"docs":" Tasks used to drive a future computation","sig":null,"attributes":[{"value":"/ Tasks used to drive a future computation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336633,"byte_end":336677,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336678,"byte_end":336681,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It's intended over time a particular operation (such as servicing an HTTP","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336682,"byte_end":336759,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ request) will involve many futures. This entire operation, however, can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336760,"byte_end":336838,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ thought of as one unit, as the entire result is essentially just moving","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336839,"byte_end":336914,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ through one large state machine.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336915,"byte_end":336951,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336952,"byte_end":336955,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ A \"task\" is the unit of abstraction for what is driving this state machine","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":336956,"byte_end":337034,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ and tree of futures forward. A task is used to poll futures and schedule","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337035,"byte_end":337111,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ futures with, and has utilities for sharing data between tasks and handles","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337112,"byte_end":337190,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for notifying when a future is ready. Each task also has its own set of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337191,"byte_end":337266,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ task-local data generated by `task_local!`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337267,"byte_end":337314,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337315,"byte_end":337318,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that libraries typically should not manage tasks themselves, but rather","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337319,"byte_end":337399,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ leave that to event loops and other \"executors\" (see the `executor` module),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337400,"byte_end":337480,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ or by using the `wait` method to create and execute a task directly on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337481,"byte_end":337559,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ current thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337560,"byte_end":337579,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337580,"byte_end":337583,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ More information about the task model can be found [online at tokio.rs].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337584,"byte_end":337660,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337661,"byte_end":337664,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [online at tokio.rs]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337665,"byte_end":337748,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337749,"byte_end":337752,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337753,"byte_end":337769,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337770,"byte_end":337773,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There is an important bare function in this module: `current`. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337774,"byte_end":337844,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ `current` function returns a handle to the currently running task, panicking","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337845,"byte_end":337925,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ if one isn't present. This handle is then used to later notify the task that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":337926,"byte_end":338006,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ it's ready to make progress through the `Task::notify` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task.rs","byte_start":338007,"byte_end":338073,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3369}],"decl_id":null,"docs":" Executors","sig":null,"attributes":[{"value":"/ Executors","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338722,"byte_end":338735,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338736,"byte_end":338739,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains tools for managing the raw execution of futures,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338740,"byte_end":338813,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ which is needed when building *executors* (places where futures can run).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338814,"byte_end":338891,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338892,"byte_end":338895,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ More information about executors can be [found online at tokio.rs][online].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338896,"byte_end":338975,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338976,"byte_end":338979,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/going-deeper-futures/tasks/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/executor.rs","byte_start":338980,"byte_end":339043,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3372},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3508},{"krate":0,"index":3797},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3915},{"krate":0,"index":3918},{"krate":0,"index":3921}],"decl_id":null,"docs":" Future-aware synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7322,"byte_end":7349,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ Future-aware synchronization","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339261,"byte_end":339293,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339294,"byte_end":339297,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module, which is modeled after `std::sync`, contains user-space","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339298,"byte_end":339370,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ synchronization tools that work with futures, streams and sinks. In","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339371,"byte_end":339442,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ particular, these synchronizers do *not* block physical OS threads, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339443,"byte_end":339518,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ instead work at the task level.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339519,"byte_end":339554,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339555,"byte_end":339558,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ More information and examples of how to use these synchronization primitives","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339559,"byte_end":339639,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ can be found [online at tokio.rs].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339640,"byte_end":339678,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339679,"byte_end":339682,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [online at tokio.rs]: https://tokio.rs/docs/going-deeper-futures/synchronization/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339683,"byte_end":339768,"line_start":11,"line_end":11,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":3373},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":6603},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6612},{"krate":0,"index":6615},{"krate":0,"index":6621},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":3435},{"krate":0,"index":3441},{"krate":0,"index":6624},{"krate":0,"index":6626},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6635},{"krate":0,"index":3444},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3452},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3464},{"krate":0,"index":3468},{"krate":0,"index":3472},{"krate":0,"index":3475},{"krate":0,"index":3479},{"krate":0,"index":3483},{"krate":0,"index":3489},{"krate":0,"index":3493},{"krate":0,"index":3497},{"krate":0,"index":3502},{"krate":0,"index":3505}],"decl_id":null,"docs":" A one-shot, futures-aware channel\n","sig":null,"attributes":[{"value":"/ A one-shot, futures-aware channel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":339891,"byte_end":339928,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6603},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340410,"byte_end":340418,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6605}],"decl_id":null,"docs":" A future representing the completion of a computation happening elsewhere in\n memory.","sig":null,"attributes":[{"value":"/ A future representing the completion of a computation happening elsewhere in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340180,"byte_end":340260,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ memory.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340261,"byte_end":340272,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340273,"byte_end":340276,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the `oneshot::channel` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340277,"byte_end":340332,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340333,"byte_end":340381,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6609},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340648,"byte_end":340654,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6611}],"decl_id":null,"docs":" Represents the completion half of a oneshot through which the result of a\n computation is signaled.","sig":null,"attributes":[{"value":"/ Represents the completion half of a oneshot through which the result of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340453,"byte_end":340530,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ computation is signaled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340531,"byte_end":340559,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340560,"byte_end":340563,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This is created by the `oneshot::channel` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":340564,"byte_end":340619,"line_start":27,"line_end":27,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343221,"byte_end":343228,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware, one-shot channel.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware, one-shot channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342433,"byte_end":342483,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342484,"byte_end":342487,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channels found in the standard library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342488,"byte_end":342566,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Two halves are returned, the first of which is a `Sender` handle, used to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342567,"byte_end":342644,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ signal the end of a computation and provide its value. The second half is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342645,"byte_end":342724,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ `Receiver` which implements the `Future` trait, resolving to the value that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342725,"byte_end":342804,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ was given to the `Sender` handle.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342805,"byte_end":342842,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342843,"byte_end":342846,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across threads/tasks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342847,"byte_end":342915,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342916,"byte_end":342919,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342920,"byte_end":342934,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342935,"byte_end":342938,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342939,"byte_end":342946,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342947,"byte_end":342967,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ use futures::sync::oneshot;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":342968,"byte_end":342999,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ use futures::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343000,"byte_end":343019,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343020,"byte_end":343023,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let (p, c) = oneshot::channel::<i32>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343024,"byte_end":343067,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343068,"byte_end":343071,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343072,"byte_end":343094,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/     c.map(|i| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343095,"byte_end":343114,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/         println!(\"got: {}\", i);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343115,"byte_end":343150,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/     }).wait();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343151,"byte_end":343169,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343170,"byte_end":343177,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343178,"byte_end":343181,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ p.send(3).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343182,"byte_end":343205,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343206,"byte_end":343213,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352074,"byte_end":352082,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"complete","qualname":"<Sender<T>>::complete","value":"pub fn complete(Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `send`\", since = \"0.1.11\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":351944,"byte_end":352003,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352027,"byte_end":352062,"line_start":325,"line_end":325,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352650,"byte_end":352654,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352136,"byte_end":352188,"line_start":330,"line_end":330,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352193,"byte_end":352196,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352201,"byte_end":352273,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ `Receiver`, that the value provided is the result of the computation this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352278,"byte_end":352355,"line_start":333,"line_end":333,"column_start":5,"column_end":82}},{"value":"/ represents.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352360,"byte_end":352375,"line_start":334,"line_end":334,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352380,"byte_end":352383,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352388,"byte_end":352460,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was deallocated before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352465,"byte_end":352539,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ this function was called, however, then `Err` is returned with the value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352544,"byte_end":352620,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352625,"byte_end":352638,"line_start":339,"line_end":339,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354013,"byte_end":354024,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"poll_cancel","qualname":"<Sender<T>>::poll_cancel","value":"pub fn poll_cancel(&mut Self) -> Poll<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether the `Receiver` this has\n paired with has gone away.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether the `Receiver` this has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352724,"byte_end":352794,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ paired with has gone away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352799,"byte_end":352829,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352834,"byte_end":352837,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352842,"byte_end":352917,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":352922,"byte_end":352995,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353000,"byte_end":353016,"line_start":349,"line_end":349,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353021,"byte_end":353024,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If `Ready` is returned then it means that the `Receiver` has disappeared","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353029,"byte_end":353105,"line_start":351,"line_end":351,"column_start":5,"column_end":81}},{"value":"/ and the result this `Sender` would otherwise produce should no longer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353110,"byte_end":353183,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ be produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353188,"byte_end":353204,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353209,"byte_end":353212,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then the `Receiver` is still alive and may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353217,"byte_end":353292,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ able to receive a message if sent. The current task, however, is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353297,"byte_end":353365,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a notification if the corresponding `Receiver` goes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353370,"byte_end":353446,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353451,"byte_end":353460,"line_start":358,"line_end":358,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353465,"byte_end":353468,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353473,"byte_end":353485,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353490,"byte_end":353493,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Like `Future::poll`, this function will panic if it's not called from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353498,"byte_end":353571,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ within the context of a task. In other words, this should only ever be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353576,"byte_end":353650,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ called from inside another future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353655,"byte_end":353693,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353698,"byte_end":353701,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ If `Ok(Ready)` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353706,"byte_end":353776,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353781,"byte_end":353855,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353860,"byte_end":353863,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If you're calling this function from a context that does not have a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353868,"byte_end":353939,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ task, then you can use the `is_canceled` API instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":353944,"byte_end":354001,"line_start":370,"line_end":370,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354813,"byte_end":354824,"line_start":388,"line_end":388,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has gone away.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354098,"byte_end":354163,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/ has gone away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354168,"byte_end":354186,"line_start":376,"line_end":376,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354191,"byte_end":354194,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354199,"byte_end":354274,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354279,"byte_end":354352,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354357,"byte_end":354373,"line_start":380,"line_end":380,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354378,"byte_end":354381,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this function is intended to *not* be used in the context of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354386,"byte_end":354462,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ future. If you're implementing a future you probably want to call the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354467,"byte_end":354540,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ `poll_cancel` function which will block the current task if the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354545,"byte_end":354612,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ cancellation hasn't happened yet. This can be useful when working on a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354617,"byte_end":354691,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ non-futures related thread, though, which would otherwise panic if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354696,"byte_end":354766,"line_start":386,"line_end":386,"column_start":5,"column_end":75}},{"value":"/ `poll_cancel` were called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354771,"byte_end":354801,"line_start":387,"line_end":387,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355127,"byte_end":355135,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::sync::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>`\n is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354976,"byte_end":355054,"line_start":399,"line_end":399,"column_start":1,"column_end":79}},{"value":"/ is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355055,"byte_end":355070,"line_start":400,"line_end":400,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355801,"byte_end":355806,"line_start":423,"line_end":423,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing sending any future messages.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing sending any future messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355405,"byte_end":355480,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355485,"byte_end":355488,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355493,"byte_end":355560,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. Once this method is called the normal `poll` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355565,"byte_end":355640,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ can be used to determine whether a message was actually sent or not. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355645,"byte_end":355720,"line_start":421,"line_end":421,"column_start":5,"column_end":80}},{"value":"/ `Canceled` is returned from `poll` then no message was sent.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355725,"byte_end":355789,"line_start":422,"line_end":422,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356345,"byte_end":356353,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355861,"byte_end":355928,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355933,"byte_end":355936,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Useful when a [`Context`](Context) is not available such as within a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355941,"byte_end":356013,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ `Drop` impl.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356018,"byte_end":356034,"line_start":430,"line_end":430,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356039,"byte_end":356042,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356047,"byte_end":356114,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356119,"byte_end":356122,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356127,"byte_end":356200,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ date) unless [`::close`](Receiver::close) has been called first.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356205,"byte_end":356273,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356278,"byte_end":356281,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356286,"byte_end":356333,"line_start":437,"line_end":437,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357225,"byte_end":357236,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::sync::oneshot::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":3463}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356692,"byte_end":356738,"line_start":458,"line_end":458,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356739,"byte_end":356742,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ This handle is a future representing the completion of a different future on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356743,"byte_end":356823,"line_start":460,"line_end":460,"column_start":1,"column_end":81}},{"value":"/ a separate executor. Created through the `oneshot::spawn` function this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356824,"byte_end":356899,"line_start":461,"line_end":461,"column_start":1,"column_end":76}},{"value":"/ handle will resolve when the future provided to `spawn` resolves on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356900,"byte_end":356975,"line_start":462,"line_end":462,"column_start":1,"column_end":76}},{"value":"/ `Executor` instance provided to that function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356976,"byte_end":357026,"line_start":463,"line_end":463,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357027,"byte_end":357030,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped then the future will automatically no longer be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357031,"byte_end":357108,"line_start":465,"line_end":465,"column_start":1,"column_end":78}},{"value":"/ polled and is scheduled to be dropped. This can be canceled with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357109,"byte_end":357181,"line_start":466,"line_end":466,"column_start":1,"column_end":73}},{"value":"/ `forget` function, however.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357182,"byte_end":357213,"line_start":467,"line_end":467,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357453,"byte_end":357460,"line_start":478,"line_end":478,"column_start":12,"column_end":19},"name":"Execute","qualname":"::sync::oneshot::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471}],"decl_id":null,"docs":" Type of future which `Execute` instances below must be able to spawn.\n","sig":null,"attributes":[{"value":"/ Type of future which `Execute` instances below must be able to spawn.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357368,"byte_end":357441,"line_start":477,"line_end":477,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358843,"byte_end":358848,"line_start":509,"line_end":509,"column_start":8,"column_end":13},"name":"spawn","qualname":"::sync::oneshot::spawn","value":"pub fn spawn<F, E>(F, &E) -> SpawnHandle<F::Item, F::Error> where F: Future,\nE: Executor<Execute<F>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `future` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the completion of the future.","sig":null,"attributes":[{"value":"/ Spawns a `future` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357546,"byte_end":357621,"line_start":483,"line_end":483,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the completion of the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357622,"byte_end":357687,"line_start":484,"line_end":484,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357688,"byte_end":357691,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a future that is a proxy for `future` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357692,"byte_end":357771,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/ When `future` completes on `executor` then the `SpawnHandle` will itself be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357772,"byte_end":357851,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/ resolved.  Internally `SpawnHandle` contains a `oneshot` channel and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357852,"byte_end":357927,"line_start":488,"line_end":488,"column_start":1,"column_end":76}},{"value":"/ thus safe to send across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357928,"byte_end":357965,"line_start":489,"line_end":489,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357966,"byte_end":357969,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ The `future` will be canceled if the `SpawnHandle` is dropped. If this is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":357970,"byte_end":358047,"line_start":491,"line_end":491,"column_start":1,"column_end":78}},{"value":"/ not desired then the `SpawnHandle::forget` function can be used to continue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358048,"byte_end":358127,"line_start":492,"line_end":492,"column_start":1,"column_end":80}},{"value":"/ running the future to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358128,"byte_end":358165,"line_start":493,"line_end":493,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358166,"byte_end":358169,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358170,"byte_end":358182,"line_start":495,"line_end":495,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358183,"byte_end":358186,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the instance of `Spawn` provided is unable to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358187,"byte_end":358264,"line_start":497,"line_end":497,"column_start":1,"column_end":78}},{"value":"/ spawn the `future` provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358265,"byte_end":358297,"line_start":498,"line_end":498,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358298,"byte_end":358301,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ If the provided instance of `Spawn` does not actually run `future` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358302,"byte_end":358375,"line_start":500,"line_end":500,"column_start":1,"column_end":74}},{"value":"/ completion, then the returned handle may panic when polled. Typically this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358376,"byte_end":358454,"line_start":501,"line_end":501,"column_start":1,"column_end":79}},{"value":"/ is not a problem, though, as most instances of `Spawn` will run futures to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358455,"byte_end":358533,"line_start":502,"line_end":502,"column_start":1,"column_end":79}},{"value":"/ completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358534,"byte_end":358549,"line_start":503,"line_end":503,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358550,"byte_end":358553,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ Note that the returned future will likely panic if the `futures` provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358554,"byte_end":358631,"line_start":505,"line_end":505,"column_start":1,"column_end":78}},{"value":"/ panics. If a future running on an executor panics that typically means that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358632,"byte_end":358711,"line_start":506,"line_end":506,"column_start":1,"column_end":80}},{"value":"/ the executor drops the future, which falls into the above case of not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358712,"byte_end":358785,"line_start":507,"line_end":507,"column_start":1,"column_end":74}},{"value":"/ running the future to completion essentially.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":358786,"byte_end":358835,"line_start":508,"line_end":508,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359562,"byte_end":359570,"line_start":529,"line_end":529,"column_start":8,"column_end":16},"name":"spawn_fn","qualname":"::sync::oneshot::spawn_fn","value":"pub fn spawn_fn<F, R, E>(F, &E) -> SpawnHandle<R::Item, R::Error> where\nF: FnOnce() -> R, R: IntoFuture, E: Executor<Execute<Lazy<F, R>>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a function `f` onto the `Spawn` instance provided `s`.","sig":null,"attributes":[{"value":"/ Spawns a function `f` onto the `Spawn` instance provided `s`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359248,"byte_end":359313,"line_start":524,"line_end":524,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359314,"byte_end":359317,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ For more information see the `spawn` function in this module. This function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359318,"byte_end":359397,"line_start":526,"line_end":526,"column_start":1,"column_end":80}},{"value":"/ is just a thin wrapper around `spawn` which will execute the closure on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359398,"byte_end":359477,"line_start":527,"line_end":527,"column_start":1,"column_end":80}},{"value":"/ executor provided and then complete the future that the closure returns.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359478,"byte_end":359554,"line_start":528,"line_end":528,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360112,"byte_end":360118,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"forget","qualname":"<SpawnHandle<T, E>>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop this future without canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drop this future without canceling the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359800,"byte_end":359861,"line_start":538,"line_end":538,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359866,"byte_end":359869,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ When `SpawnHandle` is dropped, the spawned future will be canceled as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359874,"byte_end":359947,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ well if the future hasn't already resolved. This function can be used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359952,"byte_end":360025,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ when to drop this future but keep executing the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360030,"byte_end":360100,"line_start":542,"line_end":542,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3589},{"krate":0,"index":6651},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":6663},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":6666},{"krate":0,"index":6669},{"krate":0,"index":6672},{"krate":0,"index":6676},{"krate":0,"index":6679},{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6688},{"krate":0,"index":6692},{"krate":0,"index":6694},{"krate":0,"index":6697},{"krate":0,"index":6700},{"krate":0,"index":6703},{"krate":0,"index":6705},{"krate":0,"index":6709},{"krate":0,"index":6711},{"krate":0,"index":6714},{"krate":0,"index":6722},{"krate":0,"index":6725},{"krate":0,"index":6727},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3637},{"krate":0,"index":3640},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":6736},{"krate":0,"index":6744},{"krate":0,"index":6747},{"krate":0,"index":6750},{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":3660},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3693},{"krate":0,"index":3701},{"krate":0,"index":3706},{"krate":0,"index":3713},{"krate":0,"index":3721},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3737},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3753},{"krate":0,"index":3758},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":3774},{"krate":0,"index":3778},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3795},{"krate":0,"index":3796}],"decl_id":null,"docs":" A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.","sig":null,"attributes":[{"value":"/ A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":361933,"byte_end":362017,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362018,"byte_end":362021,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A channel can be used as a communication primitive between tasks running on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362022,"byte_end":362101,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ `futures-rs` executors. Channel creation provides `Receiver` and `Sender`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362102,"byte_end":362179,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ handles. `Receiver` implements `Stream` and allows a task to read values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362180,"byte_end":362256,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ out of the channel. If there is no message to read from the channel, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362257,"byte_end":362333,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ current task will be notified when a new value is sent. `Sender` implements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362334,"byte_end":362413,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the `Sink` trait and allows a task to send messages into the channel. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362414,"byte_end":362490,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ the channel is at capacity, then send will be rejected and the task will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362491,"byte_end":362570,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ notified when additional capacity is available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362571,"byte_end":362622,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362623,"byte_end":362626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362627,"byte_end":362646,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362647,"byte_end":362650,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When all `Sender` handles have been dropped, it is no longer possible to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362651,"byte_end":362727,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ send values into the channel. This is considered the termination event of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362728,"byte_end":362805,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the stream. As such, `Sender::poll` will return `Ok(Ready(None))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362806,"byte_end":362876,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362877,"byte_end":362880,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the receiver handle is dropped, then messages can no longer be read out","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362881,"byte_end":362959,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ of the channel. In this case, a `send` will result in an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":362960,"byte_end":363027,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363028,"byte_end":363031,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363032,"byte_end":363052,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363053,"byte_end":363056,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is simply dropped, then it is possible for there to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363057,"byte_end":363133,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ messages still in the channel that will not be processed. As such, it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363134,"byte_end":363210,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ usually desirable to perform a \"clean\" shutdown. To do this, the receiver","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363211,"byte_end":363288,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ will first call `close`, which will prevent any further messages to be sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363289,"byte_end":363368,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ into the channel. Then, the receiver consumes the channel to completion, at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363369,"byte_end":363448,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ which point the receiver can be dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":363449,"byte_end":363493,"line_start":28,"line_end":28,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6651},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366118,"byte_end":366124,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":365973,"byte_end":366040,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366041,"byte_end":366044,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366045,"byte_end":366089,"line_start":91,"line_end":91,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366733,"byte_end":366748,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366586,"byte_end":366653,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366654,"byte_end":366657,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366658,"byte_end":366704,"line_start":109,"line_end":109,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6666},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367133,"byte_end":367141,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6668}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366854,"byte_end":366925,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366926,"byte_end":366929,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366930,"byte_end":367010,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367011,"byte_end":367082,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367083,"byte_end":367104,"line_start":121,"line_end":121,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6672},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367457,"byte_end":367474,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::UnboundedReceiver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367176,"byte_end":367247,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367248,"byte_end":367251,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367252,"byte_end":367332,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367333,"byte_end":367404,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/ `unbounded` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367405,"byte_end":367428,"line_start":131,"line_end":131,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6679},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367620,"byte_end":367629,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of a channel is\n dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of a channel is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367493,"byte_end":367564,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ dropped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367565,"byte_end":367576,"line_start":136,"line_end":136,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6697},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367721,"byte_end":367733,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::sync::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":6699}],"decl_id":null,"docs":" Error type returned from `try_send`\n","sig":null,"attributes":[{"value":"/ Error type returned from `try_send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367638,"byte_end":367677,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368467,"byte_end":368477,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368390,"byte_end":368455,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369362,"byte_end":369369,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the channel being full\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the channel being full","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369282,"byte_end":369350,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369611,"byte_end":369626,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the receiver being dropped\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the receiver being dropped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369527,"byte_end":369599,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369869,"byte_end":369879,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369792,"byte_end":369857,"line_start":229,"line_end":229,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372886,"byte_end":372893,"line_start":335,"line_end":335,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372113,"byte_end":372187,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372188,"byte_end":372209,"line_start":323,"line_end":323,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372210,"byte_end":372213,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372214,"byte_end":372291,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372292,"byte_end":372366,"line_start":326,"line_end":326,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372367,"byte_end":372443,"line_start":327,"line_end":327,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372444,"byte_end":372516,"line_start":328,"line_end":328,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372517,"byte_end":372595,"line_start":329,"line_end":329,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372596,"byte_end":372675,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372676,"byte_end":372724,"line_start":331,"line_end":331,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372725,"byte_end":372728,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372729,"byte_end":372808,"line_start":333,"line_end":333,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":372809,"byte_end":372878,"line_start":334,"line_end":334,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373827,"byte_end":373836,"line_start":354,"line_end":354,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::sync::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n unbounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373157,"byte_end":373231,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ unbounded capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373232,"byte_end":373255,"line_start":343,"line_end":343,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373256,"byte_end":373259,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373260,"byte_end":373337,"line_start":345,"line_end":345,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. A `send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373338,"byte_end":373416,"line_start":346,"line_end":346,"column_start":1,"column_end":79}},{"value":"/ on this channel will always succeed as long as the receive half has not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373417,"byte_end":373492,"line_start":347,"line_end":347,"column_start":1,"column_end":76}},{"value":"/ been closed. If the receiver falls behind, messages will be buffered","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373493,"byte_end":373565,"line_start":348,"line_end":348,"column_start":1,"column_end":73}},{"value":"/ internally.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373566,"byte_end":373581,"line_start":349,"line_end":349,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373582,"byte_end":373585,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373586,"byte_end":373665,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373666,"byte_end":373742,"line_start":352,"line_end":352,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":373743,"byte_end":373819,"line_start":353,"line_end":353,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":375198,"byte_end":375206,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<T>` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<T>` without blocking.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374667,"byte_end":374735,"line_start":392,"line_end":392,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374740,"byte_end":374743,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This function, unlike `start_send`, is safe to call whether it's being","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374748,"byte_end":374822,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ called on a task or not. Note that this function, however, will *not*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374827,"byte_end":374900,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ attempt to block the current task if the message cannot be sent.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374905,"byte_end":374973,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374978,"byte_end":374981,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374986,"byte_end":375058,"line_start":398,"line_end":398,"column_start":5,"column_end":77}},{"value":"/ only from an external thread where you've otherwise arranged to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":375063,"byte_end":375133,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ notified when the channel is no longer full.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":375138,"byte_end":375186,"line_start":400,"line_end":400,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":382033,"byte_end":382043,"line_start":594,"line_end":594,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self) -> Poll<(), SendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed to be capacity to send at least one\n item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed to be capacity to send at least one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381537,"byte_end":381630,"line_start":584,"line_end":584,"column_start":5,"column_end":98}},{"value":"/ item without waiting.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381635,"byte_end":381660,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381665,"byte_end":381668,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::Ready(_))` if there is sufficient capacity, or returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381673,"byte_end":381750,"line_start":587,"line_end":587,"column_start":5,"column_end":82}},{"value":"/ `Ok(Async::NotReady)` if the channel is not guaranteed to have capacity. Returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381755,"byte_end":381839,"line_start":588,"line_end":588,"column_start":5,"column_end":89}},{"value":"/ `Err(SendError(_))` if the receiver has been dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381844,"byte_end":381901,"line_start":589,"line_end":589,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381906,"byte_end":381909,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381914,"byte_end":381926,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381931,"byte_end":381934,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This method will panic if called from outside the context of a task or future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":381939,"byte_end":382021,"line_start":593,"line_end":593,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":382356,"byte_end":382365,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":382275,"byte_end":382344,"line_start":603,"line_end":603,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384661,"byte_end":384670,"line_start":674,"line_end":674,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384580,"byte_end":384649,"line_start":673,"line_end":673,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385058,"byte_end":385062,"line_start":685,"line_end":685,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384726,"byte_end":384776,"line_start":678,"line_end":678,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384781,"byte_end":384784,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384789,"byte_end":384864,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384869,"byte_end":384945,"line_start":681,"line_end":681,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384950,"byte_end":384971,"line_start":682,"line_end":682,"column_start":5,"column_end":26}},{"value":"deprecated(note = \"renamed to `unbounded_send`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384976,"byte_end":385027,"line_start":683,"line_end":683,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385409,"byte_end":385423,"line_start":694,"line_end":694,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385152,"byte_end":385202,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385207,"byte_end":385210,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385215,"byte_end":385290,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385295,"byte_end":385371,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385376,"byte_end":385397,"line_start":693,"line_end":693,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":388195,"byte_end":388200,"line_start":796,"line_end":796,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":387993,"byte_end":388022,"line_start":792,"line_end":792,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":388027,"byte_end":388030,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":388035,"byte_end":388110,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":388115,"byte_end":388183,"line_start":795,"line_end":795,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395133,"byte_end":395138,"line_start":994,"line_end":994,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":394931,"byte_end":394960,"line_start":990,"line_end":990,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":394965,"byte_end":394968,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":394973,"byte_end":395048,"line_start":992,"line_end":992,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395053,"byte_end":395121,"line_start":993,"line_end":993,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395826,"byte_end":395837,"line_start":1017,"line_end":1017,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::sync::mpsc::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395347,"byte_end":395393,"line_start":1008,"line_end":1008,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395394,"byte_end":395397,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ This handle is a stream that proxies a stream on a separate `Executor`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395398,"byte_end":395473,"line_start":1010,"line_end":1010,"column_start":1,"column_end":76}},{"value":"/ Created through the `mpsc::spawn` function, this handle will produce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395474,"byte_end":395546,"line_start":1011,"line_end":1011,"column_start":1,"column_end":73}},{"value":"/ the same values as the proxied stream, as they are produced in the executor,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395547,"byte_end":395627,"line_start":1012,"line_end":1012,"column_start":1,"column_end":81}},{"value":"/ and uses a limited buffer to exert back-pressure on the remote stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395628,"byte_end":395702,"line_start":1013,"line_end":1013,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395703,"byte_end":395706,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped, then the stream will no longer be polled and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395707,"byte_end":395785,"line_start":1015,"line_end":1015,"column_start":1,"column_end":79}},{"value":"/ scheduled to be dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395786,"byte_end":395814,"line_start":1016,"line_end":1016,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396026,"byte_end":396033,"line_start":1023,"line_end":1023,"column_start":12,"column_end":19},"name":"Execute","qualname":"::sync::mpsc::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761}],"decl_id":null,"docs":" Type of future which `Executor` instances must be able to execute for `spawn`.\n","sig":null,"attributes":[{"value":"/ Type of future which `Executor` instances must be able to execute for `spawn`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395932,"byte_end":396014,"line_start":1022,"line_end":1022,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396970,"byte_end":396975,"line_start":1045,"line_end":1045,"column_start":8,"column_end":13},"name":"spawn","qualname":"::sync::mpsc::spawn","value":"pub fn spawn<S, E>(S, &E, usize) -> SpawnHandle<S::Item, S::Error> where\nS: Stream, E: Executor<Execute<S>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396193,"byte_end":396268,"line_start":1028,"line_end":1028,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396269,"byte_end":396323,"line_start":1029,"line_end":1029,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396324,"byte_end":396327,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396328,"byte_end":396394,"line_start":1031,"line_end":1031,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396395,"byte_end":396398,"line_start":1032,"line_end":1032,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396399,"byte_end":396478,"line_start":1033,"line_end":1033,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396479,"byte_end":396551,"line_start":1034,"line_end":1034,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396552,"byte_end":396593,"line_start":1035,"line_end":1035,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396594,"byte_end":396597,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ At most `buffer + 1` elements will be buffered at a time. If the buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396598,"byte_end":396673,"line_start":1037,"line_end":1037,"column_start":1,"column_end":76}},{"value":"/ is full, then `stream` will stop progressing until more space is available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396674,"byte_end":396753,"line_start":1038,"line_end":1038,"column_start":1,"column_end":80}},{"value":"/ This allows the `SpawnHandle` to exert backpressure on the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396754,"byte_end":396826,"line_start":1039,"line_end":1039,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396827,"byte_end":396830,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396831,"byte_end":396843,"line_start":1041,"line_end":1041,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396844,"byte_end":396847,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396848,"byte_end":396928,"line_start":1043,"line_end":1043,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":396929,"byte_end":396962,"line_start":1044,"line_end":1044,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398280,"byte_end":398295,"line_start":1079,"line_end":1079,"column_start":8,"column_end":23},"name":"spawn_unbounded","qualname":"::sync::mpsc::spawn_unbounded","value":"pub fn spawn_unbounded<S, E>(S, &E) -> SpawnHandle<S::Item, S::Error> where\nS: Stream, E: Executor<Execute<S>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream, with unbounded buffering.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397433,"byte_end":397508,"line_start":1061,"line_end":1061,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream, with unbounded buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397509,"byte_end":397589,"line_start":1062,"line_end":1062,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397590,"byte_end":397593,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397594,"byte_end":397660,"line_start":1064,"line_end":1064,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397661,"byte_end":397664,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397665,"byte_end":397744,"line_start":1066,"line_end":1066,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397745,"byte_end":397817,"line_start":1067,"line_end":1067,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397818,"byte_end":397859,"line_start":1068,"line_end":1068,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397860,"byte_end":397863,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ An unbounded buffer is used, which means that values will be buffered as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397864,"byte_end":397940,"line_start":1070,"line_end":1070,"column_start":1,"column_end":77}},{"value":"/ fast as `stream` can produce them, without any backpressure. Therefore, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":397941,"byte_end":398019,"line_start":1071,"line_end":1071,"column_start":1,"column_end":79}},{"value":"/ `stream` is an infinite stream, it can use an unbounded amount of memory, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398020,"byte_end":398101,"line_start":1072,"line_end":1072,"column_start":1,"column_end":82}},{"value":"/ potentially hog CPU resources.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398102,"byte_end":398136,"line_start":1073,"line_end":1073,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398137,"byte_end":398140,"line_start":1074,"line_end":1074,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398141,"byte_end":398153,"line_start":1075,"line_end":1075,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398154,"byte_end":398157,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398158,"byte_end":398238,"line_start":1077,"line_end":1077,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398239,"byte_end":398272,"line_start":1078,"line_end":1078,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6765},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407871,"byte_end":407877,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"BiLock","qualname":"::sync::bilock::BiLock","value":"BiLock {  }","parent":null,"children":[{"krate":0,"index":6767}],"decl_id":null,"docs":" A type of futures-powered synchronization primitive which is a mutex between\n two possible owners.","sig":null,"attributes":[{"value":"/ A type of futures-powered synchronization primitive which is a mutex between","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":406820,"byte_end":406900,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ two possible owners.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":406901,"byte_end":406925,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":406926,"byte_end":406929,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This primitive is not as generic as a full-blown mutex but is sufficient for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":406930,"byte_end":407010,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ many use cases where there are only two possible owners of a resource. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407011,"byte_end":407089,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ implementation of `BiLock` can be more optimized for just the two possible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407090,"byte_end":407168,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ owners.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407169,"byte_end":407180,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407181,"byte_end":407184,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that it's possible to use this lock through a poll-style interface with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407185,"byte_end":407265,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ the `poll_lock` method but you can also use it as a future with the `lock`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407266,"byte_end":407344,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ method that consumes a `BiLock` and returns a future that will resolve when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407345,"byte_end":407424,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ it's locked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407425,"byte_end":407441,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407442,"byte_end":407445,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A `BiLock` is typically used for \"split\" operations where data which serves","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407446,"byte_end":407525,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ two purposes wants to be split into two to be worked with separately. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407526,"byte_end":407603,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ example a TCP stream could be both a reader and a writer or a framing layer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407604,"byte_end":407683,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ could be both a stream and a sink for messages. A `BiLock` enables splitting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407684,"byte_end":407764,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ these two and then using each independently in a futures-powered fashion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":407765,"byte_end":407842,"line_start":32,"line_end":32,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408393,"byte_end":408396,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<BiLock<T>>::new","value":"pub fn new(T) -> (BiLock<T>, BiLock<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BiLock` protecting the provided data.","sig":null,"attributes":[{"value":"/ Creates a new `BiLock` protecting the provided data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408117,"byte_end":408173,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408178,"byte_end":408181,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Two handles to the lock are returned, and these are the only two handles","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408186,"byte_end":408262,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ that will ever be available to the lock. These can then be sent to separate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408267,"byte_end":408346,"line_start":51,"line_end":51,"column_start":5,"column_end":84}},{"value":"/ tasks to be managed there.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408351,"byte_end":408381,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409501,"byte_end":409510,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"poll_lock","qualname":"<BiLock<T>>::poll_lock","value":"pub fn poll_lock(&Self) -> Async<BiLockGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire this lock, returning `NotReady` if it can't be\n acquired.","sig":null,"attributes":[{"value":"/ Attempt to acquire this lock, returning `NotReady` if it can't be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408644,"byte_end":408713,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408718,"byte_end":408731,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408736,"byte_end":408739,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function will acquire the lock in a nonblocking fashion, returning","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408744,"byte_end":408819,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ immediately if the lock is already held. If the lock is successfully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408824,"byte_end":408896,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ acquired then `Async::Ready` is returned with a value that represents","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408901,"byte_end":408974,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ the locked value (and can be used to access the protected data). The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408979,"byte_end":409051,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ lock is unlocked when the returned `BiLockGuard` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409056,"byte_end":409120,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409125,"byte_end":409128,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If the lock is already held then this function will return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409133,"byte_end":409195,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ `Async::NotReady`. In this case the current task will also be scheduled","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409200,"byte_end":409275,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ to receive a notification when the lock would otherwise become","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409280,"byte_end":409346,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/ available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409351,"byte_end":409365,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409370,"byte_end":409373,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409378,"byte_end":409390,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409395,"byte_end":409398,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409403,"byte_end":409475,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":409480,"byte_end":409489,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411777,"byte_end":411781,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"lock","qualname":"<BiLock<T>>::lock","value":"pub fn lock(Self) -> BiLockAcquire<T>","parent":null,"children":[],"decl_id":null,"docs":" Perform a \"blocking lock\" of this lock, consuming this lock handle and\n returning a future to the acquired lock.","sig":null,"attributes":[{"value":"/ Perform a \"blocking lock\" of this lock, consuming this lock handle and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411316,"byte_end":411390,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ returning a future to the acquired lock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411395,"byte_end":411439,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411444,"byte_end":411447,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function consumes the `BiLock<T>` and returns a sentinel future,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411452,"byte_end":411525,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ `BiLockAcquire<T>`. The returned future will resolve to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411530,"byte_end":411589,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/ `BiLockAcquired<T>` which represents a locked lock similarly to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411594,"byte_end":411661,"line_start":127,"line_end":127,"column_start":5,"column_end":72}},{"value":"/ `BiLockGuard<T>`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411666,"byte_end":411687,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411692,"byte_end":411695,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that the returned future will never resolve to an error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411700,"byte_end":411765,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":412099,"byte_end":412106,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"reunite","qualname":"<BiLock<T>>::reunite","value":"pub fn reunite(Self, Self) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `BiLock<T>` back together and\n recover the original value. Succeeds only if the two `BiLock<T>`s\n originated from the same call to `BiLock::new`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `BiLock<T>` back together and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411886,"byte_end":411957,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ recover the original value. Succeeds only if the two `BiLock<T>`s","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":411962,"byte_end":412031,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ originated from the same call to `BiLock::new`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":412036,"byte_end":412087,"line_start":139,"line_end":139,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413443,"byte_end":413455,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::sync::bilock::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two `BiLock<T>`s were not two halves of a whole, and\n thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two `BiLock<T>`s were not two halves of a whole, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413324,"byte_end":413397,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/ thus could not be `reunite`d.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413398,"byte_end":413431,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413459,"byte_end":413472,"line_start":184,"line_end":184,"column_start":28,"column_end":41},"name":"0","qualname":"::sync::bilock::ReuniteError::0","value":"sync::bilock::BiLock<T>","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413474,"byte_end":413487,"line_start":184,"line_end":184,"column_start":43,"column_end":56},"name":"1","qualname":"::sync::bilock::ReuniteError::1","value":"sync::bilock::BiLock<T>","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6778},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414282,"byte_end":414293,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"BiLockGuard","qualname":"::sync::bilock::BiLockGuard","value":"BiLockGuard {  }","parent":null,"children":[{"krate":0,"index":6781}],"decl_id":null,"docs":" Returned RAII guard from the `poll_lock` method.","sig":null,"attributes":[{"value":"/ Returned RAII guard from the `poll_lock` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414027,"byte_end":414079,"line_start":206,"line_end":206,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414080,"byte_end":414083,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ This structure acts as a sentinel to the data in the `BiLock<T>` itself,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414084,"byte_end":414160,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ implementing `Deref` and `DerefMut` to `T`. When dropped, the lock will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414161,"byte_end":414239,"line_start":209,"line_end":209,"column_start":1,"column_end":79}},{"value":"/ unlocked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414240,"byte_end":414253,"line_start":210,"line_end":210,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414893,"byte_end":414906,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"BiLockAcquire","qualname":"::sync::bilock::BiLockAcquire","value":"BiLockAcquire {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":" Future returned by `BiLock::lock` which will resolve when the lock is\n acquired.\n","sig":null,"attributes":[{"value":"/ Future returned by `BiLock::lock` which will resolve when the lock is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414777,"byte_end":414850,"line_start":235,"line_end":235,"column_start":1,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414851,"byte_end":414864,"line_start":236,"line_end":236,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6792},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415742,"byte_end":415756,"line_start":264,"line_end":264,"column_start":12,"column_end":26},"name":"BiLockAcquired","qualname":"::sync::bilock::BiLockAcquired","value":"BiLockAcquired {  }","parent":null,"children":[{"krate":0,"index":6794}],"decl_id":null,"docs":" Resolved value of the `BiLockAcquire<T>` future.","sig":null,"attributes":[{"value":"/ Resolved value of the `BiLockAcquire<T>` future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415405,"byte_end":415457,"line_start":257,"line_end":257,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415458,"byte_end":415461,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This value, like `BiLockGuard<T>`, is a sentinel to the value `T` through","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415462,"byte_end":415539,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ implementations of `Deref` and `DerefMut`. When dropped will unlock the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415540,"byte_end":415615,"line_start":260,"line_end":260,"column_start":1,"column_end":76}},{"value":"/ lock, and the original unlocked `BiLock<T>` can be recovered through the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415616,"byte_end":415692,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ `unlock` method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415693,"byte_end":415713,"line_start":262,"line_end":262,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415898,"byte_end":415904,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"unlock","qualname":"<BiLockAcquired<T>>::unlock","value":"pub fn unlock(Self) -> BiLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Recovers the original `BiLock<T>`, unlocking this lock.\n","sig":null,"attributes":[{"value":"/ Recovers the original `BiLock<T>`, unlocking this lock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415827,"byte_end":415886,"line_start":269,"line_end":269,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3924},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unsync","qualname":"::unsync","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":4108}],"decl_id":null,"docs":" Future-aware single-threaded synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7364,"byte_end":7391,"line_start":211,"line_end":211,"column_start":1,"column_end":28}},{"value":"/ Future-aware single-threaded synchronization","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416554,"byte_end":416602,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416603,"byte_end":416606,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains similar abstractions to `sync`, for communications","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416607,"byte_end":416682,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ between tasks on the same thread only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416683,"byte_end":416725,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::unsync::mpsc","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3968},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":3984},{"krate":0,"index":3987},{"krate":0,"index":3990},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3998},{"krate":0,"index":6798},{"krate":0,"index":6804},{"krate":0,"index":6807},{"krate":0,"index":6810},{"krate":0,"index":4000},{"krate":0,"index":4003},{"krate":0,"index":4006},{"krate":0,"index":4013},{"krate":0,"index":6813},{"krate":0,"index":6816},{"krate":0,"index":6819},{"krate":0,"index":6827},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4024},{"krate":0,"index":6830},{"krate":0,"index":6834},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4037},{"krate":0,"index":4045},{"krate":0,"index":6837},{"krate":0,"index":6841},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4057},{"krate":0,"index":4059},{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4075},{"krate":0,"index":4080},{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4096},{"krate":0,"index":4100},{"krate":0,"index":4105}],"decl_id":null,"docs":" A multi-producer, single-consumer, futures-aware, FIFO queue with back\n pressure, for use communicating between tasks on the same thread.","sig":null,"attributes":[{"value":"/ A multi-producer, single-consumer, futures-aware, FIFO queue with back","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":416759,"byte_end":416833,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ pressure, for use communicating between tasks on the same thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":416834,"byte_end":416903,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":416904,"byte_end":416907,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ These queues are the same as those in `futures::sync`, except they're not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":416908,"byte_end":416985,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ intended to be sent across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":416986,"byte_end":417025,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417743,"byte_end":417750,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"channel","qualname":"::unsync::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded in-memory channel with buffered storage.","sig":null,"attributes":[{"value":"/ Creates a bounded in-memory channel with buffered storage.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417364,"byte_end":417426,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417427,"byte_end":417430,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This method creates concrete implementations of the `Stream` and `Sink`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417431,"byte_end":417506,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ traits which can be used to communicate a stream of values between tasks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417507,"byte_end":417583,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ with backpressure. The channel capacity is exactly `buffer`. On average,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417584,"byte_end":417660,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ sending a message through this channel performs no dynamic allocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":417661,"byte_end":417735,"line_start":27,"line_end":27,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":6807},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418508,"byte_end":418514,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Sender","qualname":"::unsync::mpsc::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6809}],"decl_id":null,"docs":" The transmission end of a channel.","sig":null,"attributes":[{"value":"/ The transmission end of a channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418390,"byte_end":418428,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418429,"byte_end":418432,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418433,"byte_end":418479,"line_start":54,"line_end":54,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6813},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":420714,"byte_end":420722,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::unsync::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6815}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":420563,"byte_end":420634,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":420635,"byte_end":420638,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":420639,"byte_end":420685,"line_start":128,"line_end":128,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421225,"byte_end":421230,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421023,"byte_end":421052,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421057,"byte_end":421060,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421065,"byte_end":421140,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421145,"byte_end":421213,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6830},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422985,"byte_end":423000,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::unsync::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422854,"byte_end":422903,"line_start":202,"line_end":202,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422904,"byte_end":422907,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422908,"byte_end":422956,"line_start":204,"line_end":204,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424283,"byte_end":424287,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423951,"byte_end":424001,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424006,"byte_end":424009,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424014,"byte_end":424089,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424094,"byte_end":424170,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424175,"byte_end":424196,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"deprecated(note = \"renamed to `unbounded_send`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424201,"byte_end":424252,"line_start":252,"line_end":252,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424634,"byte_end":424648,"line_start":263,"line_end":263,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424377,"byte_end":424427,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424432,"byte_end":424435,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424440,"byte_end":424515,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424520,"byte_end":424596,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":424601,"byte_end":424622,"line_start":262,"line_end":262,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6837},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425198,"byte_end":425215,"line_start":282,"line_end":282,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::unsync::mpsc::UnboundedReceiver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The receiving end of an unbounded channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425070,"byte_end":425116,"line_start":278,"line_end":278,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425117,"byte_end":425120,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425121,"byte_end":425169,"line_start":280,"line_end":280,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425471,"byte_end":425476,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425269,"byte_end":425298,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425303,"byte_end":425306,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425311,"byte_end":425386,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425391,"byte_end":425459,"line_start":288,"line_end":288,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425855,"byte_end":425864,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::unsync::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded in-memory channel with buffered storage.","sig":null,"attributes":[{"value":"/ Creates an unbounded in-memory channel with buffered storage.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425703,"byte_end":425768,"line_start":303,"line_end":303,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425769,"byte_end":425772,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Identical semantics to `channel`, except with no limit to buffer size.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425773,"byte_end":425847,"line_start":305,"line_end":305,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4059},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426108,"byte_end":426117,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"SendError","qualname":"::unsync::mpsc::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of a channel is\n dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of a channel is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426013,"byte_end":426084,"line_start":311,"line_end":311,"column_start":1,"column_end":72}},{"value":"/ dropped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426085,"byte_end":426096,"line_start":312,"line_end":312,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426724,"byte_end":426734,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426647,"byte_end":426712,"line_start":336,"line_end":336,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4075},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427251,"byte_end":427262,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::unsync::mpsc::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":4078},{"krate":0,"index":4079}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426772,"byte_end":426818,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426819,"byte_end":426822,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ This handle is a stream that proxies a stream on a separate `Executor`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426823,"byte_end":426898,"line_start":344,"line_end":344,"column_start":1,"column_end":76}},{"value":"/ Created through the `mpsc::spawn` function, this handle will produce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426899,"byte_end":426971,"line_start":345,"line_end":345,"column_start":1,"column_end":73}},{"value":"/ the same values as the proxied stream, as they are produced in the executor,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426972,"byte_end":427052,"line_start":346,"line_end":346,"column_start":1,"column_end":81}},{"value":"/ and uses a limited buffer to exert back-pressure on the remote stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427053,"byte_end":427127,"line_start":347,"line_end":347,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427128,"byte_end":427131,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped, then the stream will no longer be polled and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427132,"byte_end":427210,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/ scheduled to be dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427211,"byte_end":427239,"line_start":350,"line_end":350,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4080},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427454,"byte_end":427461,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"Execute","qualname":"::unsync::mpsc::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083}],"decl_id":null,"docs":" Type of future which `Executor` instances must be able to execute for `spawn`.\n","sig":null,"attributes":[{"value":"/ Type of future which `Executor` instances must be able to execute for `spawn`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427360,"byte_end":427442,"line_start":356,"line_end":356,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428398,"byte_end":428403,"line_start":379,"line_end":379,"column_start":8,"column_end":13},"name":"spawn","qualname":"::unsync::mpsc::spawn","value":"pub fn spawn<S, E>(S, &E, usize) -> SpawnHandle<S::Item, S::Error> where\nS: Stream, E: Executor<Execute<S>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427621,"byte_end":427696,"line_start":362,"line_end":362,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427697,"byte_end":427751,"line_start":363,"line_end":363,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427752,"byte_end":427755,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427756,"byte_end":427822,"line_start":365,"line_end":365,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427823,"byte_end":427826,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427827,"byte_end":427906,"line_start":367,"line_end":367,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427907,"byte_end":427979,"line_start":368,"line_end":368,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":427980,"byte_end":428021,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428022,"byte_end":428025,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ At most `buffer + 1` elements will be buffered at a time. If the buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428026,"byte_end":428101,"line_start":371,"line_end":371,"column_start":1,"column_end":76}},{"value":"/ is full, then `stream` will stop progressing until more space is available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428102,"byte_end":428181,"line_start":372,"line_end":372,"column_start":1,"column_end":80}},{"value":"/ This allows the `SpawnHandle` to exert backpressure on the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428182,"byte_end":428254,"line_start":373,"line_end":373,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428255,"byte_end":428258,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428259,"byte_end":428271,"line_start":375,"line_end":375,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428272,"byte_end":428275,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428276,"byte_end":428356,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428357,"byte_end":428390,"line_start":378,"line_end":378,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":4087},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429863,"byte_end":429878,"line_start":415,"line_end":415,"column_start":8,"column_end":23},"name":"spawn_unbounded","qualname":"::unsync::mpsc::spawn_unbounded","value":"pub fn spawn_unbounded<S, E>(S, &E) -> SpawnHandle<S::Item, S::Error> where\nS: Stream, E: Executor<Execute<S>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream, with unbounded buffering.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428864,"byte_end":428939,"line_start":395,"line_end":395,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream, with unbounded buffering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":428940,"byte_end":429020,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429021,"byte_end":429024,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429025,"byte_end":429091,"line_start":398,"line_end":398,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429092,"byte_end":429095,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429096,"byte_end":429175,"line_start":400,"line_end":400,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429176,"byte_end":429248,"line_start":401,"line_end":401,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429249,"byte_end":429290,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429291,"byte_end":429294,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ An unbounded buffer is used, which means that values will be buffered as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429295,"byte_end":429371,"line_start":404,"line_end":404,"column_start":1,"column_end":77}},{"value":"/ fast as `stream` can produce them, without any backpressure. Therefore, if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429372,"byte_end":429450,"line_start":405,"line_end":405,"column_start":1,"column_end":79}},{"value":"/ `stream` is an infinite stream, it can use an unbounded amount of memory, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429451,"byte_end":429532,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ potentially hog CPU resources. In particular, if `stream` is infinite","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429533,"byte_end":429606,"line_start":407,"line_end":407,"column_start":1,"column_end":74}},{"value":"/ and doesn't ever yield (by returning `Async::NotReady` from `poll`), it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429607,"byte_end":429682,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/ will result in an infinite loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429683,"byte_end":429719,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429720,"byte_end":429723,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429724,"byte_end":429736,"line_start":411,"line_end":411,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429737,"byte_end":429740,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429741,"byte_end":429821,"line_start":413,"line_end":413,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":429822,"byte_end":429855,"line_start":414,"line_end":414,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::unsync::oneshot","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4113},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4123},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4140},{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":6844},{"krate":0,"index":6847},{"krate":0,"index":6850},{"krate":0,"index":6853},{"krate":0,"index":6856},{"krate":0,"index":6864},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":6867},{"krate":0,"index":6872},{"krate":0,"index":4161},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4185},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4197},{"krate":0,"index":4201},{"krate":0,"index":4207},{"krate":0,"index":4211},{"krate":0,"index":4216}],"decl_id":null,"docs":" A one-shot, futures-aware channel","sig":null,"attributes":[{"value":"/ A one-shot, futures-aware channel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431575,"byte_end":431612,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431613,"byte_end":431616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This channel is similar to that in `sync::oneshot` but cannot be sent across","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431617,"byte_end":431697,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431698,"byte_end":431710,"line_start":4,"line_end":4,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432071,"byte_end":432078,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"channel","qualname":"::unsync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware, one-shot channel.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware, one-shot channel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431884,"byte_end":431934,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431935,"byte_end":431938,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is the same as `sync::oneshot::channel` except that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":431939,"byte_end":432012,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ returned values cannot be sent across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432013,"byte_end":432063,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6844},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432702,"byte_end":432708,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Sender","qualname":"::unsync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6846}],"decl_id":null,"docs":" Represents the completion half of a oneshot through which the result of a\n computation is signaled.","sig":null,"attributes":[{"value":"/ Represents the completion half of a oneshot through which the result of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432384,"byte_end":432461,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ computation is signaled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432462,"byte_end":432490,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432491,"byte_end":432494,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unsync::oneshot::channel` function and is equivalent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432495,"byte_end":432575,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ in functionality to `sync::oneshot::Sender` except that it cannot be sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432576,"byte_end":432653,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432654,"byte_end":432673,"line_start":38,"line_end":38,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6850},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433108,"byte_end":433116,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::unsync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6852}],"decl_id":null,"docs":" A future representing the completion of a computation happening elsewhere in\n memory.","sig":null,"attributes":[{"value":"/ A future representing the completion of a computation happening elsewhere in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432753,"byte_end":432833,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ memory.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432834,"byte_end":432845,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432846,"byte_end":432849,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unsync::oneshot::channel` function and is equivalent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432850,"byte_end":432930,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ in functionality to `sync::oneshot::Receiver` except that it cannot be sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":432931,"byte_end":433010,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433011,"byte_end":433030,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433048,"byte_end":433096,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433924,"byte_end":433928,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433410,"byte_end":433462,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433467,"byte_end":433470,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433475,"byte_end":433547,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ `Receiver`, that the error provided is the result of the computation this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433552,"byte_end":433629,"line_start":75,"line_end":75,"column_start":5,"column_end":82}},{"value":"/ represents.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433634,"byte_end":433649,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433654,"byte_end":433657,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433662,"byte_end":433734,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was deallocated before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433739,"byte_end":433813,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ this function was called, however, then `Err` is returned with the value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433818,"byte_end":433894,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433899,"byte_end":433912,"line_start":81,"line_end":81,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435102,"byte_end":435113,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"poll_cancel","qualname":"<Sender<T>>::poll_cancel","value":"pub fn poll_cancel(&mut Self) -> Poll<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether the `Receiver` this has\n paired with has gone away.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether the `Receiver` this has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434142,"byte_end":434212,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ paired with has gone away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434217,"byte_end":434247,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434252,"byte_end":434255,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434260,"byte_end":434335,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434340,"byte_end":434413,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ from `complete`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434418,"byte_end":434438,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434443,"byte_end":434446,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Like `Future::poll`, this function will panic if it's not called from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434451,"byte_end":434524,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ within the context of a task. In other words, this should only ever be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434529,"byte_end":434603,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ called from inside another future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434608,"byte_end":434646,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434651,"byte_end":434654,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If `Ready` is returned then it means that the `Receiver` has disappeared","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434659,"byte_end":434735,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ and the result this `Sender` would otherwise produce should no longer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434740,"byte_end":434813,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ be produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434818,"byte_end":434834,"line_start":104,"line_end":104,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434839,"byte_end":434842,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then the `Receiver` is still alive and may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434847,"byte_end":434922,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ able to receive a message if sent. The current task, however, is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":434927,"byte_end":434995,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a notification if the corresponding `Receiver` goes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435000,"byte_end":435076,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435081,"byte_end":435090,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436098,"byte_end":436109,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has gone away.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435383,"byte_end":435448,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"/ has gone away.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435453,"byte_end":435471,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435476,"byte_end":435479,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435484,"byte_end":435559,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435564,"byte_end":435637,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435642,"byte_end":435658,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435663,"byte_end":435666,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function is intended to *not* be used in the context of a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435671,"byte_end":435747,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ future. If you're implementing a future you probably want to call the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435752,"byte_end":435825,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ `poll_cancel` function which will block the current task if the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435830,"byte_end":435897,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ cancellation hasn't happened yet. This can be useful when working on a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435902,"byte_end":435976,"line_start":130,"line_end":130,"column_start":5,"column_end":79}},{"value":"/ non-futures related thread, though, which would otherwise panic if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":435981,"byte_end":436051,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ `poll_cancel` were called.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436056,"byte_end":436086,"line_start":132,"line_end":132,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":437011,"byte_end":437016,"line_start":162,"line_end":162,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing sending any future messages.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing sending any future messages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436615,"byte_end":436690,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436695,"byte_end":436698,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436703,"byte_end":436770,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. Once this method is called the normal `poll` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436775,"byte_end":436850,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ can be used to determine whether a message was actually sent or not. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436855,"byte_end":436930,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ `Canceled` is returned from `poll` then no message was sent.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436935,"byte_end":436999,"line_start":161,"line_end":161,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4180},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439127,"byte_end":439138,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::unsync::oneshot::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438594,"byte_end":438640,"line_start":216,"line_end":216,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438641,"byte_end":438644,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This handle is a future representing the completion of a different future on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438645,"byte_end":438725,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/ a separate executor. Created through the `oneshot::spawn` function this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438726,"byte_end":438801,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"/ handle will resolve when the future provided to `spawn` resolves on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438802,"byte_end":438877,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/ `Executor` instance provided to that function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438878,"byte_end":438928,"line_start":221,"line_end":221,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438929,"byte_end":438932,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped then the future will automatically no longer be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438933,"byte_end":439010,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ polled and is scheduled to be dropped. This can be canceled with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439011,"byte_end":439083,"line_start":224,"line_end":224,"column_start":1,"column_end":73}},{"value":"/ `forget` function, however.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439084,"byte_end":439115,"line_start":225,"line_end":225,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439299,"byte_end":439306,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"Execute","qualname":"::unsync::oneshot::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":" Type of future which `Spawn` instances below must be able to spawn.\n","sig":null,"attributes":[{"value":"/ Type of future which `Spawn` instances below must be able to spawn.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439216,"byte_end":439287,"line_start":231,"line_end":231,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440438,"byte_end":440443,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"spawn","qualname":"::unsync::oneshot::spawn","value":"pub fn spawn<F, E>(F, &E) -> SpawnHandle<F::Item, F::Error> where F: Future,\nE: Executor<Execute<F>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `future` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the completion of the future.","sig":null,"attributes":[{"value":"/ Spawns a `future` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439423,"byte_end":439498,"line_start":238,"line_end":238,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the completion of the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439499,"byte_end":439564,"line_start":239,"line_end":239,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439565,"byte_end":439568,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a future that is a proxy for `future` itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439569,"byte_end":439648,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/ When `future` completes on `executor` then the `SpawnHandle` will itself be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439649,"byte_end":439728,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ resolved.  Internally `SpawnHandle` contains a `oneshot` channel and is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439729,"byte_end":439804,"line_start":243,"line_end":243,"column_start":1,"column_end":76}},{"value":"/ thus not safe to send across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439805,"byte_end":439846,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439847,"byte_end":439850,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The `future` will be canceled if the `SpawnHandle` is dropped. If this is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439851,"byte_end":439928,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ not desired then the `SpawnHandle::forget` function can be used to continue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":439929,"byte_end":440008,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/ running the future to completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440009,"byte_end":440046,"line_start":248,"line_end":248,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440047,"byte_end":440050,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440051,"byte_end":440063,"line_start":250,"line_end":250,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440064,"byte_end":440067,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the instance of `Spawn` provided is unable to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440068,"byte_end":440145,"line_start":252,"line_end":252,"column_start":1,"column_end":78}},{"value":"/ spawn the `future` provided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440146,"byte_end":440178,"line_start":253,"line_end":253,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440179,"byte_end":440182,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If the provided instance of `Spawn` does not actually run `future` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440183,"byte_end":440256,"line_start":255,"line_end":255,"column_start":1,"column_end":74}},{"value":"/ completion, then the returned handle may panic when polled. Typically this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440257,"byte_end":440335,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"/ is not a problem, though, as most instances of `Spawn` will run futures to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440336,"byte_end":440414,"line_start":257,"line_end":257,"column_start":1,"column_end":79}},{"value":"/ completion.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440415,"byte_end":440430,"line_start":258,"line_end":258,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441178,"byte_end":441186,"line_start":281,"line_end":281,"column_start":8,"column_end":16},"name":"spawn_fn","qualname":"::unsync::oneshot::spawn_fn","value":"pub fn spawn_fn<F, R, E>(F, &E) -> SpawnHandle<R::Item, R::Error> where\nF: FnOnce() -> R, R: IntoFuture, E: Executor<Execute<Lazy<F, R>>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a function `f` onto the `Spawn` instance provided `s`.","sig":null,"attributes":[{"value":"/ Spawns a function `f` onto the `Spawn` instance provided `s`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440864,"byte_end":440929,"line_start":276,"line_end":276,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440930,"byte_end":440933,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ For more information see the `spawn` function in this module. This function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":440934,"byte_end":441013,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ is just a thin wrapper around `spawn` which will execute the closure on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441014,"byte_end":441093,"line_start":279,"line_end":279,"column_start":1,"column_end":80}},{"value":"/ executor provided and then complete the future that the closure returns.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441094,"byte_end":441170,"line_start":280,"line_end":280,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441728,"byte_end":441734,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"forget","qualname":"<SpawnHandle<T, E>>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop this future without canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drop this future without canceling the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441416,"byte_end":441477,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441482,"byte_end":441485,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When `SpawnHandle` is dropped, the spawned future will be canceled as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441490,"byte_end":441563,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ well if the future hasn't already resolved. This function can be used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441568,"byte_end":441641,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ when to drop this future but keep executing the underlying future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441646,"byte_end":441716,"line_start":294,"line_end":294,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":4219},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9162,"byte_end":9169,"line_start":261,"line_end":261,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","parent":null,"children":[{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4242}],"decl_id":null,"docs":" A \"prelude\" for crates using the `futures` crate.","sig":null,"attributes":[{"value":"/ A \"prelude\" for crates using the `futures` crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8611,"byte_end":8664,"line_start":248,"line_end":248,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8665,"byte_end":8668,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8669,"byte_end":8745,"line_start":250,"line_end":250,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8746,"byte_end":8823,"line_start":251,"line_end":251,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually. An example of using this is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8824,"byte_end":8905,"line_start":252,"line_end":252,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8906,"byte_end":8909,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8910,"byte_end":8917,"line_start":254,"line_end":254,"column_start":1,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8918,"byte_end":8946,"line_start":255,"line_end":255,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8947,"byte_end":8954,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8955,"byte_end":8958,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ We may add items to this over time as they become ubiquitous as well, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":8959,"byte_end":9036,"line_start":258,"line_end":258,"column_start":1,"column_end":78}},{"value":"/ otherwise this should help cut down on futures-related imports when you're","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9037,"byte_end":9115,"line_start":259,"line_end":259,"column_start":1,"column_end":79}},{"value":"/ working with the `futures` crate!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":9116,"byte_end":9153,"line_start":260,"line_end":260,"column_start":1,"column_end":38}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10391,"byte_end":10396,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11040,"byte_end":11045,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11658,"byte_end":11667,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56808,"byte_end":56813,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":58150,"byte_end":58154,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":58816,"byte_end":58820,"line_start":74,"line_end":74,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59836,"byte_end":59842,"line_start":36,"line_end":36,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61829,"byte_end":61841,"line_start":68,"line_end":68,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":62051,"byte_end":62063,"line_start":77,"line_end":77,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64465,"byte_end":64471,"line_start":84,"line_end":84,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/option.rs","byte_start":65011,"byte_end":65017,"line_start":5,"line_end":5,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65900,"byte_end":65907,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66708,"byte_end":66715,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":67200,"byte_end":67207,"line_start":35,"line_end":35,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":68118,"byte_end":68131,"line_start":17,"line_end":17,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":68958,"byte_end":68971,"line_start":52,"line_end":52,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71225,"byte_end":71229,"line_start":22,"line_end":22,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71641,"byte_end":71645,"line_start":34,"line_end":34,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/into_stream.rs","byte_start":72469,"byte_end":72479,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":77300,"byte_end":77309,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78398,"byte_end":78401,"line_start":22,"line_end":22,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":79316,"byte_end":79322,"line_start":22,"line_end":22,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":80228,"byte_end":80235,"line_start":24,"line_end":24,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":81121,"byte_end":81127,"line_start":23,"line_end":23,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":82512,"byte_end":82518,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":83719,"byte_end":83729,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84565,"byte_end":84572,"line_start":20,"line_end":20,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85937,"byte_end":85941,"line_start":23,"line_end":23,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86522,"byte_end":86528,"line_start":13,"line_end":13,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86934,"byte_end":86940,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":87284,"byte_end":87290,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":88103,"byte_end":88110,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/chain.rs","byte_start":88739,"byte_end":88744,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843426,"byte_end":12843437,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12844062,"byte_end":12844078,"line_start":44,"line_end":44,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844878,"byte_end":12844885,"line_start":29,"line_end":29,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846523,"byte_end":12846530,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12849340,"byte_end":12849349,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851602,"byte_end":12851610,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12854020,"byte_end":12854026,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855205,"byte_end":12855211,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12856717,"byte_end":12856723,"line_start":122,"line_end":122,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4911},{"krate":0,"index":4912},{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12857613,"byte_end":12857618,"line_start":150,"line_end":150,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12858971,"byte_end":12858977,"line_start":196,"line_end":196,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859232,"byte_end":12859238,"line_start":207,"line_end":207,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4929}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859419,"byte_end":12859427,"line_start":214,"line_end":214,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859846,"byte_end":12859851,"line_start":227,"line_end":227,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859976,"byte_end":12859981,"line_start":233,"line_end":233,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860105,"byte_end":12860110,"line_start":239,"line_end":239,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860536,"byte_end":12860546,"line_start":257,"line_end":257,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4941},{"krate":0,"index":4942}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860839,"byte_end":12860850,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4945},{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860969,"byte_end":12860980,"line_start":280,"line_end":280,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4949}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12861132,"byte_end":12861143,"line_start":288,"line_end":288,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4952},{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15779,"byte_end":15782,"line_start":108,"line_end":108,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52305,"byte_end":52306,"line_start":1052,"line_end":1052,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52471,"byte_end":52477,"line_start":1062,"line_end":1062,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55352,"byte_end":55364,"line_start":1143,"line_end":1143,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55851,"byte_end":55863,"line_start":1163,"line_end":1163,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133337,"byte_end":133341,"line_start":36,"line_end":36,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134571,"byte_end":134577,"line_start":39,"line_end":39,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135818,"byte_end":135828,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":137214,"byte_end":137220,"line_start":44,"line_end":44,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138053,"byte_end":138060,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138976,"byte_end":138983,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":139443,"byte_end":139450,"line_start":77,"line_end":77,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":141101,"byte_end":141106,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142336,"byte_end":142343,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142767,"byte_end":142774,"line_start":37,"line_end":37,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143689,"byte_end":143695,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":144147,"byte_end":144153,"line_start":89,"line_end":89,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":145019,"byte_end":145029,"line_start":127,"line_end":127,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146974,"byte_end":146979,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147628,"byte_end":147634,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148507,"byte_end":148513,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148967,"byte_end":148973,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150000,"byte_end":150009,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150882,"byte_end":150891,"line_start":51,"line_end":51,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":151348,"byte_end":151357,"line_start":70,"line_end":70,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152432,"byte_end":152439,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153306,"byte_end":153313,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153770,"byte_end":153777,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":155522,"byte_end":155526,"line_start":42,"line_end":42,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157663,"byte_end":157670,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158812,"byte_end":158819,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159657,"byte_end":159664,"line_start":51,"line_end":51,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":160061,"byte_end":160068,"line_start":65,"line_end":65,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160962,"byte_end":160966,"line_start":17,"line_end":17,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161502,"byte_end":161506,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161877,"byte_end":161881,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163396,"byte_end":163408,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":165117,"byte_end":165129,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166231,"byte_end":166238,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":167111,"byte_end":167118,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":167581,"byte_end":167588,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168479,"byte_end":168489,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169362,"byte_end":169372,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169835,"byte_end":169845,"line_start":68,"line_end":68,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170595,"byte_end":170598,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171471,"byte_end":171474,"line_start":51,"line_end":51,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171931,"byte_end":171934,"line_start":70,"line_end":70,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172691,"byte_end":172697,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173570,"byte_end":173576,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":174033,"byte_end":174039,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175402,"byte_end":175407,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177495,"byte_end":177499,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178484,"byte_end":178490,"line_start":31,"line_end":31,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178965,"byte_end":178971,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180540,"byte_end":180548,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181013,"byte_end":181021,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181306,"byte_end":181314,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182882,"byte_end":182888,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183831,"byte_end":183837,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185552,"byte_end":185556,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186423,"byte_end":186427,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186875,"byte_end":186879,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188006,"byte_end":188015,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188925,"byte_end":188934,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":189418,"byte_end":189427,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191123,"byte_end":191127,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191994,"byte_end":191998,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":192455,"byte_end":192459,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193659,"byte_end":193668,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194578,"byte_end":194587,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":195071,"byte_end":195080,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196951,"byte_end":196955,"line_start":31,"line_end":31,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":197431,"byte_end":197435,"line_start":50,"line_end":50,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200747,"byte_end":200753,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":203123,"byte_end":203126,"line_start":29,"line_end":29,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204873,"byte_end":204880,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":206653,"byte_end":206660,"line_start":78,"line_end":78,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862032,"byte_end":12862040,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862813,"byte_end":12862821,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863795,"byte_end":12863803,"line_start":78,"line_end":78,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5499},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12864292,"byte_end":12864300,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":5507},{"krate":0,"index":5508}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866113,"byte_end":12866128,"line_start":22,"line_end":22,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866793,"byte_end":12866808,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867722,"byte_end":12867737,"line_start":75,"line_end":75,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12868948,"byte_end":12868963,"line_start":112,"line_end":112,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12870115,"byte_end":12870126,"line_start":33,"line_end":33,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12871307,"byte_end":12871323,"line_start":64,"line_end":64,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12872410,"byte_end":12872416,"line_start":37,"line_end":37,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5626},{"krate":0,"index":5627},{"krate":0,"index":5628}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12872863,"byte_end":12872869,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873858,"byte_end":12873864,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12876132,"byte_end":12876139,"line_start":27,"line_end":27,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5662}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12876266,"byte_end":12876273,"line_start":33,"line_end":33,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5667}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877316,"byte_end":12877320,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678},{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12878261,"byte_end":12878265,"line_start":47,"line_end":47,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5685}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880380,"byte_end":12880389,"line_start":57,"line_end":57,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5729}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880582,"byte_end":12880591,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880751,"byte_end":12880760,"line_start":71,"line_end":71,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5737}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880909,"byte_end":12880917,"line_start":80,"line_end":80,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881327,"byte_end":12881333,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881704,"byte_end":12881716,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882245,"byte_end":12882256,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5789}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882631,"byte_end":12882642,"line_start":21,"line_end":21,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883018,"byte_end":12883027,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883494,"byte_end":12883503,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884713,"byte_end":12884725,"line_start":87,"line_end":87,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5815}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884915,"byte_end":12884927,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5818}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12885117,"byte_end":12885129,"line_start":101,"line_end":101,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5821}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887528,"byte_end":12887544,"line_start":53,"line_end":53,"column_start":31,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887581,"byte_end":12887597,"line_start":54,"line_end":54,"column_start":31,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12889855,"byte_end":12889871,"line_start":116,"line_end":116,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12889969,"byte_end":12889985,"line_start":122,"line_end":122,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891023,"byte_end":12891039,"line_start":154,"line_end":154,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12895326,"byte_end":12895342,"line_start":270,"line_end":270,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12899588,"byte_end":12899592,"line_start":363,"line_end":363,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5971}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12901977,"byte_end":12901993,"line_start":418,"line_end":418,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5975}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12902136,"byte_end":12902152,"line_start":424,"line_end":424,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5978}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12903620,"byte_end":12903636,"line_start":454,"line_end":454,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904108,"byte_end":12904115,"line_start":474,"line_end":474,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904647,"byte_end":12904654,"line_start":495,"line_end":495,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904674,"byte_end":12904679,"line_start":497,"line_end":497,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5996}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12906528,"byte_end":12906533,"line_start":558,"line_end":558,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5999}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12907451,"byte_end":12907463,"line_start":582,"line_end":582,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12907583,"byte_end":12907595,"line_start":588,"line_end":588,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6012}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908041,"byte_end":12908048,"line_start":602,"line_end":602,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908079,"byte_end":12908086,"line_start":603,"line_end":603,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908113,"byte_end":12908120,"line_start":605,"line_end":605,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6023}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908406,"byte_end":12908413,"line_start":616,"line_end":616,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908955,"byte_end":12908959,"line_start":635,"line_end":635,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12910109,"byte_end":12910113,"line_start":664,"line_end":664,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6035}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12911229,"byte_end":12911240,"line_start":699,"line_end":699,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6044}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911729,"byte_end":12911741,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6096}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911846,"byte_end":12911858,"line_start":21,"line_end":21,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911889,"byte_end":12911901,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6101}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912024,"byte_end":12912036,"line_start":29,"line_end":29,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6104}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912217,"byte_end":12912229,"line_start":36,"line_end":36,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915660,"byte_end":12915674,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915770,"byte_end":12915784,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6124},{"krate":0,"index":6125},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12917387,"byte_end":12917401,"line_start":169,"line_end":169,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12918413,"byte_end":12918427,"line_start":201,"line_end":201,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12918607,"byte_end":12918621,"line_start":209,"line_end":209,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93671,"byte_end":93674,"line_start":134,"line_end":134,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6200}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":227489,"byte_end":227494,"line_start":30,"line_end":30,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228047,"byte_end":228051,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228318,"byte_end":228322,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":230040,"byte_end":230044,"line_start":124,"line_end":124,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231890,"byte_end":231901,"line_start":39,"line_end":39,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":233259,"byte_end":233270,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":233566,"byte_end":233577,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234894,"byte_end":234899,"line_start":16,"line_end":16,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235484,"byte_end":235489,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236341,"byte_end":236352,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236902,"byte_end":236913,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2344}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":237482,"byte_end":237493,"line_start":64,"line_end":64,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238126,"byte_end":238130,"line_start":20,"line_end":20,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238771,"byte_end":238775,"line_start":40,"line_end":40,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":240089,"byte_end":240096,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":241137,"byte_end":241144,"line_start":59,"line_end":59,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242460,"byte_end":242470,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":243023,"byte_end":243033,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":243743,"byte_end":243753,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244394,"byte_end":244400,"line_start":15,"line_end":15,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244776,"byte_end":244782,"line_start":25,"line_end":25,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":245229,"byte_end":245235,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":246967,"byte_end":246977,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919531,"byte_end":12919537,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12920480,"byte_end":12920486,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12920685,"byte_end":12920691,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922279,"byte_end":12922283,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208622,"byte_end":208625,"line_start":34,"line_end":34,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209407,"byte_end":209410,"line_start":58,"line_end":58,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249303,"byte_end":249307,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249344,"byte_end":249348,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249364,"byte_end":249368,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250195,"byte_end":250202,"line_start":66,"line_end":66,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250459,"byte_end":250466,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250833,"byte_end":250840,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286577,"byte_end":286587,"line_start":137,"line_end":137,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286789,"byte_end":286793,"line_start":142,"line_end":142,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292198,"byte_end":292208,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292293,"byte_end":292303,"line_start":276,"line_end":276,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292431,"byte_end":292441,"line_start":282,"line_end":282,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292466,"byte_end":292476,"line_start":283,"line_end":283,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293161,"byte_end":293175,"line_start":33,"line_end":33,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293358,"byte_end":293372,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293712,"byte_end":293724,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293848,"byte_end":293858,"line_start":65,"line_end":65,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294090,"byte_end":294100,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294293,"byte_end":294303,"line_start":83,"line_end":83,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":297757,"byte_end":297762,"line_start":176,"line_end":176,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":320924,"byte_end":320935,"line_start":25,"line_end":25,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":320972,"byte_end":320983,"line_start":26,"line_end":26,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":321690,"byte_end":321701,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326777,"byte_end":326778,"line_start":43,"line_end":43,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327847,"byte_end":327855,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327941,"byte_end":327949,"line_start":78,"line_end":78,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328229,"byte_end":328237,"line_start":93,"line_end":93,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2996}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333344,"byte_end":333350,"line_start":72,"line_end":72,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333387,"byte_end":333393,"line_start":73,"line_end":73,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333409,"byte_end":333415,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":335100,"byte_end":335106,"line_start":122,"line_end":122,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":299984,"byte_end":299989,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":300919,"byte_end":300933,"line_start":122,"line_end":122,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":301352,"byte_end":301366,"line_start":137,"line_end":137,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":302264,"byte_end":302276,"line_start":169,"line_end":169,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303038,"byte_end":303048,"line_start":200,"line_end":200,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303668,"byte_end":303673,"line_start":221,"line_end":221,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305321,"byte_end":305326,"line_start":268,"line_end":268,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3073},{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306249,"byte_end":306254,"line_start":294,"line_end":294,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310614,"byte_end":310617,"line_start":416,"line_end":416,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":311569,"byte_end":311572,"line_start":444,"line_end":444,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":311765,"byte_end":311773,"line_start":453,"line_end":453,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":312347,"byte_end":312359,"line_start":482,"line_end":482,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":313749,"byte_end":313761,"line_start":526,"line_end":526,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316417,"byte_end":316428,"line_start":606,"line_end":606,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316851,"byte_end":316862,"line_start":623,"line_end":623,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":318291,"byte_end":318301,"line_start":661,"line_end":661,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":319043,"byte_end":319053,"line_start":687,"line_end":687,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":319493,"byte_end":319505,"line_start":701,"line_end":701,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254314,"byte_end":254318,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255829,"byte_end":255833,"line_start":136,"line_end":136,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259937,"byte_end":259941,"line_start":224,"line_end":224,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261355,"byte_end":261360,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":266762,"byte_end":266767,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277771,"byte_end":277783,"line_start":637,"line_end":637,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277808,"byte_end":277820,"line_start":638,"line_end":638,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277830,"byte_end":277842,"line_start":640,"line_end":640,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278816,"byte_end":278828,"line_start":669,"line_end":669,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278969,"byte_end":278981,"line_start":678,"line_end":678,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279124,"byte_end":279136,"line_start":685,"line_end":685,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279348,"byte_end":279357,"line_start":696,"line_end":696,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279807,"byte_end":279816,"line_start":713,"line_end":713,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":280016,"byte_end":280028,"line_start":721,"line_end":721,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/resultstream.rs","byte_start":336179,"byte_end":336186,"line_start":33,"line_end":33,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343460,"byte_end":343465,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":351928,"byte_end":351934,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354901,"byte_end":354907,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355160,"byte_end":355168,"line_start":404,"line_end":404,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355296,"byte_end":355304,"line_start":410,"line_end":410,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355387,"byte_end":355395,"line_start":416,"line_end":416,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356456,"byte_end":356464,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356615,"byte_end":356623,"line_start":452,"line_end":452,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359776,"byte_end":359787,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360208,"byte_end":360219,"line_start":548,"line_end":548,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360641,"byte_end":360652,"line_start":562,"line_end":562,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360806,"byte_end":360817,"line_start":569,"line_end":569,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360920,"byte_end":360927,"line_start":575,"line_end":575,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":361654,"byte_end":361661,"line_start":599,"line_end":599,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":361853,"byte_end":361860,"line_start":607,"line_end":607,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404195,"byte_end":404200,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404238,"byte_end":404243,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404260,"byte_end":404264,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404460,"byte_end":404465,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":406220,"byte_end":406225,"line_start":140,"line_end":140,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366828,"byte_end":366843,"line_start":114,"line_end":114,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367892,"byte_end":367901,"line_start":152,"line_end":152,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368088,"byte_end":368097,"line_start":160,"line_end":160,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368256,"byte_end":368265,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368371,"byte_end":368380,"line_start":173,"line_end":173,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368538,"byte_end":368550,"line_start":180,"line_end":180,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368740,"byte_end":368752,"line_start":188,"line_end":188,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369033,"byte_end":369045,"line_start":198,"line_end":198,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369260,"byte_end":369272,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":371832,"byte_end":371842,"line_start":305,"line_end":305,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3672},{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374651,"byte_end":374657,"line_start":391,"line_end":391,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":383453,"byte_end":383459,"line_start":639,"line_end":639,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384555,"byte_end":384570,"line_start":672,"line_end":672,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385526,"byte_end":385541,"line_start":699,"line_end":699,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":386348,"byte_end":386363,"line_start":734,"line_end":734,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":386481,"byte_end":386487,"line_start":741,"line_end":741,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":387677,"byte_end":387683,"line_start":774,"line_end":774,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":387975,"byte_end":387983,"line_start":791,"line_end":791,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":392375,"byte_end":392383,"line_start":923,"line_end":923,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":393896,"byte_end":393904,"line_start":960,"line_end":960,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":394904,"byte_end":394921,"line_start":989,"line_end":989,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395204,"byte_end":395221,"line_start":999,"line_end":999,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398759,"byte_end":398770,"line_start":1095,"line_end":1095,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399271,"byte_end":399282,"line_start":1110,"line_end":1110,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399443,"byte_end":399450,"line_start":1117,"line_end":1117,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399850,"byte_end":399857,"line_start":1133,"line_end":1133,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3785}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400032,"byte_end":400037,"line_start":1146,"line_end":1146,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400382,"byte_end":400387,"line_start":1157,"line_end":1157,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400424,"byte_end":400429,"line_start":1158,"line_end":1158,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400442,"byte_end":400447,"line_start":1160,"line_end":1160,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408038,"byte_end":408043,"line_start":44,"line_end":44,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408080,"byte_end":408085,"line_start":45,"line_end":45,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408101,"byte_end":408107,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413086,"byte_end":413091,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413231,"byte_end":413236,"line_start":176,"line_end":176,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413514,"byte_end":413526,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413716,"byte_end":413728,"line_start":194,"line_end":194,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3876}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413902,"byte_end":413914,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3879}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414358,"byte_end":414369,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414530,"byte_end":414541,"line_start":223,"line_end":223,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414693,"byte_end":414704,"line_start":229,"line_end":229,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3892}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414964,"byte_end":414977,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415803,"byte_end":415817,"line_start":268,"line_end":268,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416051,"byte_end":416065,"line_start":279,"line_end":279,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416236,"byte_end":416250,"line_start":286,"line_end":286,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3907}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416412,"byte_end":416426,"line_start":292,"line_end":292,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418569,"byte_end":418575,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419356,"byte_end":419362,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4005}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419471,"byte_end":419477,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419847,"byte_end":419853,"line_start":107,"line_end":107,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421005,"byte_end":421013,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421793,"byte_end":421801,"line_start":164,"line_end":164,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422784,"byte_end":422792,"line_start":196,"line_end":196,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423035,"byte_end":423050,"line_start":208,"line_end":208,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4029}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423152,"byte_end":423167,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4035},{"krate":0,"index":4036}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423926,"byte_end":423941,"line_start":246,"line_end":246,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4047},{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425242,"byte_end":425259,"line_start":284,"line_end":284,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425542,"byte_end":425559,"line_start":294,"line_end":294,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426149,"byte_end":426158,"line_start":315,"line_end":315,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4065}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426345,"byte_end":426354,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426513,"byte_end":426522,"line_start":329,"line_end":329,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426628,"byte_end":426637,"line_start":335,"line_end":335,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":430344,"byte_end":430355,"line_start":431,"line_end":431,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":430859,"byte_end":430870,"line_start":446,"line_end":446,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":431034,"byte_end":431041,"line_start":453,"line_end":453,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":431441,"byte_end":431448,"line_start":469,"line_end":469,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433394,"byte_end":433400,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436193,"byte_end":436199,"line_start":138,"line_end":138,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4168}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436597,"byte_end":436605,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":437478,"byte_end":437486,"line_start":178,"line_end":178,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438524,"byte_end":438532,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441392,"byte_end":441403,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441811,"byte_end":441822,"line_start":300,"line_end":300,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":442238,"byte_end":442249,"line_start":314,"line_end":314,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":442410,"byte_end":442417,"line_start":321,"line_end":321,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":443156,"byte_end":443163,"line_start":345,"line_end":345,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4218}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6577,"byte_end":6583,"line_start":178,"line_end":178,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6632,"byte_end":6638,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":834}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":92576,"byte_end":92593,"line_start":110,"line_end":110,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":5822}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":6673,"byte_end":6677,"line_start":184,"line_end":184,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2149}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7298,"byte_end":7302,"line_start":207,"line_end":207,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3289}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7312,"byte_end":7320,"line_start":208,"line_end":208,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3341}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7358,"byte_end":7362,"line_start":210,"line_end":210,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3372}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339778,"byte_end":339785,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3373}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mod.rs","byte_start":339795,"byte_end":339799,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3508}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lib.rs","byte_start":7400,"byte_end":7406,"line_start":212,"line_end":212,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3924}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416735,"byte_end":416739,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3925}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mod.rs","byte_start":416749,"byte_end":416756,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4108}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":10391,"byte_end":10396,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11040,"byte_end":11045,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4245},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/poll.rs","byte_start":11658,"byte_end":11667,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/empty.rs","byte_start":56808,"byte_end":56813,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4287},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":58150,"byte_end":58154,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/lazy.rs","byte_start":58816,"byte_end":58820,"line_start":74,"line_end":74,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4295},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/poll_fn.rs","byte_start":59836,"byte_end":59842,"line_start":36,"line_end":36,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4318},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":61829,"byte_end":61841,"line_start":68,"line_end":68,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4324},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/result.rs","byte_start":62051,"byte_end":62063,"line_start":77,"line_end":77,"column_start":35,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4324},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/loop_fn.rs","byte_start":64465,"byte_end":64471,"line_start":84,"line_end":84,"column_start":29,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4349},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/option.rs","byte_start":65011,"byte_end":65017,"line_start":5,"line_end":5,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":43184},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/and_then.rs","byte_start":65900,"byte_end":65907,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4358},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":66708,"byte_end":66715,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":316},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten.rs","byte_start":67200,"byte_end":67207,"line_start":35,"line_end":35,"column_start":20,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":316},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":68118,"byte_end":68131,"line_start":17,"line_end":17,"column_start":24,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":347},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/flatten_stream.rs","byte_start":68958,"byte_end":68971,"line_start":52,"line_end":52,"column_start":20,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":347},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71225,"byte_end":71229,"line_start":22,"line_end":22,"column_start":17,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/fuse.rs","byte_start":71641,"byte_end":71645,"line_start":34,"line_end":34,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4383},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/into_stream.rs","byte_start":72469,"byte_end":72479,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4389},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join.rs","byte_start":77300,"byte_end":77309,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map.rs","byte_start":78398,"byte_end":78401,"line_start":22,"line_end":22,"column_start":26,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4566},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/map_err.rs","byte_start":79316,"byte_end":79322,"line_start":22,"line_end":22,"column_start":26,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4575},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/from_err.rs","byte_start":80228,"byte_end":80235,"line_start":24,"line_end":24,"column_start":45,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4584},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/or_else.rs","byte_start":81121,"byte_end":81127,"line_start":23,"line_end":23,"column_start":26,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4593},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":82512,"byte_end":82518,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4603},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select.rs","byte_start":83719,"byte_end":83729,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4611},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select2.rs","byte_start":84565,"byte_end":84572,"line_start":20,"line_end":20,"column_start":23,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4632},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/then.rs","byte_start":85937,"byte_end":85941,"line_start":23,"line_end":23,"column_start":26,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4640},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86522,"byte_end":86528,"line_start":13,"line_end":13,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":86934,"byte_end":86940,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4650},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/either.rs","byte_start":87284,"byte_end":87290,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4650},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/inspect.rs","byte_start":88103,"byte_end":88110,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4663},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/chain.rs","byte_start":88739,"byte_end":88744,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12843426,"byte_end":12843437,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5005},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/catch_unwind.rs","byte_start":12844062,"byte_end":12844078,"line_start":44,"line_end":44,"column_start":28,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":1,"index":8276},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12844878,"byte_end":12844885,"line_start":29,"line_end":29,"column_start":24,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4749},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/join_all.rs","byte_start":12846523,"byte_end":12846530,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4749},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_all.rs","byte_start":12849340,"byte_end":12849349,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5022},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/select_ok.rs","byte_start":12851602,"byte_end":12851610,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5028},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12854020,"byte_end":12854026,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4880},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12855205,"byte_end":12855211,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12856717,"byte_end":12856723,"line_start":122,"line_end":122,"column_start":20,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4880},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12857613,"byte_end":12857618,"line_start":150,"line_end":150,"column_start":27,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4914},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12858971,"byte_end":12858977,"line_start":196,"line_end":196,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4880},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859232,"byte_end":12859238,"line_start":207,"line_end":207,"column_start":18,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4880},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859419,"byte_end":12859427,"line_start":214,"line_end":214,"column_start":17,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4893},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859846,"byte_end":12859851,"line_start":227,"line_end":227,"column_start":25,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4887},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12859976,"byte_end":12859981,"line_start":233,"line_end":233,"column_start":25,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4887},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860105,"byte_end":12860110,"line_start":239,"line_end":239,"column_start":24,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4887},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860536,"byte_end":12860546,"line_start":257,"line_end":257,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5034},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860839,"byte_end":12860850,"line_start":272,"line_end":272,"column_start":24,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5043},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12860969,"byte_end":12860980,"line_start":280,"line_end":280,"column_start":26,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5043},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/shared.rs","byte_start":12861132,"byte_end":12861143,"line_start":288,"line_end":288,"column_start":26,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5043},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":15779,"byte_end":15782,"line_start":108,"line_end":108,"column_start":55,"column_end":58},"kind":{"Impl":{"id":53}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52305,"byte_end":52306,"line_start":1052,"line_end":1052,"column_start":32,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":789}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52471,"byte_end":52477,"line_start":1062,"line_end":1062,"column_start":35,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":43310},"to":{"krate":0,"index":789}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":52811,"byte_end":52816,"line_start":1076,"line_end":1076,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":807}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55352,"byte_end":55364,"line_start":1143,"line_end":1143,"column_start":9,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/future/mod.rs","byte_start":55851,"byte_end":55863,"line_start":1163,"line_end":1163,"column_start":24,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":815},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter.rs","byte_start":133337,"byte_end":133341,"line_start":36,"line_end":36,"column_start":26,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5067},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_ok.rs","byte_start":134571,"byte_end":134577,"line_start":39,"line_end":39,"column_start":23,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5074},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/iter_result.rs","byte_start":135818,"byte_end":135828,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5083},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/repeat.rs","byte_start":137214,"byte_end":137220,"line_start":44,"line_end":44,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5089},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138053,"byte_end":138060,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":138976,"byte_end":138983,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5098},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/and_then.rs","byte_start":139443,"byte_end":139450,"line_start":77,"line_end":77,"column_start":26,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5098},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chain.rs","byte_start":141101,"byte_end":141106,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142336,"byte_end":142343,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1063},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":142767,"byte_end":142774,"line_start":37,"line_end":37,"column_start":20,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1063},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":143689,"byte_end":143695,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":144147,"byte_end":144153,"line_start":89,"line_end":89,"column_start":20,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1077},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/concat.rs","byte_start":145019,"byte_end":145029,"line_start":127,"line_end":127,"column_start":20,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5134},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/empty.rs","byte_start":146974,"byte_end":146979,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5153},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":147628,"byte_end":147634,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148507,"byte_end":148513,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5161},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter.rs","byte_start":148967,"byte_end":148973,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5161},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150000,"byte_end":150009,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":150882,"byte_end":150891,"line_start":51,"line_end":51,"column_start":29,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5170},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/filter_map.rs","byte_start":151348,"byte_end":151357,"line_start":70,"line_end":70,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5170},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":152432,"byte_end":152439,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153306,"byte_end":153313,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5179},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/flatten.rs","byte_start":153770,"byte_end":153777,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5179},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fold.rs","byte_start":155522,"byte_end":155526,"line_start":42,"line_end":42,"column_start":31,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5186},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/for_each.rs","byte_start":157663,"byte_end":157670,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5215},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":158812,"byte_end":158819,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":159657,"byte_end":159664,"line_start":51,"line_end":51,"column_start":47,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5227},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/from_err.rs","byte_start":160061,"byte_end":160068,"line_start":65,"line_end":65,"column_start":52,"column_end":59},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5227},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":160962,"byte_end":160966,"line_start":17,"line_end":17,"column_start":26,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5236},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161502,"byte_end":161506,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5236},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/fuse.rs","byte_start":161877,"byte_end":161881,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":163396,"byte_end":163408,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/future.rs","byte_start":165117,"byte_end":165129,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5243},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":166231,"byte_end":166238,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":167111,"byte_end":167118,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect.rs","byte_start":167581,"byte_end":167588,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5249},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":168479,"byte_end":168489,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169362,"byte_end":169372,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5258},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/inspect_err.rs","byte_start":169835,"byte_end":169845,"line_start":68,"line_end":68,"column_start":23,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5258},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":170595,"byte_end":170598,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171471,"byte_end":171474,"line_start":51,"line_end":51,"column_start":29,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5267},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map.rs","byte_start":171931,"byte_end":171934,"line_start":70,"line_end":70,"column_start":26,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5267},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":172691,"byte_end":172697,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":173570,"byte_end":173576,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5276},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/map_err.rs","byte_start":174033,"byte_end":174039,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5276},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/merge.rs","byte_start":175402,"byte_end":175407,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5285},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/once.rs","byte_start":177495,"byte_end":177499,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5312},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178484,"byte_end":178490,"line_start":31,"line_end":31,"column_start":32,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/or_else.rs","byte_start":178965,"byte_end":178971,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":180540,"byte_end":180548,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5333},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181013,"byte_end":181021,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5333},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/peek.rs","byte_start":181306,"byte_end":181314,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/poll_fn.rs","byte_start":182882,"byte_end":182888,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5340},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/select.rs","byte_start":183831,"byte_end":183837,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5346},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":185552,"byte_end":185556,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186423,"byte_end":186427,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5356},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip.rs","byte_start":186875,"byte_end":186879,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5356},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188006,"byte_end":188015,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":188925,"byte_end":188934,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5363},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/skip_while.rs","byte_start":189418,"byte_end":189427,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5363},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191123,"byte_end":191127,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":191994,"byte_end":191998,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5376},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take.rs","byte_start":192455,"byte_end":192459,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5376},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":193659,"byte_end":193668,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":194578,"byte_end":194587,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5383},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/take_while.rs","byte_start":195071,"byte_end":195080,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5383},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":196951,"byte_end":196955,"line_start":31,"line_end":31,"column_start":32,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/then.rs","byte_start":197431,"byte_end":197435,"line_start":50,"line_end":50,"column_start":26,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/unfold.rs","byte_start":200747,"byte_end":200753,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5408},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/zip.rs","byte_start":203123,"byte_end":203126,"line_start":29,"line_end":29,"column_start":25,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5434},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":204873,"byte_end":204880,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/forward.rs","byte_start":206653,"byte_end":206660,"line_start":78,"line_end":78,"column_start":23,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5445},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862032,"byte_end":12862040,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5482},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12862813,"byte_end":12862821,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12863795,"byte_end":12863803,"line_start":78,"line_end":78,"column_start":26,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5482},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffered.rs","byte_start":12864292,"byte_end":12864300,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5482},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866113,"byte_end":12866128,"line_start":22,"line_end":22,"column_start":24,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5533},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12866793,"byte_end":12866808,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12867722,"byte_end":12867737,"line_start":75,"line_end":75,"column_start":20,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5533},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/buffer_unordered.rs","byte_start":12868948,"byte_end":12868963,"line_start":112,"line_end":112,"column_start":26,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5533},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12870115,"byte_end":12870126,"line_start":33,"line_end":33,"column_start":20,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6201},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/catch_unwind.rs","byte_start":12871307,"byte_end":12871323,"line_start":64,"line_end":64,"column_start":28,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":1,"index":8276},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12872410,"byte_end":12872416,"line_start":37,"line_end":37,"column_start":26,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6219},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12872863,"byte_end":12872869,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/chunks.rs","byte_start":12873858,"byte_end":12873864,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6219},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12876132,"byte_end":12876139,"line_start":27,"line_end":27,"column_start":17,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/collect.rs","byte_start":12876266,"byte_end":12876273,"line_start":33,"line_end":33,"column_start":20,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6228},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12877316,"byte_end":12877320,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/wait.rs","byte_start":12878261,"byte_end":12878265,"line_start":47,"line_end":47,"column_start":30,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6235},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880380,"byte_end":12880389,"line_start":57,"line_end":57,"column_start":27,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5721},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880582,"byte_end":12880591,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5721},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880751,"byte_end":12880760,"line_start":71,"line_end":71,"column_start":22,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5721},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12880909,"byte_end":12880917,"line_start":80,"line_end":80,"column_start":23,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6249},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881327,"byte_end":12881333,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/channel.rs","byte_start":12881704,"byte_end":12881716,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6257},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882245,"byte_end":12882256,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12882631,"byte_end":12882642,"line_start":21,"line_end":21,"column_start":28,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6265},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883018,"byte_end":12883027,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12883494,"byte_end":12883503,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6272},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884713,"byte_end":12884725,"line_start":87,"line_end":87,"column_start":24,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5808},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12884915,"byte_end":12884927,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5808},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/split.rs","byte_start":12885117,"byte_end":12885129,"line_start":101,"line_end":101,"column_start":24,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5808},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887528,"byte_end":12887544,"line_start":53,"line_end":53,"column_start":31,"column_end":47},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12887581,"byte_end":12887597,"line_start":54,"line_end":54,"column_start":31,"column_end":47},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12889855,"byte_end":12889871,"line_start":116,"line_end":116,"column_start":21,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12889969,"byte_end":12889985,"line_start":122,"line_end":122,"column_start":9,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12891023,"byte_end":12891039,"line_start":154,"line_end":154,"column_start":9,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12895326,"byte_end":12895342,"line_start":270,"line_end":270,"column_start":20,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5911},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12899588,"byte_end":12899592,"line_start":363,"line_end":363,"column_start":38,"column_end":42},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5963},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12901977,"byte_end":12901993,"line_start":418,"line_end":418,"column_start":26,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12902136,"byte_end":12902152,"line_start":424,"line_end":424,"column_start":18,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12903620,"byte_end":12903636,"line_start":454,"line_end":454,"column_start":37,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5911},"to":{"krate":1,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904108,"byte_end":12904115,"line_start":474,"line_end":474,"column_start":26,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6920},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904647,"byte_end":12904654,"line_start":495,"line_end":495,"column_start":35,"column_end":42},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6920},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12904674,"byte_end":12904679,"line_start":497,"line_end":497,"column_start":9,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12906528,"byte_end":12906533,"line_start":558,"line_end":558,"column_start":18,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5920},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12907451,"byte_end":12907463,"line_start":582,"line_end":582,"column_start":23,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6000},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12907583,"byte_end":12907595,"line_start":588,"line_end":588,"column_start":43,"column_end":55},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908041,"byte_end":12908048,"line_start":602,"line_end":602,"column_start":25,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6013},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908079,"byte_end":12908086,"line_start":603,"line_end":603,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6013},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908113,"byte_end":12908120,"line_start":605,"line_end":605,"column_start":20,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6013},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908406,"byte_end":12908413,"line_start":616,"line_end":616,"column_start":33,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6013},"to":{"krate":0,"index":3232}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12908955,"byte_end":12908959,"line_start":635,"line_end":635,"column_start":9,"column_end":13},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12910109,"byte_end":12910113,"line_start":664,"line_end":664,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5926},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_unordered.rs","byte_start":12911229,"byte_end":12911240,"line_start":699,"line_end":699,"column_start":19,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6041},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911729,"byte_end":12911741,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6913},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911846,"byte_end":12911858,"line_start":21,"line_end":21,"column_start":16,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6913},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12911889,"byte_end":12911901,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6913},"to":{"krate":1,"index":2687}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912024,"byte_end":12912036,"line_start":29,"line_end":29,"column_start":17,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6913},"to":{"krate":1,"index":2676}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12912217,"byte_end":12912229,"line_start":36,"line_end":36,"column_start":20,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6913},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915660,"byte_end":12915674,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12915770,"byte_end":12915784,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12917387,"byte_end":12917401,"line_start":169,"line_end":169,"column_start":20,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6110},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12918413,"byte_end":12918427,"line_start":201,"line_end":201,"column_start":26,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/futures_ordered.rs","byte_start":12918607,"byte_end":12918621,"line_start":209,"line_end":209,"column_start":37,"column_end":51},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/stream/mod.rs","byte_start":93671,"byte_end":93674,"line_start":134,"line_end":134,"column_start":55,"column_end":58},"kind":{"Impl":{"id":193}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":227489,"byte_end":227494,"line_start":30,"line_end":30,"column_start":14,"column_end":19},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228047,"byte_end":228051,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":6279},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":228318,"byte_end":228322,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":6279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with.rs","byte_start":230040,"byte_end":230044,"line_start":124,"line_end":124,"column_start":29,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6279},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":231890,"byte_end":231901,"line_start":39,"line_end":39,"column_start":19,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":233259,"byte_end":233270,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6319},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/with_flat_map.rs","byte_start":233566,"byte_end":233577,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6319},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":234894,"byte_end":234899,"line_start":16,"line_end":16,"column_start":15,"column_end":20},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/flush.rs","byte_start":235484,"byte_end":235489,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6335},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236341,"byte_end":236352,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":236902,"byte_end":236913,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6341},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/from_err.rs","byte_start":237482,"byte_end":237493,"line_start":64,"line_end":64,"column_start":51,"column_end":62},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6341},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238126,"byte_end":238130,"line_start":20,"line_end":20,"column_start":15,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send.rs","byte_start":238771,"byte_end":238775,"line_start":40,"line_end":40,"column_start":26,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6354},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":240089,"byte_end":240096,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":6361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/send_all.rs","byte_start":241137,"byte_end":241144,"line_start":59,"line_end":59,"column_start":23,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6361},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":242460,"byte_end":242470,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":243023,"byte_end":243033,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6371},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/map_err.rs","byte_start":243743,"byte_end":243753,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6371},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244394,"byte_end":244400,"line_start":15,"line_end":15,"column_start":24,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":244776,"byte_end":244782,"line_start":25,"line_end":25,"column_start":50,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2493},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":245229,"byte_end":245235,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/fanout.rs","byte_start":246967,"byte_end":246977,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12919531,"byte_end":12919537,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":6472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12920480,"byte_end":12920486,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6472},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/buffer.rs","byte_start":12920685,"byte_end":12920691,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6472},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/wait.rs","byte_start":12922279,"byte_end":12922283,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":208622,"byte_end":208625,"line_start":34,"line_end":34,"column_start":34,"column_end":37},"kind":{"Impl":{"id":221}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sink/mod.rs","byte_start":209407,"byte_end":209410,"line_start":58,"line_end":58,"column_start":51,"column_end":54},"kind":{"Impl":{"id":222}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249303,"byte_end":249307,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":6486},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249344,"byte_end":249348,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":6486},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":249364,"byte_end":249368,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250195,"byte_end":250202,"line_start":66,"line_end":66,"column_start":23,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2681},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250459,"byte_end":250466,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2681},"to":{"krate":1,"index":3213}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/lock.rs","byte_start":250833,"byte_end":250840,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2681},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286577,"byte_end":286587,"line_start":137,"line_end":137,"column_start":6,"column_end":16},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286753,"byte_end":286757,"line_start":141,"line_end":141,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":2760}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":286789,"byte_end":286793,"line_start":142,"line_end":142,"column_start":29,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6588},"to":{"krate":0,"index":2760}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292198,"byte_end":292208,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2752},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292293,"byte_end":292303,"line_start":276,"line_end":276,"column_start":21,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2752},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292431,"byte_end":292441,"line_start":282,"line_end":282,"column_start":22,"column_end":32},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2752},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/atomic_task.rs","byte_start":292466,"byte_end":292476,"line_start":283,"line_end":283,"column_start":22,"column_end":32},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2752},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293161,"byte_end":293175,"line_start":33,"line_end":33,"column_start":10,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":6493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293358,"byte_end":293372,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293712,"byte_end":293724,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":293848,"byte_end":293858,"line_start":65,"line_end":65,"column_start":6,"column_end":16},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294090,"byte_end":294100,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2806},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":294293,"byte_end":294303,"line_start":83,"line_end":83,"column_start":15,"column_end":25},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2806},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/core.rs","byte_start":297757,"byte_end":297762,"line_start":176,"line_end":176,"column_start":19,"column_end":24},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2837},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":320924,"byte_end":320935,"line_start":25,"line_end":25,"column_start":31,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2937},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":320972,"byte_end":320983,"line_start":26,"line_end":26,"column_start":31,"column_end":42},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2937},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/unpark_mutex.rs","byte_start":321690,"byte_end":321701,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326744,"byte_end":326748,"line_start":42,"line_end":42,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":2983}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":326777,"byte_end":326778,"line_start":43,"line_end":43,"column_start":26,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2985},"to":{"krate":0,"index":2983}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327847,"byte_end":327855,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2986},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":327941,"byte_end":327949,"line_start":78,"line_end":78,"column_start":17,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2986},"to":{"krate":1,"index":9511}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/data.rs","byte_start":328229,"byte_end":328237,"line_start":93,"line_end":93,"column_start":25,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333344,"byte_end":333350,"line_start":72,"line_end":72,"column_start":31,"column_end":37},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6522},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333387,"byte_end":333393,"line_start":73,"line_end":73,"column_start":31,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6522},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":333409,"byte_end":333415,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/task_rc.rs","byte_start":335100,"byte_end":335106,"line_start":122,"line_end":122,"column_start":19,"column_end":25},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6522},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":299984,"byte_end":299989,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3044},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":300919,"byte_end":300933,"line_start":122,"line_end":122,"column_start":10,"column_end":24},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":301352,"byte_end":301366,"line_start":137,"line_end":137,"column_start":10,"column_end":24},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":302264,"byte_end":302276,"line_start":169,"line_end":169,"column_start":6,"column_end":18},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303038,"byte_end":303048,"line_start":200,"line_end":200,"column_start":6,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":303668,"byte_end":303673,"line_start":221,"line_end":221,"column_start":17,"column_end":22},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":305321,"byte_end":305326,"line_start":268,"line_end":268,"column_start":17,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":306249,"byte_end":306254,"line_start":294,"line_end":294,"column_start":15,"column_end":20},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309313,"byte_end":309317,"line_start":376,"line_end":376,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3089}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":309320,"byte_end":309324,"line_start":376,"line_end":376,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":3089}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310160,"byte_end":310164,"line_start":396,"line_end":396,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3091}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310167,"byte_end":310171,"line_start":396,"line_end":396,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":3091}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":310614,"byte_end":310617,"line_start":416,"line_end":416,"column_start":6,"column_end":9},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":311569,"byte_end":311572,"line_start":444,"line_end":444,"column_start":21,"column_end":24},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3093},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":311765,"byte_end":311773,"line_start":453,"line_end":453,"column_start":17,"column_end":25},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3096},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":312347,"byte_end":312359,"line_start":482,"line_end":482,"column_start":6,"column_end":18},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":313749,"byte_end":313761,"line_start":526,"line_end":526,"column_start":17,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3105},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316417,"byte_end":316428,"line_start":606,"line_end":606,"column_start":6,"column_end":17},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":316851,"byte_end":316862,"line_start":623,"line_end":623,"column_start":21,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6583},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317400,"byte_end":317404,"line_start":637,"line_end":637,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3129}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":317407,"byte_end":317411,"line_start":637,"line_end":637,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":3129}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":318291,"byte_end":318301,"line_start":661,"line_end":661,"column_start":38,"column_end":48},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3131},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":319043,"byte_end":319053,"line_start":687,"line_end":687,"column_start":51,"column_end":61},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3131},"to":{"krate":0,"index":3232}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/std/mod.rs","byte_start":319493,"byte_end":319505,"line_start":701,"line_end":701,"column_start":26,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254286,"byte_end":254290,"line_start":92,"line_end":92,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3169}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":254314,"byte_end":254318,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6588},"to":{"krate":0,"index":3169}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":255829,"byte_end":255833,"line_start":136,"line_end":136,"column_start":6,"column_end":10},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":259937,"byte_end":259941,"line_start":224,"line_end":224,"column_start":21,"column_end":25},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6588},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":261355,"byte_end":261360,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":266762,"byte_end":266767,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3183},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267786,"byte_end":267790,"line_start":426,"line_end":426,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":267793,"byte_end":267797,"line_start":426,"line_end":426,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":274507,"byte_end":274513,"line_start":566,"line_end":566,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3222},"to":{"krate":0,"index":3232}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277771,"byte_end":277783,"line_start":637,"line_end":637,"column_start":22,"column_end":34},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277808,"byte_end":277820,"line_start":638,"line_end":638,"column_start":22,"column_end":34},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":277830,"byte_end":277842,"line_start":640,"line_end":640,"column_start":6,"column_end":18},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278816,"byte_end":278828,"line_start":669,"line_end":669,"column_start":16,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":278969,"byte_end":278981,"line_start":678,"line_end":678,"column_start":21,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279124,"byte_end":279136,"line_start":685,"line_end":685,"column_start":15,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279348,"byte_end":279357,"line_start":696,"line_end":696,"column_start":28,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3250},"to":{"krate":0,"index":3222}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":279807,"byte_end":279816,"line_start":713,"line_end":713,"column_start":51,"column_end":60},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3250},"to":{"krate":0,"index":3232}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/task_impl/mod.rs","byte_start":280016,"byte_end":280028,"line_start":721,"line_end":721,"column_start":38,"column_end":50},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3235},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/resultstream.rs","byte_start":336179,"byte_end":336186,"line_start":33,"line_end":33,"column_start":31,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6594},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":343460,"byte_end":343465,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":351928,"byte_end":351934,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":354901,"byte_end":354907,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6609},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355160,"byte_end":355168,"line_start":404,"line_end":404,"column_start":23,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6624},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355296,"byte_end":355304,"line_start":410,"line_end":410,"column_start":16,"column_end":24},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6624},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":355387,"byte_end":355395,"line_start":416,"line_end":416,"column_start":9,"column_end":17},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356456,"byte_end":356464,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6603},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":356615,"byte_end":356623,"line_start":452,"line_end":452,"column_start":18,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6603},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":359776,"byte_end":359787,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360208,"byte_end":360219,"line_start":548,"line_end":548,"column_start":23,"column_end":34},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3460},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360641,"byte_end":360652,"line_start":562,"line_end":562,"column_start":51,"column_end":62},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3460},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360806,"byte_end":360817,"line_start":569,"line_end":569,"column_start":21,"column_end":32},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3460},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":360920,"byte_end":360927,"line_start":575,"line_end":575,"column_start":28,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3468},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":361654,"byte_end":361661,"line_start":599,"line_end":599,"column_start":45,"column_end":52},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3468},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/oneshot.rs","byte_start":361853,"byte_end":361860,"line_start":607,"line_end":607,"column_start":26,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3468},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404195,"byte_end":404200,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6644},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404238,"byte_end":404243,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6644},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404260,"byte_end":404264,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":404460,"byte_end":404465,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/queue.rs","byte_start":406220,"byte_end":406225,"line_start":140,"line_end":140,"column_start":18,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6644},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366784,"byte_end":366788,"line_start":113,"line_end":113,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2989},"to":{"krate":0,"index":3629}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366791,"byte_end":366795,"line_start":113,"line_end":113,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3001},"to":{"krate":0,"index":3629}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366798,"byte_end":366803,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":2610},"to":{"krate":0,"index":3629}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":366828,"byte_end":366843,"line_start":114,"line_end":114,"column_start":22,"column_end":37},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6659},"to":{"krate":0,"index":3629}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":367892,"byte_end":367901,"line_start":152,"line_end":152,"column_start":24,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6679},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368088,"byte_end":368097,"line_start":160,"line_end":160,"column_start":26,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6679},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368256,"byte_end":368265,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6679},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368371,"byte_end":368380,"line_start":173,"line_end":173,"column_start":9,"column_end":18},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368538,"byte_end":368550,"line_start":180,"line_end":180,"column_start":24,"column_end":36},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6697},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":368740,"byte_end":368752,"line_start":188,"line_end":188,"column_start":26,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6697},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369033,"byte_end":369045,"line_start":198,"line_end":198,"column_start":24,"column_end":36},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6697},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":369260,"byte_end":369272,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":371832,"byte_end":371842,"line_start":305,"line_end":305,"column_start":6,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":374651,"byte_end":374657,"line_start":391,"line_end":391,"column_start":9,"column_end":15},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":383453,"byte_end":383459,"line_start":639,"line_end":639,"column_start":18,"column_end":24},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6651},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":384555,"byte_end":384570,"line_start":672,"line_end":672,"column_start":9,"column_end":24},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":385526,"byte_end":385541,"line_start":699,"line_end":699,"column_start":18,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6659},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":386348,"byte_end":386363,"line_start":734,"line_end":734,"column_start":19,"column_end":34},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6659},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":386481,"byte_end":386487,"line_start":741,"line_end":741,"column_start":19,"column_end":25},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6651},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":387677,"byte_end":387683,"line_start":774,"line_end":774,"column_start":18,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6651},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":387975,"byte_end":387983,"line_start":791,"line_end":791,"column_start":9,"column_end":17},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":392375,"byte_end":392383,"line_start":923,"line_end":923,"column_start":20,"column_end":28},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6666},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":393896,"byte_end":393904,"line_start":960,"line_end":960,"column_start":18,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6666},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":394904,"byte_end":394921,"line_start":989,"line_end":989,"column_start":9,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":395204,"byte_end":395221,"line_start":999,"line_end":999,"column_start":20,"column_end":37},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6672},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":398759,"byte_end":398770,"line_start":1095,"line_end":1095,"column_start":23,"column_end":34},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3753},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399271,"byte_end":399282,"line_start":1110,"line_end":1110,"column_start":27,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3753},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399443,"byte_end":399450,"line_start":1117,"line_end":1117,"column_start":28,"column_end":35},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3758},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":399850,"byte_end":399857,"line_start":1133,"line_end":1133,"column_start":32,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3758},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400032,"byte_end":400037,"line_start":1146,"line_end":1146,"column_start":9,"column_end":14},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400382,"byte_end":400387,"line_start":1157,"line_end":1157,"column_start":31,"column_end":36},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6736},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400424,"byte_end":400429,"line_start":1158,"line_end":1158,"column_start":31,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6736},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/mpsc/mod.rs","byte_start":400442,"byte_end":400447,"line_start":1160,"line_end":1160,"column_start":6,"column_end":11},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408038,"byte_end":408043,"line_start":44,"line_end":44,"column_start":31,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6771},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408080,"byte_end":408085,"line_start":45,"line_end":45,"column_start":31,"column_end":36},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6771},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":408101,"byte_end":408107,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413086,"byte_end":413091,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413231,"byte_end":413236,"line_start":176,"line_end":176,"column_start":18,"column_end":23},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6771},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413514,"byte_end":413526,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3866},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413716,"byte_end":413728,"line_start":194,"line_end":194,"column_start":26,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3866},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":413902,"byte_end":413914,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3866},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414358,"byte_end":414369,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6778},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414530,"byte_end":414541,"line_start":223,"line_end":223,"column_start":26,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6778},"to":{"krate":1,"index":3213}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414693,"byte_end":414704,"line_start":229,"line_end":229,"column_start":22,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6778},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":414964,"byte_end":414977,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6786},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":415803,"byte_end":415817,"line_start":268,"line_end":268,"column_start":9,"column_end":23},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416051,"byte_end":416065,"line_start":279,"line_end":279,"column_start":19,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6792},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416236,"byte_end":416250,"line_start":286,"line_end":286,"column_start":22,"column_end":36},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6792},"to":{"krate":1,"index":3213}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/sync/bilock.rs","byte_start":416412,"byte_end":416426,"line_start":292,"line_end":292,"column_start":18,"column_end":32},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6792},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":418569,"byte_end":418575,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419356,"byte_end":419362,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6807},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419471,"byte_end":419477,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6807},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":419847,"byte_end":419853,"line_start":107,"line_end":107,"column_start":18,"column_end":24},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6807},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421005,"byte_end":421013,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":421793,"byte_end":421801,"line_start":164,"line_end":164,"column_start":20,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6813},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":422784,"byte_end":422792,"line_start":196,"line_end":196,"column_start":18,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6813},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423035,"byte_end":423050,"line_start":208,"line_end":208,"column_start":19,"column_end":34},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6830},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423152,"byte_end":423167,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6830},"to":{"krate":0,"index":2548}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":423926,"byte_end":423941,"line_start":246,"line_end":246,"column_start":9,"column_end":24},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425242,"byte_end":425259,"line_start":284,"line_end":284,"column_start":9,"column_end":26},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":425542,"byte_end":425559,"line_start":294,"line_end":294,"column_start":20,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6837},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426149,"byte_end":426158,"line_start":315,"line_end":315,"column_start":24,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4059},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426345,"byte_end":426354,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4059},"to":{"krate":1,"index":9302}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426513,"byte_end":426522,"line_start":329,"line_end":329,"column_start":24,"column_end":33},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4059},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":426628,"byte_end":426637,"line_start":335,"line_end":335,"column_start":9,"column_end":18},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":430344,"byte_end":430355,"line_start":431,"line_end":431,"column_start":23,"column_end":34},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4075},"to":{"krate":0,"index":2068}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":430859,"byte_end":430870,"line_start":446,"line_end":446,"column_start":27,"column_end":38},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4075},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":431034,"byte_end":431041,"line_start":453,"line_end":453,"column_start":28,"column_end":35},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4080},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/mpsc.rs","byte_start":431441,"byte_end":431448,"line_start":469,"line_end":469,"column_start":32,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4080},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":433394,"byte_end":433400,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436193,"byte_end":436199,"line_start":138,"line_end":138,"column_start":18,"column_end":24},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6844},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":436597,"byte_end":436605,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":437478,"byte_end":437486,"line_start":178,"line_end":178,"column_start":20,"column_end":28},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6850},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":438524,"byte_end":438532,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6850},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441392,"byte_end":441403,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":441811,"byte_end":441822,"line_start":300,"line_end":300,"column_start":23,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4180},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":442238,"byte_end":442249,"line_start":314,"line_end":314,"column_start":51,"column_end":62},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4180},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":442410,"byte_end":442417,"line_start":321,"line_end":321,"column_start":28,"column_end":35},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4185},"to":{"krate":0,"index":730}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.31/src/unsync/oneshot.rs","byte_start":443156,"byte_end":443163,"line_start":345,"line_end":345,"column_start":45,"column_end":52},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4185},"to":{"krate":1,"index":9295}}]}