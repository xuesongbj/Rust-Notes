{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","parking_lot","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=6d38f881c449f06c","-C","extra-filename=-6d38f881c449f06c","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","lock_api=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/liblock_api-a4007285d0f943bf.rmeta","--extern","parking_lot_core=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libparking_lot_core-268bb0d017a44d5e.rmeta","--cap-lints","allow","--cfg","has_sized_atomics","--cfg","has_checked_instant","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libparking_lot-6d38f881c449f06c.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[13824624400864732954,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":18,"id":{"name":"lock_api","disambiguator":[4797544493069024980,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":19,"id":{"name":"scopeguard","disambiguator":[1679479393273212407,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":20,"id":{"name":"parking_lot_core","disambiguator":[6800354449558349698,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":21,"id":{"name":"smallvec","disambiguator":[14965115238444556244,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":22,"id":{"name":"maybe_uninit","disambiguator":[7185118889776202062,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":23,"id":{"name":"cfg_if","disambiguator":[3557945095908395934,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":24,"id":{"name":"libc","disambiguator":[5366990215584721661,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":333,"byte_end":1398,"line_start":8,"line_end":43,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":892,"byte_end":900,"line_start":31,"line_end":31,"column_start":11,"column_end":19},"alias_span":null,"name":"lock_api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":938,"byte_end":945,"line_start":32,"line_end":32,"column_start":25,"column_end":32},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":947,"byte_end":964,"line_start":32,"line_end":32,"column_start":34,"column_end":51},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":989,"byte_end":1005,"line_start":33,"line_end":33,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1007,"byte_end":1012,"line_start":33,"line_end":33,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1014,"byte_end":1024,"line_start":33,"line_end":33,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1048,"byte_end":1052,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1054,"byte_end":1063,"line_start":34,"line_end":34,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1091,"byte_end":1099,"line_start":35,"line_end":35,"column_start":26,"column_end":34},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1127,"byte_end":1136,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1167,"byte_end":1192,"line_start":38,"line_end":38,"column_start":5,"column_end":30},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1194,"byte_end":1205,"line_start":38,"line_end":38,"column_start":32,"column_end":43},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1194,"byte_end":1205,"line_start":38,"line_end":38,"column_start":32,"column_end":43},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1207,"byte_end":1221,"line_start":38,"line_end":38,"column_start":45,"column_end":59},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1223,"byte_end":1242,"line_start":38,"line_end":38,"column_start":61,"column_end":80},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":514},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1275,"byte_end":1296,"line_start":41,"line_end":41,"column_start":5,"column_end":26},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1298,"byte_end":1320,"line_start":41,"line_end":41,"column_start":28,"column_end":50},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1322,"byte_end":1328,"line_start":41,"line_end":41,"column_start":52,"column_end":58},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1330,"byte_end":1345,"line_start":41,"line_end":41,"column_start":60,"column_end":75},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1351,"byte_end":1376,"line_start":42,"line_end":42,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1378,"byte_end":1394,"line_start":42,"line_end":42,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":333,"byte_end":1398,"line_start":8,"line_end":43,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":92},{"krate":0,"index":105},{"krate":0,"index":120},{"krate":0,"index":189},{"krate":0,"index":273},{"krate":0,"index":471},{"krate":0,"index":499},{"krate":0,"index":523},{"krate":0,"index":539},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"/ This library provides implementations of `Mutex`, `RwLock`, `Condvar` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":333,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ `Once` that are smaller, faster and more flexible than those in the Rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":411,"byte_end":487,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ standard library. It also provides a `ReentrantMutex` type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":488,"byte_end":551,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":576,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2252,"byte_end":2269,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2090,"byte_end":2165,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2166,"byte_end":2195,"line_start":20,"line_end":20,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2390,"byte_end":2399,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns whether the wait was known to have timed out.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2307,"byte_end":2364,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2369,"byte_end":2378,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4550,"byte_end":4557,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":67}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2441,"byte_end":2465,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2466,"byte_end":2469,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2470,"byte_end":2546,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2547,"byte_end":2618,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2619,"byte_end":2696,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2697,"byte_end":2773,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ determining that thread must block.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2774,"byte_end":2813,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2814,"byte_end":2817,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that this module places one additional restriction over the system","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2818,"byte_end":2893,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ condition variables: each condvar can be used with only one mutex at a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2894,"byte_end":2968,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ time. Any attempt to use multiple mutexes on the same condition variable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2969,"byte_end":3045,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ simultaneously will result in a runtime panic. However it is possible to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3046,"byte_end":3122,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ switch to a different mutex if there are no threads currently waiting on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3123,"byte_end":3199,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ the condition variable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3200,"byte_end":3227,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3228,"byte_end":3231,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Condvar`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3232,"byte_end":3285,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3286,"byte_end":3289,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - No spurious wakeups: A wait will only return a non-timeout result if it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3290,"byte_end":3367,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   was woken up by `notify_one` or `notify_all`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3368,"byte_end":3419,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ - `Condvar::notify_all` will only wake up a single thread, the rest are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3420,"byte_end":3495,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/   requeued to wait for the `Mutex` to be unlocked by the thread that was","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3496,"byte_end":3572,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/   woken up.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3573,"byte_end":3588,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3589,"byte_end":3664,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/   `Condvar` due to platform limitations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3665,"byte_end":3709,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3710,"byte_end":3788,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3789,"byte_end":3839,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3840,"byte_end":3888,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3889,"byte_end":3892,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3893,"byte_end":3907,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3908,"byte_end":3911,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3912,"byte_end":3919,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Mutex, Condvar};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3920,"byte_end":3958,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3959,"byte_end":3982,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":3983,"byte_end":4003,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4004,"byte_end":4007,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4008,"byte_end":4069,"line_start":67,"line_end":67,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4070,"byte_end":4099,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4100,"byte_end":4103,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4104,"byte_end":4180,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ thread::spawn(move|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4181,"byte_end":4207,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/     let &(ref lock, ref cvar) = &*pair2;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4208,"byte_end":4252,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/     let mut started = lock.lock();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4253,"byte_end":4291,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     *started = true;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4292,"byte_end":4316,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/     cvar.notify_one();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4317,"byte_end":4343,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4344,"byte_end":4351,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4352,"byte_end":4355,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4356,"byte_end":4394,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ let &(ref lock, ref cvar) = &*pair;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4395,"byte_end":4434,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ let mut started = lock.lock();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4435,"byte_end":4469,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ while !*started {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4470,"byte_end":4491,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     cvar.wait(&mut started);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4492,"byte_end":4524,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4525,"byte_end":4530,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4531,"byte_end":4538,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4735,"byte_end":4738,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<Condvar>::new","value":"pub const fn new() -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"/ Creates a new condition variable which is ready to be waited on and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4614,"byte_end":4685,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ notified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4690,"byte_end":4703,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4708,"byte_end":4717,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5543,"byte_end":5553,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4824,"byte_end":4872,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4877,"byte_end":4880,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns whether a thread was woken up.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4885,"byte_end":4927,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4932,"byte_end":4935,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4940,"byte_end":5013,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to `wait` or `wait_timeout`. Calls to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5018,"byte_end":5085,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5090,"byte_end":5135,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5140,"byte_end":5143,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see `notify_all()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5148,"byte_end":5195,"line_start":105,"line_end":105,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5200,"byte_end":5203,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5208,"byte_end":5222,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5227,"byte_end":5230,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5235,"byte_end":5242,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Condvar;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5247,"byte_end":5276,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5281,"byte_end":5284,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let condvar = Condvar::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5289,"byte_end":5322,"line_start":112,"line_end":112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5327,"byte_end":5330,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // do something with condvar, share it with other threads","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5335,"byte_end":5396,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5401,"byte_end":5404,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ if !condvar.notify_one() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5409,"byte_end":5439,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/     println!(\"Nobody was listening for this.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5444,"byte_end":5495,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5500,"byte_end":5505,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5510,"byte_end":5517,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5522,"byte_end":5531,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":8006,"byte_end":8016,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7639,"byte_end":7688,"line_start":172,"line_end":172,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7693,"byte_end":7696,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Returns the number of threads woken up.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7701,"byte_end":7744,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7749,"byte_end":7752,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7757,"byte_end":7826,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `notify_all()` are not buffered in any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7831,"byte_end":7903,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ way.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7908,"byte_end":7916,"line_start":178,"line_end":178,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7921,"byte_end":7924,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see `notify_one()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7929,"byte_end":7980,"line_start":180,"line_end":180,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7985,"byte_end":7994,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11029,"byte_end":11033,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"pub fn wait<T: ?Sized>(&Self, &mut MutexGuard<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10380,"byte_end":10450,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10455,"byte_end":10472,"line_start":239,"line_end":239,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10477,"byte_end":10480,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10485,"byte_end":10561,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/ `mutex_guard`) and block the current thread. This means that any calls","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10566,"byte_end":10640,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ to `notify_*()` which happen logically after the mutex is unlocked are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10645,"byte_end":10719,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ candidates to wake this thread up. When this function call returns, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10724,"byte_end":10799,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ lock specified will have been re-acquired.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10804,"byte_end":10850,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10855,"byte_end":10858,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10863,"byte_end":10875,"line_start":247,"line_end":247,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10880,"byte_end":10883,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10888,"byte_end":10962,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":10967,"byte_end":11003,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11008,"byte_end":11017,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12308,"byte_end":12318,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub fn wait_until<T: ?Sized>(&Self, &mut MutexGuard<, T>, Instant)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11191,"byte_end":11264,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ the specified time instant.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11269,"byte_end":11300,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11305,"byte_end":11308,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11313,"byte_end":11386,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked roughly until `timeout` is reached. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11391,"byte_end":11462,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11467,"byte_end":11540,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11545,"byte_end":11614,"line_start":262,"line_end":262,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11619,"byte_end":11671,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11676,"byte_end":11679,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11684,"byte_end":11755,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11760,"byte_end":11836,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11841,"byte_end":11861,"line_start":267,"line_end":267,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11866,"byte_end":11869,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11874,"byte_end":11944,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11949,"byte_end":11975,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11980,"byte_end":11983,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11988,"byte_end":12062,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12067,"byte_end":12129,"line_start":273,"line_end":273,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12134,"byte_end":12137,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12142,"byte_end":12154,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12159,"byte_end":12162,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12167,"byte_end":12241,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12246,"byte_end":12282,"line_start":278,"line_end":278,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12287,"byte_end":12296,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16677,"byte_end":16685,"line_start":381,"line_end":381,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"pub fn wait_for<T: ?Sized>(&Self, &mut MutexGuard<, T>, Duration)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15427,"byte_end":15502,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15507,"byte_end":15530,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15535,"byte_end":15538,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15543,"byte_end":15616,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `timeout`. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15621,"byte_end":15694,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15699,"byte_end":15772,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15777,"byte_end":15846,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15851,"byte_end":15903,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15908,"byte_end":15911,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15916,"byte_end":15987,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":15992,"byte_end":16068,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16073,"byte_end":16093,"line_start":367,"line_end":367,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16098,"byte_end":16101,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16106,"byte_end":16176,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16181,"byte_end":16207,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16212,"byte_end":16215,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16220,"byte_end":16294,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16299,"byte_end":16361,"line_start":373,"line_end":373,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16366,"byte_end":16369,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16374,"byte_end":16386,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16391,"byte_end":16394,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Panics if the given `timeout` is so large that it can't be added to the current time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16399,"byte_end":16488,"line_start":377,"line_end":377,"column_start":5,"column_end":94}},{"value":"/ This panic is not possible if the crate is built with the `nightly` feature, then a too","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16493,"byte_end":16584,"line_start":378,"line_end":378,"column_start":5,"column_end":96}},{"value":"/ large `timeout` becomes equivalent to just calling `wait`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16589,"byte_end":16651,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16656,"byte_end":16665,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25192,"byte_end":25199,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31933,"byte_end":31938,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28541,"byte_end":28607,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28608,"byte_end":28611,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28612,"byte_end":28691,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28692,"byte_end":28759,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28760,"byte_end":28839,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28840,"byte_end":28915,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28916,"byte_end":28995,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":28996,"byte_end":29039,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29040,"byte_end":29043,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29044,"byte_end":29058,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29059,"byte_end":29062,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29063,"byte_end":29142,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same mutex in succession, which can starve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29143,"byte_end":29223,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ other threads waiting to acquire the mutex. While this improves performance","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29224,"byte_end":29303,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29304,"byte_end":29383,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a mutex it has just released, this can starve other threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29384,"byte_end":29448,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29449,"byte_end":29452,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29453,"byte_end":29534,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29535,"byte_end":29606,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29607,"byte_end":29685,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the mutex.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29686,"byte_end":29763,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29764,"byte_end":29767,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29768,"byte_end":29845,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29846,"byte_end":29925,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29926,"byte_end":29951,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29952,"byte_end":29955,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `MutexGuard::unlock_fair` when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":29956,"byte_end":30034,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ unlocking a mutex instead of simply dropping the `MutexGuard`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30035,"byte_end":30101,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30102,"byte_end":30105,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30106,"byte_end":30157,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30158,"byte_end":30161,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30162,"byte_end":30221,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30222,"byte_end":30297,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   `Mutex` due to platform limitations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30298,"byte_end":30340,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30341,"byte_end":30419,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30420,"byte_end":30470,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30471,"byte_end":30519,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30520,"byte_end":30589,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30590,"byte_end":30643,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the mutex is fair on average.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30644,"byte_end":30714,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ - Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30715,"byte_end":30798,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30799,"byte_end":30802,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30803,"byte_end":30817,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30818,"byte_end":30821,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30822,"byte_end":30829,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30830,"byte_end":30853,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ use parking_lot::Mutex;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30854,"byte_end":30881,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30882,"byte_end":30902,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30903,"byte_end":30936,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30937,"byte_end":30940,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30941,"byte_end":30965,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30966,"byte_end":30969,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":30970,"byte_end":31049,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31050,"byte_end":31111,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31112,"byte_end":31118,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31119,"byte_end":31200,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31201,"byte_end":31242,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31243,"byte_end":31282,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31283,"byte_end":31286,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31287,"byte_end":31316,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31317,"byte_end":31337,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31338,"byte_end":31395,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31396,"byte_end":31427,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31428,"byte_end":31503,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31504,"byte_end":31581,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31582,"byte_end":31653,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31654,"byte_end":31693,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31694,"byte_end":31717,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31718,"byte_end":31745,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31746,"byte_end":31783,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31784,"byte_end":31797,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31798,"byte_end":31869,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31870,"byte_end":31881,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31882,"byte_end":31887,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31888,"byte_end":31891,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31892,"byte_end":31915,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31916,"byte_end":31923,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32253,"byte_end":32263,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31975,"byte_end":32055,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32056,"byte_end":32116,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32117,"byte_end":32120,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32121,"byte_end":32199,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32200,"byte_end":32243,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32687,"byte_end":32703,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `MutexGuard::map`, which can point to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32313,"byte_end":32388,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ subfield of the protected data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32389,"byte_end":32424,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32425,"byte_end":32428,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedMutexGuard` and `MutexGuard` is that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32429,"byte_end":32508,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32509,"byte_end":32584,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32585,"byte_end":32665,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32666,"byte_end":32677,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39012,"byte_end":39015,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[{"value":"/ A closure has not been executed yet","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":38968,"byte_end":39007,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":630},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39067,"byte_end":39075,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[{"value":"/ A closure was executed but panicked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39022,"byte_end":39062,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":632},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39133,"byte_end":39143,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[{"value":"/ A thread is currently executing a closure.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39082,"byte_end":39128,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":634},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39196,"byte_end":39200,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[{"value":"/ A closure has completed successfully.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39150,"byte_end":39191,"line_start":41,"line_end":41,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":627},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":38952,"byte_end":38961,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"pub enum OnceState { New, Poisoned, InProgress, Done, }","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[{"value":"/ Current state of a `Once`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":38867,"byte_end":38897,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39480,"byte_end":39488,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"pub fn poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has been poisoned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39226,"byte_end":39286,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39291,"byte_end":39294,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Once an initialization routine for a `Once` has panicked it will forever","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39299,"byte_end":39375,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ indicate to future forced initialization routines that it is poisoned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39380,"byte_end":39454,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39459,"byte_end":39468,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39726,"byte_end":39730,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"pub fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has successfully executed a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39614,"byte_end":39683,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ closure.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39688,"byte_end":39700,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39705,"byte_end":39714,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40553,"byte_end":40557,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39850,"byte_end":39917,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ initialization. Useful for one-time initialization for globals, FFI or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39918,"byte_end":39992,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ related functionality.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39993,"byte_end":40019,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40020,"byte_end":40023,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Once`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40024,"byte_end":40074,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40075,"byte_end":40078,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - Only requires 1 byte of space, instead of 1 word.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40079,"byte_end":40134,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/ - Not required to be `'static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40135,"byte_end":40170,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/ - Relaxed memory barriers in the fast path, which can significantly improve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40171,"byte_end":40250,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/   performance on some architectures.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40251,"byte_end":40291,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40292,"byte_end":40361,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40362,"byte_end":40365,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40366,"byte_end":40380,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40381,"byte_end":40384,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40385,"byte_end":40392,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40393,"byte_end":40419,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40420,"byte_end":40423,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ static START: Once = Once::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40424,"byte_end":40461,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40462,"byte_end":40465,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ START.call_once(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40466,"byte_end":40490,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/     // run initialization here","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40491,"byte_end":40525,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40526,"byte_end":40533,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40534,"byte_end":40541,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40649,"byte_end":40652,"line_start":97,"line_end":97,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"pub const fn new() -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40586,"byte_end":40617,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40622,"byte_end":40631,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40778,"byte_end":40783,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"pub fn state(&Self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of this `Once`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40707,"byte_end":40752,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40757,"byte_end":40766,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43056,"byte_end":43065,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"pub fn call_once<F>(&Self, F) where F: FnOnce() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41140,"byte_end":41216,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41221,"byte_end":41296,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41301,"byte_end":41353,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41358,"byte_end":41361,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41366,"byte_end":41437,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41442,"byte_end":41475,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41480,"byte_end":41483,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41488,"byte_end":41561,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41566,"byte_end":41641,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41646,"byte_end":41721,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41726,"byte_end":41793,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41798,"byte_end":41874,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41879,"byte_end":41891,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41896,"byte_end":41899,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41904,"byte_end":41918,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41923,"byte_end":41926,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41931,"byte_end":41938,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Once;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41943,"byte_end":41969,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41974,"byte_end":41977,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ static mut VAL: usize = 0;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":41982,"byte_end":42012,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/ static INIT: Once = Once::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42017,"byte_end":42053,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42058,"byte_end":42061,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Accessing a `static mut` is unsafe much of the time, but if we do so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42066,"byte_end":42141,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ // in a synchronized fashion (e.g. write once or read all) then we're","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42146,"byte_end":42219,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ // good to go!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42224,"byte_end":42242,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ //","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42247,"byte_end":42253,"line_start":141,"line_end":141,"column_start":5,"column_end":11}},{"value":"/ // This function will only call `expensive_computation` once, and will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42258,"byte_end":42332,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ // otherwise always return the value returned from the first invocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42337,"byte_end":42413,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ fn get_cached_val() -> usize {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42418,"byte_end":42452,"line_start":144,"line_end":144,"column_start":5,"column_end":39}},{"value":"/     unsafe {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42457,"byte_end":42473,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/         INIT.call_once(|| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42478,"byte_end":42509,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/             VAL = expensive_computation();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42514,"byte_end":42560,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42565,"byte_end":42580,"line_start":148,"line_end":148,"column_start":5,"column_end":20}},{"value":"/         VAL","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42585,"byte_end":42600,"line_start":149,"line_end":149,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42605,"byte_end":42614,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42619,"byte_end":42624,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42629,"byte_end":42632,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation() -> usize {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42637,"byte_end":42678,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42683,"byte_end":42697,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/ # 2","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42702,"byte_end":42709,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42714,"byte_end":42719,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42724,"byte_end":42731,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42736,"byte_end":42739,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42744,"byte_end":42756,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42761,"byte_end":42764,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42769,"byte_end":42833,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42838,"byte_end":42914,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":42919,"byte_end":42995,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43000,"byte_end":43030,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43035,"byte_end":43044,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43816,"byte_end":43831,"line_start":188,"line_end":188,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"pub fn call_once_force<F>(&Self, F) where F: FnOnce(OnceState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as `call_once` except ignores poisoning.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43333,"byte_end":43404,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43409,"byte_end":43412,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If this `Once` has been poisoned (some initialization panicked) then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43417,"byte_end":43489,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ this function will continue to attempt to call initialization functions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43494,"byte_end":43569,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ until one of them doesn't panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43574,"byte_end":43610,"line_start":182,"line_end":182,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43615,"byte_end":43618,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a structure which can be used to query the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43623,"byte_end":43696,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ state of this `Once` (whether initialization has previously panicked or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43701,"byte_end":43776,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ not).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43781,"byte_end":43790,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43795,"byte_end":43804,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53426,"byte_end":53434,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":248}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw mutex type backed by the parking lot.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53369,"byte_end":53414,"line_start":34,"line_end":34,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64337,"byte_end":64346,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw reader-writer lock type backed by the parking lot.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64267,"byte_end":64325,"line_start":58,"line_end":58,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98496,"byte_end":98507,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[{"value":"/ Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98407,"byte_end":98484,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":491},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99511,"byte_end":99525,"line_start":40,"line_end":40,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[{"value":"/ A mutex which can be recursively locked by a single thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99038,"byte_end":99101,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99102,"byte_end":99105,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type is identical to `Mutex` except for the following points:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99106,"byte_end":99176,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99177,"byte_end":99180,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - Locking multiple times from the same thread will work correctly instead of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99181,"byte_end":99261,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/   deadlocking.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99262,"byte_end":99280,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ - `ReentrantMutexGuard` does not give mutable references to the locked data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99281,"byte_end":99361,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/   Use a `RefCell` if you need this.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99362,"byte_end":99401,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99402,"byte_end":99405,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See [`Mutex`](struct.Mutex.html) for more details about the underlying mutex","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99406,"byte_end":99486,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ primitive.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99487,"byte_end":99501,"line_start":39,"line_end":39,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99856,"byte_end":99875,"line_start":47,"line_end":47,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99584,"byte_end":99671,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99672,"byte_end":99735,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99736,"byte_end":99739,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99740,"byte_end":99818,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ `Deref` implementation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99819,"byte_end":99846,"line_start":46,"line_end":46,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100348,"byte_end":100373,"line_start":56,"line_end":56,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99947,"byte_end":100031,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100032,"byte_end":100067,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100068,"byte_end":100071,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100072,"byte_end":100169,"line_start":52,"line_end":52,"column_start":1,"column_end":98}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100170,"byte_end":100245,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100246,"byte_end":100326,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100327,"byte_end":100338,"line_start":55,"line_end":55,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":506},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106434,"byte_end":106440,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":102875,"byte_end":102899,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":102900,"byte_end":102903,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":102904,"byte_end":102981,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":102982,"byte_end":103061,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103062,"byte_end":103141,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103142,"byte_end":103200,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103201,"byte_end":103204,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This lock uses a task-fair locking policy which avoids both reader and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103205,"byte_end":103279,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ writer starvation. This means that readers trying to acquire the lock will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103280,"byte_end":103358,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ block even if the lock is unlocked when there are writers waiting to acquire","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103359,"byte_end":103439,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the lock. Because of this, attempts to recursively acquire a read lock","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103440,"byte_end":103514,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ within a single thread may result in a deadlock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103515,"byte_end":103567,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103568,"byte_end":103571,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103572,"byte_end":103649,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies `Send` to be shared across threads and `Sync` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103650,"byte_end":103730,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ allow concurrent access through readers. The RAII guards returned from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103731,"byte_end":103809,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ locking methods implement `Deref` (and `DerefMut` for the `write` methods)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103810,"byte_end":103888,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to allow access to the contained of the lock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103889,"byte_end":103938,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103939,"byte_end":103942,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103943,"byte_end":103957,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103958,"byte_end":103961,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":103962,"byte_end":104041,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same lock in succession, which can starve","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104042,"byte_end":104121,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ other threads waiting to acquire the rwlock. While this improves performance","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104122,"byte_end":104202,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104203,"byte_end":104282,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a rwlock it has just released, this can starve other threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104283,"byte_end":104348,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104349,"byte_end":104352,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104353,"byte_end":104435,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104436,"byte_end":104507,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104508,"byte_end":104586,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the rwlock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104587,"byte_end":104665,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104666,"byte_end":104669,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104670,"byte_end":104747,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104748,"byte_end":104827,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104828,"byte_end":104853,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104854,"byte_end":104857,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104858,"byte_end":104936,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ or `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":104937,"byte_end":105016,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ dropping the guard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105017,"byte_end":105040,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105041,"byte_end":105044,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `RwLock`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105045,"byte_end":105097,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105098,"byte_end":105101,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Supports atomically downgrading a write lock into a read lock.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105102,"byte_end":105170,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ - Task-fair locking policy instead of an unspecified platform default.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105171,"byte_end":105245,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105246,"byte_end":105305,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105306,"byte_end":105381,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/   `RwLock` due to platform limitations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105382,"byte_end":105425,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105426,"byte_end":105504,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105505,"byte_end":105555,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105556,"byte_end":105604,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105605,"byte_end":105674,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105675,"byte_end":105728,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the rwlock is fair on average.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105729,"byte_end":105800,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ - Optionally allows making the rwlock fair by calling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105801,"byte_end":105858,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/   `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105859,"byte_end":105932,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105933,"byte_end":105936,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105937,"byte_end":105951,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105952,"byte_end":105955,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105956,"byte_end":105963,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::RwLock;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105964,"byte_end":105992,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105993,"byte_end":105996,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":105997,"byte_end":106027,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106028,"byte_end":106031,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // many reader locks can be held at once","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106032,"byte_end":106076,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106077,"byte_end":106082,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106083,"byte_end":106112,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     let r2 = lock.read();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106113,"byte_end":106142,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106143,"byte_end":106170,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106171,"byte_end":106198,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ } // read locks are dropped at this point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106199,"byte_end":106244,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106245,"byte_end":106248,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // only one write lock may be held, however","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106249,"byte_end":106296,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106297,"byte_end":106302,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106303,"byte_end":106336,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/     *w += 1;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106337,"byte_end":106353,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106354,"byte_end":106380,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ } // write lock is dropped here","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106381,"byte_end":106416,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106417,"byte_end":106424,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":508},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106574,"byte_end":106589,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106479,"byte_end":106551,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106552,"byte_end":106564,"line_start":92,"line_end":92,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":511},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106744,"byte_end":106760,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106645,"byte_end":106721,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106722,"byte_end":106734,"line_start":96,"line_end":96,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":514},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107210,"byte_end":107231,"line_start":106,"line_end":106,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106817,"byte_end":106901,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106902,"byte_end":106937,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106938,"byte_end":106941,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106942,"byte_end":107031,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107032,"byte_end":107107,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107108,"byte_end":107188,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107189,"byte_end":107200,"line_start":105,"line_end":105,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":517},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107690,"byte_end":107712,"line_start":115,"line_end":115,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107293,"byte_end":107379,"line_start":108,"line_end":108,"column_start":1,"column_end":87}},{"value":"/ subfield of the protected data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107380,"byte_end":107415,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107416,"byte_end":107419,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107420,"byte_end":107511,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107512,"byte_end":107587,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107588,"byte_end":107668,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107669,"byte_end":107680,"line_start":114,"line_end":114,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":520},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107874,"byte_end":107899,"line_start":119,"line_end":119,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the upgradable read access of a lock when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107775,"byte_end":107851,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107852,"byte_end":107864,"line_start":118,"line_end":118,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2283,"byte_end":2300,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4600,"byte_end":4607,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16983,"byte_end":16990,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":17089,"byte_end":17096,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25958,"byte_end":25969,"line_start":34,"line_end":34,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39210,"byte_end":39219,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40575,"byte_end":40579,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":47650,"byte_end":47660,"line_start":289,"line_end":289,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48862,"byte_end":48866,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48959,"byte_end":48963,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53491,"byte_end":53499,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":54878,"byte_end":54886,"line_start":89,"line_end":89,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":55364,"byte_end":55372,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":56363,"byte_end":56371,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64407,"byte_end":64416,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":66361,"byte_end":66370,"line_start":135,"line_end":135,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67226,"byte_end":67235,"line_start":169,"line_end":169,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67560,"byte_end":67569,"line_start":181,"line_end":181,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69226,"byte_end":69235,"line_start":246,"line_end":246,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69795,"byte_end":69804,"line_start":267,"line_end":267,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":70536,"byte_end":70545,"line_start":295,"line_end":295,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":72366,"byte_end":72375,"line_start":365,"line_end":365,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73200,"byte_end":73209,"line_start":395,"line_end":395,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73865,"byte_end":73874,"line_start":418,"line_end":418,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":75192,"byte_end":75201,"line_start":464,"line_end":464,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98538,"byte_end":98549,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/util.rs","byte_start":120823,"byte_end":120829,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2283,"byte_end":2300,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4600,"byte_end":4607,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16983,"byte_end":16990,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":17089,"byte_end":17096,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25958,"byte_end":25969,"line_start":34,"line_end":34,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":43799},"to":{"krate":0,"index":96}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39210,"byte_end":39219,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40575,"byte_end":40579,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":47650,"byte_end":47660,"line_start":289,"line_end":289,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48862,"byte_end":48866,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48959,"byte_end":48963,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53491,"byte_end":53499,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":247},"to":{"krate":18,"index":31}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":54878,"byte_end":54886,"line_start":89,"line_end":89,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":247},"to":{"krate":18,"index":37}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":55364,"byte_end":55372,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":247},"to":{"krate":18,"index":40}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":56363,"byte_end":56371,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64407,"byte_end":64416,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":495}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":66361,"byte_end":66370,"line_start":135,"line_end":135,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":504}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67226,"byte_end":67235,"line_start":169,"line_end":169,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":509}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67560,"byte_end":67569,"line_start":181,"line_end":181,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":511}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69226,"byte_end":69235,"line_start":246,"line_end":246,"column_start":36,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":518}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69795,"byte_end":69804,"line_start":267,"line_end":267,"column_start":41,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":521}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":70536,"byte_end":70545,"line_start":295,"line_end":295,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":524}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":72366,"byte_end":72375,"line_start":365,"line_end":365,"column_start":38,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":530}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73200,"byte_end":73209,"line_start":395,"line_end":395,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":533}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73865,"byte_end":73874,"line_start":418,"line_end":418,"column_start":39,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":377},"to":{"krate":18,"index":536}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":75192,"byte_end":75201,"line_start":464,"line_end":464,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98538,"byte_end":98549,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":485},"to":{"krate":18,"index":260}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/util.rs","byte_start":120823,"byte_end":120829,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":43184},"to":{"krate":0,"index":531}}]}