{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rayon","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=e5205247cb691aed","-C","extra-filename=-e5205247cb691aed","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","crossbeam_deque=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libcrossbeam_deque-0d65f9f55f775b07.rmeta","--extern","either=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libeither-78df72a3e8169b8f.rmeta","--extern","rayon_core=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/librayon_core-9da06c04745ab12f.rmeta","--cap-lints","allow","--cfg","step_by","--cfg","min_const_generics","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/librayon-e5205247cb691aed.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[15581487583000897734,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","num":18,"id":{"name":"either","disambiguator":[3090605510048880719,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":19,"id":{"name":"rayon_core","disambiguator":[12122822171439454447,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":20,"id":{"name":"crossbeam_channel","disambiguator":[10545236891472873912,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":21,"id":{"name":"cfg_if","disambiguator":[6307414420431848641,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[8262850175950159807,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":23,"id":{"name":"lazy_static","disambiguator":[12239284516392196751,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[11198173576864885088,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[9554840301130494253,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":26,"id":{"name":"scopeguard","disambiguator":[1679479393273212407,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":27,"id":{"name":"memoffset","disambiguator":[1843857808518618569,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":28,"id":{"name":"num_cpus","disambiguator":[16487926303637625758,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","num":29,"id":{"name":"libc","disambiguator":[5366990215584721661,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":0,"byte_end":4663,"line_start":1,"line_end":121,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":216},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35680,"byte_end":35686,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6734},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37090,"byte_end":37095,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37109,"byte_end":37115,"line_start":156,"line_end":156,"column_start":13,"column_end":19},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6757},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37129,"byte_end":37135,"line_start":157,"line_end":157,"column_start":13,"column_end":19},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6766},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37149,"byte_end":37155,"line_start":158,"line_end":158,"column_start":13,"column_end":19},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37169,"byte_end":37174,"line_start":159,"line_end":159,"column_start":13,"column_end":18},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":951},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37176,"byte_end":37181,"line_start":159,"line_end":159,"column_start":20,"column_end":25},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6775},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37199,"byte_end":37208,"line_start":160,"line_end":160,"column_start":16,"column_end":25},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6784},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37222,"byte_end":37228,"line_start":161,"line_end":161,"column_start":13,"column_end":19},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6793},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37246,"byte_end":37255,"line_start":162,"line_end":162,"column_start":17,"column_end":26},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6810},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37271,"byte_end":37278,"line_start":163,"line_end":163,"column_start":15,"column_end":22},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6819},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37299,"byte_end":37310,"line_start":164,"line_end":164,"column_start":20,"column_end":31},"alias_span":null,"name":"FlatMapIter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6828},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37325,"byte_end":37332,"line_start":165,"line_end":165,"column_start":14,"column_end":21},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6837},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37352,"byte_end":37363,"line_start":166,"line_end":166,"column_start":19,"column_end":30},"alias_span":null,"name":"FlattenIter","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37376,"byte_end":37380,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6858},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37382,"byte_end":37390,"line_start":167,"line_end":167,"column_start":18,"column_end":26},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37406,"byte_end":37413,"line_start":168,"line_end":168,"column_start":14,"column_end":21},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6879},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37431,"byte_end":37441,"line_start":169,"line_end":169,"column_start":17,"column_end":27},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6892},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37468,"byte_end":37486,"line_start":170,"line_end":170,"column_start":26,"column_end":44},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6904},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37505,"byte_end":37516,"line_start":171,"line_end":171,"column_start":18,"column_end":29},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6924},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37528,"byte_end":37534,"line_start":172,"line_end":172,"column_start":11,"column_end":17},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6914},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37536,"byte_end":37542,"line_start":172,"line_end":172,"column_start":19,"column_end":25},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6934},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37554,"byte_end":37557,"line_start":173,"line_end":173,"column_start":10,"column_end":13},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6955},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37574,"byte_end":37581,"line_start":174,"line_end":174,"column_start":16,"column_end":23},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6943},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37583,"byte_end":37590,"line_start":174,"line_end":174,"column_start":25,"column_end":32},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":6967},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37607,"byte_end":37615,"line_start":175,"line_end":175,"column_start":15,"column_end":23},"alias_span":null,"name":"MultiZip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":2883},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37628,"byte_end":37632,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37634,"byte_end":37638,"line_start":176,"line_end":176,"column_start":18,"column_end":22},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37657,"byte_end":37666,"line_start":177,"line_end":177,"column_start":17,"column_end":26},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7871},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37685,"byte_end":37695,"line_start":178,"line_end":178,"column_start":18,"column_end":28},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37697,"byte_end":37711,"line_start":178,"line_end":178,"column_start":30,"column_end":44},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7880},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37729,"byte_end":37738,"line_start":179,"line_end":179,"column_start":16,"column_end":25},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3299},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37753,"byte_end":37759,"line_start":180,"line_end":180,"column_start":14,"column_end":20},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3320},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37761,"byte_end":37768,"line_start":180,"line_end":180,"column_start":22,"column_end":29},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7889},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37770,"byte_end":37776,"line_start":180,"line_end":180,"column_start":31,"column_end":37},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7898},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37778,"byte_end":37785,"line_start":180,"line_end":180,"column_start":39,"column_end":46},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7908},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37797,"byte_end":37800,"line_start":181,"line_end":181,"column_start":10,"column_end":13},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7917},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37812,"byte_end":37816,"line_start":182,"line_end":182,"column_start":11,"column_end":15},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":3449},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37833,"byte_end":37838,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7927},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37840,"byte_end":37845,"line_start":183,"line_end":183,"column_start":23,"column_end":28},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7936},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37858,"byte_end":37862,"line_start":184,"line_end":184,"column_start":11,"column_end":15},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7946},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37879,"byte_end":37886,"line_start":185,"line_end":185,"column_start":16,"column_end":23},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7961},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37888,"byte_end":37899,"line_start":185,"line_end":185,"column_start":25,"column_end":36},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7973},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37914,"byte_end":37920,"line_start":186,"line_end":186,"column_start":13,"column_end":19},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":7995},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37938,"byte_end":37947,"line_start":187,"line_end":187,"column_start":17,"column_end":26},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8004},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37958,"byte_end":37961,"line_start":188,"line_end":188,"column_start":10,"column_end":13},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8017},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":37975,"byte_end":37980,"line_start":189,"line_end":189,"column_start":13,"column_end":18},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":8029},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38038,"byte_end":38044,"line_start":194,"line_end":194,"column_start":24,"column_end":30},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":357}},{"kind":"Use","ref_id":{"krate":0,"index":4846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428298,"byte_end":428318,"line_start":5,"line_end":5,"column_start":22,"column_end":42},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428341,"byte_end":428364,"line_start":6,"line_end":6,"column_start":22,"column_end":45},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4547},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428387,"byte_end":428407,"line_start":7,"line_end":7,"column_start":22,"column_end":42},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4551},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428430,"byte_end":428453,"line_start":8,"line_end":8,"column_start":22,"column_end":45},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4562},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428476,"byte_end":428502,"line_start":9,"line_end":9,"column_start":22,"column_end":48},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428525,"byte_end":428539,"line_start":10,"line_end":10,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4854},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428562,"byte_end":428579,"line_start":11,"line_end":11,"column_start":22,"column_end":39},"alias_span":null,"name":"ParallelDrainFull","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4858},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428602,"byte_end":428620,"line_start":12,"line_end":12,"column_start":22,"column_end":40},"alias_span":null,"name":"ParallelDrainRange","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4850},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428643,"byte_end":428657,"line_start":13,"line_end":13,"column_start":22,"column_end":36},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":4573},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428680,"byte_end":428696,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":5377},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428720,"byte_end":428733,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":5388},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428757,"byte_end":428773,"line_start":16,"line_end":16,"column_start":23,"column_end":39},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":0,"index":5709},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428795,"byte_end":428809,"line_start":17,"line_end":17,"column_start":21,"column_end":35},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":4948}},{"kind":"Use","ref_id":{"krate":19,"index":1363},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4239,"byte_end":4248,"line_start":112,"line_end":112,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":428},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4270,"byte_end":4283,"line_start":113,"line_end":113,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":923},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4305,"byte_end":4315,"line_start":114,"line_end":114,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1351},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4337,"byte_end":4357,"line_start":115,"line_end":115,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1058},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4379,"byte_end":4396,"line_start":116,"line_end":116,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1057},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4419,"byte_end":4438,"line_start":117,"line_end":117,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":968},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4440,"byte_end":4460,"line_start":117,"line_end":117,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":663},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4484,"byte_end":4498,"line_start":118,"line_end":118,"column_start":22,"column_end":36},"alias_span":null,"name":"in_place_scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":651},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4500,"byte_end":4505,"line_start":118,"line_end":118,"column_start":38,"column_end":43},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":631},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4507,"byte_end":4512,"line_start":118,"line_end":118,"column_start":45,"column_end":50},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":672},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4536,"byte_end":4555,"line_start":119,"line_end":119,"column_start":22,"column_end":41},"alias_span":null,"name":"in_place_scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":657},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4557,"byte_end":4567,"line_start":119,"line_end":119,"column_start":43,"column_end":53},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":634},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4569,"byte_end":4578,"line_start":119,"line_end":119,"column_start":55,"column_end":64},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":198},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4602,"byte_end":4606,"line_start":120,"line_end":120,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":208},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4608,"byte_end":4620,"line_start":120,"line_end":120,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4644,"byte_end":4649,"line_start":121,"line_end":121,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":862},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4651,"byte_end":4661,"line_start":121,"line_end":121,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":0,"byte_end":4663,"line_start":1,"line_end":121,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11},{"krate":0,"index":50},{"krate":0,"index":104},{"krate":0,"index":357},{"krate":0,"index":4886},{"krate":0,"index":4948},{"krate":0,"index":4988},{"krate":0,"index":5065},{"krate":0,"index":5129},{"krate":0,"index":5173},{"krate":0,"index":5702},{"krate":0,"index":5938},{"krate":0,"index":5965},{"krate":0,"index":6098},{"krate":0,"index":6112},{"krate":0,"index":6143},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6160},{"krate":0,"index":6163},{"krate":0,"index":6166},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6173},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6190},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6207}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":142,"byte_end":168,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":170,"byte_end":239,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":240,"byte_end":270,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":271,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":275,"byte_end":356,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":357,"byte_end":429,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":430,"byte_end":491,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":492,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":496,"byte_end":518,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":519,"byte_end":522,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":523,"byte_end":559,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":560,"byte_end":563,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":564,"byte_end":647,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":648,"byte_end":683,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":684,"byte_end":774,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":775,"byte_end":803,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/     - The [`ParallelIterator`] trait defines general methods for all parallel iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":804,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/     - The [`IndexedParallelIterator`] trait adds methods for iterators that support random","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":897,"byte_end":991,"line_start":23,"line_end":23,"column_start":1,"column_end":95}},{"value":"/       access.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":992,"byte_end":1009,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1010,"byte_end":1091,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1092,"byte_end":1178,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1179,"byte_end":1210,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1211,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1289,"byte_end":1350,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1351,"byte_end":1442,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1443,"byte_end":1529,"line_start":31,"line_end":31,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1530,"byte_end":1553,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1558,"byte_end":1592,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1593,"byte_end":1619,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1620,"byte_end":1648,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1649,"byte_end":1716,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1717,"byte_end":1787,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1788,"byte_end":1844,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1845,"byte_end":1848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1849,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1893,"byte_end":1954,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1955,"byte_end":1958,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":1959,"byte_end":2027,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2028,"byte_end":2096,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2097,"byte_end":2165,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2166,"byte_end":2234,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2235,"byte_end":2286,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2287,"byte_end":2290,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2291,"byte_end":2363,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2364,"byte_end":2437,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2438,"byte_end":2489,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2494,"byte_end":2536,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2537,"byte_end":2593,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2594,"byte_end":2660,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2661,"byte_end":2723,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2724,"byte_end":2782,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2783,"byte_end":2844,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: iter/trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2845,"byte_end":2903,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/ [`IndexedParallelIterator`]: iter/trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2904,"byte_end":2976,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2977,"byte_end":2980,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":2981,"byte_end":2999,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3000,"byte_end":3003,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3004,"byte_end":3074,"line_start":66,"line_end":66,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3075,"byte_end":3140,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3141,"byte_end":3206,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3207,"byte_end":3276,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3277,"byte_end":3336,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3337,"byte_end":3405,"line_start":71,"line_end":71,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3406,"byte_end":3472,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3473,"byte_end":3532,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3533,"byte_end":3548,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3553,"byte_end":3636,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3637,"byte_end":3725,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3726,"byte_end":3769,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3770,"byte_end":3773,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3774,"byte_end":3796,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3797,"byte_end":3800,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3801,"byte_end":3830,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3831,"byte_end":3834,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3835,"byte_end":3898,"line_start":84,"line_end":84,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/private.rs","byte_start":7181,"byte_end":7194,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/private.rs","byte_start":7009,"byte_end":7074,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/private.rs","byte_start":7075,"byte_end":7129,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/private.rs","byte_start":7130,"byte_end":7169,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"array","qualname":"::array","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":82},{"krate":0,"index":6210},{"krate":0,"index":6215},{"krate":0,"index":6220},{"krate":0,"index":89},{"krate":0,"index":96}],"decl_id":null,"docs":" Parallel iterator types for [arrays] (`[T; N]`)","sig":null,"attributes":[{"value":"cfg(min_const_generics)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11746,"byte_end":11773,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/ Parallel iterator types for [arrays] (`[T; N]`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11774,"byte_end":11825,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11826,"byte_end":11829,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11830,"byte_end":11908,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11909,"byte_end":11947,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11948,"byte_end":11951,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Everything in this module requires const generics, stabilized in Rust 1.51.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":11952,"byte_end":12031,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":12032,"byte_end":12035,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [arrays]: https://doc.rust-lang.org/std/primitive.array.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":12036,"byte_end":12100,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":6210},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13236,"byte_end":13244,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::array::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6213}],"decl_id":null,"docs":" Parallel iterator that moves out of an array.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of an array.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13151,"byte_end":13200,"line_start":47,"line_end":47,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":149},{"krate":0,"index":163},{"krate":0,"index":176},{"krate":0,"index":208},{"krate":0,"index":238},{"krate":0,"index":251},{"krate":0,"index":320},{"krate":0,"index":323}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14219,"byte_end":14291,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14292,"byte_end":14295,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14296,"byte_end":14374,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14375,"byte_end":14413,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14414,"byte_end":14417,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":14418,"byte_end":14491,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":6226},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":115},{"krate":0,"index":6242},{"krate":0,"index":6235},{"krate":0,"index":6248},{"krate":0,"index":6252},{"krate":0,"index":120},{"krate":0,"index":6256},{"krate":0,"index":6273},{"krate":0,"index":6265},{"krate":0,"index":6280},{"krate":0,"index":6284},{"krate":0,"index":124},{"krate":0,"index":130},{"krate":0,"index":137},{"krate":0,"index":145}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":16914,"byte_end":16976,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":16977,"byte_end":17049,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17050,"byte_end":17109,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6226},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17290,"byte_end":17298,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6228}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17214,"byte_end":17254,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6248},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17764,"byte_end":17768,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6251}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17669,"byte_end":17735,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6280},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18330,"byte_end":18335,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::binary_heap::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6283}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a binary heap,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a binary heap,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18204,"byte_end":18267,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18268,"byte_end":18301,"line_start":61,"line_end":61,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":6288},{"krate":0,"index":6292},{"krate":0,"index":6296},{"krate":0,"index":6305},{"krate":0,"index":6312},{"krate":0,"index":6317},{"krate":0,"index":158},{"krate":0,"index":6322},{"krate":0,"index":6332},{"krate":0,"index":6340},{"krate":0,"index":6345},{"krate":0,"index":6350},{"krate":0,"index":6360}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":19642,"byte_end":19710,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":19711,"byte_end":19784,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":19785,"byte_end":19844,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6288},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20036,"byte_end":20044,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6291}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":19947,"byte_end":19986,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20379,"byte_end":20383,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6316}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20285,"byte_end":20350,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6340},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20920,"byte_end":20927,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6344}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20829,"byte_end":20891,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":163},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":6368},{"krate":0,"index":6371},{"krate":0,"index":6374},{"krate":0,"index":6382},{"krate":0,"index":6388},{"krate":0,"index":6392},{"krate":0,"index":172},{"krate":0,"index":6396},{"krate":0,"index":6405}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21228,"byte_end":21296,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21297,"byte_end":21367,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21368,"byte_end":21427,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6368},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21619,"byte_end":21627,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6370}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21530,"byte_end":21569,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6388},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21916,"byte_end":21920,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6391}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":21822,"byte_end":21887,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":6412},{"krate":0,"index":6416},{"krate":0,"index":6420},{"krate":0,"index":6430},{"krate":0,"index":6437},{"krate":0,"index":6442},{"krate":0,"index":195},{"krate":0,"index":6447},{"krate":0,"index":6458},{"krate":0,"index":6466},{"krate":0,"index":6471},{"krate":0,"index":6476},{"krate":0,"index":6487},{"krate":0,"index":6495},{"krate":0,"index":6501},{"krate":0,"index":200},{"krate":0,"index":6506}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":22349,"byte_end":22415,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":22416,"byte_end":22488,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":22489,"byte_end":22548,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6412},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":22803,"byte_end":22811,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6415}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":22716,"byte_end":22753,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6437},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23180,"byte_end":23184,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6441}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23088,"byte_end":23151,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23761,"byte_end":23768,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6470}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23672,"byte_end":23732,"line_start":54,"line_end":54,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6495},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":24228,"byte_end":24233,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6499},{"krate":0,"index":6500}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash map,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash map,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":24105,"byte_end":24165,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":24166,"byte_end":24199,"line_start":71,"line_end":71,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":6513},{"krate":0,"index":6516},{"krate":0,"index":6519},{"krate":0,"index":6528},{"krate":0,"index":6534},{"krate":0,"index":6538},{"krate":0,"index":227},{"krate":0,"index":6542},{"krate":0,"index":6552},{"krate":0,"index":6559},{"krate":0,"index":6564},{"krate":0,"index":231},{"krate":0,"index":6568}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":24812,"byte_end":24878,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":24879,"byte_end":24948,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":24949,"byte_end":25008,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6513},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25263,"byte_end":25271,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6515}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25176,"byte_end":25213,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6534},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25594,"byte_end":25598,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6537}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25502,"byte_end":25565,"line_start":30,"line_end":30,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6559},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":26186,"byte_end":26191,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::hash_set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6562},{"krate":0,"index":6563}],"decl_id":null,"docs":" Draining parallel iterator that moves out of a hash set,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves out of a hash set,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":26063,"byte_end":26123,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":26124,"byte_end":26157,"line_start":57,"line_end":57,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":6574},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6583},{"krate":0,"index":6591},{"krate":0,"index":6597},{"krate":0,"index":6601},{"krate":0,"index":247},{"krate":0,"index":6605},{"krate":0,"index":6614},{"krate":0,"index":6621},{"krate":0,"index":6625},{"krate":0,"index":6629},{"krate":0,"index":6638}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":26712,"byte_end":26781,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":26782,"byte_end":26854,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":26855,"byte_end":26914,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6574},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27095,"byte_end":27103,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6576}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27019,"byte_end":27059,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6597},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27377,"byte_end":27381,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6600}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27282,"byte_end":27348,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6621},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27826,"byte_end":27833,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6624}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27734,"byte_end":27797,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":6645},{"krate":0,"index":6648},{"krate":0,"index":6651},{"krate":0,"index":273},{"krate":0,"index":6661},{"krate":0,"index":6654},{"krate":0,"index":6667},{"krate":0,"index":6671},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":6683},{"krate":0,"index":6675},{"krate":0,"index":6690},{"krate":0,"index":6694},{"krate":0,"index":288},{"krate":0,"index":6706},{"krate":0,"index":6698},{"krate":0,"index":6713},{"krate":0,"index":6719},{"krate":0,"index":294},{"krate":0,"index":301},{"krate":0,"index":308},{"krate":0,"index":316}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28059,"byte_end":28135,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28136,"byte_end":28206,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28207,"byte_end":28266,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6645},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28539,"byte_end":28547,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6647}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28456,"byte_end":28503,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":29079,"byte_end":29083,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6670}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28977,"byte_end":29050,"line_start":37,"line_end":37,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6690},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":29766,"byte_end":29773,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6693}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":29667,"byte_end":29737,"line_start":68,"line_end":68,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":30384,"byte_end":30389,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Drain","qualname":"::collections::vec_deque::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":6716},{"krate":0,"index":6717},{"krate":0,"index":6718}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a double-ended queue,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a double-ended queue,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":30243,"byte_end":30321,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":30322,"byte_end":30355,"line_start":92,"line_end":92,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":357},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":476},{"krate":0,"index":577},{"krate":0,"index":642},{"krate":0,"index":728},{"krate":0,"index":854},{"krate":0,"index":940},{"krate":0,"index":985},{"krate":0,"index":1034},{"krate":0,"index":1215},{"krate":0,"index":1283},{"krate":0,"index":1355},{"krate":0,"index":1419},{"krate":0,"index":1490},{"krate":0,"index":1564},{"krate":0,"index":1638},{"krate":0,"index":1681},{"krate":0,"index":1724},{"krate":0,"index":1854},{"krate":0,"index":1894},{"krate":0,"index":2010},{"krate":0,"index":2122},{"krate":0,"index":2220},{"krate":0,"index":2242},{"krate":0,"index":2359},{"krate":0,"index":2445},{"krate":0,"index":2564},{"krate":0,"index":2845},{"krate":0,"index":2852},{"krate":0,"index":2880},{"krate":0,"index":2898},{"krate":0,"index":3028},{"krate":0,"index":3106},{"krate":0,"index":3168},{"krate":0,"index":3225},{"krate":0,"index":3290},{"krate":0,"index":3360},{"krate":0,"index":3404},{"krate":0,"index":3439},{"krate":0,"index":3477},{"krate":0,"index":3534},{"krate":0,"index":3566},{"krate":0,"index":3697},{"krate":0,"index":3772},{"krate":0,"index":3839},{"krate":0,"index":4062},{"krate":0,"index":4194},{"krate":0,"index":4253},{"krate":0,"index":4319},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4364},{"krate":0,"index":4367},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4392},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4405},{"krate":0,"index":4408},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4415},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4445},{"krate":0,"index":4448},{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4489},{"krate":0,"index":4544},{"krate":0,"index":4547},{"krate":0,"index":4551},{"krate":0,"index":4556},{"krate":0,"index":4562},{"krate":0,"index":4567},{"krate":0,"index":4573},{"krate":0,"index":4776},{"krate":0,"index":4781},{"krate":0,"index":4846},{"krate":0,"index":4850},{"krate":0,"index":4854},{"krate":0,"index":4858},{"krate":0,"index":4864}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32065,"byte_end":32139,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32140,"byte_end":32143,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32144,"byte_end":32222,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32223,"byte_end":32266,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32267,"byte_end":32270,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32271,"byte_end":32341,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32342,"byte_end":32410,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32411,"byte_end":32480,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32481,"byte_end":32548,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32549,"byte_end":32612,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32613,"byte_end":32643,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32644,"byte_end":32647,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32648,"byte_end":32659,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32660,"byte_end":32686,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32687,"byte_end":32732,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32733,"byte_end":32757,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32758,"byte_end":32786,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32787,"byte_end":32806,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32807,"byte_end":32812,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32813,"byte_end":32820,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32821,"byte_end":32824,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32825,"byte_end":32891,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32892,"byte_end":32895,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32896,"byte_end":32907,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32908,"byte_end":32934,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32935,"byte_end":32976,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":32977,"byte_end":33005,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33006,"byte_end":33042,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33043,"byte_end":33048,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33049,"byte_end":33056,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33057,"byte_end":33060,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33061,"byte_end":33125,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33126,"byte_end":33192,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33193,"byte_end":33262,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33263,"byte_end":33323,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33324,"byte_end":33387,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33388,"byte_end":33405,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33406,"byte_end":33409,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33410,"byte_end":33477,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33478,"byte_end":33529,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33530,"byte_end":33533,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33534,"byte_end":33602,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33603,"byte_end":33659,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33660,"byte_end":33728,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33729,"byte_end":33799,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33800,"byte_end":33857,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33858,"byte_end":33919,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33920,"byte_end":33984,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":33985,"byte_end":34054,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34055,"byte_end":34079,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34080,"byte_end":34083,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34084,"byte_end":34150,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34151,"byte_end":34217,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34218,"byte_end":34263,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34264,"byte_end":34325,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34326,"byte_end":34329,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34330,"byte_end":34399,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34400,"byte_end":34470,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34471,"byte_end":34482,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34483,"byte_end":34486,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34487,"byte_end":34562,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34563,"byte_end":34641,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34642,"byte_end":34645,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34646,"byte_end":34724,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34725,"byte_end":34778,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34779,"byte_end":34846,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34847,"byte_end":34873,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34874,"byte_end":34909,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34910,"byte_end":34913,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34914,"byte_end":34993,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":34994,"byte_end":35073,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35074,"byte_end":35154,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35155,"byte_end":35232,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35233,"byte_end":35273,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35274,"byte_end":35277,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A note about object safety: It is currently _not_ possible to wrap","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35278,"byte_end":35348,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ a `ParallelIterator` (or any trait that depends on it) using a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35349,"byte_end":35415,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ `Box<dyn ParallelIterator>` or other kind of dynamic allocation,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35416,"byte_end":35484,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ because `ParallelIterator` is **not object-safe**.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35485,"byte_end":35539,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/ (This keeps the implementation simpler and allows extra optimizations.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35540,"byte_end":35615,"line_start":80,"line_end":80,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":386},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":404},{"krate":0,"index":413},{"krate":0,"index":421},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":436},{"krate":0,"index":6723},{"krate":0,"index":6725},{"krate":0,"index":6727},{"krate":0,"index":441},{"krate":0,"index":6728},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":460},{"krate":0,"index":468},{"krate":0,"index":471}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a general overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137509,"byte_end":137582,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137583,"byte_end":137654,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a general overview.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137655,"byte_end":137743,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137744,"byte_end":137747,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137748,"byte_end":137830,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138287,"byte_end":138303,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137926,"byte_end":137988,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":137989,"byte_end":138059,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138060,"byte_end":138105,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138106,"byte_end":138109,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138110,"byte_end":138210,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138211,"byte_end":138276,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":401},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138536,"byte_end":138542,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138313,"byte_end":138374,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138379,"byte_end":138426,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138431,"byte_end":138434,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138439,"byte_end":138526,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138760,"byte_end":138768,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138549,"byte_end":138614,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138619,"byte_end":138682,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138687,"byte_end":138752,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":404},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140242,"byte_end":140250,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138851,"byte_end":138918,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138919,"byte_end":138988,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":138989,"byte_end":139056,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139057,"byte_end":139124,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139125,"byte_end":139194,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139195,"byte_end":139263,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139264,"byte_end":139333,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139334,"byte_end":139404,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139405,"byte_end":139473,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139474,"byte_end":139537,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139538,"byte_end":139593,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139594,"byte_end":139597,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139598,"byte_end":139663,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139664,"byte_end":139733,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139734,"byte_end":139775,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139776,"byte_end":139779,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139780,"byte_end":139844,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139845,"byte_end":139912,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139913,"byte_end":139972,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":139973,"byte_end":140035,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140036,"byte_end":140084,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140085,"byte_end":140088,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140089,"byte_end":140171,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140172,"byte_end":140231,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140387,"byte_end":140391,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140271,"byte_end":140335,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140340,"byte_end":140377,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":406},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140448,"byte_end":140456,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140398,"byte_end":140438,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140639,"byte_end":140648,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140534,"byte_end":140609,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140614,"byte_end":140631,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141251,"byte_end":141258,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140679,"byte_end":140731,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140736,"byte_end":140799,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140804,"byte_end":140868,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140873,"byte_end":140934,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140939,"byte_end":141001,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141006,"byte_end":141069,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141074,"byte_end":141135,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141140,"byte_end":141151,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141156,"byte_end":141159,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141164,"byte_end":141243,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141823,"byte_end":141830,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141298,"byte_end":141350,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141355,"byte_end":141420,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141425,"byte_end":141479,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141484,"byte_end":141547,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141552,"byte_end":141610,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141615,"byte_end":141675,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141680,"byte_end":141723,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141728,"byte_end":141731,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141736,"byte_end":141815,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142018,"byte_end":142026,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141879,"byte_end":141943,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":141948,"byte_end":142010,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142293,"byte_end":142302,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142069,"byte_end":142132,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142137,"byte_end":142207,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142212,"byte_end":142215,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142220,"byte_end":142285,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":413},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143250,"byte_end":143258,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142430,"byte_end":142499,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142500,"byte_end":142565,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142566,"byte_end":142627,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142628,"byte_end":142695,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142696,"byte_end":142764,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142765,"byte_end":142834,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142835,"byte_end":142905,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142906,"byte_end":142965,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":142966,"byte_end":143001,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143002,"byte_end":143005,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143006,"byte_end":143088,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143089,"byte_end":143167,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143168,"byte_end":143201,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143202,"byte_end":143239,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":415},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143359,"byte_end":143365,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143285,"byte_end":143349,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143486,"byte_end":143493,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143409,"byte_end":143476,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":417},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143599,"byte_end":143605,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143523,"byte_end":143589,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143841,"byte_end":143849,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143618,"byte_end":143682,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143687,"byte_end":143747,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143752,"byte_end":143816,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143821,"byte_end":143833,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144035,"byte_end":144046,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143907,"byte_end":143968,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143973,"byte_end":144027,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144205,"byte_end":144209,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144075,"byte_end":144137,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144142,"byte_end":144197,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":421},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144572,"byte_end":144578,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144229,"byte_end":144283,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144284,"byte_end":144351,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144352,"byte_end":144422,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144423,"byte_end":144478,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144479,"byte_end":144482,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144483,"byte_end":144561,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":423},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144678,"byte_end":144684,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144598,"byte_end":144668,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144753,"byte_end":144760,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144691,"byte_end":144745,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145189,"byte_end":145201,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144793,"byte_end":144873,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144878,"byte_end":144881,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144886,"byte_end":144951,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144956,"byte_end":145020,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145025,"byte_end":145058,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145063,"byte_end":145066,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145071,"byte_end":145134,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145139,"byte_end":145181,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145509,"byte_end":145517,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145452,"byte_end":145501,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145674,"byte_end":145678,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145546,"byte_end":145606,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145611,"byte_end":145666,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":429},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146108,"byte_end":146115,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":431}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145698,"byte_end":145767,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145768,"byte_end":145835,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145836,"byte_end":145906,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145907,"byte_end":145974,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":145975,"byte_end":146010,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146011,"byte_end":146014,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146015,"byte_end":146097,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146216,"byte_end":146222,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146130,"byte_end":146193,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146198,"byte_end":146208,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146584,"byte_end":146601,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146272,"byte_end":146341,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146342,"byte_end":146398,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146399,"byte_end":146468,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146469,"byte_end":146536,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146537,"byte_end":146573,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147077,"byte_end":147091,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146624,"byte_end":146683,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146688,"byte_end":146754,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146759,"byte_end":146825,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146830,"byte_end":146892,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146897,"byte_end":146957,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146962,"byte_end":147028,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147033,"byte_end":147069,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147213,"byte_end":147223,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147113,"byte_end":147179,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147184,"byte_end":147205,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147700,"byte_end":147717,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147252,"byte_end":147319,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147320,"byte_end":147382,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147383,"byte_end":147451,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147452,"byte_end":147522,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147523,"byte_end":147526,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147527,"byte_end":147593,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147594,"byte_end":147662,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147663,"byte_end":147689,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":437},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147795,"byte_end":147799,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147738,"byte_end":147785,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147888,"byte_end":147893,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147806,"byte_end":147880,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":148076,"byte_end":148085,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147930,"byte_end":147993,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147998,"byte_end":148068,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151905,"byte_end":151911,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151326,"byte_end":151396,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151397,"byte_end":151463,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151464,"byte_end":151533,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151534,"byte_end":151574,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151575,"byte_end":151578,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151579,"byte_end":151641,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151642,"byte_end":151698,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151699,"byte_end":151744,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151745,"byte_end":151748,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151749,"byte_end":151829,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":151830,"byte_end":151897,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":153157,"byte_end":153181,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152519,"byte_end":152581,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152582,"byte_end":152647,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152648,"byte_end":152716,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152717,"byte_end":152783,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152784,"byte_end":152795,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152796,"byte_end":152799,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152800,"byte_end":152862,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152863,"byte_end":152919,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152920,"byte_end":152965,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152966,"byte_end":152969,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152970,"byte_end":153000,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":153001,"byte_end":153081,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":153082,"byte_end":153149,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":154957,"byte_end":154973,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":154788,"byte_end":154878,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":154879,"byte_end":154882,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":154883,"byte_end":154949,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6734},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156830,"byte_end":156835,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6737},{"krate":0,"index":6738}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156448,"byte_end":156527,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156528,"byte_end":156604,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156605,"byte_end":156608,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156609,"byte_end":156666,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156667,"byte_end":156720,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156721,"byte_end":156794,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163763,"byte_end":163769,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6749},{"krate":0,"index":6750}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163350,"byte_end":163425,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163426,"byte_end":163429,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163430,"byte_end":163514,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163515,"byte_end":163518,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163519,"byte_end":163585,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163586,"byte_end":163653,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163654,"byte_end":163727,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6757},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168753,"byte_end":168759,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6759}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168364,"byte_end":168443,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168444,"byte_end":168447,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168448,"byte_end":168525,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168526,"byte_end":168529,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168530,"byte_end":168589,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168590,"byte_end":168643,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168644,"byte_end":168717,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6766},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199152,"byte_end":199158,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6768}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Copied` is an iterator that copies the elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198763,"byte_end":198842,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198843,"byte_end":198846,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`copied()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198847,"byte_end":198924,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198925,"byte_end":198928,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copied()`]: trait.ParallelIterator.html#method.copied","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198929,"byte_end":198988,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":198989,"byte_end":199042,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199043,"byte_end":199116,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204160,"byte_end":204165,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203742,"byte_end":203796,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203797,"byte_end":203800,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203801,"byte_end":203878,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203879,"byte_end":203921,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203922,"byte_end":203925,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203926,"byte_end":203940,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203941,"byte_end":203944,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203945,"byte_end":203952,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203953,"byte_end":203979,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":203980,"byte_end":204007,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204008,"byte_end":204011,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204012,"byte_end":204050,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204051,"byte_end":204074,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204075,"byte_end":204104,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204105,"byte_end":204108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204109,"byte_end":204144,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204145,"byte_end":204152,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":951},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204318,"byte_end":204323,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":953}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204241,"byte_end":204306,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206331,"byte_end":206340,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6777}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":205903,"byte_end":205988,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":205989,"byte_end":206076,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206077,"byte_end":206080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206081,"byte_end":206153,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206154,"byte_end":206221,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206222,"byte_end":206295,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6784},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219555,"byte_end":219561,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6787},{"krate":0,"index":6788}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219177,"byte_end":219256,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219257,"byte_end":219334,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219335,"byte_end":219338,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219339,"byte_end":219398,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219399,"byte_end":219452,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219453,"byte_end":219526,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223094,"byte_end":223103,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6796},{"krate":0,"index":6797}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222692,"byte_end":222782,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222783,"byte_end":222865,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222866,"byte_end":222869,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222870,"byte_end":222937,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222938,"byte_end":222991,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":222992,"byte_end":223065,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6810},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237126,"byte_end":237133,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6813},{"krate":0,"index":6814}],"decl_id":null,"docs":" `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to a parallel iterator, then flattens these iterators together.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":236726,"byte_end":236821,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":236822,"byte_end":236901,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":236902,"byte_end":236905,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":236906,"byte_end":236969,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":236970,"byte_end":237023,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237024,"byte_end":237097,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6819},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241096,"byte_end":241107,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"FlatMapIter","qualname":"::iter::flat_map_iter::FlatMapIter","value":"FlatMapIter {  }","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6823}],"decl_id":null,"docs":" `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.\n This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMapIter` maps each element to a serial iterator, then flattens these iterators together.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240679,"byte_end":240776,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ This struct is created by the [`flat_map_iter()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240777,"byte_end":240861,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240862,"byte_end":240865,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map_iter()`]: trait.ParallelIterator.html#method.flat_map_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240866,"byte_end":240939,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240940,"byte_end":240993,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":240994,"byte_end":241067,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6828},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244809,"byte_end":244816,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6830}],"decl_id":null,"docs":" `Flatten` turns each element to a parallel iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to a parallel iterator, then flattens these iterators","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244403,"byte_end":244489,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244490,"byte_end":244579,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244580,"byte_end":244583,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244584,"byte_end":244645,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244646,"byte_end":244699,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244700,"byte_end":244773,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6837},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248169,"byte_end":248180,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"FlattenIter","qualname":"::iter::flatten_iter::FlattenIter","value":"FlattenIter {  }","parent":null,"children":[{"krate":0,"index":6839}],"decl_id":null,"docs":" `FlattenIter` turns each element to a serial iterator, then flattens these iterators\n together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FlattenIter` turns each element to a serial iterator, then flattens these iterators","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":247746,"byte_end":247834,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/ together. This struct is created by the [`flatten_iter()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":247835,"byte_end":247929,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":247930,"byte_end":247933,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`flatten_iter()`]: trait.ParallelIterator.html#method.flatten_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":247934,"byte_end":248005,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248006,"byte_end":248059,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248060,"byte_end":248133,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251607,"byte_end":251611,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6852}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251222,"byte_end":251314,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251315,"byte_end":251390,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251391,"byte_end":251394,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251395,"byte_end":251450,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251451,"byte_end":251504,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251505,"byte_end":251578,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6858},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255726,"byte_end":255734,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":6862},{"krate":0,"index":6863},{"krate":0,"index":6864}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255322,"byte_end":255418,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255419,"byte_end":255499,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255500,"byte_end":255503,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255504,"byte_end":255569,"line_start":200,"line_end":200,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255570,"byte_end":255623,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255624,"byte_end":255697,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265975,"byte_end":265982,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6873},{"krate":0,"index":6874}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265562,"byte_end":265637,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265638,"byte_end":265669,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265670,"byte_end":265673,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265674,"byte_end":265752,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265753,"byte_end":265756,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265757,"byte_end":265818,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265819,"byte_end":265872,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":265873,"byte_end":265946,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6879},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272117,"byte_end":272127,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6883}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271657,"byte_end":271727,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271728,"byte_end":271797,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271798,"byte_end":271860,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271861,"byte_end":271864,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271865,"byte_end":271939,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":271940,"byte_end":272007,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272008,"byte_end":272081,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6892},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281128,"byte_end":281146,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":6895}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280584,"byte_end":280647,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280648,"byte_end":280716,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280717,"byte_end":280746,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280747,"byte_end":280750,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280751,"byte_end":280820,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280821,"byte_end":280853,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280854,"byte_end":280857,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280858,"byte_end":280950,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":280951,"byte_end":281018,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281019,"byte_end":281092,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6904},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283365,"byte_end":283376,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":6906},{"krate":0,"index":6907}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":282933,"byte_end":283009,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283010,"byte_end":283074,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283075,"byte_end":283127,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283128,"byte_end":283131,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283132,"byte_end":283201,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283202,"byte_end":283255,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283256,"byte_end":283329,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6914},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293582,"byte_end":293588,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293168,"byte_end":293245,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293246,"byte_end":293331,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293332,"byte_end":293335,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`min_len()`]: trait.IndexedParallelIterator.html#method.min_len","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293336,"byte_end":293404,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293405,"byte_end":293472,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293473,"byte_end":293546,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6924},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296667,"byte_end":296673,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":6926},{"krate":0,"index":6927}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296253,"byte_end":296330,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296331,"byte_end":296416,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296417,"byte_end":296420,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`max_len()`]: trait.IndexedParallelIterator.html#method.max_len","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296421,"byte_end":296489,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296490,"byte_end":296557,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296558,"byte_end":296631,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6934},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299796,"byte_end":299799,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6937},{"krate":0,"index":6938}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299422,"byte_end":299502,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299503,"byte_end":299506,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299507,"byte_end":299581,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299582,"byte_end":299585,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299586,"byte_end":299639,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299640,"byte_end":299693,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299694,"byte_end":299767,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6943},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305774,"byte_end":305781,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305381,"byte_end":305465,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305466,"byte_end":305469,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305470,"byte_end":305549,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305550,"byte_end":305553,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305554,"byte_end":305617,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305618,"byte_end":305671,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305672,"byte_end":305745,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6955},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313842,"byte_end":313849,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313449,"byte_end":313533,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313534,"byte_end":313537,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313538,"byte_end":313617,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313618,"byte_end":313621,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313622,"byte_end":313685,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313686,"byte_end":313739,"line_start":343,"line_end":343,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313740,"byte_end":313813,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6967},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":322003,"byte_end":322011,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"MultiZip","qualname":"::iter::multizip::MultiZip","value":"MultiZip {  }","parent":null,"children":[{"krate":0,"index":6969}],"decl_id":null,"docs":" `MultiZip` is an iterator that zips up a tuple of parallel iterators to\n produce tuples of their items.","sig":null,"attributes":[{"value":"/ `MultiZip` is an iterator that zips up a tuple of parallel iterators to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319587,"byte_end":319662,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ produce tuples of their items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319663,"byte_end":319697,"line_start":5,"line_end":5,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319698,"byte_end":319701,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is created by calling `into_par_iter()` on a tuple of types that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319702,"byte_end":319773,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ implement `IntoParallelIterator`, or `par_iter()`/`par_iter_mut()` with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319774,"byte_end":319849,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ types that are iterable by reference.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319850,"byte_end":319891,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319892,"byte_end":319895,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The implementation currently support tuples up to length 12.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319896,"byte_end":319960,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319961,"byte_end":319964,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319965,"byte_end":319979,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319980,"byte_end":319983,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319984,"byte_end":319991,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":319992,"byte_end":320018,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320019,"byte_end":320022,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // This will iterate `r` by mutable reference, like `par_iter_mut()`, while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320023,"byte_end":320102,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ // ranges are all iterated by value like `into_par_iter()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320103,"byte_end":320166,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ // Note that the zipped iterator is only as long as the shortest input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320167,"byte_end":320242,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ let mut r = vec![0; 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320243,"byte_end":320270,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/ (&mut r, 1..10, 10..100, 100..1000).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320271,"byte_end":320326,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/     .for_each(|(r, x, y, z)| *r = x * y + z);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320327,"byte_end":320376,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320377,"byte_end":320380,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&r, &[1 * 10 + 100, 2 * 11 + 101, 3 * 12 + 102]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320381,"byte_end":320445,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320446,"byte_end":320453,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320454,"byte_end":320457,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For a group that should all be iterated by reference, you can use a tuple reference.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320458,"byte_end":320546,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320547,"byte_end":320550,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320551,"byte_end":320558,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320559,"byte_end":320585,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320586,"byte_end":320589,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let xs: Vec<_> = (1..10).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320590,"byte_end":320629,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ let ys: Vec<_> = (10..100).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320630,"byte_end":320671,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let zs: Vec<_> = (100..1000).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320672,"byte_end":320715,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320716,"byte_end":320719,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320720,"byte_end":320787,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ let r1: Vec<_> = (&xs, &ys, &zs).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320788,"byte_end":320840,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320841,"byte_end":320876,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320877,"byte_end":320896,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320897,"byte_end":320900,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Reference them all together with `IntoParallelRefIterator`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320901,"byte_end":320967,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ let r2: Vec<_> = (xs, ys, zs).par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":320968,"byte_end":321012,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/     .map(|(x, y, z)| x * y + z)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321013,"byte_end":321048,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321049,"byte_end":321068,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321069,"byte_end":321072,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r1, r2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321073,"byte_end":321096,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321097,"byte_end":321104,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321105,"byte_end":321108,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Mutable references to a tuple will work similarly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321109,"byte_end":321163,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321164,"byte_end":321167,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321168,"byte_end":321175,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321176,"byte_end":321202,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321203,"byte_end":321206,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut xs: Vec<_> = (1..4).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321207,"byte_end":321249,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ let mut ys: Vec<_> = (-4..-1).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321250,"byte_end":321294,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ let mut zs = vec![0; 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321295,"byte_end":321323,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321324,"byte_end":321327,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference each input separately with `IntoParallelIterator`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321328,"byte_end":321403,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ (&mut xs, &mut ys, &mut zs).into_par_iter().for_each(|(x, y, z)| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321404,"byte_end":321474,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/     *z += *x + *y;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321475,"byte_end":321497,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321498,"byte_end":321527,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321528,"byte_end":321535,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321536,"byte_end":321539,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(xs, (vec![-4, -3, -2]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321540,"byte_end":321579,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(ys, (vec![1, 2, 3]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321580,"byte_end":321616,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(zs, (vec![-3, -1, 1]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321617,"byte_end":321655,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321656,"byte_end":321659,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Mutably reference them all together with `IntoParallelRefMutIterator`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321660,"byte_end":321737,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ let mut tuple = (xs, ys, zs);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321738,"byte_end":321771,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/ tuple.par_iter_mut().for_each(|(x, y, z)| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321772,"byte_end":321819,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     *z += *x + *y;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321820,"byte_end":321842,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     std::mem::swap(x, y);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321843,"byte_end":321872,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321873,"byte_end":321880,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321881,"byte_end":321884,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple, (vec![1, 2, 3], vec![-4, -3, -2], vec![-6, -2, 2]));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321885,"byte_end":321959,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/multizip.rs","byte_start":321960,"byte_end":321967,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330272,"byte_end":330276,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329630,"byte_end":329700,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329701,"byte_end":329704,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329705,"byte_end":329783,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329784,"byte_end":329863,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329864,"byte_end":329911,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329912,"byte_end":329915,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329916,"byte_end":329930,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329931,"byte_end":329934,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329935,"byte_end":329942,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329943,"byte_end":329969,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329970,"byte_end":329996,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":329997,"byte_end":330000,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330001,"byte_end":330039,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330040,"byte_end":330064,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330065,"byte_end":330094,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330095,"byte_end":330098,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330099,"byte_end":330142,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330143,"byte_end":330200,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330201,"byte_end":330256,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330257,"byte_end":330264,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330428,"byte_end":330432,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7848}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330329,"byte_end":330392,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331792,"byte_end":331801,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":7857}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331342,"byte_end":331414,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331415,"byte_end":331470,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331471,"byte_end":331474,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331475,"byte_end":331556,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331557,"byte_end":331560,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331561,"byte_end":331628,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331629,"byte_end":331682,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331683,"byte_end":331756,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340543,"byte_end":340557,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":3079}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339279,"byte_end":339349,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339350,"byte_end":339353,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339354,"byte_end":339453,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339454,"byte_end":339550,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339551,"byte_end":339648,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339649,"byte_end":339740,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339741,"byte_end":339810,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339811,"byte_end":339814,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339815,"byte_end":339903,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339904,"byte_end":339907,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339908,"byte_end":339922,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339923,"byte_end":339926,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":339927,"byte_end":340026,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340027,"byte_end":340073,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340074,"byte_end":340077,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340078,"byte_end":340085,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340086,"byte_end":340122,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340123,"byte_end":340164,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340165,"byte_end":340198,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340199,"byte_end":340202,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340203,"byte_end":340217,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340218,"byte_end":340251,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340252,"byte_end":340255,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340256,"byte_end":340280,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340281,"byte_end":340305,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340306,"byte_end":340332,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340333,"byte_end":340336,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340337,"byte_end":340347,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340348,"byte_end":340354,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340355,"byte_end":340358,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340359,"byte_end":340437,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340438,"byte_end":340465,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340466,"byte_end":340469,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340470,"byte_end":340524,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340525,"byte_end":340532,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340639,"byte_end":340649,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":3078},"children":[],"decl_id":null,"docs":" Creates a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Creates a bridge from this type to a `ParallelIterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340571,"byte_end":340631,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":7871},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341148,"byte_end":341158,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":7873}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340842,"byte_end":340915,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340916,"byte_end":340919,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340920,"byte_end":341008,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341009,"byte_end":341058,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341059,"byte_end":341062,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341063,"byte_end":341112,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7880},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347269,"byte_end":347278,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"Positions","qualname":"::iter::positions::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":7883},{"krate":0,"index":7884}],"decl_id":null,"docs":" `Positions` takes a predicate `predicate` and filters out elements that match,\n yielding their indices.","sig":null,"attributes":[{"value":"/ `Positions` takes a predicate `predicate` and filters out elements that match,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":346819,"byte_end":346901,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ yielding their indices.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":346902,"byte_end":346929,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":346930,"byte_end":346933,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`positions()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":346934,"byte_end":347021,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347022,"byte_end":347025,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`positions()`]: trait.IndexedParallelIterator.html#method.positions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347026,"byte_end":347098,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347099,"byte_end":347166,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347167,"byte_end":347240,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":354958,"byte_end":354964,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7891}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":354855,"byte_end":354922,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355516,"byte_end":355522,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355003,"byte_end":355067,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355068,"byte_end":355134,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355135,"byte_end":355200,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355201,"byte_end":355243,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355244,"byte_end":355300,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355301,"byte_end":355304,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355305,"byte_end":355319,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355320,"byte_end":355323,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355324,"byte_end":355331,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355332,"byte_end":355358,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355359,"byte_end":355387,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355388,"byte_end":355448,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355449,"byte_end":355500,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355501,"byte_end":355508,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355920,"byte_end":355924,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Takes only `n` repeats of the element, similar to the general","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355645,"byte_end":355710,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355715,"byte_end":355778,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355783,"byte_end":355786,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355791,"byte_end":355860,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355865,"byte_end":355908,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356186,"byte_end":356189,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterates tuples, repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterates tuples, repeating the element with items from another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356001,"byte_end":356067,"line_start":43,"line_end":43,"column_start":5,"column_end":71}},{"value":"/ iterator, similar to the general","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356072,"byte_end":356108,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356113,"byte_end":356174,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7898},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357458,"byte_end":357465,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357353,"byte_end":357422,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357830,"byte_end":357837,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357522,"byte_end":357588,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357589,"byte_end":357609,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357610,"byte_end":357613,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357614,"byte_end":357628,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357629,"byte_end":357632,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357633,"byte_end":357640,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357641,"byte_end":357667,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357668,"byte_end":357697,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357698,"byte_end":357762,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357763,"byte_end":357814,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357815,"byte_end":357822,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7908},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360777,"byte_end":360780,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":7910}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360387,"byte_end":360464,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360465,"byte_end":360534,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360535,"byte_end":360538,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360539,"byte_end":360599,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360600,"byte_end":360667,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360668,"byte_end":360741,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7917},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363622,"byte_end":363626,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7919},{"krate":0,"index":7920}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363229,"byte_end":363294,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363295,"byte_end":363377,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363378,"byte_end":363381,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363382,"byte_end":363444,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363445,"byte_end":363512,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363513,"byte_end":363586,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369255,"byte_end":369260,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365371,"byte_end":365448,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365449,"byte_end":365504,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365505,"byte_end":365508,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365509,"byte_end":365523,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365524,"byte_end":365527,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365528,"byte_end":365598,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365599,"byte_end":365602,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365603,"byte_end":365610,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365611,"byte_end":365631,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365632,"byte_end":365658,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365659,"byte_end":365683,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365684,"byte_end":365687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365688,"byte_end":365691,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365692,"byte_end":365738,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365739,"byte_end":365771,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365772,"byte_end":365775,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365776,"byte_end":365824,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365825,"byte_end":365888,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365889,"byte_end":365964,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":365965,"byte_end":366040,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366041,"byte_end":366094,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366095,"byte_end":366098,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366099,"byte_end":366169,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366170,"byte_end":366225,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366226,"byte_end":366276,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366277,"byte_end":366282,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366283,"byte_end":366286,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366287,"byte_end":366367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366368,"byte_end":366435,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366436,"byte_end":366497,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366498,"byte_end":366575,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366576,"byte_end":366621,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366622,"byte_end":366691,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366692,"byte_end":366699,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366700,"byte_end":366707,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366708,"byte_end":366711,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366712,"byte_end":366784,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366785,"byte_end":366863,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366864,"byte_end":366890,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366891,"byte_end":366894,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366895,"byte_end":366902,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366903,"byte_end":366925,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366926,"byte_end":366954,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366955,"byte_end":366981,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":366982,"byte_end":367016,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367017,"byte_end":367082,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367083,"byte_end":367138,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367139,"byte_end":367196,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367197,"byte_end":367249,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367250,"byte_end":367257,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367258,"byte_end":367263,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367264,"byte_end":367337,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367338,"byte_end":367358,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367359,"byte_end":367397,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367398,"byte_end":367422,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367423,"byte_end":367426,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367427,"byte_end":367463,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367464,"byte_end":367488,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367489,"byte_end":367494,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367495,"byte_end":367498,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367499,"byte_end":367578,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367579,"byte_end":367652,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367653,"byte_end":367687,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367688,"byte_end":367752,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367753,"byte_end":367832,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367833,"byte_end":367877,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367878,"byte_end":367923,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367924,"byte_end":367952,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":367953,"byte_end":368021,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368022,"byte_end":368084,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368085,"byte_end":368117,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368118,"byte_end":368149,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368150,"byte_end":368181,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368182,"byte_end":368196,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368197,"byte_end":368260,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368261,"byte_end":368285,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368286,"byte_end":368302,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368303,"byte_end":368369,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368370,"byte_end":368432,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368433,"byte_end":368465,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368466,"byte_end":368497,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368498,"byte_end":368529,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368530,"byte_end":368544,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368545,"byte_end":368609,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368610,"byte_end":368634,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368635,"byte_end":368644,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368645,"byte_end":368650,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368651,"byte_end":368654,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368655,"byte_end":368716,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368717,"byte_end":368768,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368769,"byte_end":368828,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368829,"byte_end":368906,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368907,"byte_end":368981,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":368982,"byte_end":369043,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369044,"byte_end":369102,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369103,"byte_end":369162,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369163,"byte_end":369227,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369228,"byte_end":369235,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369236,"byte_end":369243,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369244,"byte_end":369247,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":7927},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369597,"byte_end":369602,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7930},{"krate":0,"index":7931}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369396,"byte_end":369477,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369478,"byte_end":369533,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369534,"byte_end":369537,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369538,"byte_end":369568,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7936},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373303,"byte_end":373307,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7938},{"krate":0,"index":7939}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":372907,"byte_end":372975,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":372976,"byte_end":373058,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373059,"byte_end":373062,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373063,"byte_end":373125,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373126,"byte_end":373193,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373194,"byte_end":373267,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7946},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375770,"byte_end":375777,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375370,"byte_end":375465,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375466,"byte_end":375545,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375546,"byte_end":375549,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375550,"byte_end":375613,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375614,"byte_end":375667,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375668,"byte_end":375741,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7961},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379731,"byte_end":379742,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7967}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379312,"byte_end":379411,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379412,"byte_end":379496,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379497,"byte_end":379500,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379501,"byte_end":379574,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379575,"byte_end":379628,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379629,"byte_end":379702,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388804,"byte_end":388808,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3842},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388743,"byte_end":388794,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388883,"byte_end":388888,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3842},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388821,"byte_end":388873,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":7973},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402528,"byte_end":402534,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":7976},{"krate":0,"index":7977}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402117,"byte_end":402176,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402177,"byte_end":402225,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402226,"byte_end":402229,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402230,"byte_end":402307,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402308,"byte_end":402311,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402312,"byte_end":402371,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402372,"byte_end":402425,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402426,"byte_end":402499,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":7995},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410251,"byte_end":410260,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":7997}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":409804,"byte_end":409882,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":409883,"byte_end":409929,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":409930,"byte_end":409933,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":409934,"byte_end":410015,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410016,"byte_end":410019,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410020,"byte_end":410087,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410088,"byte_end":410141,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410142,"byte_end":410215,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8004},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413956,"byte_end":413959,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8007},{"krate":0,"index":8008}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413545,"byte_end":413617,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413618,"byte_end":413681,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413682,"byte_end":413713,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413714,"byte_end":413717,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413718,"byte_end":413778,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413779,"byte_end":413846,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":413847,"byte_end":413920,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8017},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417946,"byte_end":417951,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":8020}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417451,"byte_end":417536,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417537,"byte_end":417563,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417564,"byte_end":417567,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417568,"byte_end":417651,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417652,"byte_end":417699,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417700,"byte_end":417703,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417704,"byte_end":417768,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417769,"byte_end":417836,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":417837,"byte_end":417910,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":8029},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419740,"byte_end":419746,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"StepBy","qualname":"::iter::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":8031},{"krate":0,"index":8032}],"decl_id":null,"docs":" `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.\n This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `StepBy` is an iterator that skips `n` elements between each yield, where `n` is the given step.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419303,"byte_end":419403,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"/ This struct is created by the [`step_by()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419404,"byte_end":419489,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419490,"byte_end":419493,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`step_by()`]: trait.IndexedParallelIterator.html#method.step_by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419494,"byte_end":419562,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419563,"byte_end":419630,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419631,"byte_end":419704,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38495,"byte_end":38515,"line_start":204,"line_end":204,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38047,"byte_end":38126,"line_start":196,"line_end":196,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38127,"byte_end":38130,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38131,"byte_end":38208,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38209,"byte_end":38285,"line_start":199,"line_end":199,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38286,"byte_end":38334,"line_start":200,"line_end":200,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38335,"byte_end":38338,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38339,"byte_end":38392,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38393,"byte_end":38484,"line_start":203,"line_end":203,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38584,"byte_end":38588,"line_start":206,"line_end":206,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38522,"byte_end":38574,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38703,"byte_end":38707,"line_start":209,"line_end":209,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38632,"byte_end":38693,"line_start":208,"line_end":208,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39358,"byte_end":39371,"line_start":233,"line_end":233,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38720,"byte_end":38765,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38770,"byte_end":38773,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38778,"byte_end":38792,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38797,"byte_end":38800,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38805,"byte_end":38812,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38817,"byte_end":38843,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38848,"byte_end":38851,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38856,"byte_end":38894,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38899,"byte_end":38927,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38932,"byte_end":38973,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38978,"byte_end":38985,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38990,"byte_end":38993,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":38998,"byte_end":39074,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39079,"byte_end":39082,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39087,"byte_end":39094,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39099,"byte_end":39125,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39130,"byte_end":39133,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39138,"byte_end":39202,"line_start":228,"line_end":228,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39207,"byte_end":39267,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39272,"byte_end":39279,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39284,"byte_end":39287,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39292,"byte_end":39350,"line_start":232,"line_end":232,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39960,"byte_end":39983,"line_start":249,"line_end":249,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39396,"byte_end":39456,"line_start":236,"line_end":236,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39457,"byte_end":39523,"line_start":237,"line_end":237,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39524,"byte_end":39527,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39528,"byte_end":39581,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39582,"byte_end":39617,"line_start":240,"line_end":240,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39618,"byte_end":39621,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39622,"byte_end":39665,"line_start":242,"line_end":242,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39666,"byte_end":39730,"line_start":243,"line_end":243,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39731,"byte_end":39804,"line_start":244,"line_end":244,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39805,"byte_end":39829,"line_start":245,"line_end":245,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39830,"byte_end":39833,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39834,"byte_end":39887,"line_start":247,"line_end":247,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39888,"byte_end":39949,"line_start":248,"line_end":248,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40067,"byte_end":40071,"line_start":251,"line_end":251,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4551},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":39997,"byte_end":40057,"line_start":250,"line_end":250,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":4554},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40247,"byte_end":40251,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4551},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40115,"byte_end":40176,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40181,"byte_end":40237,"line_start":254,"line_end":254,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40741,"byte_end":40749,"line_start":272,"line_end":272,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":4551},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40272,"byte_end":40317,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40322,"byte_end":40325,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40330,"byte_end":40344,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40349,"byte_end":40352,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40357,"byte_end":40364,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40369,"byte_end":40395,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40400,"byte_end":40403,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40408,"byte_end":40447,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40452,"byte_end":40508,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40513,"byte_end":40516,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40521,"byte_end":40583,"line_start":267,"line_end":267,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40588,"byte_end":40631,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40636,"byte_end":40668,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40673,"byte_end":40721,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40726,"byte_end":40733,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4562},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41669,"byte_end":41695,"line_start":300,"line_end":300,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4566}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41093,"byte_end":41156,"line_start":287,"line_end":287,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41157,"byte_end":41224,"line_start":288,"line_end":288,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41225,"byte_end":41228,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41229,"byte_end":41286,"line_start":290,"line_end":290,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41287,"byte_end":41322,"line_start":291,"line_end":291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41323,"byte_end":41326,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41327,"byte_end":41370,"line_start":293,"line_end":293,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41371,"byte_end":41439,"line_start":294,"line_end":294,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41440,"byte_end":41513,"line_start":295,"line_end":295,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41514,"byte_end":41538,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41539,"byte_end":41542,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41543,"byte_end":41596,"line_start":298,"line_end":298,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41597,"byte_end":41658,"line_start":299,"line_end":299,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41765,"byte_end":41769,"line_start":302,"line_end":302,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41709,"byte_end":41755,"line_start":301,"line_end":301,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4565},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41921,"byte_end":41925,"line_start":306,"line_end":306,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41813,"byte_end":41877,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41882,"byte_end":41911,"line_start":305,"line_end":305,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42239,"byte_end":42251,"line_start":319,"line_end":319,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":4562},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41946,"byte_end":41992,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":41997,"byte_end":42000,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42005,"byte_end":42019,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42024,"byte_end":42027,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42032,"byte_end":42039,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42044,"byte_end":42070,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42075,"byte_end":42078,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42083,"byte_end":42115,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42120,"byte_end":42179,"line_start":316,"line_end":316,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42184,"byte_end":42219,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42224,"byte_end":42231,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4573},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43228,"byte_end":43244,"line_start":348,"line_end":348,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4580},{"krate":0,"index":4584},{"krate":0,"index":4589},{"krate":0,"index":4595},{"krate":0,"index":4602},{"krate":0,"index":4605},{"krate":0,"index":4608},{"krate":0,"index":4612},{"krate":0,"index":4617},{"krate":0,"index":4620},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4629},{"krate":0,"index":4632},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4655},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4666},{"krate":0,"index":4669},{"krate":0,"index":4674},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4690},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4710},{"krate":0,"index":4722},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4735},{"krate":0,"index":4740},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4757},{"krate":0,"index":4762},{"krate":0,"index":4766},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4775}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42622,"byte_end":42674,"line_start":334,"line_end":334,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42675,"byte_end":42678,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42679,"byte_end":42746,"line_start":336,"line_end":336,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42747,"byte_end":42801,"line_start":337,"line_end":337,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42802,"byte_end":42863,"line_start":338,"line_end":338,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42864,"byte_end":42929,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42930,"byte_end":43000,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43001,"byte_end":43025,"line_start":341,"line_end":341,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43026,"byte_end":43029,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43030,"byte_end":43096,"line_start":343,"line_end":343,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43097,"byte_end":43122,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43123,"byte_end":43126,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43127,"byte_end":43149,"line_start":346,"line_end":346,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43150,"byte_end":43217,"line_start":347,"line_end":347,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":4574},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43510,"byte_end":43514,"line_start":354,"line_end":354,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43265,"byte_end":43323,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43328,"byte_end":43400,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43405,"byte_end":43453,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43458,"byte_end":43461,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43466,"byte_end":43500,"line_start":353,"line_end":353,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43770,"byte_end":43778,"line_start":365,"line_end":365,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43527,"byte_end":43596,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43601,"byte_end":43604,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43609,"byte_end":43623,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43628,"byte_end":43631,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43636,"byte_end":43643,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43648,"byte_end":43674,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43679,"byte_end":43682,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43687,"byte_end":43750,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43755,"byte_end":43762,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44613,"byte_end":44626,"line_start":395,"line_end":395,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43904,"byte_end":43974,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43979,"byte_end":44009,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44014,"byte_end":44017,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44022,"byte_end":44090,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44095,"byte_end":44166,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44171,"byte_end":44188,"line_start":377,"line_end":377,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44193,"byte_end":44196,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44201,"byte_end":44215,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44220,"byte_end":44223,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44228,"byte_end":44235,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44240,"byte_end":44273,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44278,"byte_end":44304,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44309,"byte_end":44312,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44317,"byte_end":44356,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44361,"byte_end":44364,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44369,"byte_end":44445,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44450,"byte_end":44453,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44458,"byte_end":44510,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44515,"byte_end":44518,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44523,"byte_end":44538,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44543,"byte_end":44546,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44551,"byte_end":44593,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44598,"byte_end":44605,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45594,"byte_end":45607,"line_start":429,"line_end":429,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44801,"byte_end":44875,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44880,"byte_end":44910,"line_start":404,"line_end":404,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44915,"byte_end":44918,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44923,"byte_end":44994,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":44999,"byte_end":45065,"line_start":407,"line_end":407,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45070,"byte_end":45114,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45119,"byte_end":45122,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45127,"byte_end":45141,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45146,"byte_end":45149,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45154,"byte_end":45161,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45166,"byte_end":45184,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45189,"byte_end":45215,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45220,"byte_end":45223,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45228,"byte_end":45265,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45270,"byte_end":45273,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45278,"byte_end":45304,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45309,"byte_end":45332,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45337,"byte_end":45371,"line_start":420,"line_end":420,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45376,"byte_end":45417,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45422,"byte_end":45432,"line_start":422,"line_end":422,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45437,"byte_end":45440,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45445,"byte_end":45498,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45503,"byte_end":45527,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45532,"byte_end":45564,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45569,"byte_end":45574,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45579,"byte_end":45586,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46710,"byte_end":46722,"line_start":457,"line_end":457,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Ok = ()> + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45805,"byte_end":45885,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45890,"byte_end":45893,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45898,"byte_end":45973,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":45978,"byte_end":46046,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46051,"byte_end":46127,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46132,"byte_end":46205,"line_start":442,"line_end":442,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46210,"byte_end":46286,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46291,"byte_end":46294,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46299,"byte_end":46313,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46318,"byte_end":46321,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46326,"byte_end":46333,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46338,"byte_end":46364,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46369,"byte_end":46400,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46405,"byte_end":46408,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46413,"byte_end":46483,"line_start":451,"line_end":451,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46488,"byte_end":46543,"line_start":452,"line_end":452,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46548,"byte_end":46576,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46581,"byte_end":46641,"line_start":454,"line_end":454,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46646,"byte_end":46690,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46695,"byte_end":46702,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47831,"byte_end":47848,"line_start":496,"line_end":496,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Ok =\n()> + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":46996,"byte_end":47065,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47070,"byte_end":47112,"line_start":470,"line_end":470,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47117,"byte_end":47120,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47125,"byte_end":47194,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47199,"byte_end":47243,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47248,"byte_end":47251,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47256,"byte_end":47302,"line_start":475,"line_end":475,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47307,"byte_end":47351,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47356,"byte_end":47359,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47364,"byte_end":47378,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47383,"byte_end":47386,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47391,"byte_end":47398,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47403,"byte_end":47436,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47441,"byte_end":47467,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47472,"byte_end":47475,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47480,"byte_end":47519,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47524,"byte_end":47527,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47532,"byte_end":47558,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47563,"byte_end":47615,"line_start":487,"line_end":487,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47620,"byte_end":47663,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47668,"byte_end":47671,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47676,"byte_end":47728,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47733,"byte_end":47736,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47741,"byte_end":47756,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47761,"byte_end":47764,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47769,"byte_end":47811,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":47816,"byte_end":47823,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49072,"byte_end":49089,"line_start":538,"line_end":538,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Ok = ()> + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48178,"byte_end":48251,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48256,"byte_end":48298,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48303,"byte_end":48306,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48311,"byte_end":48380,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48385,"byte_end":48429,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48434,"byte_end":48437,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48442,"byte_end":48488,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48493,"byte_end":48537,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48542,"byte_end":48545,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48550,"byte_end":48564,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48569,"byte_end":48572,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48577,"byte_end":48584,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48589,"byte_end":48607,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48612,"byte_end":48638,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48643,"byte_end":48646,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48651,"byte_end":48688,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48693,"byte_end":48696,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48701,"byte_end":48727,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48732,"byte_end":48759,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48764,"byte_end":48798,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48803,"byte_end":48848,"line_start":529,"line_end":529,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48853,"byte_end":48862,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48867,"byte_end":48910,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48915,"byte_end":48918,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48923,"byte_end":48976,"line_start":533,"line_end":533,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":48981,"byte_end":49005,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49010,"byte_end":49042,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49047,"byte_end":49052,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49057,"byte_end":49064,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49699,"byte_end":49704,"line_start":562,"line_end":562,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49442,"byte_end":49499,"line_start":551,"line_end":551,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49504,"byte_end":49507,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49512,"byte_end":49526,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49531,"byte_end":49534,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49539,"byte_end":49546,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49551,"byte_end":49577,"line_start":556,"line_end":556,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49582,"byte_end":49585,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49590,"byte_end":49639,"line_start":558,"line_end":558,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49644,"byte_end":49647,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49652,"byte_end":49679,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49684,"byte_end":49691,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4605},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50213,"byte_end":50216,"line_start":584,"line_end":584,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49821,"byte_end":49888,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49893,"byte_end":49923,"line_start":571,"line_end":571,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49928,"byte_end":49931,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49936,"byte_end":49950,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49955,"byte_end":49958,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49963,"byte_end":49970,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":49975,"byte_end":50001,"line_start":576,"line_end":576,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50006,"byte_end":50009,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50014,"byte_end":50075,"line_start":578,"line_end":578,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50080,"byte_end":50083,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50088,"byte_end":50133,"line_start":580,"line_end":580,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50138,"byte_end":50141,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50146,"byte_end":50193,"line_start":582,"line_end":582,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50198,"byte_end":50205,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51559,"byte_end":51567,"line_start":621,"line_end":621,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50377,"byte_end":50446,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50451,"byte_end":50507,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50512,"byte_end":50515,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50520,"byte_end":50588,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50593,"byte_end":50664,"line_start":596,"line_end":596,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50669,"byte_end":50686,"line_start":597,"line_end":597,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50691,"byte_end":50694,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50699,"byte_end":50713,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50718,"byte_end":50721,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50726,"byte_end":50733,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50738,"byte_end":50771,"line_start":602,"line_end":602,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50776,"byte_end":50802,"line_start":603,"line_end":603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50807,"byte_end":50810,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50815,"byte_end":50854,"line_start":605,"line_end":605,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50859,"byte_end":50862,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50867,"byte_end":50893,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50898,"byte_end":50967,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":50972,"byte_end":51018,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51023,"byte_end":51112,"line_start":610,"line_end":610,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51117,"byte_end":51181,"line_start":611,"line_end":611,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51186,"byte_end":51208,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51213,"byte_end":51308,"line_start":613,"line_end":613,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51313,"byte_end":51316,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51321,"byte_end":51412,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51417,"byte_end":51487,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51492,"byte_end":51505,"line_start":617,"line_end":617,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51510,"byte_end":51513,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51518,"byte_end":51539,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51544,"byte_end":51551,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52750,"byte_end":52758,"line_start":658,"line_end":658,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51790,"byte_end":51863,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51868,"byte_end":51924,"line_start":631,"line_end":631,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51929,"byte_end":51932,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":51937,"byte_end":52008,"line_start":633,"line_end":633,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52013,"byte_end":52079,"line_start":634,"line_end":634,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52084,"byte_end":52128,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52133,"byte_end":52136,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52141,"byte_end":52155,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52160,"byte_end":52163,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52168,"byte_end":52175,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52180,"byte_end":52198,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52203,"byte_end":52229,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52234,"byte_end":52237,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52242,"byte_end":52279,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52284,"byte_end":52308,"line_start":644,"line_end":644,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52313,"byte_end":52331,"line_start":645,"line_end":645,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52336,"byte_end":52399,"line_start":646,"line_end":646,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52404,"byte_end":52464,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52469,"byte_end":52487,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52492,"byte_end":52512,"line_start":649,"line_end":649,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52517,"byte_end":52534,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52539,"byte_end":52553,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52558,"byte_end":52578,"line_start":652,"line_end":652,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52583,"byte_end":52586,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52591,"byte_end":52644,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52649,"byte_end":52687,"line_start":655,"line_end":655,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52692,"byte_end":52730,"line_start":656,"line_end":656,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":52735,"byte_end":52742,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53689,"byte_end":53695,"line_start":688,"line_end":688,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53007,"byte_end":53077,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53082,"byte_end":53151,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ that type implements `Clone`. See also [`copied()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53156,"byte_end":53212,"line_start":669,"line_end":669,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53217,"byte_end":53220,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`copied()`]: #method.copied","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53225,"byte_end":53257,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53262,"byte_end":53265,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53270,"byte_end":53284,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53289,"byte_end":53292,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53297,"byte_end":53304,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53309,"byte_end":53335,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53340,"byte_end":53343,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53348,"byte_end":53370,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53375,"byte_end":53378,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53383,"byte_end":53442,"line_start":680,"line_end":680,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53447,"byte_end":53450,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53455,"byte_end":53510,"line_start":682,"line_end":682,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53515,"byte_end":53574,"line_start":683,"line_end":683,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53579,"byte_end":53582,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53587,"byte_end":53627,"line_start":685,"line_end":685,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53632,"byte_end":53669,"line_start":686,"line_end":686,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53674,"byte_end":53681,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54535,"byte_end":54541,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where T: 'a + Copy + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which copies all of its elements.  This may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53854,"byte_end":53924,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":53929,"byte_end":53998,"line_start":697,"line_end":697,"column_start":5,"column_end":74}},{"value":"/ that type implements `Copy`. See also [`cloned()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54003,"byte_end":54058,"line_start":698,"line_end":698,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54063,"byte_end":54066,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ [`cloned()`]: #method.cloned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54071,"byte_end":54103,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54108,"byte_end":54111,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54116,"byte_end":54130,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54135,"byte_end":54138,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54143,"byte_end":54150,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54155,"byte_end":54181,"line_start":705,"line_end":705,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54186,"byte_end":54189,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54194,"byte_end":54216,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54221,"byte_end":54224,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let v_copied: Vec<_> = a.par_iter().copied().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54229,"byte_end":54288,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54293,"byte_end":54296,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // copied is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54301,"byte_end":54356,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54361,"byte_end":54420,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54425,"byte_end":54428,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_copied, vec![1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54433,"byte_end":54473,"line_start":714,"line_end":714,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54478,"byte_end":54515,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54520,"byte_end":54527,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4623},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55735,"byte_end":55742,"line_start":754,"line_end":754,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54699,"byte_end":54769,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54774,"byte_end":54847,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54852,"byte_end":54926,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54931,"byte_end":54934,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54939,"byte_end":54953,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54958,"byte_end":54961,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54966,"byte_end":54973,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":54978,"byte_end":55004,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55009,"byte_end":55012,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55017,"byte_end":55042,"line_start":734,"line_end":734,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55047,"byte_end":55050,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55055,"byte_end":55096,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55101,"byte_end":55127,"line_start":737,"line_end":737,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55132,"byte_end":55157,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55162,"byte_end":55202,"line_start":739,"line_end":739,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55207,"byte_end":55255,"line_start":740,"line_end":740,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55260,"byte_end":55263,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55268,"byte_end":55292,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55297,"byte_end":55300,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55305,"byte_end":55374,"line_start":744,"line_end":744,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55379,"byte_end":55405,"line_start":745,"line_end":745,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55410,"byte_end":55435,"line_start":746,"line_end":746,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55440,"byte_end":55504,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55509,"byte_end":55549,"line_start":748,"line_end":748,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55554,"byte_end":55625,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55630,"byte_end":55678,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55683,"byte_end":55686,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55691,"byte_end":55715,"line_start":752,"line_end":752,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55720,"byte_end":55727,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56251,"byte_end":56257,"line_start":774,"line_end":774,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55899,"byte_end":55957,"line_start":761,"line_end":761,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55962,"byte_end":55965,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55970,"byte_end":55984,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55989,"byte_end":55992,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":55997,"byte_end":56004,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56009,"byte_end":56035,"line_start":766,"line_end":766,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56040,"byte_end":56043,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56048,"byte_end":56113,"line_start":768,"line_end":768,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56118,"byte_end":56121,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56126,"byte_end":56171,"line_start":770,"line_end":770,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56176,"byte_end":56179,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56184,"byte_end":56231,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56236,"byte_end":56243,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56852,"byte_end":56858,"line_start":795,"line_end":795,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56410,"byte_end":56480,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56485,"byte_end":56543,"line_start":782,"line_end":782,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56548,"byte_end":56551,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56556,"byte_end":56570,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56575,"byte_end":56578,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56583,"byte_end":56590,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56595,"byte_end":56621,"line_start":787,"line_end":787,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56626,"byte_end":56629,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56634,"byte_end":56704,"line_start":789,"line_end":789,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56709,"byte_end":56712,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56717,"byte_end":56767,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56772,"byte_end":56775,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56780,"byte_end":56832,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":56837,"byte_end":56844,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57652,"byte_end":57662,"line_start":820,"line_end":820,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57015,"byte_end":57088,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57093,"byte_end":57162,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57167,"byte_end":57170,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57175,"byte_end":57189,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57194,"byte_end":57197,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57202,"byte_end":57209,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57214,"byte_end":57240,"line_start":808,"line_end":808,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57245,"byte_end":57248,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57253,"byte_end":57299,"line_start":810,"line_end":810,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57304,"byte_end":57349,"line_start":811,"line_end":811,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57354,"byte_end":57415,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57420,"byte_end":57465,"line_start":813,"line_end":813,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57470,"byte_end":57501,"line_start":814,"line_end":814,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57506,"byte_end":57509,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57514,"byte_end":57564,"line_start":816,"line_end":816,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57569,"byte_end":57572,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57577,"byte_end":57632,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57637,"byte_end":57644,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58431,"byte_end":58439,"line_start":846,"line_end":846,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested parallel iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested parallel iterators,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57849,"byte_end":57933,"line_start":828,"line_end":828,"column_start":5,"column_end":89}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":57938,"byte_end":58010,"line_start":829,"line_end":829,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58015,"byte_end":58018,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ See also [`flat_map_iter`](#method.flat_map_iter).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58023,"byte_end":58077,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58082,"byte_end":58085,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58090,"byte_end":58104,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58109,"byte_end":58112,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58117,"byte_end":58124,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58129,"byte_end":58155,"line_start":836,"line_end":836,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58160,"byte_end":58163,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58168,"byte_end":58213,"line_start":838,"line_end":838,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58218,"byte_end":58221,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58226,"byte_end":58292,"line_start":840,"line_end":840,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58297,"byte_end":58300,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58305,"byte_end":58346,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58351,"byte_end":58354,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58359,"byte_end":58411,"line_start":844,"line_end":844,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58416,"byte_end":58423,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60450,"byte_end":60463,"line_start":892,"line_end":892,"column_start":8,"column_end":21},"name":"flat_map_iter","qualname":"::iter::ParallelIterator::flat_map_iter","value":"pub fn flat_map_iter<F, SI>(Self, F) -> FlatMapIter<Self, F> where\nF: Fn(Self::Item) -> SI + Sync + Send, SI: IntoIterator, SI::Item: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested serial iterators,\n producing a new parallel iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested serial iterators,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58627,"byte_end":58709,"line_start":854,"line_end":854,"column_start":5,"column_end":87}},{"value":"/ producing a new parallel iterator that flattens these back into one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58714,"byte_end":58786,"line_start":855,"line_end":855,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58791,"byte_end":58794,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # `flat_map_iter` versus `flat_map`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58799,"byte_end":58838,"line_start":857,"line_end":857,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58843,"byte_end":58846,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ These two methods are similar but behave slightly differently. With [`flat_map`],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58851,"byte_end":58936,"line_start":859,"line_end":859,"column_start":5,"column_end":90}},{"value":"/ each of the nested iterators must be a parallel iterator, and they will be further","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":58941,"byte_end":59027,"line_start":860,"line_end":860,"column_start":5,"column_end":91}},{"value":"/ split up with nested parallelism. With `flat_map_iter`, each nested iterator is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59032,"byte_end":59117,"line_start":861,"line_end":861,"column_start":5,"column_end":90}},{"value":"/ sequential `Iterator`, and we only parallelize _between_ them, while the items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59122,"byte_end":59204,"line_start":862,"line_end":862,"column_start":5,"column_end":87}},{"value":"/ produced by each nested iterator are processed sequentially.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59209,"byte_end":59273,"line_start":863,"line_end":863,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59278,"byte_end":59281,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ When choosing between these methods, consider whether nested parallelism suits the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59286,"byte_end":59372,"line_start":865,"line_end":865,"column_start":5,"column_end":91}},{"value":"/ potential iterators at hand. If there's little computation involved, or its length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59377,"byte_end":59463,"line_start":866,"line_end":866,"column_start":5,"column_end":91}},{"value":"/ is much less than the outer parallel iterator, then it may perform better to avoid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59468,"byte_end":59554,"line_start":867,"line_end":867,"column_start":5,"column_end":91}},{"value":"/ the overhead of parallelism, just flattening sequentially with `flat_map_iter`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59559,"byte_end":59642,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/ If there is a lot of computation, potentially outweighing the outer parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59647,"byte_end":59727,"line_start":869,"line_end":869,"column_start":5,"column_end":85}},{"value":"/ iterator, then the nested parallelism of `flat_map` may be worthwhile.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59732,"byte_end":59806,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59811,"byte_end":59814,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`flat_map`]: #method.flat_map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59819,"byte_end":59853,"line_start":872,"line_end":872,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59858,"byte_end":59861,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59866,"byte_end":59880,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59885,"byte_end":59888,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59893,"byte_end":59900,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59905,"byte_end":59931,"line_start":877,"line_end":877,"column_start":5,"column_end":31}},{"value":"/ use std::cell::RefCell;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59936,"byte_end":59963,"line_start":878,"line_end":878,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59968,"byte_end":59971,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":59976,"byte_end":60021,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60026,"byte_end":60029,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().flat_map_iter(|a| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60034,"byte_end":60085,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // The serial iterator doesn't have to be thread-safe, just its items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60090,"byte_end":60168,"line_start":883,"line_end":883,"column_start":5,"column_end":83}},{"value":"/     let cell_iter = RefCell::new(a.iter().cloned());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60173,"byte_end":60229,"line_start":884,"line_end":884,"column_start":5,"column_end":61}},{"value":"/     std::iter::from_fn(move || cell_iter.borrow_mut().next())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60234,"byte_end":60299,"line_start":885,"line_end":885,"column_start":5,"column_end":70}},{"value":"/ });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60304,"byte_end":60311,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60316,"byte_end":60319,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60324,"byte_end":60365,"line_start":888,"line_end":888,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60370,"byte_end":60373,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60378,"byte_end":60430,"line_start":890,"line_end":890,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60435,"byte_end":60442,"line_start":891,"line_end":891,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61096,"byte_end":61103,"line_start":915,"line_end":915,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" An adaptor that flattens parallel-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens parallel-iterable `Item`s into one large iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60675,"byte_end":60754,"line_start":901,"line_end":901,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60759,"byte_end":60762,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten_iter`](#method.flatten_iter).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60767,"byte_end":60819,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60824,"byte_end":60827,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60832,"byte_end":60846,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60851,"byte_end":60854,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60859,"byte_end":60866,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60871,"byte_end":60897,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60902,"byte_end":60905,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60910,"byte_end":60964,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":60969,"byte_end":61027,"line_start":911,"line_end":911,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61032,"byte_end":61035,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61040,"byte_end":61076,"line_start":913,"line_end":913,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61081,"byte_end":61088,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61822,"byte_end":61834,"line_start":938,"line_end":938,"column_start":8,"column_end":20},"name":"flatten_iter","qualname":"::iter::ParallelIterator::flatten_iter","value":"pub fn flatten_iter(Self) -> FlattenIter<Self> where Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" An adaptor that flattens serial-iterable `Item`s into one large iterator.","sig":null,"attributes":[{"value":"/ An adaptor that flattens serial-iterable `Item`s into one large iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61223,"byte_end":61300,"line_start":922,"line_end":922,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61305,"byte_end":61308,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ See also [`flatten`](#method.flatten) and the analagous comparison of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61313,"byte_end":61386,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/ [`flat_map_iter` versus `flat_map`](#flat_map_iter-versus-flat_map).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61391,"byte_end":61463,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61468,"byte_end":61471,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61476,"byte_end":61490,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61495,"byte_end":61498,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61503,"byte_end":61510,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61515,"byte_end":61541,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61546,"byte_end":61549,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61554,"byte_end":61608,"line_start":932,"line_end":932,"column_start":5,"column_end":59}},{"value":"/ let iters: Vec<_> = x.into_iter().map(Vec::into_iter).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61613,"byte_end":61681,"line_start":933,"line_end":933,"column_start":5,"column_end":73}},{"value":"/ let y: Vec<_> = iters.into_par_iter().flatten_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61686,"byte_end":61753,"line_start":934,"line_end":934,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61758,"byte_end":61761,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61766,"byte_end":61802,"line_start":936,"line_end":936,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":61807,"byte_end":61814,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63569,"byte_end":63575,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62004,"byte_end":62067,"line_start":946,"line_end":946,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62072,"byte_end":62136,"line_start":947,"line_end":947,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62141,"byte_end":62204,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62209,"byte_end":62275,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62280,"byte_end":62346,"line_start":950,"line_end":950,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62351,"byte_end":62414,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62419,"byte_end":62472,"line_start":952,"line_end":952,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62477,"byte_end":62480,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62485,"byte_end":62499,"line_start":954,"line_end":954,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62504,"byte_end":62507,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62512,"byte_end":62519,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62524,"byte_end":62589,"line_start":957,"line_end":957,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62594,"byte_end":62668,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62673,"byte_end":62734,"line_start":959,"line_end":959,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62739,"byte_end":62765,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62770,"byte_end":62818,"line_start":961,"line_end":961,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62823,"byte_end":62886,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62891,"byte_end":62953,"line_start":963,"line_end":963,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":62958,"byte_end":63030,"line_start":964,"line_end":964,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63035,"byte_end":63089,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63094,"byte_end":63148,"line_start":966,"line_end":966,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63153,"byte_end":63160,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63165,"byte_end":63168,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63173,"byte_end":63237,"line_start":969,"line_end":969,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63242,"byte_end":63306,"line_start":970,"line_end":970,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63311,"byte_end":63377,"line_start":971,"line_end":971,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63382,"byte_end":63446,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63451,"byte_end":63479,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63484,"byte_end":63487,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63492,"byte_end":63561,"line_start":975,"line_end":975,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64916,"byte_end":64927,"line_start":1010,"line_end":1010,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63810,"byte_end":63873,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63878,"byte_end":63938,"line_start":985,"line_end":985,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63943,"byte_end":63966,"line_start":986,"line_end":986,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63971,"byte_end":63974,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":63979,"byte_end":64035,"line_start":988,"line_end":988,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64040,"byte_end":64106,"line_start":989,"line_end":989,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64111,"byte_end":64144,"line_start":990,"line_end":990,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64149,"byte_end":64152,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64157,"byte_end":64171,"line_start":992,"line_end":992,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64176,"byte_end":64179,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64184,"byte_end":64191,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64196,"byte_end":64222,"line_start":995,"line_end":995,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64227,"byte_end":64275,"line_start":996,"line_end":996,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64280,"byte_end":64343,"line_start":997,"line_end":997,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64348,"byte_end":64410,"line_start":998,"line_end":998,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64415,"byte_end":64473,"line_start":999,"line_end":999,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64478,"byte_end":64503,"line_start":1000,"line_end":1000,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64508,"byte_end":64562,"line_start":1001,"line_end":1001,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64567,"byte_end":64574,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64579,"byte_end":64582,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64587,"byte_end":64651,"line_start":1004,"line_end":1004,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64656,"byte_end":64720,"line_start":1005,"line_end":1005,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64725,"byte_end":64791,"line_start":1006,"line_end":1006,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64796,"byte_end":64826,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64831,"byte_end":64834,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":64839,"byte_end":64908,"line_start":1009,"line_end":1009,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4655},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67111,"byte_end":67121,"line_start":1064,"line_end":1064,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65722,"byte_end":65796,"line_start":1033,"line_end":1033,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65801,"byte_end":65869,"line_start":1034,"line_end":1034,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65874,"byte_end":65877,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65882,"byte_end":65914,"line_start":1036,"line_end":1036,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65919,"byte_end":65922,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":65927,"byte_end":66001,"line_start":1038,"line_end":1038,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66006,"byte_end":66081,"line_start":1039,"line_end":1039,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66086,"byte_end":66162,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66167,"byte_end":66233,"line_start":1041,"line_end":1041,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66238,"byte_end":66313,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66318,"byte_end":66355,"line_start":1043,"line_end":1043,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66360,"byte_end":66363,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66368,"byte_end":66382,"line_start":1045,"line_end":1045,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66387,"byte_end":66390,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66395,"byte_end":66402,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66407,"byte_end":66433,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66438,"byte_end":66441,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66446,"byte_end":66510,"line_start":1050,"line_end":1050,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66515,"byte_end":66596,"line_start":1051,"line_end":1051,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66601,"byte_end":66629,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66634,"byte_end":66704,"line_start":1053,"line_end":1053,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66709,"byte_end":66778,"line_start":1054,"line_end":1054,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66783,"byte_end":66788,"line_start":1055,"line_end":1055,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66793,"byte_end":66853,"line_start":1056,"line_end":1056,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66858,"byte_end":66861,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66866,"byte_end":66895,"line_start":1058,"line_end":1058,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66900,"byte_end":66945,"line_start":1059,"line_end":1059,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66950,"byte_end":66953,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":66958,"byte_end":67030,"line_start":1061,"line_end":1061,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67035,"byte_end":67091,"line_start":1062,"line_end":1062,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67096,"byte_end":67103,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68748,"byte_end":68763,"line_start":1108,"line_end":1108,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67373,"byte_end":67447,"line_start":1073,"line_end":1073,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67452,"byte_end":67455,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67460,"byte_end":67533,"line_start":1075,"line_end":1075,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67538,"byte_end":67602,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67607,"byte_end":67654,"line_start":1077,"line_end":1077,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67659,"byte_end":67662,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67667,"byte_end":67709,"line_start":1079,"line_end":1079,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67714,"byte_end":67754,"line_start":1080,"line_end":1080,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67759,"byte_end":67762,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67767,"byte_end":67830,"line_start":1082,"line_end":1082,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67835,"byte_end":67871,"line_start":1083,"line_end":1083,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67876,"byte_end":67933,"line_start":1084,"line_end":1084,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":67938,"byte_end":67996,"line_start":1085,"line_end":1085,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68001,"byte_end":68004,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68009,"byte_end":68062,"line_start":1087,"line_end":1087,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68067,"byte_end":68103,"line_start":1088,"line_end":1088,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68108,"byte_end":68173,"line_start":1089,"line_end":1089,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68178,"byte_end":68234,"line_start":1090,"line_end":1090,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68239,"byte_end":68242,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68247,"byte_end":68261,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68266,"byte_end":68269,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68274,"byte_end":68281,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68286,"byte_end":68312,"line_start":1095,"line_end":1095,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68317,"byte_end":68320,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68325,"byte_end":68374,"line_start":1097,"line_end":1097,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68379,"byte_end":68382,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68387,"byte_end":68415,"line_start":1099,"line_end":1099,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68420,"byte_end":68445,"line_start":1100,"line_end":1100,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68450,"byte_end":68519,"line_start":1101,"line_end":1101,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68524,"byte_end":68557,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68562,"byte_end":68608,"line_start":1103,"line_end":1103,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68613,"byte_end":68623,"line_start":1104,"line_end":1104,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68628,"byte_end":68690,"line_start":1105,"line_end":1105,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68695,"byte_end":68728,"line_start":1106,"line_end":1106,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68733,"byte_end":68740,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4662},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74541,"byte_end":74545,"line_start":1249,"line_end":1249,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":68968,"byte_end":69031,"line_start":1116,"line_end":1116,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69036,"byte_end":69088,"line_start":1117,"line_end":1117,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69093,"byte_end":69156,"line_start":1118,"line_end":1118,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69161,"byte_end":69224,"line_start":1119,"line_end":1119,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69229,"byte_end":69294,"line_start":1120,"line_end":1120,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69299,"byte_end":69365,"line_start":1121,"line_end":1121,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69370,"byte_end":69432,"line_start":1122,"line_end":1122,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69437,"byte_end":69501,"line_start":1123,"line_end":1123,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69506,"byte_end":69570,"line_start":1124,"line_end":1124,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69575,"byte_end":69615,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69620,"byte_end":69623,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69628,"byte_end":69690,"line_start":1127,"line_end":1127,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69695,"byte_end":69765,"line_start":1128,"line_end":1128,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69770,"byte_end":69782,"line_start":1129,"line_end":1129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69787,"byte_end":69790,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69795,"byte_end":69809,"line_start":1131,"line_end":1131,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69814,"byte_end":69831,"line_start":1132,"line_end":1132,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69836,"byte_end":69853,"line_start":1133,"line_end":1133,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69858,"byte_end":69875,"line_start":1134,"line_end":1134,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69880,"byte_end":69887,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69892,"byte_end":69895,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69900,"byte_end":69935,"line_start":1137,"line_end":1137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69940,"byte_end":69943,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69948,"byte_end":69962,"line_start":1139,"line_end":1139,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69967,"byte_end":69984,"line_start":1140,"line_end":1140,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":69989,"byte_end":70006,"line_start":1141,"line_end":1141,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70011,"byte_end":70028,"line_start":1142,"line_end":1142,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70033,"byte_end":70040,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70045,"byte_end":70048,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70053,"byte_end":70116,"line_start":1145,"line_end":1145,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70121,"byte_end":70158,"line_start":1146,"line_end":1146,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70163,"byte_end":70166,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70171,"byte_end":70197,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70202,"byte_end":70205,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70210,"byte_end":70279,"line_start":1150,"line_end":1150,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70284,"byte_end":70350,"line_start":1151,"line_end":1151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70355,"byte_end":70358,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70363,"byte_end":70426,"line_start":1153,"line_end":1153,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70431,"byte_end":70490,"line_start":1154,"line_end":1154,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70495,"byte_end":70561,"line_start":1155,"line_end":1155,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70566,"byte_end":70632,"line_start":1156,"line_end":1156,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70637,"byte_end":70701,"line_start":1157,"line_end":1157,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70706,"byte_end":70769,"line_start":1158,"line_end":1158,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70774,"byte_end":70839,"line_start":1159,"line_end":1159,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70844,"byte_end":70907,"line_start":1160,"line_end":1160,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70912,"byte_end":70977,"line_start":1161,"line_end":1161,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":70982,"byte_end":71048,"line_start":1162,"line_end":1162,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71053,"byte_end":71109,"line_start":1163,"line_end":1163,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71114,"byte_end":71117,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71122,"byte_end":71184,"line_start":1165,"line_end":1165,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71189,"byte_end":71251,"line_start":1166,"line_end":1166,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71256,"byte_end":71318,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71323,"byte_end":71389,"line_start":1168,"line_end":1168,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71394,"byte_end":71458,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71463,"byte_end":71527,"line_start":1170,"line_end":1170,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71532,"byte_end":71554,"line_start":1171,"line_end":1171,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71559,"byte_end":71562,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71567,"byte_end":71626,"line_start":1173,"line_end":1173,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71631,"byte_end":71697,"line_start":1174,"line_end":1174,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71702,"byte_end":71766,"line_start":1175,"line_end":1175,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71771,"byte_end":71830,"line_start":1176,"line_end":1176,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71835,"byte_end":71901,"line_start":1177,"line_end":1177,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71906,"byte_end":71971,"line_start":1178,"line_end":1178,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":71976,"byte_end":72038,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72043,"byte_end":72070,"line_start":1180,"line_end":1180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72075,"byte_end":72078,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72083,"byte_end":72109,"line_start":1182,"line_end":1182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72114,"byte_end":72117,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72122,"byte_end":72181,"line_start":1184,"line_end":1184,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72186,"byte_end":72250,"line_start":1185,"line_end":1185,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72255,"byte_end":72321,"line_start":1186,"line_end":1186,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72326,"byte_end":72368,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72373,"byte_end":72376,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72381,"byte_end":72388,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72393,"byte_end":72419,"line_start":1190,"line_end":1190,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72424,"byte_end":72427,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72432,"byte_end":72443,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72448,"byte_end":72481,"line_start":1193,"line_end":1193,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72486,"byte_end":72505,"line_start":1194,"line_end":1194,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72510,"byte_end":72551,"line_start":1195,"line_end":1195,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72556,"byte_end":72589,"line_start":1196,"line_end":1196,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72594,"byte_end":72660,"line_start":1197,"line_end":1197,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72665,"byte_end":72668,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72673,"byte_end":72700,"line_start":1199,"line_end":1199,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72705,"byte_end":72712,"line_start":1200,"line_end":1200,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72717,"byte_end":72720,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72725,"byte_end":72791,"line_start":1202,"line_end":1202,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72796,"byte_end":72860,"line_start":1203,"line_end":1203,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72865,"byte_end":72925,"line_start":1204,"line_end":1204,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":72930,"byte_end":72995,"line_start":1205,"line_end":1205,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73000,"byte_end":73020,"line_start":1206,"line_end":1206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73025,"byte_end":73028,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73033,"byte_end":73040,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73045,"byte_end":73071,"line_start":1209,"line_end":1209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73076,"byte_end":73079,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73084,"byte_end":73095,"line_start":1211,"line_end":1211,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73100,"byte_end":73133,"line_start":1212,"line_end":1212,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73138,"byte_end":73157,"line_start":1213,"line_end":1213,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73162,"byte_end":73193,"line_start":1214,"line_end":1214,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73198,"byte_end":73258,"line_start":1215,"line_end":1215,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73263,"byte_end":73296,"line_start":1216,"line_end":1216,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73301,"byte_end":73367,"line_start":1217,"line_end":1217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73372,"byte_end":73375,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73380,"byte_end":73407,"line_start":1219,"line_end":1219,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73412,"byte_end":73419,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73424,"byte_end":73427,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73432,"byte_end":73495,"line_start":1222,"line_end":1222,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73500,"byte_end":73565,"line_start":1223,"line_end":1223,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73570,"byte_end":73634,"line_start":1224,"line_end":1224,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73639,"byte_end":73705,"line_start":1225,"line_end":1225,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73710,"byte_end":73774,"line_start":1226,"line_end":1226,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73779,"byte_end":73842,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73847,"byte_end":73858,"line_start":1228,"line_end":1228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73863,"byte_end":73866,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73871,"byte_end":73937,"line_start":1230,"line_end":1230,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73942,"byte_end":73974,"line_start":1231,"line_end":1231,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73979,"byte_end":73982,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":73987,"byte_end":74031,"line_start":1233,"line_end":1233,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74036,"byte_end":74039,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74044,"byte_end":74109,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74114,"byte_end":74179,"line_start":1236,"line_end":1236,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74184,"byte_end":74210,"line_start":1237,"line_end":1237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74215,"byte_end":74218,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74223,"byte_end":74230,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74235,"byte_end":74261,"line_start":1240,"line_end":1240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74266,"byte_end":74269,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74274,"byte_end":74299,"line_start":1242,"line_end":1242,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74304,"byte_end":74339,"line_start":1243,"line_end":1243,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74344,"byte_end":74410,"line_start":1244,"line_end":1244,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74415,"byte_end":74448,"line_start":1245,"line_end":1245,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74453,"byte_end":74456,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74461,"byte_end":74521,"line_start":1247,"line_end":1247,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74526,"byte_end":74533,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75470,"byte_end":75479,"line_start":1277,"line_end":1277,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74782,"byte_end":74852,"line_start":1258,"line_end":1258,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74857,"byte_end":74915,"line_start":1259,"line_end":1259,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74920,"byte_end":74923,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":74928,"byte_end":75000,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75005,"byte_end":75076,"line_start":1262,"line_end":1262,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75081,"byte_end":75110,"line_start":1263,"line_end":1263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75115,"byte_end":75118,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75123,"byte_end":75137,"line_start":1265,"line_end":1265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75142,"byte_end":75145,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75150,"byte_end":75157,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75162,"byte_end":75188,"line_start":1268,"line_end":1268,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75193,"byte_end":75196,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75201,"byte_end":75226,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75231,"byte_end":75266,"line_start":1271,"line_end":1271,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75271,"byte_end":75339,"line_start":1272,"line_end":1272,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75344,"byte_end":75377,"line_start":1273,"line_end":1273,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75382,"byte_end":75385,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75390,"byte_end":75450,"line_start":1275,"line_end":1275,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75455,"byte_end":75462,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76612,"byte_end":76620,"line_start":1310,"line_end":1310,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Ok = T> + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75681,"byte_end":75719,"line_start":1285,"line_end":1285,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75724,"byte_end":75727,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75732,"byte_end":75804,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75809,"byte_end":75875,"line_start":1288,"line_end":1288,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75880,"byte_end":75955,"line_start":1289,"line_end":1289,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75960,"byte_end":75988,"line_start":1290,"line_end":1290,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":75993,"byte_end":75996,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76001,"byte_end":76061,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76066,"byte_end":76127,"line_start":1293,"line_end":1293,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76132,"byte_end":76135,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76140,"byte_end":76168,"line_start":1295,"line_end":1295,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76173,"byte_end":76213,"line_start":1296,"line_end":1296,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76218,"byte_end":76221,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76226,"byte_end":76240,"line_start":1298,"line_end":1298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76245,"byte_end":76248,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76253,"byte_end":76260,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76265,"byte_end":76291,"line_start":1301,"line_end":1301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76296,"byte_end":76299,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76304,"byte_end":76329,"line_start":1303,"line_end":1303,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76334,"byte_end":76369,"line_start":1304,"line_end":1304,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76374,"byte_end":76453,"line_start":1305,"line_end":1305,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76458,"byte_end":76513,"line_start":1306,"line_end":1306,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76518,"byte_end":76521,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76526,"byte_end":76592,"line_start":1308,"line_end":1308,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76597,"byte_end":76604,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77540,"byte_end":77553,"line_start":1337,"line_end":1337,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Ok = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Performs a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Performs a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76883,"byte_end":76951,"line_start":1319,"line_end":1319,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76956,"byte_end":76959,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":76964,"byte_end":77037,"line_start":1321,"line_end":1321,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77042,"byte_end":77074,"line_start":1322,"line_end":1322,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77079,"byte_end":77082,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77087,"byte_end":77125,"line_start":1324,"line_end":1324,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77130,"byte_end":77166,"line_start":1325,"line_end":1325,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77171,"byte_end":77174,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77179,"byte_end":77186,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77191,"byte_end":77217,"line_start":1328,"line_end":1328,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77222,"byte_end":77225,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77230,"byte_end":77255,"line_start":1330,"line_end":1330,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77260,"byte_end":77295,"line_start":1331,"line_end":1331,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77300,"byte_end":77381,"line_start":1332,"line_end":1332,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77386,"byte_end":77441,"line_start":1333,"line_end":1333,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77446,"byte_end":77449,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77454,"byte_end":77520,"line_start":1335,"line_end":1335,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77525,"byte_end":77532,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78578,"byte_end":78581,"line_start":1370,"line_end":1370,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77795,"byte_end":77833,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77838,"byte_end":77841,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77846,"byte_end":77912,"line_start":1348,"line_end":1348,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77917,"byte_end":77982,"line_start":1349,"line_end":1349,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":77987,"byte_end":78049,"line_start":1350,"line_end":1350,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78054,"byte_end":78078,"line_start":1351,"line_end":1351,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78083,"byte_end":78086,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78091,"byte_end":78160,"line_start":1353,"line_end":1353,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78165,"byte_end":78168,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78173,"byte_end":78235,"line_start":1355,"line_end":1355,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78240,"byte_end":78302,"line_start":1356,"line_end":1356,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78307,"byte_end":78357,"line_start":1357,"line_end":1357,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78362,"byte_end":78365,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78370,"byte_end":78384,"line_start":1359,"line_end":1359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78389,"byte_end":78392,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78397,"byte_end":78404,"line_start":1361,"line_end":1361,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78409,"byte_end":78435,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78440,"byte_end":78443,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78448,"byte_end":78470,"line_start":1364,"line_end":1364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78475,"byte_end":78478,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78483,"byte_end":78521,"line_start":1366,"line_end":1366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78526,"byte_end":78529,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78534,"byte_end":78558,"line_start":1368,"line_end":1368,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78563,"byte_end":78570,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79580,"byte_end":79587,"line_start":1403,"line_end":1403,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78690,"byte_end":78735,"line_start":1377,"line_end":1377,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78740,"byte_end":78743,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78748,"byte_end":78814,"line_start":1379,"line_end":1379,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78819,"byte_end":78884,"line_start":1380,"line_end":1380,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78889,"byte_end":78951,"line_start":1381,"line_end":1381,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78956,"byte_end":78980,"line_start":1382,"line_end":1382,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78985,"byte_end":78988,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":78993,"byte_end":79062,"line_start":1384,"line_end":1384,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79067,"byte_end":79070,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79075,"byte_end":79137,"line_start":1386,"line_end":1386,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79142,"byte_end":79204,"line_start":1387,"line_end":1387,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79209,"byte_end":79259,"line_start":1388,"line_end":1388,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79264,"byte_end":79267,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79272,"byte_end":79286,"line_start":1390,"line_end":1390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79291,"byte_end":79294,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79299,"byte_end":79306,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79311,"byte_end":79337,"line_start":1393,"line_end":1393,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79342,"byte_end":79345,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79350,"byte_end":79383,"line_start":1395,"line_end":1395,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79388,"byte_end":79429,"line_start":1396,"line_end":1396,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79434,"byte_end":79439,"line_start":1397,"line_end":1397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79444,"byte_end":79447,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79452,"byte_end":79484,"line_start":1399,"line_end":1399,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79489,"byte_end":79521,"line_start":1400,"line_end":1400,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79526,"byte_end":79560,"line_start":1401,"line_end":1401,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79565,"byte_end":79572,"line_start":1402,"line_end":1402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80430,"byte_end":80433,"line_start":1433,"line_end":1433,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79712,"byte_end":79777,"line_start":1410,"line_end":1410,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79782,"byte_end":79847,"line_start":1411,"line_end":1411,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79852,"byte_end":79868,"line_start":1412,"line_end":1412,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79873,"byte_end":79876,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79881,"byte_end":79946,"line_start":1414,"line_end":1414,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":79951,"byte_end":80017,"line_start":1415,"line_end":1415,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80022,"byte_end":80060,"line_start":1416,"line_end":1416,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80065,"byte_end":80068,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80073,"byte_end":80143,"line_start":1418,"line_end":1418,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80148,"byte_end":80151,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80156,"byte_end":80170,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80175,"byte_end":80178,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80183,"byte_end":80190,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80195,"byte_end":80221,"line_start":1423,"line_end":1423,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80226,"byte_end":80229,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80234,"byte_end":80259,"line_start":1425,"line_end":1425,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80264,"byte_end":80267,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80272,"byte_end":80318,"line_start":1427,"line_end":1427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80323,"byte_end":80326,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80331,"byte_end":80356,"line_start":1429,"line_end":1429,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80361,"byte_end":80364,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80369,"byte_end":80410,"line_start":1431,"line_end":1431,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80415,"byte_end":80422,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81172,"byte_end":81178,"line_start":1457,"line_end":1457,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80549,"byte_end":80622,"line_start":1440,"line_end":1440,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80627,"byte_end":80697,"line_start":1441,"line_end":1441,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80702,"byte_end":80751,"line_start":1442,"line_end":1442,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80756,"byte_end":80759,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80764,"byte_end":80829,"line_start":1444,"line_end":1444,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80834,"byte_end":80903,"line_start":1445,"line_end":1445,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80908,"byte_end":80946,"line_start":1446,"line_end":1446,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80951,"byte_end":80954,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80959,"byte_end":80973,"line_start":1448,"line_end":1448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80978,"byte_end":80981,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80986,"byte_end":80993,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":80998,"byte_end":81024,"line_start":1451,"line_end":1451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81029,"byte_end":81032,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81037,"byte_end":81075,"line_start":1453,"line_end":1453,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81080,"byte_end":81083,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81088,"byte_end":81152,"line_start":1455,"line_end":1455,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81157,"byte_end":81164,"line_start":1456,"line_end":1456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82146,"byte_end":82156,"line_start":1488,"line_end":1488,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81548,"byte_end":81613,"line_start":1471,"line_end":1471,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81618,"byte_end":81677,"line_start":1472,"line_end":1472,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81682,"byte_end":81722,"line_start":1473,"line_end":1473,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81727,"byte_end":81730,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81735,"byte_end":81800,"line_start":1475,"line_end":1475,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81805,"byte_end":81871,"line_start":1476,"line_end":1476,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81876,"byte_end":81914,"line_start":1477,"line_end":1477,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81919,"byte_end":81922,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81927,"byte_end":81941,"line_start":1479,"line_end":1479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81946,"byte_end":81949,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81954,"byte_end":81961,"line_start":1481,"line_end":1481,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81966,"byte_end":81992,"line_start":1482,"line_end":1482,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":81997,"byte_end":82000,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82005,"byte_end":82050,"line_start":1484,"line_end":1484,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82055,"byte_end":82058,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82063,"byte_end":82126,"line_start":1486,"line_end":1486,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82131,"byte_end":82138,"line_start":1487,"line_end":1487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4702},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83389,"byte_end":83392,"line_start":1531,"line_end":1531,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82671,"byte_end":82736,"line_start":1508,"line_end":1508,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82741,"byte_end":82806,"line_start":1509,"line_end":1509,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82811,"byte_end":82827,"line_start":1510,"line_end":1510,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82832,"byte_end":82835,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82840,"byte_end":82905,"line_start":1512,"line_end":1512,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82910,"byte_end":82976,"line_start":1513,"line_end":1513,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":82981,"byte_end":83019,"line_start":1514,"line_end":1514,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83024,"byte_end":83027,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83032,"byte_end":83102,"line_start":1516,"line_end":1516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83107,"byte_end":83110,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83115,"byte_end":83129,"line_start":1518,"line_end":1518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83134,"byte_end":83137,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83142,"byte_end":83149,"line_start":1520,"line_end":1520,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83154,"byte_end":83180,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83185,"byte_end":83188,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83193,"byte_end":83218,"line_start":1523,"line_end":1523,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83223,"byte_end":83226,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83231,"byte_end":83277,"line_start":1525,"line_end":1525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83282,"byte_end":83285,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83290,"byte_end":83315,"line_start":1527,"line_end":1527,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83320,"byte_end":83323,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83328,"byte_end":83369,"line_start":1529,"line_end":1529,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83374,"byte_end":83381,"line_start":1530,"line_end":1530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84145,"byte_end":84151,"line_start":1555,"line_end":1555,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83508,"byte_end":83581,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83586,"byte_end":83656,"line_start":1539,"line_end":1539,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83661,"byte_end":83710,"line_start":1540,"line_end":1540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83715,"byte_end":83718,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83723,"byte_end":83788,"line_start":1542,"line_end":1542,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83793,"byte_end":83862,"line_start":1543,"line_end":1543,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83867,"byte_end":83905,"line_start":1544,"line_end":1544,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83910,"byte_end":83913,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83918,"byte_end":83932,"line_start":1546,"line_end":1546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83937,"byte_end":83940,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83945,"byte_end":83952,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83957,"byte_end":83983,"line_start":1549,"line_end":1549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83988,"byte_end":83991,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":83996,"byte_end":84034,"line_start":1551,"line_end":1551,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84039,"byte_end":84042,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84047,"byte_end":84125,"line_start":1553,"line_end":1553,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84130,"byte_end":84137,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4710},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85120,"byte_end":85130,"line_start":1586,"line_end":1586,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84521,"byte_end":84586,"line_start":1569,"line_end":1569,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84591,"byte_end":84650,"line_start":1570,"line_end":1570,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84655,"byte_end":84695,"line_start":1571,"line_end":1571,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84700,"byte_end":84703,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84708,"byte_end":84773,"line_start":1573,"line_end":1573,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84778,"byte_end":84844,"line_start":1574,"line_end":1574,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84849,"byte_end":84887,"line_start":1575,"line_end":1575,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84892,"byte_end":84895,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84900,"byte_end":84914,"line_start":1577,"line_end":1577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84919,"byte_end":84922,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84927,"byte_end":84934,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84939,"byte_end":84965,"line_start":1580,"line_end":1580,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84970,"byte_end":84973,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":84978,"byte_end":85023,"line_start":1582,"line_end":1582,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85028,"byte_end":85031,"line_start":1583,"line_end":1583,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85036,"byte_end":85100,"line_start":1584,"line_end":1584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85105,"byte_end":85112,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86061,"byte_end":86066,"line_start":1622,"line_end":1622,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85645,"byte_end":85706,"line_start":1606,"line_end":1606,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85711,"byte_end":85714,"line_start":1607,"line_end":1607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85719,"byte_end":85733,"line_start":1608,"line_end":1608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85738,"byte_end":85741,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85746,"byte_end":85753,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85758,"byte_end":85784,"line_start":1611,"line_end":1611,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85789,"byte_end":85792,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85797,"byte_end":85819,"line_start":1613,"line_end":1613,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85824,"byte_end":85846,"line_start":1614,"line_end":1614,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85851,"byte_end":85854,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85859,"byte_end":85911,"line_start":1616,"line_end":1616,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85916,"byte_end":85919,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85924,"byte_end":85978,"line_start":1618,"line_end":1618,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85983,"byte_end":85986,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":85991,"byte_end":86041,"line_start":1620,"line_end":1620,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86046,"byte_end":86053,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87160,"byte_end":87168,"line_start":1652,"line_end":1652,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86237,"byte_end":86297,"line_start":1629,"line_end":1629,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86302,"byte_end":86364,"line_start":1630,"line_end":1630,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86369,"byte_end":86429,"line_start":1631,"line_end":1631,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86434,"byte_end":86500,"line_start":1632,"line_end":1632,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86505,"byte_end":86581,"line_start":1633,"line_end":1633,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86586,"byte_end":86589,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86594,"byte_end":86655,"line_start":1635,"line_end":1635,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86660,"byte_end":86721,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86726,"byte_end":86785,"line_start":1637,"line_end":1637,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86790,"byte_end":86793,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86798,"byte_end":86876,"line_start":1639,"line_end":1639,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86881,"byte_end":86884,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86889,"byte_end":86903,"line_start":1641,"line_end":1641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86908,"byte_end":86911,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86916,"byte_end":86923,"line_start":1643,"line_end":1643,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86928,"byte_end":86954,"line_start":1644,"line_end":1644,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86959,"byte_end":86962,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86967,"byte_end":86992,"line_start":1646,"line_end":1646,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":86997,"byte_end":87000,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87005,"byte_end":87067,"line_start":1648,"line_end":1648,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87072,"byte_end":87075,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87080,"byte_end":87140,"line_start":1650,"line_end":1650,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87145,"byte_end":87152,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88207,"byte_end":88217,"line_start":1682,"line_end":1682,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87327,"byte_end":87400,"line_start":1659,"line_end":1659,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87405,"byte_end":87457,"line_start":1660,"line_end":1660,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87462,"byte_end":87465,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87470,"byte_end":87535,"line_start":1662,"line_end":1662,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87540,"byte_end":87609,"line_start":1663,"line_end":1663,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87614,"byte_end":87644,"line_start":1664,"line_end":1664,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87649,"byte_end":87652,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87657,"byte_end":87728,"line_start":1666,"line_end":1666,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87733,"byte_end":87804,"line_start":1667,"line_end":1667,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87809,"byte_end":87880,"line_start":1668,"line_end":1668,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87885,"byte_end":87919,"line_start":1669,"line_end":1669,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87924,"byte_end":87927,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87932,"byte_end":87946,"line_start":1671,"line_end":1671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87951,"byte_end":87954,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87959,"byte_end":87966,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":87971,"byte_end":87997,"line_start":1674,"line_end":1674,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88002,"byte_end":88005,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88010,"byte_end":88035,"line_start":1676,"line_end":1676,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88040,"byte_end":88043,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88048,"byte_end":88112,"line_start":1678,"line_end":1678,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88117,"byte_end":88120,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88125,"byte_end":88187,"line_start":1680,"line_end":1680,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88192,"byte_end":88199,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89230,"byte_end":89239,"line_start":1711,"line_end":1711,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88393,"byte_end":88465,"line_start":1689,"line_end":1689,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88470,"byte_end":88522,"line_start":1690,"line_end":1690,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88527,"byte_end":88530,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88535,"byte_end":88599,"line_start":1692,"line_end":1692,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88604,"byte_end":88674,"line_start":1693,"line_end":1693,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88679,"byte_end":88706,"line_start":1694,"line_end":1694,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88711,"byte_end":88714,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88719,"byte_end":88790,"line_start":1696,"line_end":1696,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88795,"byte_end":88867,"line_start":1697,"line_end":1697,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88872,"byte_end":88944,"line_start":1698,"line_end":1698,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88949,"byte_end":88952,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88957,"byte_end":88971,"line_start":1700,"line_end":1700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88976,"byte_end":88979,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88984,"byte_end":88991,"line_start":1702,"line_end":1702,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":88996,"byte_end":89022,"line_start":1703,"line_end":1703,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89027,"byte_end":89030,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89035,"byte_end":89060,"line_start":1705,"line_end":1705,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89065,"byte_end":89068,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89073,"byte_end":89136,"line_start":1707,"line_end":1707,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89141,"byte_end":89144,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89149,"byte_end":89210,"line_start":1709,"line_end":1709,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89215,"byte_end":89222,"line_start":1710,"line_end":1710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90316,"byte_end":90328,"line_start":1741,"line_end":1741,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89414,"byte_end":89483,"line_start":1718,"line_end":1718,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89488,"byte_end":89549,"line_start":1719,"line_end":1719,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89554,"byte_end":89557,"line_start":1720,"line_end":1720,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89562,"byte_end":89631,"line_start":1721,"line_end":1721,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89636,"byte_end":89704,"line_start":1722,"line_end":1722,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89709,"byte_end":89733,"line_start":1723,"line_end":1723,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89738,"byte_end":89741,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89746,"byte_end":89814,"line_start":1725,"line_end":1725,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89819,"byte_end":89890,"line_start":1726,"line_end":1726,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89895,"byte_end":89963,"line_start":1727,"line_end":1727,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":89968,"byte_end":90035,"line_start":1728,"line_end":1728,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90040,"byte_end":90043,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90048,"byte_end":90062,"line_start":1730,"line_end":1730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90067,"byte_end":90070,"line_start":1731,"line_end":1731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90075,"byte_end":90082,"line_start":1732,"line_end":1732,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90087,"byte_end":90113,"line_start":1733,"line_end":1733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90118,"byte_end":90121,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90126,"byte_end":90163,"line_start":1735,"line_end":1735,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90168,"byte_end":90171,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let found_number = c.par_iter().find_map_any(|s| s.parse().ok());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90176,"byte_end":90245,"line_start":1737,"line_end":1737,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90250,"byte_end":90253,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(found_number, Some(5));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90258,"byte_end":90296,"line_start":1739,"line_end":1739,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90301,"byte_end":90308,"line_start":1740,"line_end":1740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91518,"byte_end":91532,"line_start":1775,"line_end":1775,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90577,"byte_end":90650,"line_start":1752,"line_end":1752,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90655,"byte_end":90731,"line_start":1753,"line_end":1753,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90736,"byte_end":90739,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90744,"byte_end":90818,"line_start":1755,"line_end":1755,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90823,"byte_end":90896,"line_start":1756,"line_end":1756,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90901,"byte_end":90953,"line_start":1757,"line_end":1757,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90958,"byte_end":90961,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":90966,"byte_end":91037,"line_start":1759,"line_end":1759,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91042,"byte_end":91112,"line_start":1760,"line_end":1760,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91117,"byte_end":91192,"line_start":1761,"line_end":1761,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91197,"byte_end":91235,"line_start":1762,"line_end":1762,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91240,"byte_end":91243,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91248,"byte_end":91262,"line_start":1764,"line_end":1764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91267,"byte_end":91270,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91275,"byte_end":91282,"line_start":1766,"line_end":1766,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91287,"byte_end":91313,"line_start":1767,"line_end":1767,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91318,"byte_end":91321,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91326,"byte_end":91363,"line_start":1769,"line_end":1769,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91368,"byte_end":91371,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91376,"byte_end":91447,"line_start":1771,"line_end":1771,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91452,"byte_end":91455,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91460,"byte_end":91498,"line_start":1773,"line_end":1773,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91503,"byte_end":91510,"line_start":1774,"line_end":1774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92717,"byte_end":92730,"line_start":1809,"line_end":1809,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91783,"byte_end":91856,"line_start":1786,"line_end":1786,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91861,"byte_end":91936,"line_start":1787,"line_end":1787,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91941,"byte_end":91944,"line_start":1788,"line_end":1788,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":91949,"byte_end":92023,"line_start":1789,"line_end":1789,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92028,"byte_end":92101,"line_start":1790,"line_end":1790,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92106,"byte_end":92155,"line_start":1791,"line_end":1791,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92160,"byte_end":92163,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92168,"byte_end":92239,"line_start":1793,"line_end":1793,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92244,"byte_end":92314,"line_start":1794,"line_end":1794,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92319,"byte_end":92394,"line_start":1795,"line_end":1795,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92399,"byte_end":92437,"line_start":1796,"line_end":1796,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92442,"byte_end":92445,"line_start":1797,"line_end":1797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92450,"byte_end":92464,"line_start":1798,"line_end":1798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92469,"byte_end":92472,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92477,"byte_end":92484,"line_start":1800,"line_end":1800,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92489,"byte_end":92515,"line_start":1801,"line_end":1801,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92520,"byte_end":92523,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92528,"byte_end":92565,"line_start":1803,"line_end":1803,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92570,"byte_end":92573,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ let last_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92578,"byte_end":92647,"line_start":1805,"line_end":1805,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92652,"byte_end":92655,"line_start":1806,"line_end":1806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(last_number, Some(5));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92660,"byte_end":92697,"line_start":1807,"line_end":1807,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92702,"byte_end":92709,"line_start":1808,"line_end":1808,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4745},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93147,"byte_end":93151,"line_start":1823,"line_end":1823,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":92999,"byte_end":93139,"line_start":1821,"line_end":1822,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4747},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93856,"byte_end":93859,"line_start":1847,"line_end":1847,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93307,"byte_end":93367,"line_start":1830,"line_end":1830,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93372,"byte_end":93434,"line_start":1831,"line_end":1831,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93439,"byte_end":93499,"line_start":1832,"line_end":1832,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93504,"byte_end":93570,"line_start":1833,"line_end":1833,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93575,"byte_end":93612,"line_start":1834,"line_end":1834,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93617,"byte_end":93620,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93625,"byte_end":93639,"line_start":1836,"line_end":1836,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93644,"byte_end":93647,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93652,"byte_end":93659,"line_start":1838,"line_end":1838,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93664,"byte_end":93690,"line_start":1839,"line_end":1839,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93695,"byte_end":93698,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93703,"byte_end":93739,"line_start":1841,"line_end":1841,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93744,"byte_end":93747,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93752,"byte_end":93801,"line_start":1843,"line_end":1843,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93806,"byte_end":93809,"line_start":1844,"line_end":1844,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93814,"byte_end":93836,"line_start":1845,"line_end":1845,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":93841,"byte_end":93848,"line_start":1846,"line_end":1846,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4749},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94487,"byte_end":94490,"line_start":1869,"line_end":1869,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94027,"byte_end":94095,"line_start":1854,"line_end":1854,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94100,"byte_end":94170,"line_start":1855,"line_end":1855,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94175,"byte_end":94242,"line_start":1856,"line_end":1856,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94247,"byte_end":94250,"line_start":1857,"line_end":1857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94255,"byte_end":94269,"line_start":1858,"line_end":1858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94274,"byte_end":94277,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94282,"byte_end":94289,"line_start":1860,"line_end":1860,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94294,"byte_end":94320,"line_start":1861,"line_end":1861,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94325,"byte_end":94328,"line_start":1862,"line_end":1862,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94333,"byte_end":94369,"line_start":1863,"line_end":1863,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94374,"byte_end":94377,"line_start":1864,"line_end":1864,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94382,"byte_end":94431,"line_start":1865,"line_end":1865,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94436,"byte_end":94439,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94444,"byte_end":94467,"line_start":1867,"line_end":1867,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94472,"byte_end":94479,"line_start":1868,"line_end":1868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95472,"byte_end":95482,"line_start":1903,"line_end":1903,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94739,"byte_end":94810,"line_start":1881,"line_end":1881,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94815,"byte_end":94850,"line_start":1882,"line_end":1882,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94855,"byte_end":94858,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94863,"byte_end":94877,"line_start":1884,"line_end":1884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94882,"byte_end":94885,"line_start":1885,"line_end":1885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94890,"byte_end":94897,"line_start":1886,"line_end":1886,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94902,"byte_end":94928,"line_start":1887,"line_end":1887,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94933,"byte_end":94984,"line_start":1888,"line_end":1888,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94989,"byte_end":94992,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":94997,"byte_end":95035,"line_start":1890,"line_end":1890,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95040,"byte_end":95069,"line_start":1891,"line_end":1891,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95074,"byte_end":95098,"line_start":1892,"line_end":1892,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95103,"byte_end":95121,"line_start":1893,"line_end":1893,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95126,"byte_end":95182,"line_start":1894,"line_end":1894,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95187,"byte_end":95241,"line_start":1895,"line_end":1895,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95246,"byte_end":95261,"line_start":1896,"line_end":1896,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95266,"byte_end":95287,"line_start":1897,"line_end":1897,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95292,"byte_end":95307,"line_start":1898,"line_end":1898,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95312,"byte_end":95315,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95320,"byte_end":95352,"line_start":1900,"line_end":1900,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95357,"byte_end":95452,"line_start":1901,"line_end":1901,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95457,"byte_end":95464,"line_start":1902,"line_end":1902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96793,"byte_end":96803,"line_start":1941,"line_end":1941,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95634,"byte_end":95706,"line_start":1911,"line_end":1911,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95711,"byte_end":95735,"line_start":1912,"line_end":1912,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95740,"byte_end":95743,"line_start":1913,"line_end":1913,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95748,"byte_end":95821,"line_start":1914,"line_end":1914,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95826,"byte_end":95900,"line_start":1915,"line_end":1915,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95905,"byte_end":95980,"line_start":1916,"line_end":1916,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":95985,"byte_end":96055,"line_start":1917,"line_end":1917,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96060,"byte_end":96132,"line_start":1918,"line_end":1918,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96137,"byte_end":96140,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96145,"byte_end":96181,"line_start":1920,"line_end":1920,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96186,"byte_end":96189,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96194,"byte_end":96208,"line_start":1922,"line_end":1922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96213,"byte_end":96216,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96221,"byte_end":96293,"line_start":1924,"line_end":1924,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96298,"byte_end":96370,"line_start":1925,"line_end":1925,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96375,"byte_end":96407,"line_start":1926,"line_end":1926,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96412,"byte_end":96415,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96420,"byte_end":96439,"line_start":1928,"line_end":1928,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96444,"byte_end":96470,"line_start":1929,"line_end":1929,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96475,"byte_end":96503,"line_start":1930,"line_end":1930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96508,"byte_end":96511,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96516,"byte_end":96534,"line_start":1932,"line_end":1932,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96539,"byte_end":96563,"line_start":1933,"line_end":1933,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96568,"byte_end":96589,"line_start":1934,"line_end":1934,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96594,"byte_end":96617,"line_start":1935,"line_end":1935,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96622,"byte_end":96655,"line_start":1936,"line_end":1936,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96660,"byte_end":96716,"line_start":1937,"line_end":1937,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96721,"byte_end":96757,"line_start":1938,"line_end":1938,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96762,"byte_end":96773,"line_start":1939,"line_end":1939,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96778,"byte_end":96785,"line_start":1940,"line_end":1940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100098,"byte_end":100105,"line_start":2042,"line_end":2042,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Creates a fresh collection containing all the elements produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Creates a fresh collection containing all the elements produced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96871,"byte_end":96938,"line_start":1945,"line_end":1945,"column_start":5,"column_end":72}},{"value":"/ by this parallel iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96943,"byte_end":96973,"line_start":1946,"line_end":1946,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96978,"byte_end":96981,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ You may prefer [`collect_into_vec()`] implemented on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":96986,"byte_end":97042,"line_start":1948,"line_end":1948,"column_start":5,"column_end":61}},{"value":"/ [`IndexedParallelIterator`], if your underlying iterator also implements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97047,"byte_end":97123,"line_start":1949,"line_end":1949,"column_start":5,"column_end":81}},{"value":"/ it. [`collect_into_vec()`] allocates efficiently with precise knowledge","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97128,"byte_end":97203,"line_start":1950,"line_end":1950,"column_start":5,"column_end":80}},{"value":"/ of how many elements the iterator contains, and even allows you to reuse","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97208,"byte_end":97284,"line_start":1951,"line_end":1951,"column_start":5,"column_end":81}},{"value":"/ an existing vector's backing store rather than allocating a fresh vector.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97289,"byte_end":97366,"line_start":1952,"line_end":1952,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97371,"byte_end":97374,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97379,"byte_end":97446,"line_start":1954,"line_end":1954,"column_start":5,"column_end":72}},{"value":"/ [`collect_into_vec()`]:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97451,"byte_end":97478,"line_start":1955,"line_end":1955,"column_start":5,"column_end":32}},{"value":"/     trait.IndexedParallelIterator.html#method.collect_into_vec","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97483,"byte_end":97549,"line_start":1956,"line_end":1956,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97554,"byte_end":97557,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97562,"byte_end":97576,"line_start":1958,"line_end":1958,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97581,"byte_end":97584,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97589,"byte_end":97596,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97601,"byte_end":97627,"line_start":1961,"line_end":1961,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97632,"byte_end":97635,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97640,"byte_end":97698,"line_start":1963,"line_end":1963,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97703,"byte_end":97706,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97711,"byte_end":97774,"line_start":1965,"line_end":1965,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97779,"byte_end":97782,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97787,"byte_end":97823,"line_start":1967,"line_end":1967,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97828,"byte_end":97835,"line_start":1968,"line_end":1968,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97840,"byte_end":97843,"line_start":1969,"line_end":1969,"column_start":5,"column_end":8}},{"value":"/ You can collect a pair of collections like [`unzip`](#method.unzip)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97848,"byte_end":97919,"line_start":1970,"line_end":1970,"column_start":5,"column_end":76}},{"value":"/ for paired items:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97924,"byte_end":97945,"line_start":1971,"line_end":1971,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97950,"byte_end":97953,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97958,"byte_end":97965,"line_start":1973,"line_end":1973,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":97970,"byte_end":97996,"line_start":1974,"line_end":1974,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98001,"byte_end":98004,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98009,"byte_end":98054,"line_start":1976,"line_end":1976,"column_start":5,"column_end":50}},{"value":"/ let (first, second): (Vec<_>, Vec<_>) = a.into_par_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98059,"byte_end":98131,"line_start":1977,"line_end":1977,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98136,"byte_end":98139,"line_start":1978,"line_end":1978,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first, [0, 1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98144,"byte_end":98180,"line_start":1979,"line_end":1979,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(second, [1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98185,"byte_end":98222,"line_start":1980,"line_end":1980,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98227,"byte_end":98234,"line_start":1981,"line_end":1981,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98239,"byte_end":98242,"line_start":1982,"line_end":1982,"column_start":5,"column_end":8}},{"value":"/ Or like [`partition_map`](#method.partition_map) for `Either` items:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98247,"byte_end":98319,"line_start":1983,"line_end":1983,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98324,"byte_end":98327,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98332,"byte_end":98339,"line_start":1985,"line_end":1985,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98344,"byte_end":98370,"line_start":1986,"line_end":1986,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98375,"byte_end":98403,"line_start":1987,"line_end":1987,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98408,"byte_end":98411,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98416,"byte_end":98490,"line_start":1989,"line_end":1989,"column_start":5,"column_end":79}},{"value":"/     if x % 2 == 0 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98495,"byte_end":98518,"line_start":1990,"line_end":1990,"column_start":5,"column_end":28}},{"value":"/         Either::Left(x * 4)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98523,"byte_end":98554,"line_start":1991,"line_end":1991,"column_start":5,"column_end":36}},{"value":"/     } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98559,"byte_end":98575,"line_start":1992,"line_end":1992,"column_start":5,"column_end":21}},{"value":"/         Either::Right(x * 3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98580,"byte_end":98612,"line_start":1993,"line_end":1993,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98617,"byte_end":98626,"line_start":1994,"line_end":1994,"column_start":5,"column_end":14}},{"value":"/ }).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98631,"byte_end":98648,"line_start":1995,"line_end":1995,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98653,"byte_end":98656,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98661,"byte_end":98698,"line_start":1997,"line_end":1997,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98703,"byte_end":98741,"line_start":1998,"line_end":1998,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98746,"byte_end":98753,"line_start":1999,"line_end":1999,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98758,"byte_end":98761,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ You can even collect an arbitrarily-nested combination of pairs and `Either`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98766,"byte_end":98847,"line_start":2001,"line_end":2001,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98852,"byte_end":98855,"line_start":2002,"line_end":2002,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98860,"byte_end":98867,"line_start":2003,"line_end":2003,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98872,"byte_end":98898,"line_start":2004,"line_end":2004,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98903,"byte_end":98931,"line_start":2005,"line_end":2005,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98936,"byte_end":98939,"line_start":2006,"line_end":2006,"column_start":5,"column_end":8}},{"value":"/ let (first, (left, right)): (Vec<_>, (Vec<_>, Vec<_>))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":98944,"byte_end":99002,"line_start":2007,"line_end":2007,"column_start":5,"column_end":63}},{"value":"/     = (0..8).into_par_iter().map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99007,"byte_end":99049,"line_start":2008,"line_end":2008,"column_start":5,"column_end":47}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99054,"byte_end":99081,"line_start":2009,"line_end":2009,"column_start":5,"column_end":32}},{"value":"/             (x, Either::Left(x * 4))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99086,"byte_end":99126,"line_start":2010,"line_end":2010,"column_start":5,"column_end":45}},{"value":"/         } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99131,"byte_end":99151,"line_start":2011,"line_end":2011,"column_start":5,"column_end":25}},{"value":"/             (-x, Either::Right(x * 3))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99156,"byte_end":99198,"line_start":2012,"line_end":2012,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99203,"byte_end":99216,"line_start":2013,"line_end":2013,"column_start":5,"column_end":18}},{"value":"/     }).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99221,"byte_end":99242,"line_start":2014,"line_end":2014,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99247,"byte_end":99250,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first, [0, -1, 2, -3, 4, -5, 6, -7]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99255,"byte_end":99307,"line_start":2016,"line_end":2016,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99312,"byte_end":99349,"line_start":2017,"line_end":2017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99354,"byte_end":99392,"line_start":2018,"line_end":2018,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99397,"byte_end":99404,"line_start":2019,"line_end":2019,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99409,"byte_end":99412,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ All of that can _also_ be combined with short-circuiting collection of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99417,"byte_end":99491,"line_start":2021,"line_end":2021,"column_start":5,"column_end":79}},{"value":"/ `Result` or `Option` types:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99496,"byte_end":99527,"line_start":2022,"line_end":2022,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99532,"byte_end":99535,"line_start":2023,"line_end":2023,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99540,"byte_end":99547,"line_start":2024,"line_end":2024,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99552,"byte_end":99578,"line_start":2025,"line_end":2025,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99583,"byte_end":99611,"line_start":2026,"line_end":2026,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99616,"byte_end":99619,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ let result: Result<(Vec<_>, (Vec<_>, Vec<_>)), _>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99624,"byte_end":99677,"line_start":2028,"line_end":2028,"column_start":5,"column_end":58}},{"value":"/     = (0..8).into_par_iter().map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99682,"byte_end":99724,"line_start":2029,"line_end":2029,"column_start":5,"column_end":47}},{"value":"/         if x > 5 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99729,"byte_end":99751,"line_start":2030,"line_end":2030,"column_start":5,"column_end":27}},{"value":"/             Err(x)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99756,"byte_end":99778,"line_start":2031,"line_end":2031,"column_start":5,"column_end":27}},{"value":"/         } else if x % 2 == 0 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99783,"byte_end":99817,"line_start":2032,"line_end":2032,"column_start":5,"column_end":39}},{"value":"/             Ok((x, Either::Left(x * 4)))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99822,"byte_end":99866,"line_start":2033,"line_end":2033,"column_start":5,"column_end":49}},{"value":"/         } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99871,"byte_end":99891,"line_start":2034,"line_end":2034,"column_start":5,"column_end":25}},{"value":"/             Ok((-x, Either::Right(x * 3)))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99896,"byte_end":99942,"line_start":2035,"line_end":2035,"column_start":5,"column_end":51}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99947,"byte_end":99960,"line_start":2036,"line_end":2036,"column_start":5,"column_end":18}},{"value":"/     }).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99965,"byte_end":99986,"line_start":2037,"line_end":2037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99991,"byte_end":99994,"line_start":2038,"line_end":2038,"column_start":5,"column_end":8}},{"value":"/ let error = result.unwrap_err();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":99999,"byte_end":100035,"line_start":2039,"line_end":2039,"column_start":5,"column_end":41}},{"value":"/ assert!(error == 6 || error == 7);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100040,"byte_end":100078,"line_start":2040,"line_end":2040,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100083,"byte_end":100090,"line_start":2041,"line_end":2041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101357,"byte_end":101362,"line_start":2083,"line_end":2083,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100223,"byte_end":100291,"line_start":2049,"line_end":2049,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100296,"byte_end":100328,"line_start":2050,"line_end":2050,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100333,"byte_end":100336,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100341,"byte_end":100408,"line_start":2052,"line_end":2052,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100413,"byte_end":100476,"line_start":2053,"line_end":2053,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100481,"byte_end":100541,"line_start":2054,"line_end":2054,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100546,"byte_end":100611,"line_start":2055,"line_end":2055,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100616,"byte_end":100619,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100624,"byte_end":100638,"line_start":2057,"line_end":2057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100643,"byte_end":100646,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100651,"byte_end":100658,"line_start":2059,"line_end":2059,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100663,"byte_end":100689,"line_start":2060,"line_end":2060,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100694,"byte_end":100697,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100702,"byte_end":100747,"line_start":2062,"line_end":2062,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100752,"byte_end":100755,"line_start":2063,"line_end":2063,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100760,"byte_end":100832,"line_start":2064,"line_end":2064,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100837,"byte_end":100840,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100845,"byte_end":100880,"line_start":2066,"line_end":2066,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100885,"byte_end":100921,"line_start":2067,"line_end":2067,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100926,"byte_end":100933,"line_start":2068,"line_end":2068,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100938,"byte_end":100941,"line_start":2069,"line_end":2069,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100946,"byte_end":100983,"line_start":2070,"line_end":2070,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100988,"byte_end":100991,"line_start":2071,"line_end":2071,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":100996,"byte_end":101003,"line_start":2072,"line_end":2072,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101008,"byte_end":101034,"line_start":2073,"line_end":2073,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101039,"byte_end":101042,"line_start":2074,"line_end":2074,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101047,"byte_end":101134,"line_start":2075,"line_end":2075,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101139,"byte_end":101180,"line_start":2076,"line_end":2076,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101185,"byte_end":101202,"line_start":2077,"line_end":2077,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101207,"byte_end":101210,"line_start":2078,"line_end":2078,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101215,"byte_end":101252,"line_start":2079,"line_end":2079,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101257,"byte_end":101295,"line_start":2080,"line_end":2080,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101300,"byte_end":101337,"line_start":2081,"line_end":2081,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101342,"byte_end":101349,"line_start":2082,"line_end":2082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102468,"byte_end":102477,"line_start":2113,"line_end":2113,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101644,"byte_end":101716,"line_start":2094,"line_end":2094,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101721,"byte_end":101794,"line_start":2095,"line_end":2095,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101799,"byte_end":101869,"line_start":2096,"line_end":2096,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101874,"byte_end":101877,"line_start":2097,"line_end":2097,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101882,"byte_end":101955,"line_start":2098,"line_end":2098,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":101960,"byte_end":102034,"line_start":2099,"line_end":2099,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102039,"byte_end":102111,"line_start":2100,"line_end":2100,"column_start":5,"column_end":77}},{"value":"/ that used type inferrence assuming the two were the same.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102116,"byte_end":102177,"line_start":2101,"line_end":2101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102182,"byte_end":102185,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102190,"byte_end":102204,"line_start":2103,"line_end":2103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102209,"byte_end":102212,"line_start":2104,"line_end":2104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102217,"byte_end":102224,"line_start":2105,"line_end":2105,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102229,"byte_end":102255,"line_start":2106,"line_end":2106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102260,"byte_end":102263,"line_start":2107,"line_end":2107,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102268,"byte_end":102359,"line_start":2108,"line_end":2108,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102364,"byte_end":102367,"line_start":2109,"line_end":2109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102372,"byte_end":102407,"line_start":2110,"line_end":2110,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102412,"byte_end":102448,"line_start":2111,"line_end":2111,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102453,"byte_end":102460,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4766},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104197,"byte_end":104210,"line_start":2165,"line_end":2165,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102748,"byte_end":102819,"line_start":2122,"line_end":2122,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102824,"byte_end":102896,"line_start":2123,"line_end":2123,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102901,"byte_end":102971,"line_start":2124,"line_end":2124,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102976,"byte_end":102979,"line_start":2125,"line_end":2125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":102984,"byte_end":102998,"line_start":2126,"line_end":2126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103003,"byte_end":103006,"line_start":2127,"line_end":2127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103011,"byte_end":103018,"line_start":2128,"line_end":2128,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103023,"byte_end":103049,"line_start":2129,"line_end":2129,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103054,"byte_end":103082,"line_start":2130,"line_end":2130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103087,"byte_end":103090,"line_start":2131,"line_end":2131,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103095,"byte_end":103159,"line_start":2132,"line_end":2132,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103164,"byte_end":103192,"line_start":2133,"line_end":2133,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103197,"byte_end":103224,"line_start":2134,"line_end":2134,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103229,"byte_end":103264,"line_start":2135,"line_end":2135,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103269,"byte_end":103289,"line_start":2136,"line_end":2136,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103294,"byte_end":103330,"line_start":2137,"line_end":2137,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103335,"byte_end":103348,"line_start":2138,"line_end":2138,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103353,"byte_end":103364,"line_start":2139,"line_end":2139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103369,"byte_end":103372,"line_start":2140,"line_end":2140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103377,"byte_end":103414,"line_start":2141,"line_end":2141,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103419,"byte_end":103457,"line_start":2142,"line_end":2142,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103462,"byte_end":103469,"line_start":2143,"line_end":2143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103474,"byte_end":103477,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103482,"byte_end":103529,"line_start":2145,"line_end":2145,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103534,"byte_end":103537,"line_start":2146,"line_end":2146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103542,"byte_end":103549,"line_start":2147,"line_end":2147,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103554,"byte_end":103580,"line_start":2148,"line_end":2148,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103585,"byte_end":103616,"line_start":2149,"line_end":2149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103621,"byte_end":103624,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103629,"byte_end":103718,"line_start":2151,"line_end":2151,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103723,"byte_end":103747,"line_start":2152,"line_end":2152,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103752,"byte_end":103801,"line_start":2153,"line_end":2153,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103806,"byte_end":103842,"line_start":2154,"line_end":2154,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103847,"byte_end":103884,"line_start":2155,"line_end":2155,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103889,"byte_end":103926,"line_start":2156,"line_end":2156,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103931,"byte_end":103969,"line_start":2157,"line_end":2157,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103974,"byte_end":103985,"line_start":2158,"line_end":2158,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103990,"byte_end":103993,"line_start":2159,"line_end":2159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":103998,"byte_end":104029,"line_start":2160,"line_end":2160,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104034,"byte_end":104074,"line_start":2161,"line_end":2161,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104079,"byte_end":104109,"line_start":2162,"line_end":2162,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104114,"byte_end":104177,"line_start":2163,"line_end":2163,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104182,"byte_end":104189,"line_start":2164,"line_end":2164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104843,"byte_end":104854,"line_start":2188,"line_end":2188,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104514,"byte_end":104583,"line_start":2176,"line_end":2176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104588,"byte_end":104591,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104596,"byte_end":104610,"line_start":2178,"line_end":2178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104615,"byte_end":104618,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104623,"byte_end":104630,"line_start":2180,"line_end":2180,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104635,"byte_end":104661,"line_start":2181,"line_end":2181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104666,"byte_end":104669,"line_start":2182,"line_end":2182,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104674,"byte_end":104700,"line_start":2183,"line_end":2183,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104705,"byte_end":104769,"line_start":2184,"line_end":2184,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104774,"byte_end":104777,"line_start":2185,"line_end":2185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104782,"byte_end":104823,"line_start":2186,"line_end":2186,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104828,"byte_end":104835,"line_start":2187,"line_end":2187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105580,"byte_end":105595,"line_start":2207,"line_end":2207,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":104997,"byte_end":105061,"line_start":2195,"line_end":2195,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105066,"byte_end":105122,"line_start":2196,"line_end":2196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105127,"byte_end":105130,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105135,"byte_end":105196,"line_start":2198,"line_end":2198,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105201,"byte_end":105266,"line_start":2199,"line_end":2199,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105271,"byte_end":105330,"line_start":2200,"line_end":2200,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105335,"byte_end":105374,"line_start":2201,"line_end":2201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105379,"byte_end":105382,"line_start":2202,"line_end":2202,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105387,"byte_end":105453,"line_start":2203,"line_end":2203,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105458,"byte_end":105472,"line_start":2204,"line_end":2204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105477,"byte_end":105480,"line_start":2205,"line_end":2205,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105485,"byte_end":105572,"line_start":2206,"line_end":2206,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106482,"byte_end":106489,"line_start":2225,"line_end":2225,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105688,"byte_end":105752,"line_start":2211,"line_end":2211,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105757,"byte_end":105813,"line_start":2212,"line_end":2212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105818,"byte_end":105821,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105826,"byte_end":105893,"line_start":2214,"line_end":2214,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105898,"byte_end":105967,"line_start":2215,"line_end":2215,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":105972,"byte_end":106043,"line_start":2216,"line_end":2216,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106048,"byte_end":106118,"line_start":2217,"line_end":2217,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106123,"byte_end":106192,"line_start":2218,"line_end":2218,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106197,"byte_end":106264,"line_start":2219,"line_end":2219,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106269,"byte_end":106303,"line_start":2220,"line_end":2220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106308,"byte_end":106311,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106316,"byte_end":106380,"line_start":2222,"line_end":2222,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106385,"byte_end":106440,"line_start":2223,"line_end":2223,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106445,"byte_end":106474,"line_start":2224,"line_end":2224,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106932,"byte_end":106955,"line_start":2244,"line_end":2244,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4800},{"krate":0,"index":4806},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4844}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106694,"byte_end":106760,"line_start":2239,"line_end":2239,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106761,"byte_end":106826,"line_start":2240,"line_end":2240,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106827,"byte_end":106844,"line_start":2241,"line_end":2241,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106845,"byte_end":106848,"line_start":2242,"line_end":2242,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106849,"byte_end":106921,"line_start":2243,"line_end":2243,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107564,"byte_end":107580,"line_start":2263,"line_end":2263,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106980,"byte_end":107039,"line_start":2245,"line_end":2245,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107044,"byte_end":107103,"line_start":2246,"line_end":2246,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107108,"byte_end":107173,"line_start":2247,"line_end":2247,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107178,"byte_end":107244,"line_start":2248,"line_end":2248,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107249,"byte_end":107252,"line_start":2249,"line_end":2249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107257,"byte_end":107271,"line_start":2250,"line_end":2250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107276,"byte_end":107279,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107284,"byte_end":107291,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107296,"byte_end":107322,"line_start":2253,"line_end":2253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107327,"byte_end":107330,"line_start":2254,"line_end":2254,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107335,"byte_end":107374,"line_start":2255,"line_end":2255,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107379,"byte_end":107414,"line_start":2256,"line_end":2256,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107419,"byte_end":107422,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107427,"byte_end":107453,"line_start":2258,"line_end":2258,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107458,"byte_end":107494,"line_start":2259,"line_end":2259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107499,"byte_end":107502,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107507,"byte_end":107544,"line_start":2261,"line_end":2261,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107549,"byte_end":107556,"line_start":2262,"line_end":2262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108390,"byte_end":108405,"line_start":2288,"line_end":2288,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107679,"byte_end":107736,"line_start":2267,"line_end":2267,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107741,"byte_end":107803,"line_start":2268,"line_end":2268,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107808,"byte_end":107874,"line_start":2269,"line_end":2269,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107879,"byte_end":107946,"line_start":2270,"line_end":2270,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107951,"byte_end":107954,"line_start":2271,"line_end":2271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107959,"byte_end":107973,"line_start":2272,"line_end":2272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107978,"byte_end":107981,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107986,"byte_end":107993,"line_start":2274,"line_end":2274,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":107998,"byte_end":108024,"line_start":2275,"line_end":2275,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108029,"byte_end":108032,"line_start":2276,"line_end":2276,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108037,"byte_end":108076,"line_start":2277,"line_end":2277,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108081,"byte_end":108113,"line_start":2278,"line_end":2278,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108118,"byte_end":108151,"line_start":2279,"line_end":2279,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108156,"byte_end":108159,"line_start":2280,"line_end":2280,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108164,"byte_end":108192,"line_start":2281,"line_end":2281,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108197,"byte_end":108217,"line_start":2282,"line_end":2282,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108222,"byte_end":108270,"line_start":2283,"line_end":2283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108275,"byte_end":108278,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108283,"byte_end":108321,"line_start":2285,"line_end":2285,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108326,"byte_end":108370,"line_start":2286,"line_end":2286,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108375,"byte_end":108382,"line_start":2287,"line_end":2287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4786},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109217,"byte_end":109220,"line_start":2315,"line_end":2315,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Iterates over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterates over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108625,"byte_end":108688,"line_start":2297,"line_end":2297,"column_start":5,"column_end":68}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108693,"byte_end":108759,"line_start":2298,"line_end":2298,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108764,"byte_end":108823,"line_start":2299,"line_end":2299,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108828,"byte_end":108892,"line_start":2300,"line_end":2300,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108897,"byte_end":108916,"line_start":2301,"line_end":2301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108921,"byte_end":108924,"line_start":2302,"line_end":2302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108929,"byte_end":108943,"line_start":2303,"line_end":2303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108948,"byte_end":108951,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108956,"byte_end":108963,"line_start":2305,"line_end":2305,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108968,"byte_end":108994,"line_start":2306,"line_end":2306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":108999,"byte_end":109002,"line_start":2307,"line_end":2307,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109007,"byte_end":109038,"line_start":2308,"line_end":2308,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109043,"byte_end":109067,"line_start":2309,"line_end":2309,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109072,"byte_end":109105,"line_start":2310,"line_end":2310,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109110,"byte_end":109129,"line_start":2311,"line_end":2311,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109134,"byte_end":109137,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109142,"byte_end":109197,"line_start":2313,"line_end":2313,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109202,"byte_end":109209,"line_start":2314,"line_end":2314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109994,"byte_end":110000,"line_start":2342,"line_end":2342,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109412,"byte_end":109489,"line_start":2323,"line_end":2323,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109494,"byte_end":109497,"line_start":2324,"line_end":2324,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109502,"byte_end":109514,"line_start":2325,"line_end":2325,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109519,"byte_end":109581,"line_start":2326,"line_end":2326,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109586,"byte_end":109589,"line_start":2327,"line_end":2327,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109594,"byte_end":109613,"line_start":2328,"line_end":2328,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109618,"byte_end":109644,"line_start":2329,"line_end":2329,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109649,"byte_end":109652,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109657,"byte_end":109677,"line_start":2331,"line_end":2331,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109682,"byte_end":109705,"line_start":2332,"line_end":2332,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109710,"byte_end":109744,"line_start":2333,"line_end":2333,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109749,"byte_end":109783,"line_start":2334,"line_end":2334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109788,"byte_end":109791,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109796,"byte_end":109818,"line_start":2336,"line_end":2336,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109823,"byte_end":109893,"line_start":2337,"line_end":2337,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109898,"byte_end":109901,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109906,"byte_end":109937,"line_start":2339,"line_end":2339,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109942,"byte_end":109974,"line_start":2340,"line_end":2340,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":109979,"byte_end":109986,"line_start":2341,"line_end":2341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110847,"byte_end":110857,"line_start":2366,"line_end":2366,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110286,"byte_end":110347,"line_start":2352,"line_end":2352,"column_start":5,"column_end":66}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110352,"byte_end":110416,"line_start":2353,"line_end":2353,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110421,"byte_end":110486,"line_start":2354,"line_end":2354,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110491,"byte_end":110556,"line_start":2355,"line_end":2355,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110561,"byte_end":110580,"line_start":2356,"line_end":2356,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110585,"byte_end":110588,"line_start":2357,"line_end":2357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110593,"byte_end":110607,"line_start":2358,"line_end":2358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110612,"byte_end":110615,"line_start":2359,"line_end":2359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110620,"byte_end":110627,"line_start":2360,"line_end":2360,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110632,"byte_end":110658,"line_start":2361,"line_end":2361,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110663,"byte_end":110711,"line_start":2362,"line_end":2362,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110716,"byte_end":110780,"line_start":2363,"line_end":2363,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110785,"byte_end":110827,"line_start":2364,"line_end":2364,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":110832,"byte_end":110839,"line_start":2365,"line_end":2365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111475,"byte_end":111494,"line_start":2385,"line_end":2385,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Interleaves elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleaves elements of this iterator and the other given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111099,"byte_end":111160,"line_start":2374,"line_end":2374,"column_start":5,"column_end":66}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111165,"byte_end":111202,"line_start":2375,"line_end":2375,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111207,"byte_end":111210,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111215,"byte_end":111229,"line_start":2377,"line_end":2377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111234,"byte_end":111237,"line_start":2378,"line_end":2378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111242,"byte_end":111249,"line_start":2379,"line_end":2379,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111254,"byte_end":111280,"line_start":2380,"line_end":2380,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111285,"byte_end":111333,"line_start":2381,"line_end":2381,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111338,"byte_end":111411,"line_start":2382,"line_end":2382,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111416,"byte_end":111455,"line_start":2383,"line_end":2383,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111460,"byte_end":111467,"line_start":2384,"line_end":2384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4794},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112675,"byte_end":112681,"line_start":2413,"line_end":2413,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Splits an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Splits an iterator up into fixed-size chunks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111752,"byte_end":111801,"line_start":2393,"line_end":2393,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111806,"byte_end":111809,"line_start":2394,"line_end":2394,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111814,"byte_end":111890,"line_start":2395,"line_end":2395,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111895,"byte_end":111974,"line_start":2396,"line_end":2396,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":111979,"byte_end":112031,"line_start":2397,"line_end":2397,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112036,"byte_end":112039,"line_start":2398,"line_end":2398,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112044,"byte_end":112122,"line_start":2399,"line_end":2399,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112127,"byte_end":112201,"line_start":2400,"line_end":2400,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112206,"byte_end":112209,"line_start":2401,"line_end":2401,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112214,"byte_end":112287,"line_start":2402,"line_end":2402,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112292,"byte_end":112376,"line_start":2403,"line_end":2403,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112381,"byte_end":112384,"line_start":2404,"line_end":2404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112389,"byte_end":112403,"line_start":2405,"line_end":2405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112408,"byte_end":112411,"line_start":2406,"line_end":2406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112416,"byte_end":112423,"line_start":2407,"line_end":2407,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112428,"byte_end":112454,"line_start":2408,"line_end":2408,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112459,"byte_end":112507,"line_start":2409,"line_end":2409,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112512,"byte_end":112577,"line_start":2410,"line_end":2410,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112582,"byte_end":112655,"line_start":2411,"line_end":2411,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112660,"byte_end":112667,"line_start":2412,"line_end":2412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113293,"byte_end":113296,"line_start":2432,"line_end":2432,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112839,"byte_end":112923,"line_start":2418,"line_end":2418,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112928,"byte_end":112940,"line_start":2419,"line_end":2419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112945,"byte_end":112948,"line_start":2420,"line_end":2420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112953,"byte_end":112967,"line_start":2421,"line_end":2421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112972,"byte_end":112975,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112980,"byte_end":112987,"line_start":2423,"line_end":2423,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":112992,"byte_end":113018,"line_start":2424,"line_end":2424,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113023,"byte_end":113053,"line_start":2425,"line_end":2425,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113058,"byte_end":113061,"line_start":2426,"line_end":2426,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113066,"byte_end":113092,"line_start":2427,"line_end":2427,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113097,"byte_end":113152,"line_start":2428,"line_end":2428,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113157,"byte_end":113213,"line_start":2429,"line_end":2429,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113218,"byte_end":113273,"line_start":2430,"line_end":2430,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113278,"byte_end":113285,"line_start":2431,"line_end":2431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114525,"byte_end":114536,"line_start":2472,"line_end":2472,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":113911,"byte_end":113995,"line_start":2456,"line_end":2456,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114000,"byte_end":114012,"line_start":2457,"line_end":2457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114017,"byte_end":114020,"line_start":2458,"line_end":2458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114025,"byte_end":114039,"line_start":2459,"line_end":2459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114044,"byte_end":114047,"line_start":2460,"line_end":2460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114052,"byte_end":114059,"line_start":2461,"line_end":2461,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114064,"byte_end":114090,"line_start":2462,"line_end":2462,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114095,"byte_end":114125,"line_start":2463,"line_end":2463,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114130,"byte_end":114152,"line_start":2464,"line_end":2464,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114157,"byte_end":114160,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114165,"byte_end":114197,"line_start":2466,"line_end":2466,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114202,"byte_end":114277,"line_start":2467,"line_end":2467,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114282,"byte_end":114358,"line_start":2468,"line_end":2468,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114363,"byte_end":114436,"line_start":2469,"line_end":2469,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114441,"byte_end":114505,"line_start":2470,"line_end":2470,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":114510,"byte_end":114517,"line_start":2471,"line_end":2471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115315,"byte_end":115317,"line_start":2498,"line_end":2498,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115212,"byte_end":115269,"line_start":2496,"line_end":2496,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115274,"byte_end":115307,"line_start":2497,"line_end":2497,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115819,"byte_end":115821,"line_start":2515,"line_end":2515,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115714,"byte_end":115771,"line_start":2513,"line_end":2513,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":115776,"byte_end":115811,"line_start":2514,"line_end":2514,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116138,"byte_end":116140,"line_start":2526,"line_end":2526,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116015,"byte_end":116072,"line_start":2524,"line_end":2524,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116077,"byte_end":116130,"line_start":2525,"line_end":2525,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116479,"byte_end":116481,"line_start":2537,"line_end":2537,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116367,"byte_end":116424,"line_start":2535,"line_end":2535,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116429,"byte_end":116471,"line_start":2536,"line_end":2536,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116889,"byte_end":116891,"line_start":2549,"line_end":2549,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116763,"byte_end":116820,"line_start":2547,"line_end":2547,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":116825,"byte_end":116881,"line_start":2548,"line_end":2548,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117233,"byte_end":117235,"line_start":2560,"line_end":2560,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117121,"byte_end":117178,"line_start":2558,"line_end":2558,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117183,"byte_end":117225,"line_start":2559,"line_end":2559,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117889,"byte_end":117898,"line_start":2585,"line_end":2585,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117520,"byte_end":117561,"line_start":2570,"line_end":2570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117566,"byte_end":117569,"line_start":2571,"line_end":2571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117574,"byte_end":117588,"line_start":2572,"line_end":2572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117593,"byte_end":117596,"line_start":2573,"line_end":2573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117601,"byte_end":117608,"line_start":2574,"line_end":2574,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117613,"byte_end":117639,"line_start":2575,"line_end":2575,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117644,"byte_end":117647,"line_start":2576,"line_end":2576,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117652,"byte_end":117688,"line_start":2577,"line_end":2577,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117693,"byte_end":117723,"line_start":2578,"line_end":2578,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117728,"byte_end":117752,"line_start":2579,"line_end":2579,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117757,"byte_end":117777,"line_start":2580,"line_end":2580,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117782,"byte_end":117801,"line_start":2581,"line_end":2581,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117806,"byte_end":117809,"line_start":2582,"line_end":2582,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117814,"byte_end":117869,"line_start":2583,"line_end":2583,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117874,"byte_end":117881,"line_start":2584,"line_end":2584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118434,"byte_end":118441,"line_start":2609,"line_end":2609,"column_start":8,"column_end":15},"name":"step_by","qualname":"::iter::IndexedParallelIterator::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Creates an iterator that steps by the given amount","sig":null,"attributes":[{"value":"/ Creates an iterator that steps by the given amount","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":117966,"byte_end":118020,"line_start":2589,"line_end":2589,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118025,"byte_end":118028,"line_start":2590,"line_end":2590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118033,"byte_end":118047,"line_start":2591,"line_end":2591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118052,"byte_end":118055,"line_start":2592,"line_end":2592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118060,"byte_end":118067,"line_start":2593,"line_end":2593,"column_start":5,"column_end":12}},{"value":"/use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118072,"byte_end":118097,"line_start":2594,"line_end":2594,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118102,"byte_end":118105,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ let range = (3..10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118110,"byte_end":118134,"line_start":2596,"line_end":2596,"column_start":5,"column_end":29}},{"value":"/ let result: Vec<i32> = range","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118139,"byte_end":118171,"line_start":2597,"line_end":2597,"column_start":5,"column_end":37}},{"value":"/    .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118176,"byte_end":118199,"line_start":2598,"line_end":2598,"column_start":5,"column_end":28}},{"value":"/    .step_by(3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118204,"byte_end":118222,"line_start":2599,"line_end":2599,"column_start":5,"column_end":23}},{"value":"/    .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118227,"byte_end":118245,"line_start":2600,"line_end":2600,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118250,"byte_end":118253,"line_start":2601,"line_end":2601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [3, 6, 9])","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118258,"byte_end":118291,"line_start":2602,"line_end":2602,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118296,"byte_end":118303,"line_start":2603,"line_end":2603,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118308,"byte_end":118311,"line_start":2604,"line_end":2604,"column_start":5,"column_end":8}},{"value":"/ # Compatibility","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118316,"byte_end":118335,"line_start":2605,"line_end":2605,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118340,"byte_end":118343,"line_start":2606,"line_end":2606,"column_start":5,"column_end":8}},{"value":"/ This method is only available on Rust 1.38 or greater.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118348,"byte_end":118406,"line_start":2607,"line_end":2607,"column_start":5,"column_end":63}},{"value":"cfg(step_by)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118411,"byte_end":118426,"line_start":2608,"line_end":2608,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118857,"byte_end":118861,"line_start":2627,"line_end":2627,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118522,"byte_end":118580,"line_start":2613,"line_end":2613,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118585,"byte_end":118588,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118593,"byte_end":118607,"line_start":2615,"line_end":2615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118612,"byte_end":118615,"line_start":2616,"line_end":2616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118620,"byte_end":118627,"line_start":2617,"line_end":2617,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118632,"byte_end":118658,"line_start":2618,"line_end":2618,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118663,"byte_end":118666,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118671,"byte_end":118704,"line_start":2620,"line_end":2620,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118709,"byte_end":118733,"line_start":2621,"line_end":2621,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118738,"byte_end":118755,"line_start":2622,"line_end":2622,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118760,"byte_end":118779,"line_start":2623,"line_end":2623,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118784,"byte_end":118787,"line_start":2624,"line_end":2624,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118792,"byte_end":118837,"line_start":2625,"line_end":2625,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118842,"byte_end":118849,"line_start":2626,"line_end":2626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119262,"byte_end":119266,"line_start":2645,"line_end":2645,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118932,"byte_end":118991,"line_start":2631,"line_end":2631,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":118996,"byte_end":118999,"line_start":2632,"line_end":2632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119004,"byte_end":119018,"line_start":2633,"line_end":2633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119023,"byte_end":119026,"line_start":2634,"line_end":2634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119031,"byte_end":119038,"line_start":2635,"line_end":2635,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119043,"byte_end":119069,"line_start":2636,"line_end":2636,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119074,"byte_end":119077,"line_start":2637,"line_end":2637,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119082,"byte_end":119115,"line_start":2638,"line_end":2638,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119120,"byte_end":119144,"line_start":2639,"line_end":2639,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119149,"byte_end":119165,"line_start":2640,"line_end":2640,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119170,"byte_end":119189,"line_start":2641,"line_end":2641,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119194,"byte_end":119197,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119202,"byte_end":119242,"line_start":2643,"line_end":2643,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119247,"byte_end":119254,"line_start":2644,"line_end":2644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119980,"byte_end":119992,"line_start":2667,"line_end":2667,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119337,"byte_end":119397,"line_start":2649,"line_end":2649,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119402,"byte_end":119463,"line_start":2650,"line_end":2650,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119468,"byte_end":119530,"line_start":2651,"line_end":2651,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119535,"byte_end":119596,"line_start":2652,"line_end":2652,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119601,"byte_end":119653,"line_start":2653,"line_end":2653,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119658,"byte_end":119661,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119666,"byte_end":119680,"line_start":2655,"line_end":2655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119685,"byte_end":119688,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119693,"byte_end":119700,"line_start":2657,"line_end":2657,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119705,"byte_end":119731,"line_start":2658,"line_end":2658,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119736,"byte_end":119739,"line_start":2659,"line_end":2659,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119744,"byte_end":119769,"line_start":2660,"line_end":2660,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119774,"byte_end":119777,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119782,"byte_end":119849,"line_start":2662,"line_end":2662,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119854,"byte_end":119884,"line_start":2663,"line_end":2663,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119889,"byte_end":119892,"line_start":2664,"line_end":2664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119897,"byte_end":119960,"line_start":2665,"line_end":2665,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":119965,"byte_end":119972,"line_start":2666,"line_end":2666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121233,"byte_end":121247,"line_start":2704,"line_end":2704,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120291,"byte_end":120364,"line_start":2680,"line_end":2680,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120369,"byte_end":120429,"line_start":2681,"line_end":2681,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120434,"byte_end":120437,"line_start":2682,"line_end":2682,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120442,"byte_end":120505,"line_start":2683,"line_end":2683,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120510,"byte_end":120575,"line_start":2684,"line_end":2684,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120580,"byte_end":120643,"line_start":2685,"line_end":2685,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120648,"byte_end":120661,"line_start":2686,"line_end":2686,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120666,"byte_end":120669,"line_start":2687,"line_end":2687,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120674,"byte_end":120745,"line_start":2688,"line_end":2688,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120750,"byte_end":120821,"line_start":2689,"line_end":2689,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120826,"byte_end":120897,"line_start":2690,"line_end":2690,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120902,"byte_end":120940,"line_start":2691,"line_end":2691,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120945,"byte_end":120948,"line_start":2692,"line_end":2692,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120953,"byte_end":120967,"line_start":2693,"line_end":2693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120972,"byte_end":120975,"line_start":2694,"line_end":2694,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120980,"byte_end":120987,"line_start":2695,"line_end":2695,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":120992,"byte_end":121018,"line_start":2696,"line_end":2696,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121023,"byte_end":121026,"line_start":2697,"line_end":2697,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121031,"byte_end":121056,"line_start":2698,"line_end":2698,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121061,"byte_end":121064,"line_start":2699,"line_end":2699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121069,"byte_end":121135,"line_start":2700,"line_end":2700,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121140,"byte_end":121143,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121148,"byte_end":121213,"line_start":2702,"line_end":2702,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121218,"byte_end":121225,"line_start":2703,"line_end":2703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122454,"byte_end":122467,"line_start":2741,"line_end":2741,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121548,"byte_end":121620,"line_start":2717,"line_end":2717,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121625,"byte_end":121685,"line_start":2718,"line_end":2718,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121690,"byte_end":121693,"line_start":2719,"line_end":2719,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121698,"byte_end":121760,"line_start":2720,"line_end":2720,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121765,"byte_end":121829,"line_start":2721,"line_end":2721,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121834,"byte_end":121895,"line_start":2722,"line_end":2722,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121900,"byte_end":121913,"line_start":2723,"line_end":2723,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121918,"byte_end":121921,"line_start":2724,"line_end":2724,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":121926,"byte_end":121997,"line_start":2725,"line_end":2725,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122002,"byte_end":122074,"line_start":2726,"line_end":2726,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122079,"byte_end":122147,"line_start":2727,"line_end":2727,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122152,"byte_end":122163,"line_start":2728,"line_end":2728,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122168,"byte_end":122171,"line_start":2729,"line_end":2729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122176,"byte_end":122190,"line_start":2730,"line_end":2730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122195,"byte_end":122198,"line_start":2731,"line_end":2731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122203,"byte_end":122210,"line_start":2732,"line_end":2732,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122215,"byte_end":122241,"line_start":2733,"line_end":2733,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122246,"byte_end":122249,"line_start":2734,"line_end":2734,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122254,"byte_end":122279,"line_start":2735,"line_end":2735,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122284,"byte_end":122287,"line_start":2736,"line_end":2736,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122292,"byte_end":122357,"line_start":2737,"line_end":2737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122362,"byte_end":122365,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122370,"byte_end":122434,"line_start":2739,"line_end":2739,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122439,"byte_end":122446,"line_start":2740,"line_end":2740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122955,"byte_end":122963,"line_start":2759,"line_end":2759,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":122786,"byte_end":122947,"line_start":2755,"line_end":2758,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123854,"byte_end":123863,"line_start":2784,"line_end":2784,"column_start":8,"column_end":17},"name":"positions","qualname":"::iter::IndexedParallelIterator::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Searches for items in the parallel iterator that match the given\n predicate, and returns their indices.","sig":null,"attributes":[{"value":"/ Searches for items in the parallel iterator that match the given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123117,"byte_end":123185,"line_start":2766,"line_end":2766,"column_start":5,"column_end":73}},{"value":"/ predicate, and returns their indices.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123190,"byte_end":123231,"line_start":2767,"line_end":2767,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123236,"byte_end":123239,"line_start":2768,"line_end":2768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123244,"byte_end":123258,"line_start":2769,"line_end":2769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123263,"byte_end":123266,"line_start":2770,"line_end":2770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123271,"byte_end":123278,"line_start":2771,"line_end":2771,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123283,"byte_end":123309,"line_start":2772,"line_end":2772,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123314,"byte_end":123317,"line_start":2773,"line_end":2773,"column_start":5,"column_end":8}},{"value":"/ let primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123322,"byte_end":123380,"line_start":2774,"line_end":2774,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123385,"byte_end":123388,"line_start":2775,"line_end":2775,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 1 modulo 6","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123393,"byte_end":123452,"line_start":2776,"line_end":2776,"column_start":5,"column_end":64}},{"value":"/ let p1mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 1).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123457,"byte_end":123537,"line_start":2777,"line_end":2777,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p1mod6, [3, 5, 7]); // primes 7, 13, and 19","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123542,"byte_end":123600,"line_start":2778,"line_end":2778,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123605,"byte_end":123608,"line_start":2779,"line_end":2779,"column_start":5,"column_end":8}},{"value":"/ // Find the positions of primes congruent to 5 modulo 6","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123613,"byte_end":123672,"line_start":2780,"line_end":2780,"column_start":5,"column_end":64}},{"value":"/ let p5mod6: Vec<_> = primes.par_iter().positions(|&p| p % 6 == 5).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123677,"byte_end":123757,"line_start":2781,"line_end":2781,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(p5mod6, [2, 4, 6, 8, 9]); // primes 5, 11, 17, 23, and 29","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123762,"byte_end":123834,"line_start":2782,"line_end":2782,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":123839,"byte_end":123846,"line_start":2783,"line_end":2783,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124380,"byte_end":124383,"line_start":2806,"line_end":2806,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124025,"byte_end":124090,"line_start":2791,"line_end":2791,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124095,"byte_end":124113,"line_start":2792,"line_end":2792,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124118,"byte_end":124121,"line_start":2793,"line_end":2793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124126,"byte_end":124140,"line_start":2794,"line_end":2794,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124145,"byte_end":124148,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124153,"byte_end":124160,"line_start":2796,"line_end":2796,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124165,"byte_end":124191,"line_start":2797,"line_end":2797,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124196,"byte_end":124199,"line_start":2798,"line_end":2798,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124204,"byte_end":124235,"line_start":2799,"line_end":2799,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124240,"byte_end":124264,"line_start":2800,"line_end":2800,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124269,"byte_end":124283,"line_start":2801,"line_end":2801,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124288,"byte_end":124307,"line_start":2802,"line_end":2802,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124312,"byte_end":124315,"line_start":2803,"line_end":2803,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124320,"byte_end":124360,"line_start":2804,"line_end":2804,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124365,"byte_end":124372,"line_start":2805,"line_end":2805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125200,"byte_end":125212,"line_start":2832,"line_end":2832,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124439,"byte_end":124506,"line_start":2810,"line_end":2810,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will not split any smaller than this length, but","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124511,"byte_end":124578,"line_start":2811,"line_end":2811,"column_start":5,"column_end":72}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124583,"byte_end":124648,"line_start":2812,"line_end":2812,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124653,"byte_end":124656,"line_start":2813,"line_end":2813,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124661,"byte_end":124730,"line_start":2814,"line_end":2814,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124735,"byte_end":124748,"line_start":2815,"line_end":2815,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124753,"byte_end":124819,"line_start":2816,"line_end":2816,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124824,"byte_end":124853,"line_start":2817,"line_end":2817,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124858,"byte_end":124861,"line_start":2818,"line_end":2818,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124866,"byte_end":124880,"line_start":2819,"line_end":2819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124885,"byte_end":124888,"line_start":2820,"line_end":2820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124893,"byte_end":124900,"line_start":2821,"line_end":2821,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124905,"byte_end":124931,"line_start":2822,"line_end":2822,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124936,"byte_end":124939,"line_start":2823,"line_end":2823,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124944,"byte_end":124972,"line_start":2824,"line_end":2824,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":124977,"byte_end":125001,"line_start":2825,"line_end":2825,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125006,"byte_end":125033,"line_start":2826,"line_end":2826,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125038,"byte_end":125113,"line_start":2827,"line_end":2827,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125118,"byte_end":125142,"line_start":2828,"line_end":2828,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125147,"byte_end":125150,"line_start":2829,"line_end":2829,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125155,"byte_end":125180,"line_start":2830,"line_end":2830,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125185,"byte_end":125192,"line_start":2831,"line_end":2831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126151,"byte_end":126163,"line_start":2860,"line_end":2860,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125291,"byte_end":125358,"line_start":2836,"line_end":2836,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will try to split at least below this length,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125363,"byte_end":125427,"line_start":2837,"line_end":2837,"column_start":5,"column_end":69}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125432,"byte_end":125500,"line_start":2838,"line_end":2838,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125505,"byte_end":125573,"line_start":2839,"line_end":2839,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125578,"byte_end":125600,"line_start":2840,"line_end":2840,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125605,"byte_end":125608,"line_start":2841,"line_end":2841,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125613,"byte_end":125681,"line_start":2842,"line_end":2842,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125686,"byte_end":125699,"line_start":2843,"line_end":2843,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125704,"byte_end":125770,"line_start":2844,"line_end":2844,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125775,"byte_end":125804,"line_start":2845,"line_end":2845,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125809,"byte_end":125812,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125817,"byte_end":125831,"line_start":2847,"line_end":2847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125836,"byte_end":125839,"line_start":2848,"line_end":2848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125844,"byte_end":125851,"line_start":2849,"line_end":2849,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125856,"byte_end":125882,"line_start":2850,"line_end":2850,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125887,"byte_end":125890,"line_start":2851,"line_end":2851,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125895,"byte_end":125923,"line_start":2852,"line_end":2852,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125928,"byte_end":125952,"line_start":2853,"line_end":2853,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125957,"byte_end":125984,"line_start":2854,"line_end":2854,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":125989,"byte_end":126064,"line_start":2855,"line_end":2855,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126069,"byte_end":126093,"line_start":2856,"line_end":2856,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126098,"byte_end":126101,"line_start":2857,"line_end":2857,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126106,"byte_end":126131,"line_start":2858,"line_end":2858,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126136,"byte_end":126143,"line_start":2859,"line_end":2859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126651,"byte_end":126654,"line_start":2878,"line_end":2878,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126242,"byte_end":126306,"line_start":2864,"line_end":2864,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126311,"byte_end":126350,"line_start":2865,"line_end":2865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126355,"byte_end":126358,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126363,"byte_end":126377,"line_start":2867,"line_end":2867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126382,"byte_end":126385,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126390,"byte_end":126397,"line_start":2869,"line_end":2869,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126402,"byte_end":126428,"line_start":2870,"line_end":2870,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126433,"byte_end":126436,"line_start":2871,"line_end":2871,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126441,"byte_end":126502,"line_start":2872,"line_end":2872,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126507,"byte_end":126542,"line_start":2873,"line_end":2873,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126547,"byte_end":126550,"line_start":2874,"line_end":2874,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126555,"byte_end":126596,"line_start":2875,"line_end":2875,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126601,"byte_end":126631,"line_start":2876,"line_end":2876,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126636,"byte_end":126643,"line_start":2877,"line_end":2877,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127418,"byte_end":127423,"line_start":2894,"line_end":2894,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126677,"byte_end":126741,"line_start":2880,"line_end":2880,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126746,"byte_end":126802,"line_start":2881,"line_end":2881,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126807,"byte_end":126810,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126815,"byte_end":126876,"line_start":2883,"line_end":2883,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126881,"byte_end":126946,"line_start":2884,"line_end":2884,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":126951,"byte_end":127010,"line_start":2885,"line_end":2885,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127015,"byte_end":127081,"line_start":2886,"line_end":2886,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127086,"byte_end":127150,"line_start":2887,"line_end":2887,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127155,"byte_end":127212,"line_start":2888,"line_end":2888,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127217,"byte_end":127220,"line_start":2889,"line_end":2889,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127225,"byte_end":127291,"line_start":2890,"line_end":2890,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127296,"byte_end":127310,"line_start":2891,"line_end":2891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127315,"byte_end":127318,"line_start":2892,"line_end":2892,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127323,"byte_end":127410,"line_start":2893,"line_end":2893,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128263,"byte_end":128276,"line_start":2911,"line_end":2911,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127487,"byte_end":127551,"line_start":2896,"line_end":2896,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127556,"byte_end":127612,"line_start":2897,"line_end":2897,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127617,"byte_end":127620,"line_start":2898,"line_end":2898,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127625,"byte_end":127689,"line_start":2899,"line_end":2899,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127694,"byte_end":127757,"line_start":2900,"line_end":2900,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127762,"byte_end":127820,"line_start":2901,"line_end":2901,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127825,"byte_end":127891,"line_start":2902,"line_end":2902,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127896,"byte_end":127961,"line_start":2903,"line_end":2903,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":127966,"byte_end":128032,"line_start":2904,"line_end":2904,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128037,"byte_end":128057,"line_start":2905,"line_end":2905,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128062,"byte_end":128065,"line_start":2906,"line_end":2906,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128070,"byte_end":128136,"line_start":2907,"line_end":2907,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128141,"byte_end":128155,"line_start":2908,"line_end":2908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128160,"byte_end":128163,"line_start":2909,"line_end":2909,"column_start":5,"column_end":8}},{"value":"/ [README]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128168,"byte_end":128255,"line_start":2910,"line_end":2910,"column_start":5,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":4846},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129426,"byte_end":129446,"line_start":2950,"line_end":2950,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":4848}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128349,"byte_end":128415,"line_start":2914,"line_end":2914,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128416,"byte_end":128464,"line_start":2915,"line_end":2915,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128465,"byte_end":128535,"line_start":2916,"line_end":2916,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128536,"byte_end":128565,"line_start":2917,"line_end":2917,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128566,"byte_end":128569,"line_start":2918,"line_end":2918,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128570,"byte_end":128657,"line_start":2919,"line_end":2919,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128658,"byte_end":128661,"line_start":2920,"line_end":2920,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128662,"byte_end":128715,"line_start":2921,"line_end":2921,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128716,"byte_end":128777,"line_start":2922,"line_end":2922,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128778,"byte_end":128781,"line_start":2923,"line_end":2923,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128782,"byte_end":128796,"line_start":2924,"line_end":2924,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128797,"byte_end":128800,"line_start":2925,"line_end":2925,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128801,"byte_end":128855,"line_start":2926,"line_end":2926,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128856,"byte_end":128859,"line_start":2927,"line_end":2927,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128860,"byte_end":128867,"line_start":2928,"line_end":2928,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128868,"byte_end":128894,"line_start":2929,"line_end":2929,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128895,"byte_end":128912,"line_start":2930,"line_end":2930,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128913,"byte_end":128916,"line_start":2931,"line_end":2931,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128917,"byte_end":128939,"line_start":2932,"line_end":2932,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128940,"byte_end":128960,"line_start":2933,"line_end":2933,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128961,"byte_end":128966,"line_start":2934,"line_end":2934,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128967,"byte_end":128970,"line_start":2935,"line_end":2935,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":128971,"byte_end":129028,"line_start":2936,"line_end":2936,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129029,"byte_end":129077,"line_start":2937,"line_end":2937,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129078,"byte_end":129129,"line_start":2938,"line_end":2938,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129130,"byte_end":129139,"line_start":2939,"line_end":2939,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129140,"byte_end":129192,"line_start":2940,"line_end":2940,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129193,"byte_end":129216,"line_start":2941,"line_end":2941,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129217,"byte_end":129278,"line_start":2942,"line_end":2942,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129279,"byte_end":129292,"line_start":2943,"line_end":2943,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129293,"byte_end":129302,"line_start":2944,"line_end":2944,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129303,"byte_end":129308,"line_start":2945,"line_end":2945,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129309,"byte_end":129312,"line_start":2946,"line_end":2946,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129313,"byte_end":129376,"line_start":2947,"line_end":2947,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129377,"byte_end":129407,"line_start":2948,"line_end":2948,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129408,"byte_end":129415,"line_start":2949,"line_end":2949,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130424,"byte_end":130437,"line_start":2969,"line_end":2969,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4846},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129475,"byte_end":129555,"line_start":2954,"line_end":2954,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129560,"byte_end":129563,"line_start":2955,"line_end":2955,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129568,"byte_end":129634,"line_start":2956,"line_end":2956,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129639,"byte_end":129704,"line_start":2957,"line_end":2957,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129709,"byte_end":129773,"line_start":2958,"line_end":2958,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129778,"byte_end":129843,"line_start":2959,"line_end":2959,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129848,"byte_end":129896,"line_start":2960,"line_end":2960,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129901,"byte_end":129961,"line_start":2961,"line_end":2961,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":129966,"byte_end":130031,"line_start":2962,"line_end":2962,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130036,"byte_end":130100,"line_start":2963,"line_end":2963,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130105,"byte_end":130108,"line_start":2964,"line_end":2964,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130113,"byte_end":130197,"line_start":2965,"line_end":2965,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130202,"byte_end":130264,"line_start":2966,"line_end":2966,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130269,"byte_end":130341,"line_start":2967,"line_end":2967,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130346,"byte_end":130416,"line_start":2968,"line_end":2968,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":4850},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131336,"byte_end":131350,"line_start":3005,"line_end":3005,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":4852}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130518,"byte_end":130609,"line_start":2974,"line_end":2974,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130610,"byte_end":130613,"line_start":2975,"line_end":2975,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130614,"byte_end":130667,"line_start":2976,"line_end":2976,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130668,"byte_end":130671,"line_start":2977,"line_end":2977,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130672,"byte_end":130686,"line_start":2978,"line_end":2978,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130687,"byte_end":130690,"line_start":2979,"line_end":2979,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130691,"byte_end":130739,"line_start":2980,"line_end":2980,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130740,"byte_end":130743,"line_start":2981,"line_end":2981,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130744,"byte_end":130751,"line_start":2982,"line_end":2982,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130752,"byte_end":130778,"line_start":2983,"line_end":2983,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130779,"byte_end":130796,"line_start":2984,"line_end":2984,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130797,"byte_end":130800,"line_start":2985,"line_end":2985,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130801,"byte_end":130823,"line_start":2986,"line_end":2986,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130824,"byte_end":130844,"line_start":2987,"line_end":2987,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130845,"byte_end":130850,"line_start":2988,"line_end":2988,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130851,"byte_end":130854,"line_start":2989,"line_end":2989,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130855,"byte_end":130906,"line_start":2990,"line_end":2990,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130907,"byte_end":130955,"line_start":2991,"line_end":2991,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":130956,"byte_end":131007,"line_start":2992,"line_end":2992,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131008,"byte_end":131017,"line_start":2993,"line_end":2993,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131018,"byte_end":131070,"line_start":2994,"line_end":2994,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131071,"byte_end":131135,"line_start":2995,"line_end":2995,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131136,"byte_end":131145,"line_start":2996,"line_end":2996,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131146,"byte_end":131151,"line_start":2997,"line_end":2997,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131152,"byte_end":131155,"line_start":2998,"line_end":2998,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131156,"byte_end":131195,"line_start":2999,"line_end":2999,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131196,"byte_end":131226,"line_start":3000,"line_end":3000,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131227,"byte_end":131257,"line_start":3001,"line_end":3001,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131258,"byte_end":131286,"line_start":3002,"line_end":3002,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131287,"byte_end":131317,"line_start":3003,"line_end":3003,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131318,"byte_end":131325,"line_start":3004,"line_end":3004,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131778,"byte_end":131788,"line_start":3022,"line_end":3022,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":4850},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131379,"byte_end":131444,"line_start":3009,"line_end":3009,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131449,"byte_end":131491,"line_start":3010,"line_end":3010,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131496,"byte_end":131499,"line_start":3011,"line_end":3011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131504,"byte_end":131518,"line_start":3012,"line_end":3012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131523,"byte_end":131526,"line_start":3013,"line_end":3013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131531,"byte_end":131538,"line_start":3014,"line_end":3014,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131543,"byte_end":131569,"line_start":3015,"line_end":3015,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131574,"byte_end":131577,"line_start":3016,"line_end":3016,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131582,"byte_end":131607,"line_start":3017,"line_end":3017,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131612,"byte_end":131637,"line_start":3018,"line_end":3018,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131642,"byte_end":131700,"line_start":3019,"line_end":3019,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131705,"byte_end":131758,"line_start":3020,"line_end":3020,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131763,"byte_end":131770,"line_start":3021,"line_end":3021,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4854},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132216,"byte_end":132233,"line_start":3034,"line_end":3034,"column_start":11,"column_end":28},"name":"ParallelDrainFull","qualname":"::iter::ParallelDrainFull","value":"ParallelDrainFull","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857}],"decl_id":null,"docs":" `ParallelDrainFull` creates a parallel iterator that moves all items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainFull` creates a parallel iterator that moves all items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131872,"byte_end":131944,"line_start":3027,"line_end":3027,"column_start":1,"column_end":73}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":131945,"byte_end":132005,"line_start":3028,"line_end":3028,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132006,"byte_end":132009,"line_start":3029,"line_end":3029,"column_start":1,"column_end":4}},{"value":"/ Types which are indexable typically implement [`ParallelDrainRange`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132010,"byte_end":132082,"line_start":3030,"line_end":3030,"column_start":1,"column_end":73}},{"value":"/ instead, where you can drain fully with `par_drain(..)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132083,"byte_end":132143,"line_start":3031,"line_end":3031,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132144,"byte_end":132147,"line_start":3032,"line_end":3032,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainRange`]: trait.ParallelDrainRange.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132148,"byte_end":132205,"line_start":3033,"line_end":3033,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132311,"byte_end":132315,"line_start":3036,"line_end":3036,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainFull::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4854},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132240,"byte_end":132301,"line_start":3035,"line_end":3035,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132496,"byte_end":132500,"line_start":3040,"line_end":3040,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainFull::Item","value":"type Item: Send;","parent":{"krate":0,"index":4854},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132359,"byte_end":132420,"line_start":3038,"line_end":3038,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132425,"byte_end":132486,"line_start":3039,"line_end":3039,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133440,"byte_end":133449,"line_start":3067,"line_end":3067,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainFull::par_drain","value":"pub fn par_drain(Self) -> Self::Iter","parent":{"krate":0,"index":4854},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over an entire collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over an entire collection.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132513,"byte_end":132580,"line_start":3042,"line_end":3042,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132585,"byte_end":132588,"line_start":3043,"line_end":3043,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items are removed, even if the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132593,"byte_end":132661,"line_start":3044,"line_end":3044,"column_start":5,"column_end":73}},{"value":"/ iterator was not fully consumed. If the iterator is leaked, for example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132666,"byte_end":132741,"line_start":3045,"line_end":3045,"column_start":5,"column_end":80}},{"value":"/ using `std::mem::forget`, it is unspecified how many items are removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132746,"byte_end":132821,"line_start":3046,"line_end":3046,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132826,"byte_end":132829,"line_start":3047,"line_end":3047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132834,"byte_end":132848,"line_start":3048,"line_end":3048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132853,"byte_end":132856,"line_start":3049,"line_end":3049,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132861,"byte_end":132868,"line_start":3050,"line_end":3050,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132873,"byte_end":132899,"line_start":3051,"line_end":3051,"column_start":5,"column_end":31}},{"value":"/ use std::collections::{BinaryHeap, HashSet};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132904,"byte_end":132952,"line_start":3052,"line_end":3052,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132957,"byte_end":132960,"line_start":3053,"line_end":3053,"column_start":5,"column_end":8}},{"value":"/ let squares: HashSet<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":132965,"byte_end":133030,"line_start":3054,"line_end":3054,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133035,"byte_end":133038,"line_start":3055,"line_end":3055,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_> = squares.iter().copied().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133043,"byte_end":133111,"line_start":3056,"line_end":3056,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133116,"byte_end":133131,"line_start":3057,"line_end":3057,"column_start":5,"column_end":20}},{"value":"/     // heaps are drained in arbitrary order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133136,"byte_end":133183,"line_start":3058,"line_end":3058,"column_start":5,"column_end":52}},{"value":"/     heap.par_drain()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133188,"byte_end":133212,"line_start":3059,"line_end":3059,"column_start":5,"column_end":29}},{"value":"/         .inspect(|x| assert!(squares.contains(x)))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133217,"byte_end":133271,"line_start":3060,"line_end":3060,"column_start":5,"column_end":59}},{"value":"/         .count(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133276,"byte_end":133297,"line_start":3061,"line_end":3061,"column_start":5,"column_end":26}},{"value":"/     squares.len(),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133302,"byte_end":133324,"line_start":3062,"line_end":3062,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133329,"byte_end":133335,"line_start":3063,"line_end":3063,"column_start":5,"column_end":11}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133340,"byte_end":133369,"line_start":3064,"line_end":3064,"column_start":5,"column_end":34}},{"value":"/ assert!(heap.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133374,"byte_end":133420,"line_start":3065,"line_end":3065,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133425,"byte_end":133432,"line_start":3066,"line_end":3066,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133769,"byte_end":133787,"line_start":3076,"line_end":3076,"column_start":11,"column_end":29},"name":"ParallelDrainRange","qualname":"::iter::ParallelDrainRange","value":"ParallelDrainRange<Idx = usize>","parent":null,"children":[{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862}],"decl_id":null,"docs":" `ParallelDrainRange` creates a parallel iterator that moves a range of items\n from a collection while retaining the original capacity.","sig":null,"attributes":[{"value":"/ `ParallelDrainRange` creates a parallel iterator that moves a range of items","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133474,"byte_end":133554,"line_start":3070,"line_end":3070,"column_start":1,"column_end":81}},{"value":"/ from a collection while retaining the original capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133555,"byte_end":133615,"line_start":3071,"line_end":3071,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133616,"byte_end":133619,"line_start":3072,"line_end":3072,"column_start":1,"column_end":4}},{"value":"/ Types which are not indexable may implement [`ParallelDrainFull`] instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133620,"byte_end":133698,"line_start":3073,"line_end":3073,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133699,"byte_end":133702,"line_start":3074,"line_end":3074,"column_start":1,"column_end":4}},{"value":"/ [`ParallelDrainFull`]: trait.ParallelDrainFull.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133703,"byte_end":133758,"line_start":3075,"line_end":3075,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":4860},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133878,"byte_end":133882,"line_start":3078,"line_end":3078,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::ParallelDrainRange::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":4858},"children":[],"decl_id":null,"docs":" The draining parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The draining parallel iterator type that will be created.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133807,"byte_end":133868,"line_start":3077,"line_end":3077,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4861},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134063,"byte_end":134067,"line_start":3082,"line_end":3082,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelDrainRange::Item","value":"type Item: Send;","parent":{"krate":0,"index":4858},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This is usually the same as `IntoParallelIterator::Item`.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133926,"byte_end":133987,"line_start":3080,"line_end":3080,"column_start":5,"column_end":66}},{"value":"/ This is usually the same as `IntoParallelIterator::Item`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":133992,"byte_end":134053,"line_start":3081,"line_end":3081,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136278,"byte_end":136287,"line_start":3142,"line_end":3142,"column_start":8,"column_end":17},"name":"par_drain","qualname":"::iter::ParallelDrainRange::par_drain","value":"pub fn par_drain<R: RangeBounds<Idx>>(Self, R) -> Self::Iter","parent":{"krate":0,"index":4858},"children":[],"decl_id":null,"docs":" Returns a draining parallel iterator over a range of the collection.","sig":null,"attributes":[{"value":"/ Returns a draining parallel iterator over a range of the collection.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134080,"byte_end":134152,"line_start":3084,"line_end":3084,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134157,"byte_end":134160,"line_start":3085,"line_end":3085,"column_start":5,"column_end":8}},{"value":"/ When the iterator is dropped, all items in the range are removed, even","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134165,"byte_end":134239,"line_start":3086,"line_end":3086,"column_start":5,"column_end":79}},{"value":"/ if the iterator was not fully consumed. If the iterator is leaked, for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134244,"byte_end":134318,"line_start":3087,"line_end":3087,"column_start":5,"column_end":79}},{"value":"/ example using `std::mem::forget`, it is unspecified how many items are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134323,"byte_end":134397,"line_start":3088,"line_end":3088,"column_start":5,"column_end":79}},{"value":"/ removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134402,"byte_end":134414,"line_start":3089,"line_end":3089,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134419,"byte_end":134422,"line_start":3090,"line_end":3090,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134427,"byte_end":134441,"line_start":3091,"line_end":3091,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134446,"byte_end":134449,"line_start":3092,"line_end":3092,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134454,"byte_end":134461,"line_start":3093,"line_end":3093,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134466,"byte_end":134492,"line_start":3094,"line_end":3094,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134497,"byte_end":134500,"line_start":3095,"line_end":3095,"column_start":5,"column_end":8}},{"value":"/ let squares: Vec<i32> = (0..10).map(|x| x * x).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134505,"byte_end":134566,"line_start":3096,"line_end":3096,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134571,"byte_end":134574,"line_start":3097,"line_end":3097,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFull\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134579,"byte_end":134605,"line_start":3098,"line_end":3098,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134610,"byte_end":134644,"line_start":3099,"line_end":3099,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134649,"byte_end":134678,"line_start":3100,"line_end":3100,"column_start":5,"column_end":34}},{"value":"/            .eq(squares.par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134683,"byte_end":134732,"line_start":3101,"line_end":3101,"column_start":5,"column_end":54}},{"value":"/ assert!(vec.is_empty());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134737,"byte_end":134765,"line_start":3102,"line_end":3102,"column_start":5,"column_end":33}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134770,"byte_end":134815,"line_start":3103,"line_end":3103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134820,"byte_end":134823,"line_start":3104,"line_end":3104,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeFrom\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134828,"byte_end":134854,"line_start":3105,"line_end":3105,"column_start":5,"column_end":31}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134859,"byte_end":134893,"line_start":3106,"line_end":3106,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(5..)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134898,"byte_end":134928,"line_start":3107,"line_end":3107,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[5..].par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134933,"byte_end":134987,"line_start":3108,"line_end":3108,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[..5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":134992,"byte_end":135032,"line_start":3109,"line_end":3109,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135037,"byte_end":135082,"line_start":3110,"line_end":3110,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135087,"byte_end":135090,"line_start":3111,"line_end":3111,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeTo\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135095,"byte_end":135119,"line_start":3112,"line_end":3112,"column_start":5,"column_end":29}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135124,"byte_end":135158,"line_start":3113,"line_end":3113,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..5)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135163,"byte_end":135193,"line_start":3114,"line_end":3114,"column_start":5,"column_end":35}},{"value":"/            .eq(squares[..5].par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135198,"byte_end":135252,"line_start":3115,"line_end":3115,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&vec[..], &squares[5..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135257,"byte_end":135297,"line_start":3116,"line_end":3116,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135302,"byte_end":135347,"line_start":3117,"line_end":3117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135352,"byte_end":135355,"line_start":3118,"line_end":3118,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeToInclusive\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135360,"byte_end":135393,"line_start":3119,"line_end":3119,"column_start":5,"column_end":38}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135398,"byte_end":135432,"line_start":3120,"line_end":3120,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(..=5)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135437,"byte_end":135468,"line_start":3121,"line_end":3121,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[..=5].par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135473,"byte_end":135528,"line_start":3122,"line_end":3122,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..], &squares[6..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135533,"byte_end":135573,"line_start":3123,"line_end":3123,"column_start":5,"column_end":45}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135578,"byte_end":135623,"line_start":3124,"line_end":3124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135628,"byte_end":135631,"line_start":3125,"line_end":3125,"column_start":5,"column_end":8}},{"value":"/ println!(\"Range\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135636,"byte_end":135658,"line_start":3126,"line_end":3126,"column_start":5,"column_end":27}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135663,"byte_end":135697,"line_start":3127,"line_end":3127,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..7)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135702,"byte_end":135733,"line_start":3128,"line_end":3128,"column_start":5,"column_end":36}},{"value":"/            .eq(squares[3..7].par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135738,"byte_end":135793,"line_start":3129,"line_end":3129,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135798,"byte_end":135839,"line_start":3130,"line_end":3130,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[7..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135844,"byte_end":135885,"line_start":3131,"line_end":3131,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135890,"byte_end":135935,"line_start":3132,"line_end":3132,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135940,"byte_end":135943,"line_start":3133,"line_end":3133,"column_start":5,"column_end":8}},{"value":"/ println!(\"RangeInclusive\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135948,"byte_end":135979,"line_start":3134,"line_end":3134,"column_start":5,"column_end":36}},{"value":"/ let mut vec = squares.clone();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":135984,"byte_end":136018,"line_start":3135,"line_end":3135,"column_start":5,"column_end":39}},{"value":"/ assert!(vec.par_drain(3..=7)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136023,"byte_end":136055,"line_start":3136,"line_end":3136,"column_start":5,"column_end":37}},{"value":"/            .eq(squares[3..=7].par_iter().copied()));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136060,"byte_end":136116,"line_start":3137,"line_end":3137,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(&vec[..3], &squares[..3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136121,"byte_end":136162,"line_start":3138,"line_end":3138,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&vec[3..], &squares[8..]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136167,"byte_end":136208,"line_start":3139,"line_end":3139,"column_start":5,"column_end":46}},{"value":"/ assert!(vec.capacity() >= squares.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136213,"byte_end":136258,"line_start":3140,"line_end":3140,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136263,"byte_end":136270,"line_start":3141,"line_end":3141,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136631,"byte_end":136634,"line_start":3151,"line_end":3151,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":8039},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136510,"byte_end":136539,"line_start":3148,"line_end":3148,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136544,"byte_end":136547,"line_start":3149,"line_end":3149,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136552,"byte_end":136616,"line_start":3150,"line_end":3150,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136676,"byte_end":136678,"line_start":3154,"line_end":3154,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136693,"byte_end":136698,"line_start":3155,"line_end":3155,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4868},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136711,"byte_end":136722,"line_start":3156,"line_end":3156,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4869},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136774,"byte_end":136781,"line_start":3157,"line_end":3157,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"pub fn from_ok(Self::Ok) -> Self","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136815,"byte_end":136825,"line_start":3158,"line_end":3158,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"pub fn from_error(Self::Error) -> Self","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":8042},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":4896},{"krate":0,"index":4901},{"krate":0,"index":4907},{"krate":0,"index":8051},{"krate":0,"index":8055},{"krate":0,"index":4914},{"krate":0,"index":4918},{"krate":0,"index":8067},{"krate":0,"index":8059},{"krate":0,"index":8074},{"krate":0,"index":8078},{"krate":0,"index":4924},{"krate":0,"index":8090},{"krate":0,"index":8082},{"krate":0,"index":4930},{"krate":0,"index":4933},{"krate":0,"index":4939}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422628,"byte_end":422682,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422683,"byte_end":422686,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422687,"byte_end":422765,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422766,"byte_end":422804,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422805,"byte_end":422808,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422809,"byte_end":422872,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8042},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423480,"byte_end":423488,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8044}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":422972,"byte_end":423048,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423049,"byte_end":423052,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423053,"byte_end":423135,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423136,"byte_end":423139,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423140,"byte_end":423203,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423204,"byte_end":423207,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423208,"byte_end":423277,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423278,"byte_end":423358,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423359,"byte_end":423444,"line_start":20,"line_end":20,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":8051},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425130,"byte_end":425134,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8054}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424635,"byte_end":424717,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424718,"byte_end":424721,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424722,"byte_end":424804,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424805,"byte_end":424808,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424809,"byte_end":424867,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424868,"byte_end":424871,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424872,"byte_end":424941,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424942,"byte_end":425022,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425023,"byte_end":425101,"line_start":85,"line_end":85,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":8074},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":426168,"byte_end":426175,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8077}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425650,"byte_end":425740,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425741,"byte_end":425744,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425745,"byte_end":425827,"line_start":117,"line_end":117,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425828,"byte_end":425831,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425832,"byte_end":425894,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425895,"byte_end":425898,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425899,"byte_end":425968,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425969,"byte_end":426049,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":426050,"byte_end":426139,"line_start":123,"line_end":123,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4985}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428067,"byte_end":428135,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428136,"byte_end":428205,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/prelude.rs","byte_start":428206,"byte_end":428275,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":8097},{"krate":0,"index":8100},{"krate":0,"index":8103},{"krate":0,"index":5003},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5016},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":5035},{"krate":0,"index":5041},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5052},{"krate":0,"index":8108},{"krate":0,"index":8112},{"krate":0,"index":8118},{"krate":0,"index":8125},{"krate":0,"index":8129},{"krate":0,"index":8135},{"krate":0,"index":8142},{"krate":0,"index":8146},{"krate":0,"index":8152},{"krate":0,"index":8159},{"krate":0,"index":8163},{"krate":0,"index":8169},{"krate":0,"index":8176},{"krate":0,"index":8180},{"krate":0,"index":8186},{"krate":0,"index":8193},{"krate":0,"index":8197},{"krate":0,"index":8203},{"krate":0,"index":8210},{"krate":0,"index":8214},{"krate":0,"index":8220},{"krate":0,"index":8227},{"krate":0,"index":8231},{"krate":0,"index":8237},{"krate":0,"index":8244},{"krate":0,"index":8246},{"krate":0,"index":8253},{"krate":0,"index":8259},{"krate":0,"index":8261},{"krate":0,"index":8268},{"krate":0,"index":8274},{"krate":0,"index":8276},{"krate":0,"index":8283},{"krate":0,"index":8289},{"krate":0,"index":8291},{"krate":0,"index":8298},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5059}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":428812,"byte_end":428865,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":428866,"byte_end":428919,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":428920,"byte_end":428923,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":428924,"byte_end":429002,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429003,"byte_end":429046,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429047,"byte_end":429050,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429051,"byte_end":429058,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429059,"byte_end":429085,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429086,"byte_end":429089,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429090,"byte_end":429129,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429130,"byte_end":429160,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429161,"byte_end":429164,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429165,"byte_end":429214,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429215,"byte_end":429256,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429257,"byte_end":429264,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429265,"byte_end":429268,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429269,"byte_end":429339,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8097},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430211,"byte_end":430215,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8099}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types and `char`.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types and `char`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429471,"byte_end":429552,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429553,"byte_end":429556,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429557,"byte_end":429625,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429626,"byte_end":429691,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429692,"byte_end":429695,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429696,"byte_end":429703,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429704,"byte_end":429730,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429731,"byte_end":429734,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429735,"byte_end":429775,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429776,"byte_end":429814,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429815,"byte_end":429880,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429881,"byte_end":429923,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429924,"byte_end":429962,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429963,"byte_end":429966,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":429967,"byte_end":430002,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430003,"byte_end":430068,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430069,"byte_end":430111,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430112,"byte_end":430141,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430142,"byte_end":430145,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430146,"byte_end":430167,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430168,"byte_end":430175,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5018},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431512,"byte_end":431524,"line_start":92,"line_end":92,"column_start":15,"column_end":27},"name":"RangeInteger","qualname":"::range::private::RangeInteger","value":"RangeInteger: Sized + Send","parent":null,"children":[{"krate":0,"index":8106},{"krate":0,"index":5019},{"krate":0,"index":5021}],"decl_id":null,"docs":" Implementation details of `ParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `ParallelIterator for Iter<Self>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431434,"byte_end":431497,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5019},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431578,"byte_end":431593,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"drive_unindexed","qualname":"::range::private::RangeInteger::drive_unindexed","value":"pub fn drive_unindexed<C>(Iter<Self>, C) -> C::Result where\nC: UnindexedConsumer<Self>","parent":{"krate":0,"index":5018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431707,"byte_end":431714,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"opt_len","qualname":"::range::private::RangeInteger::opt_len","value":"pub fn opt_len(&Iter<Self>) -> Option<usize>","parent":{"krate":0,"index":5018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5022},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431848,"byte_end":431867,"line_start":103,"line_end":103,"column_start":15,"column_end":34},"name":"IndexedRangeInteger","qualname":"::range::private::IndexedRangeInteger","value":"IndexedRangeInteger: RangeInteger","parent":null,"children":[{"krate":0,"index":8107},{"krate":0,"index":5023},{"krate":0,"index":5025},{"krate":0,"index":5026}],"decl_id":null,"docs":" Implementation details of `IndexedParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `IndexedParallelIterator for Iter<Self>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431763,"byte_end":431833,"line_start":102,"line_end":102,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5023},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431921,"byte_end":431926,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"drive","qualname":"::range::private::IndexedRangeInteger::drive","value":"pub fn drive<C>(Iter<Self>, C) -> C::Result where C: Consumer<Self>","parent":{"krate":0,"index":5022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5025},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432031,"byte_end":432034,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"len","qualname":"::range::private::IndexedRangeInteger::len","value":"pub fn len(&Iter<Self>) -> usize","parent":{"krate":0,"index":5022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432076,"byte_end":432089,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"with_producer","qualname":"::range::private::IndexedRangeInteger::with_producer","value":"pub fn with_producer<CB>(Iter<Self>, CB) -> CB::Output where\nCB: ProducerCallback<Self>","parent":{"krate":0,"index":5022},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5065},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":8310},{"krate":0,"index":8313},{"krate":0,"index":8316},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5082},{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5107},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":8327},{"krate":0,"index":8321},{"krate":0,"index":8339},{"krate":0,"index":8333},{"krate":0,"index":8351},{"krate":0,"index":8345},{"krate":0,"index":8363},{"krate":0,"index":8357},{"krate":0,"index":8369},{"krate":0,"index":8374},{"krate":0,"index":8379},{"krate":0,"index":8384},{"krate":0,"index":8389},{"krate":0,"index":8394},{"krate":0,"index":8399},{"krate":0,"index":8404},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5123}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442273,"byte_end":442336,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442337,"byte_end":442391,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442392,"byte_end":442395,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442396,"byte_end":442474,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442475,"byte_end":442518,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442519,"byte_end":442522,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442523,"byte_end":442530,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442531,"byte_end":442557,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442558,"byte_end":442561,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442562,"byte_end":442602,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442603,"byte_end":442634,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442635,"byte_end":442638,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442639,"byte_end":442688,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442689,"byte_end":442731,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442732,"byte_end":442739,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442740,"byte_end":442743,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442744,"byte_end":442823,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443677,"byte_end":443681,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8312}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types and `char`.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types and `char`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":442921,"byte_end":443013,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443014,"byte_end":443017,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443018,"byte_end":443086,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, `i16`, and `char`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443087,"byte_end":443158,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443159,"byte_end":443162,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443163,"byte_end":443170,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443171,"byte_end":443197,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443198,"byte_end":443201,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443202,"byte_end":443241,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443242,"byte_end":443279,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443280,"byte_end":443345,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443346,"byte_end":443388,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443389,"byte_end":443425,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443426,"byte_end":443429,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443430,"byte_end":443468,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443469,"byte_end":443534,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443535,"byte_end":443577,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443578,"byte_end":443607,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443608,"byte_end":443611,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443612,"byte_end":443633,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443634,"byte_end":443641,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5084},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445573,"byte_end":445585,"line_start":98,"line_end":98,"column_start":15,"column_end":27},"name":"RangeInteger","qualname":"::range_inclusive::private::RangeInteger","value":"RangeInteger: Sized + Send","parent":null,"children":[{"krate":0,"index":8319},{"krate":0,"index":5085},{"krate":0,"index":5087}],"decl_id":null,"docs":" Implementation details of `ParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `ParallelIterator for Iter<Self>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445495,"byte_end":445558,"line_start":97,"line_end":97,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5085},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445639,"byte_end":445654,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"drive_unindexed","qualname":"::range_inclusive::private::RangeInteger::drive_unindexed","value":"pub fn drive_unindexed<C>(Iter<Self>, C) -> C::Result where\nC: UnindexedConsumer<Self>","parent":{"krate":0,"index":5084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5087},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445768,"byte_end":445775,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"opt_len","qualname":"::range_inclusive::private::RangeInteger::opt_len","value":"pub fn opt_len(&Iter<Self>) -> Option<usize>","parent":{"krate":0,"index":5084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5088},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445909,"byte_end":445928,"line_start":109,"line_end":109,"column_start":15,"column_end":34},"name":"IndexedRangeInteger","qualname":"::range_inclusive::private::IndexedRangeInteger","value":"IndexedRangeInteger: RangeInteger","parent":null,"children":[{"krate":0,"index":8320},{"krate":0,"index":5089},{"krate":0,"index":5091},{"krate":0,"index":5092}],"decl_id":null,"docs":" Implementation details of `IndexedParallelIterator for Iter<Self>`\n","sig":null,"attributes":[{"value":"/ Implementation details of `IndexedParallelIterator for Iter<Self>`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445824,"byte_end":445894,"line_start":108,"line_end":108,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5089},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445982,"byte_end":445987,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"drive","qualname":"::range_inclusive::private::IndexedRangeInteger::drive","value":"pub fn drive<C>(Iter<Self>, C) -> C::Result where C: Consumer<Self>","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5091},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446092,"byte_end":446095,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"len","qualname":"::range_inclusive::private::IndexedRangeInteger::len","value":"pub fn len(&Iter<Self>) -> usize","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446137,"byte_end":446150,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"with_producer","qualname":"::range_inclusive::private::IndexedRangeInteger::with_producer","value":"pub fn with_producer<CB>(Iter<Self>, CB) -> CB::Output where\nCB: ProducerCallback<Self>","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5129},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":8415},{"krate":0,"index":8418},{"krate":0,"index":8421},{"krate":0,"index":5138},{"krate":0,"index":8431},{"krate":0,"index":8424},{"krate":0,"index":8437},{"krate":0,"index":8441},{"krate":0,"index":5144},{"krate":0,"index":5148},{"krate":0,"index":8453},{"krate":0,"index":8445},{"krate":0,"index":8460},{"krate":0,"index":8464},{"krate":0,"index":5155},{"krate":0,"index":8476},{"krate":0,"index":8468},{"krate":0,"index":5162}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453695,"byte_end":453749,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453750,"byte_end":453753,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453754,"byte_end":453832,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453833,"byte_end":453871,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453872,"byte_end":453875,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":453876,"byte_end":453939,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":8415},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454105,"byte_end":454113,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8417}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454034,"byte_end":454069,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8437},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454555,"byte_end":454559,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8440}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454465,"byte_end":454526,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":455181,"byte_end":455188,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8463}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":455094,"byte_end":455152,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":5173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":5174},{"krate":0,"index":5265},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5364},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5377},{"krate":0,"index":5385},{"krate":0,"index":5388},{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":5420},{"krate":0,"index":8505},{"krate":0,"index":8509},{"krate":0,"index":5426},{"krate":0,"index":5430},{"krate":0,"index":5437},{"krate":0,"index":5445},{"krate":0,"index":5449},{"krate":0,"index":8513},{"krate":0,"index":8518},{"krate":0,"index":5456},{"krate":0,"index":5460},{"krate":0,"index":5467},{"krate":0,"index":5475},{"krate":0,"index":5480},{"krate":0,"index":8522},{"krate":0,"index":8528},{"krate":0,"index":5487},{"krate":0,"index":5491},{"krate":0,"index":5495},{"krate":0,"index":5502},{"krate":0,"index":5510},{"krate":0,"index":5515},{"krate":0,"index":8532},{"krate":0,"index":8537},{"krate":0,"index":5522},{"krate":0,"index":5526},{"krate":0,"index":5533},{"krate":0,"index":5541},{"krate":0,"index":5546},{"krate":0,"index":8541},{"krate":0,"index":8545},{"krate":0,"index":5553},{"krate":0,"index":5560},{"krate":0,"index":5568},{"krate":0,"index":5572},{"krate":0,"index":8549},{"krate":0,"index":8554},{"krate":0,"index":5579},{"krate":0,"index":5586},{"krate":0,"index":5594},{"krate":0,"index":5599},{"krate":0,"index":8558},{"krate":0,"index":8564},{"krate":0,"index":5606},{"krate":0,"index":5612},{"krate":0,"index":5619},{"krate":0,"index":5627},{"krate":0,"index":5632},{"krate":0,"index":5639},{"krate":0,"index":5645},{"krate":0,"index":5650},{"krate":0,"index":5655},{"krate":0,"index":5662},{"krate":0,"index":5673},{"krate":0,"index":5679},{"krate":0,"index":5684},{"krate":0,"index":5691}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457105,"byte_end":457157,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457158,"byte_end":457161,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457162,"byte_end":457240,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457241,"byte_end":457279,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457280,"byte_end":457283,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457284,"byte_end":457345,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":5377},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457687,"byte_end":457700,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457641,"byte_end":457676,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5379},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457819,"byte_end":457836,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":5377},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457716,"byte_end":457785,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457790,"byte_end":457811,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458269,"byte_end":458278,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":5377},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457858,"byte_end":457931,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457936,"byte_end":457960,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457965,"byte_end":457968,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457973,"byte_end":457987,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":457992,"byte_end":457995,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458000,"byte_end":458007,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458012,"byte_end":458038,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458043,"byte_end":458095,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458100,"byte_end":458131,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458136,"byte_end":458189,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458194,"byte_end":458209,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458214,"byte_end":458249,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458254,"byte_end":458261,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458812,"byte_end":458823,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":5377},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458484,"byte_end":458553,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458558,"byte_end":458597,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458602,"byte_end":458605,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458610,"byte_end":458624,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458629,"byte_end":458632,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458637,"byte_end":458644,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458649,"byte_end":458675,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458680,"byte_end":458741,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458746,"byte_end":458792,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458797,"byte_end":458804,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5383},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459536,"byte_end":459546,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":5377},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":458980,"byte_end":459049,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459054,"byte_end":459102,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459107,"byte_end":459110,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459115,"byte_end":459180,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459185,"byte_end":459256,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459261,"byte_end":459306,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459311,"byte_end":459314,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459319,"byte_end":459333,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459338,"byte_end":459341,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459346,"byte_end":459353,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459358,"byte_end":459384,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459389,"byte_end":459454,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459459,"byte_end":459516,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459521,"byte_end":459528,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5384},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460323,"byte_end":460339,"line_start":106,"line_end":106,"column_start":8,"column_end":24},"name":"par_chunks_exact","qualname":"::slice::ParallelSlice::par_chunks_exact","value":"pub fn par_chunks_exact(&Self, usize) -> ChunksExact<, T>","parent":{"krate":0,"index":5377},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459764,"byte_end":459825,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459830,"byte_end":459878,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459883,"byte_end":459886,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459891,"byte_end":459960,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":459965,"byte_end":460030,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460035,"byte_end":460093,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460098,"byte_end":460101,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460106,"byte_end":460120,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460125,"byte_end":460128,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460133,"byte_end":460140,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460145,"byte_end":460171,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks_exact(2).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460176,"byte_end":460247,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4]]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460252,"byte_end":460303,"line_start":104,"line_end":104,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460308,"byte_end":460315,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460912,"byte_end":460928,"line_start":128,"line_end":128,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5399},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5407}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460858,"byte_end":460901,"line_start":127,"line_end":127,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5390},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461055,"byte_end":461076,"line_start":131,"line_end":131,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":460944,"byte_end":461017,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461022,"byte_end":461047,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5391},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461525,"byte_end":461538,"line_start":145,"line_end":145,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461106,"byte_end":461173,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461178,"byte_end":461216,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461221,"byte_end":461224,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461229,"byte_end":461243,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461248,"byte_end":461251,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461256,"byte_end":461263,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461268,"byte_end":461294,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461299,"byte_end":461353,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461358,"byte_end":461394,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461399,"byte_end":461443,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461448,"byte_end":461505,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461510,"byte_end":461517,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5393},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462364,"byte_end":462378,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461758,"byte_end":461827,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461832,"byte_end":461896,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461901,"byte_end":461904,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461909,"byte_end":461974,"line_start":158,"line_end":158,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":461979,"byte_end":462050,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462055,"byte_end":462100,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462105,"byte_end":462108,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462113,"byte_end":462127,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462132,"byte_end":462135,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462140,"byte_end":462147,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462152,"byte_end":462178,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462183,"byte_end":462219,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462224,"byte_end":462251,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462256,"byte_end":462300,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462305,"byte_end":462344,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462349,"byte_end":462356,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5394},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463225,"byte_end":463245,"line_start":195,"line_end":195,"column_start":8,"column_end":28},"name":"par_chunks_exact_mut","qualname":"::slice::ParallelSliceMut::par_chunks_exact_mut","value":"pub fn par_chunks_exact_mut(&mut Self, usize) -> ChunksExactMut<, T>","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over `chunk_size` elements of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462610,"byte_end":462671,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462676,"byte_end":462740,"line_start":180,"line_end":180,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462745,"byte_end":462748,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ If `chunk_size` does not divide the length of the slice, then the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462753,"byte_end":462822,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ last up to `chunk_size-1` elements will be omitted and can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462827,"byte_end":462892,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ retrieved from the remainder function of the iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462897,"byte_end":462955,"line_start":184,"line_end":184,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462960,"byte_end":462963,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462968,"byte_end":462982,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462987,"byte_end":462990,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":462995,"byte_end":463002,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463007,"byte_end":463033,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463038,"byte_end":463074,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_exact_mut(3)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463079,"byte_end":463112,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463117,"byte_end":463161,"line_start":192,"line_end":192,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 4, 5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463166,"byte_end":463205,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463210,"byte_end":463217,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5395},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465122,"byte_end":465130,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463665,"byte_end":463697,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463702,"byte_end":463705,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463710,"byte_end":463801,"line_start":210,"line_end":210,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463806,"byte_end":463809,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463814,"byte_end":463907,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463912,"byte_end":463965,"line_start":213,"line_end":213,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":463970,"byte_end":464027,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464032,"byte_end":464035,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464040,"byte_end":464068,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464073,"byte_end":464076,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464081,"byte_end":464144,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464149,"byte_end":464202,"line_start":219,"line_end":219,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464207,"byte_end":464299,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464304,"byte_end":464368,"line_start":221,"line_end":221,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464373,"byte_end":464376,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464381,"byte_end":464474,"line_start":223,"line_end":223,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464479,"byte_end":464529,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464534,"byte_end":464537,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464542,"byte_end":464636,"line_start":226,"line_end":226,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464641,"byte_end":464735,"line_start":227,"line_end":227,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464740,"byte_end":464836,"line_start":228,"line_end":228,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464841,"byte_end":464905,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464910,"byte_end":464913,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464918,"byte_end":464932,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464937,"byte_end":464940,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464945,"byte_end":464952,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464957,"byte_end":464983,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464988,"byte_end":464991,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":464996,"byte_end":465030,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465035,"byte_end":465038,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465043,"byte_end":465060,"line_start":238,"line_end":238,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465065,"byte_end":465102,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465107,"byte_end":465114,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5396},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466856,"byte_end":466867,"line_start":284,"line_end":284,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465245,"byte_end":465304,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465309,"byte_end":465312,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465317,"byte_end":465408,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465413,"byte_end":465416,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465421,"byte_end":465514,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465519,"byte_end":465572,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465577,"byte_end":465640,"line_start":254,"line_end":254,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465645,"byte_end":465648,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465653,"byte_end":465681,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465686,"byte_end":465689,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465694,"byte_end":465757,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465762,"byte_end":465815,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465820,"byte_end":465912,"line_start":260,"line_end":260,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465917,"byte_end":465981,"line_start":261,"line_end":261,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465986,"byte_end":465989,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":465994,"byte_end":466087,"line_start":263,"line_end":263,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466092,"byte_end":466142,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466147,"byte_end":466150,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466155,"byte_end":466249,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466254,"byte_end":466348,"line_start":267,"line_end":267,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466353,"byte_end":466449,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466454,"byte_end":466518,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466523,"byte_end":466526,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466531,"byte_end":466545,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466550,"byte_end":466553,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466558,"byte_end":466565,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466570,"byte_end":466596,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466601,"byte_end":466604,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466609,"byte_end":466641,"line_start":276,"line_end":276,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466646,"byte_end":466681,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466686,"byte_end":466721,"line_start":278,"line_end":278,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466726,"byte_end":466729,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466734,"byte_end":466756,"line_start":280,"line_end":280,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466761,"byte_end":466796,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466801,"byte_end":466836,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":466841,"byte_end":466848,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468603,"byte_end":468618,"line_start":326,"line_end":326,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) -> B + Sync","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467080,"byte_end":467143,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467148,"byte_end":467151,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467156,"byte_end":467247,"line_start":295,"line_end":295,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467252,"byte_end":467255,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467260,"byte_end":467353,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467358,"byte_end":467411,"line_start":298,"line_end":298,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467416,"byte_end":467487,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467492,"byte_end":467495,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467500,"byte_end":467528,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467533,"byte_end":467536,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467541,"byte_end":467604,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467609,"byte_end":467662,"line_start":304,"line_end":304,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467667,"byte_end":467759,"line_start":305,"line_end":305,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467764,"byte_end":467828,"line_start":306,"line_end":306,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467833,"byte_end":467836,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467841,"byte_end":467934,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467939,"byte_end":467989,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":467994,"byte_end":467997,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468002,"byte_end":468096,"line_start":311,"line_end":311,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468101,"byte_end":468195,"line_start":312,"line_end":312,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468200,"byte_end":468296,"line_start":313,"line_end":313,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468301,"byte_end":468365,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468370,"byte_end":468373,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468378,"byte_end":468392,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468397,"byte_end":468400,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468405,"byte_end":468412,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468417,"byte_end":468443,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468448,"byte_end":468451,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468456,"byte_end":468493,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468498,"byte_end":468501,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468506,"byte_end":468541,"line_start":323,"line_end":323,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468546,"byte_end":468583,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468588,"byte_end":468595,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5403},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470063,"byte_end":470080,"line_start":365,"line_end":365,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but may not preserve the order of equal elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468792,"byte_end":468874,"line_start":334,"line_end":334,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468879,"byte_end":468882,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468887,"byte_end":468982,"line_start":336,"line_end":336,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":468987,"byte_end":469019,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469024,"byte_end":469027,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469032,"byte_end":469060,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469065,"byte_end":469068,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469073,"byte_end":469164,"line_start":341,"line_end":341,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469169,"byte_end":469256,"line_start":342,"line_end":342,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469261,"byte_end":469351,"line_start":343,"line_end":343,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469356,"byte_end":469390,"line_start":344,"line_end":344,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469395,"byte_end":469398,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469403,"byte_end":469495,"line_start":346,"line_end":346,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469500,"byte_end":469560,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469565,"byte_end":469568,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469573,"byte_end":469662,"line_start":349,"line_end":349,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469667,"byte_end":469760,"line_start":350,"line_end":350,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469765,"byte_end":469778,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469783,"byte_end":469786,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469791,"byte_end":469837,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469842,"byte_end":469845,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469850,"byte_end":469864,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469869,"byte_end":469872,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469877,"byte_end":469884,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469889,"byte_end":469915,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469920,"byte_end":469923,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469928,"byte_end":469962,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469967,"byte_end":469970,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":469975,"byte_end":470001,"line_start":362,"line_end":362,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470006,"byte_end":470043,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470048,"byte_end":470055,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471631,"byte_end":471651,"line_start":407,"line_end":407,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but may not preserve the order of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470195,"byte_end":470288,"line_start":372,"line_end":372,"column_start":5,"column_end":98}},{"value":"/ equal elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470293,"byte_end":470312,"line_start":373,"line_end":373,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470317,"byte_end":470320,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470325,"byte_end":470420,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470425,"byte_end":470457,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470462,"byte_end":470465,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470470,"byte_end":470498,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470503,"byte_end":470506,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470511,"byte_end":470602,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470607,"byte_end":470694,"line_start":381,"line_end":381,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470699,"byte_end":470789,"line_start":382,"line_end":382,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470794,"byte_end":470828,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470833,"byte_end":470836,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470841,"byte_end":470933,"line_start":385,"line_end":385,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":470938,"byte_end":470998,"line_start":386,"line_end":386,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471003,"byte_end":471006,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471011,"byte_end":471100,"line_start":388,"line_end":388,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471105,"byte_end":471198,"line_start":389,"line_end":389,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471203,"byte_end":471216,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471221,"byte_end":471224,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471229,"byte_end":471275,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471280,"byte_end":471283,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471288,"byte_end":471302,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471307,"byte_end":471310,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471315,"byte_end":471322,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471327,"byte_end":471353,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471358,"byte_end":471361,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471366,"byte_end":471398,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471403,"byte_end":471447,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471452,"byte_end":471487,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471492,"byte_end":471495,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471500,"byte_end":471522,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471527,"byte_end":471571,"line_start":404,"line_end":404,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471576,"byte_end":471611,"line_start":405,"line_end":405,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471616,"byte_end":471623,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5407},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473195,"byte_end":473219,"line_start":448,"line_end":448,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) ->\nB + Sync","parent":{"krate":0,"index":5388},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but may not preserve the order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471864,"byte_end":471958,"line_start":416,"line_end":416,"column_start":5,"column_end":99}},{"value":"/ of equal elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471963,"byte_end":471985,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471990,"byte_end":471993,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":471998,"byte_end":472093,"line_start":419,"line_end":419,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472098,"byte_end":472130,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472135,"byte_end":472138,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472143,"byte_end":472171,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472176,"byte_end":472179,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472184,"byte_end":472275,"line_start":424,"line_end":424,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472280,"byte_end":472367,"line_start":425,"line_end":425,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472372,"byte_end":472462,"line_start":426,"line_end":426,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472467,"byte_end":472501,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472506,"byte_end":472509,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472514,"byte_end":472606,"line_start":429,"line_end":429,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472611,"byte_end":472671,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472676,"byte_end":472679,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472684,"byte_end":472773,"line_start":432,"line_end":432,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472778,"byte_end":472871,"line_start":433,"line_end":433,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472876,"byte_end":472889,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472894,"byte_end":472897,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472902,"byte_end":472948,"line_start":436,"line_end":436,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472953,"byte_end":472956,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472961,"byte_end":472975,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472980,"byte_end":472983,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":472988,"byte_end":472995,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473000,"byte_end":473026,"line_start":441,"line_end":441,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473031,"byte_end":473034,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473039,"byte_end":473076,"line_start":443,"line_end":443,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473081,"byte_end":473084,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473089,"byte_end":473133,"line_start":445,"line_end":445,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473138,"byte_end":473175,"line_start":446,"line_end":446,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473180,"byte_end":473187,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8505},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474035,"byte_end":474039,"line_start":484,"line_end":484,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8508}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":473953,"byte_end":474006,"line_start":482,"line_end":482,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8513},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475549,"byte_end":475555,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8516},{"krate":0,"index":8517}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475450,"byte_end":475520,"line_start":547,"line_end":547,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8522},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477511,"byte_end":477522,"line_start":629,"line_end":629,"column_start":12,"column_end":23},"name":"ChunksExact","qualname":"::slice::ChunksExact","value":"ChunksExact {  }","parent":null,"children":[{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477412,"byte_end":477482,"line_start":627,"line_end":627,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5490},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477840,"byte_end":477849,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExact>::remainder","value":"pub fn remainder(&Self) -> &'data [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477660,"byte_end":477730,"line_start":636,"line_end":636,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477735,"byte_end":477810,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477815,"byte_end":477828,"line_start":638,"line_end":638,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8532},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479799,"byte_end":479806,"line_start":719,"line_end":719,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":8535},{"krate":0,"index":8536}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479703,"byte_end":479770,"line_start":717,"line_end":717,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8541},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481843,"byte_end":481850,"line_start":801,"line_end":801,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":8544}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481763,"byte_end":481814,"line_start":799,"line_end":799,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8549},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483329,"byte_end":483338,"line_start":863,"line_end":863,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":8552},{"krate":0,"index":8553}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483232,"byte_end":483300,"line_start":861,"line_end":861,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":8558},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485224,"byte_end":485238,"line_start":937,"line_end":937,"column_start":12,"column_end":26},"name":"ChunksExactMut","qualname":"::slice::ChunksExactMut","value":"ChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8563}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485127,"byte_end":485195,"line_start":935,"line_end":935,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485934,"byte_end":485948,"line_start":953,"line_end":953,"column_start":12,"column_end":26},"name":"into_remainder","qualname":"<ChunksExactMut>::into_remainder","value":"pub fn into_remainder(Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485387,"byte_end":485457,"line_start":944,"line_end":944,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485462,"byte_end":485537,"line_start":945,"line_end":945,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485542,"byte_end":485555,"line_start":946,"line_end":946,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485560,"byte_end":485563,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Note that this has to consume `self` to return the original lifetime of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485568,"byte_end":485643,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/ the data, which prevents this from actually being used as a parallel","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485648,"byte_end":485720,"line_start":949,"line_end":949,"column_start":5,"column_end":77}},{"value":"/ iterator since that also consumes. This method is provided for parity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485725,"byte_end":485798,"line_start":950,"line_end":950,"column_start":5,"column_end":78}},{"value":"/ with `std::iter::ChunksExactMut`, but consider calling `remainder()` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485803,"byte_end":485878,"line_start":951,"line_end":951,"column_start":5,"column_end":80}},{"value":"/ `take_remainder()` as alternatives.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485883,"byte_end":485922,"line_start":952,"line_end":952,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486342,"byte_end":486351,"line_start":963,"line_end":963,"column_start":12,"column_end":21},"name":"remainder","qualname":"<ChunksExactMut>::remainder","value":"pub fn remainder(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements.","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486003,"byte_end":486073,"line_start":957,"line_end":957,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486078,"byte_end":486153,"line_start":958,"line_end":958,"column_start":5,"column_end":80}},{"value":"/ elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486158,"byte_end":486171,"line_start":959,"line_end":959,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486176,"byte_end":486179,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Consider `take_remainder()` if you need access to the data with its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486184,"byte_end":486255,"line_start":961,"line_end":961,"column_start":5,"column_end":76}},{"value":"/ original lifetime, rather than borrowing through `&mut self` here.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486260,"byte_end":486330,"line_start":962,"line_end":962,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486630,"byte_end":486644,"line_start":970,"line_end":970,"column_start":12,"column_end":26},"name":"take_remainder","qualname":"<ChunksExactMut>::take_remainder","value":"pub fn take_remainder(&mut Self) -> &'data mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Return the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most `chunk_size-1`\n elements. Subsequent calls will return an empty slice.\n","sig":null,"attributes":[{"value":"/ Return the remainder of the original slice that is not going to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486405,"byte_end":486475,"line_start":967,"line_end":967,"column_start":5,"column_end":75}},{"value":"/ returned by the iterator. The returned slice has at most `chunk_size-1`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486480,"byte_end":486555,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ elements. Subsequent calls will return an empty slice.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486560,"byte_end":486618,"line_start":969,"line_end":969,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5639},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488527,"byte_end":488532,"line_start":1043,"line_end":1043,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5643},{"krate":0,"index":5644}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488457,"byte_end":488515,"line_start":1042,"line_end":1042,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5673},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490401,"byte_end":490409,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490323,"byte_end":490389,"line_start":1118,"line_end":1118,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5702},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","parent":null,"children":[{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5725},{"krate":0,"index":5727},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":5751},{"krate":0,"index":5764},{"krate":0,"index":8571},{"krate":0,"index":8574},{"krate":0,"index":8577},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5786},{"krate":0,"index":8580},{"krate":0,"index":8583},{"krate":0,"index":8586},{"krate":0,"index":5792},{"krate":0,"index":5796},{"krate":0,"index":5801},{"krate":0,"index":8589},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":5807},{"krate":0,"index":5810},{"krate":0,"index":5815},{"krate":0,"index":8598},{"krate":0,"index":8601},{"krate":0,"index":8604},{"krate":0,"index":5821},{"krate":0,"index":5824},{"krate":0,"index":5829},{"krate":0,"index":8607},{"krate":0,"index":8612},{"krate":0,"index":8616},{"krate":0,"index":5835},{"krate":0,"index":5839},{"krate":0,"index":5845},{"krate":0,"index":8620},{"krate":0,"index":8625},{"krate":0,"index":8629},{"krate":0,"index":5855},{"krate":0,"index":5861},{"krate":0,"index":5865},{"krate":0,"index":5870},{"krate":0,"index":5876},{"krate":0,"index":8633},{"krate":0,"index":8637},{"krate":0,"index":8640},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":8643},{"krate":0,"index":8647},{"krate":0,"index":8650},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":8653},{"krate":0,"index":8658},{"krate":0,"index":8662},{"krate":0,"index":5897},{"krate":0,"index":5903},{"krate":0,"index":5909},{"krate":0,"index":8666},{"krate":0,"index":8671},{"krate":0,"index":8675},{"krate":0,"index":5917},{"krate":0,"index":5924},{"krate":0,"index":5930}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552471,"byte_end":552522,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552523,"byte_end":552526,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552527,"byte_end":552605,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552606,"byte_end":552644,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552645,"byte_end":552648,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552649,"byte_end":552721,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552722,"byte_end":552794,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552795,"byte_end":552870,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552871,"byte_end":552948,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552949,"byte_end":552952,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":552953,"byte_end":553032,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":553033,"byte_end":553118,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":553119,"byte_end":553122,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":553123,"byte_end":553180,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5709},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554429,"byte_end":554443,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5723}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554382,"byte_end":554418,"line_start":58,"line_end":58,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5710},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554560,"byte_end":554578,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554450,"byte_end":554522,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554527,"byte_end":554552,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5711},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554863,"byte_end":554872,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554600,"byte_end":554664,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554669,"byte_end":554672,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554677,"byte_end":554691,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554696,"byte_end":554699,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554704,"byte_end":554711,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554716,"byte_end":554742,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554747,"byte_end":554807,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554812,"byte_end":554843,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554848,"byte_end":554855,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5712},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555281,"byte_end":555297,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":554978,"byte_end":555064,"line_start":79,"line_end":79,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555069,"byte_end":555072,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555077,"byte_end":555091,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555096,"byte_end":555099,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555104,"byte_end":555111,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555116,"byte_end":555142,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555147,"byte_end":555220,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555225,"byte_end":555261,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555266,"byte_end":555273,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5713},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555957,"byte_end":555966,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555415,"byte_end":555474,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555479,"byte_end":555482,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555487,"byte_end":555561,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555566,"byte_end":555639,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555644,"byte_end":555720,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().cloned()` instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555725,"byte_end":555777,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555782,"byte_end":555785,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555790,"byte_end":555804,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555809,"byte_end":555812,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555817,"byte_end":555824,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555829,"byte_end":555855,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555860,"byte_end":555900,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555905,"byte_end":555937,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":555942,"byte_end":555949,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5714},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556687,"byte_end":556703,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556072,"byte_end":556136,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556141,"byte_end":556144,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556149,"byte_end":556222,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556227,"byte_end":556296,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556301,"byte_end":556304,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556309,"byte_end":556323,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556328,"byte_end":556331,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556336,"byte_end":556343,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556348,"byte_end":556374,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556379,"byte_end":556382,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556387,"byte_end":556434,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556439,"byte_end":556478,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556483,"byte_end":556486,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556491,"byte_end":556535,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556540,"byte_end":556570,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556575,"byte_end":556627,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556632,"byte_end":556667,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556672,"byte_end":556679,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557391,"byte_end":557400,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556821,"byte_end":556883,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556888,"byte_end":556946,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556951,"byte_end":556954,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":556959,"byte_end":557030,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557035,"byte_end":557112,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557117,"byte_end":557120,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557125,"byte_end":557139,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557144,"byte_end":557147,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557152,"byte_end":557159,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557164,"byte_end":557190,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557195,"byte_end":557237,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557242,"byte_end":557264,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557269,"byte_end":557321,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557326,"byte_end":557340,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557345,"byte_end":557371,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557376,"byte_end":557383,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558229,"byte_end":558249,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557520,"byte_end":557583,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557588,"byte_end":557657,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557662,"byte_end":557732,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557737,"byte_end":557779,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557784,"byte_end":557787,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557792,"byte_end":557863,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557868,"byte_end":557945,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557950,"byte_end":557953,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557958,"byte_end":557972,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557977,"byte_end":557980,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557985,"byte_end":557992,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":557997,"byte_end":558023,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558028,"byte_end":558067,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558072,"byte_end":558127,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558132,"byte_end":558151,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558156,"byte_end":558209,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558214,"byte_end":558221,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558920,"byte_end":558929,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558391,"byte_end":558465,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558470,"byte_end":558540,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558545,"byte_end":558620,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558625,"byte_end":558648,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558653,"byte_end":558656,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558661,"byte_end":558675,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558680,"byte_end":558683,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558688,"byte_end":558695,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558700,"byte_end":558726,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558731,"byte_end":558779,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558784,"byte_end":558804,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558809,"byte_end":558834,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558839,"byte_end":558858,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558863,"byte_end":558900,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":558905,"byte_end":558912,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5720},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559554,"byte_end":559574,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559004,"byte_end":559076,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559081,"byte_end":559123,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559128,"byte_end":559131,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559136,"byte_end":559209,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559214,"byte_end":559279,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559284,"byte_end":559287,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559292,"byte_end":559306,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559311,"byte_end":559314,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559319,"byte_end":559326,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559331,"byte_end":559357,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559362,"byte_end":559408,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559413,"byte_end":559444,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559449,"byte_end":559488,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559493,"byte_end":559534,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559539,"byte_end":559546,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5721},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560251,"byte_end":560262,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559669,"byte_end":559729,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559734,"byte_end":559794,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559799,"byte_end":559802,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559807,"byte_end":559878,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559883,"byte_end":559960,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559965,"byte_end":559968,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559973,"byte_end":559987,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":559992,"byte_end":559995,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560000,"byte_end":560007,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560012,"byte_end":560038,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560043,"byte_end":560085,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560090,"byte_end":560127,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560132,"byte_end":560181,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560186,"byte_end":560200,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560205,"byte_end":560231,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560236,"byte_end":560243,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5723},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561040,"byte_end":561057,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":5709},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560420,"byte_end":560496,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560501,"byte_end":560573,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560578,"byte_end":560581,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560586,"byte_end":560657,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560662,"byte_end":560739,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560744,"byte_end":560747,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560752,"byte_end":560766,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560771,"byte_end":560774,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560779,"byte_end":560786,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560791,"byte_end":560817,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560822,"byte_end":560873,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560878,"byte_end":560921,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560926,"byte_end":560944,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":560949,"byte_end":561020,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561025,"byte_end":561032,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":5731},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561954,"byte_end":561961,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":8568},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5738},{"krate":0,"index":5741}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561741,"byte_end":561812,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561817,"byte_end":561862,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561867,"byte_end":561870,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561875,"byte_end":561939,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562021,"byte_end":562028,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562081,"byte_end":562089,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562142,"byte_end":562154,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562198,"byte_end":562209,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562336,"byte_end":562348,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":562458,"byte_end":562476,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8571},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":564947,"byte_end":564952,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":8573}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":564858,"byte_end":564911,"line_start":393,"line_end":393,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8580},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565994,"byte_end":566005,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":8582}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565883,"byte_end":565958,"line_start":437,"line_end":437,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8589},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567377,"byte_end":567382,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":8591}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567293,"byte_end":567341,"line_start":493,"line_end":493,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":8598},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568398,"byte_end":568409,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":8600}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568309,"byte_end":568362,"line_start":537,"line_end":537,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8607},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569477,"byte_end":569482,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8610},{"krate":0,"index":8611}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569381,"byte_end":569441,"line_start":581,"line_end":581,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8620},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571151,"byte_end":571166,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":8623},{"krate":0,"index":8624}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571044,"byte_end":571115,"line_start":642,"line_end":642,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8633},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573024,"byte_end":573029,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":572944,"byte_end":572988,"line_start":708,"line_end":708,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":8643},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573700,"byte_end":573715,"line_start":739,"line_end":739,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573603,"byte_end":573664,"line_start":737,"line_end":737,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8653},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574304,"byte_end":574311,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":8656},{"krate":0,"index":8657}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574210,"byte_end":574268,"line_start":762,"line_end":762,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8666},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":575712,"byte_end":575724,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":8669},{"krate":0,"index":8670}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":575596,"byte_end":575676,"line_start":818,"line_end":818,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":5938},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","parent":null,"children":[{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":8679},{"krate":0,"index":8683},{"krate":0,"index":5957},{"krate":0,"index":5962}],"decl_id":null,"docs":" This module contains the parallel iterator types for owned strings\n (`String`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for owned strings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577102,"byte_end":577172,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ (`String`). You will rarely need to interact with it directly","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577173,"byte_end":577238,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577239,"byte_end":577298,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8679},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577859,"byte_end":577864,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Drain","qualname":"::string::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":8681},{"krate":0,"index":8682}],"decl_id":null,"docs":" Draining parallel iterator that moves a range of characters out of a string,\n but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range of characters out of a string,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577716,"byte_end":577796,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577797,"byte_end":577830,"line_start":23,"line_end":23,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5965},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","parent":null,"children":[{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6003},{"krate":0,"index":8686},{"krate":0,"index":8689},{"krate":0,"index":8692},{"krate":0,"index":6009},{"krate":0,"index":6014},{"krate":0,"index":6020},{"krate":0,"index":6027},{"krate":0,"index":8695},{"krate":0,"index":8701},{"krate":0,"index":6034},{"krate":0,"index":6041},{"krate":0,"index":6049},{"krate":0,"index":6053},{"krate":0,"index":6057},{"krate":0,"index":6061},{"krate":0,"index":6068},{"krate":0,"index":6072},{"krate":0,"index":6076},{"krate":0,"index":6083},{"krate":0,"index":6087},{"krate":0,"index":6091},{"krate":0,"index":6094}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578369,"byte_end":578431,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578432,"byte_end":578435,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578436,"byte_end":578514,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578515,"byte_end":578553,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578554,"byte_end":578557,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":578558,"byte_end":578615,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8686},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579365,"byte_end":579373,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":8688}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579280,"byte_end":579329,"line_start":36,"line_end":36,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8695},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":580865,"byte_end":580870,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"Drain","qualname":"::vec::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700}],"decl_id":null,"docs":" Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.\n","sig":null,"attributes":[{"value":"/ Draining parallel iterator that moves a range out of a vector, but keeps the total capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":580740,"byte_end":580836,"line_start":100,"line_end":100,"column_start":1,"column_end":97}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/split_producer.rs","byte_start":8573,"byte_end":8586,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/split_producer.rs","byte_start":10054,"byte_end":10067,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13345,"byte_end":13353,"line_start":53,"line_end":53,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13660,"byte_end":13668,"line_start":68,"line_end":68,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17393,"byte_end":17403,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17860,"byte_end":17864,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18635,"byte_end":18640,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18951,"byte_end":18956,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":19426,"byte_end":19431,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20502,"byte_end":20506,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":22017,"byte_end":22021,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23315,"byte_end":23319,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25702,"byte_end":25706,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27461,"byte_end":27465,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28630,"byte_end":28638,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":29188,"byte_end":29192,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":30865,"byte_end":30870,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":31175,"byte_end":31180,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":31742,"byte_end":31747,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15917,"byte_end":15927,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":16344,"byte_end":16354,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":148719,"byte_end":148727,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":149856,"byte_end":149870,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152229,"byte_end":152237,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156950,"byte_end":156955,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":157184,"byte_end":157189,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":158292,"byte_end":158297,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":159232,"byte_end":159241,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":159919,"byte_end":159928,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":160597,"byte_end":160610,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":160793,"byte_end":160806,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162418,"byte_end":162426,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162640,"byte_end":162648,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162944,"byte_end":162952,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":163073,"byte_end":163081,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163851,"byte_end":163857,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":164057,"byte_end":164063,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":164396,"byte_end":164402,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":165100,"byte_end":165108,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":165681,"byte_end":165694,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":166813,"byte_end":166821,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":167499,"byte_end":167507,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":167668,"byte_end":167676,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168807,"byte_end":168813,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":169001,"byte_end":169007,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":169455,"byte_end":169461,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":170106,"byte_end":170114,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":170671,"byte_end":170685,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":171581,"byte_end":171595,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":171707,"byte_end":171721,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":172369,"byte_end":172383,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":172703,"byte_end":172715,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":179990,"byte_end":180005,"line_start":12,"line_end":12,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":180971,"byte_end":180984,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181022,"byte_end":181035,"line_start":37,"line_end":37,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181381,"byte_end":181394,"line_start":51,"line_end":51,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181813,"byte_end":181828,"line_start":63,"line_end":63,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":182789,"byte_end":182802,"line_start":96,"line_end":96,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":183615,"byte_end":183630,"line_start":127,"line_end":127,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":184019,"byte_end":184033,"line_start":140,"line_end":140,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/mod.rs","byte_start":175697,"byte_end":175704,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/mod.rs","byte_start":178690,"byte_end":178693,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199206,"byte_end":199212,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199400,"byte_end":199406,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199853,"byte_end":199859,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":200503,"byte_end":200511,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":201067,"byte_end":201081,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":201976,"byte_end":201990,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":202102,"byte_end":202116,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":202763,"byte_end":202777,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":203096,"byte_end":203108,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204390,"byte_end":204395,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204485,"byte_end":204490,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204626,"byte_end":204631,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204917,"byte_end":204922,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":205402,"byte_end":205415,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206395,"byte_end":206404,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206598,"byte_end":206607,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206951,"byte_end":206960,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":207466,"byte_end":207474,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":208058,"byte_end":208075,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211064,"byte_end":211074,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211372,"byte_end":211382,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211695,"byte_end":211703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212039,"byte_end":212047,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212384,"byte_end":212392,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212687,"byte_end":212695,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":213166,"byte_end":213173,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":213629,"byte_end":213636,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214164,"byte_end":214171,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214504,"byte_end":214511,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214964,"byte_end":214974,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":215415,"byte_end":215425,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":215830,"byte_end":215836,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":216492,"byte_end":216498,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":216966,"byte_end":216972,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217234,"byte_end":217240,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217517,"byte_end":217523,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217895,"byte_end":217903,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":218190,"byte_end":218198,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":218611,"byte_end":218614,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219669,"byte_end":219675,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219835,"byte_end":219841,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220053,"byte_end":220059,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220603,"byte_end":220617,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220768,"byte_end":220782,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":221526,"byte_end":221540,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":221923,"byte_end":221935,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223211,"byte_end":223220,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223427,"byte_end":223436,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223626,"byte_end":223635,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":224198,"byte_end":224215,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":224368,"byte_end":224385,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":225171,"byte_end":225188,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":225589,"byte_end":225604,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":226774,"byte_end":226786,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":226940,"byte_end":226952,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":227537,"byte_end":227549,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":227909,"byte_end":227919,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":228946,"byte_end":228957,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":231479,"byte_end":231491,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":232041,"byte_end":232053,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":233119,"byte_end":233131,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":234689,"byte_end":234699,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":236407,"byte_end":236418,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237238,"byte_end":237245,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237424,"byte_end":237431,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237612,"byte_end":237619,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":238185,"byte_end":238200,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":238345,"byte_end":238360,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":239152,"byte_end":239167,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":239607,"byte_end":239620,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241212,"byte_end":241223,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241432,"byte_end":241443,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241632,"byte_end":241643,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":242229,"byte_end":242248,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":242397,"byte_end":242416,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":243199,"byte_end":243218,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":243630,"byte_end":243647,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244864,"byte_end":244871,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245089,"byte_end":245096,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245608,"byte_end":245623,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245728,"byte_end":245743,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":246426,"byte_end":246441,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":246799,"byte_end":246812,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248228,"byte_end":248239,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248500,"byte_end":248511,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249058,"byte_end":249077,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249186,"byte_end":249205,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249879,"byte_end":249898,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":250228,"byte_end":250245,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":250924,"byte_end":250928,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251725,"byte_end":251729,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251919,"byte_end":251923,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":252532,"byte_end":252544,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":253400,"byte_end":253412,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":253881,"byte_end":253891,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255051,"byte_end":255059,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255848,"byte_end":255856,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":256110,"byte_end":256118,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":256686,"byte_end":256702,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":257620,"byte_end":257636,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":258365,"byte_end":258380,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":258776,"byte_end":258791,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":259215,"byte_end":259230,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260116,"byte_end":260119,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260389,"byte_end":260397,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260754,"byte_end":260764,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":261074,"byte_end":261084,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":261548,"byte_end":261555,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262090,"byte_end":262098,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262398,"byte_end":262405,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262728,"byte_end":262736,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263015,"byte_end":263021,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263283,"byte_end":263289,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263557,"byte_end":263563,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263827,"byte_end":263833,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":264104,"byte_end":264110,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":264554,"byte_end":264557,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266091,"byte_end":266098,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266259,"byte_end":266266,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266482,"byte_end":266489,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266949,"byte_end":266956,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":267698,"byte_end":267706,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":268377,"byte_end":268392,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":269602,"byte_end":269617,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":269767,"byte_end":269782,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":270525,"byte_end":270540,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":270919,"byte_end":270932,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272256,"byte_end":272266,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272518,"byte_end":272528,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272905,"byte_end":272915,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":273811,"byte_end":273820,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":274630,"byte_end":274639,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":275420,"byte_end":275438,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":275758,"byte_end":275776,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":278641,"byte_end":278654,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":279787,"byte_end":279800,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":280361,"byte_end":280374,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281301,"byte_end":281319,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281961,"byte_end":281979,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":282356,"byte_end":282374,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283476,"byte_end":283487,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283718,"byte_end":283729,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":284259,"byte_end":284270,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":285177,"byte_end":285185,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":285752,"byte_end":285771,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":286012,"byte_end":286031,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":288206,"byte_end":288221,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":288993,"byte_end":289008,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":289656,"byte_end":289671,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":290019,"byte_end":290038,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":290263,"byte_end":290282,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":291360,"byte_end":291379,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":291919,"byte_end":291936,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293659,"byte_end":293665,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293870,"byte_end":293876,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":294211,"byte_end":294217,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":294795,"byte_end":294803,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":295438,"byte_end":295452,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296744,"byte_end":296750,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296955,"byte_end":296961,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":297296,"byte_end":297302,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":297880,"byte_end":297888,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":298523,"byte_end":298537,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299904,"byte_end":299907,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300064,"byte_end":300067,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300270,"byte_end":300273,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300747,"byte_end":300750,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":301492,"byte_end":301500,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":302179,"byte_end":302190,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":303362,"byte_end":303373,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":303514,"byte_end":303525,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":304264,"byte_end":304275,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":304666,"byte_end":304675,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305912,"byte_end":305919,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306151,"byte_end":306158,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306390,"byte_end":306397,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306913,"byte_end":306920,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":307765,"byte_end":307773,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":308556,"byte_end":308571,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":309904,"byte_end":309915,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310296,"byte_end":310307,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310598,"byte_end":310609,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310923,"byte_end":310938,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":311104,"byte_end":311119,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":311963,"byte_end":311978,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":312438,"byte_end":312451,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2734},{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313982,"byte_end":313989,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314162,"byte_end":314169,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314413,"byte_end":314420,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314960,"byte_end":314967,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":315842,"byte_end":315850,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":316660,"byte_end":316675,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":318125,"byte_end":318140,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":318322,"byte_end":318337,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":319193,"byte_end":319208,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":328586,"byte_end":328598,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":328942,"byte_end":328954,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":329310,"byte_end":329322,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":329516,"byte_end":329527,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330495,"byte_end":330499,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330785,"byte_end":330789,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331976,"byte_end":331980,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332138,"byte_end":332142,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332252,"byte_end":332261,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332456,"byte_end":332465,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332975,"byte_end":332984,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":333684,"byte_end":333692,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":334401,"byte_end":334418,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":335516,"byte_end":335529,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":335876,"byte_end":335889,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2976}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":336464,"byte_end":336481,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":337439,"byte_end":337456,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":337935,"byte_end":337950,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3016},{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":338799,"byte_end":338815,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340724,"byte_end":340725,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341235,"byte_end":341245,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":342243,"byte_end":342263,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":342555,"byte_end":342575,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347400,"byte_end":347409,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347598,"byte_end":347607,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347831,"byte_end":347840,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":348406,"byte_end":348423,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":348641,"byte_end":348658,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":349557,"byte_end":349572,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350716,"byte_end":350731,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350753,"byte_end":350768,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350917,"byte_end":350932,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351482,"byte_end":351497,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351729,"byte_end":351744,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351929,"byte_end":351942,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":352957,"byte_end":352971,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353013,"byte_end":353027,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353129,"byte_end":353143,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353670,"byte_end":353684,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353933,"byte_end":353947,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":354188,"byte_end":354200,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355602,"byte_end":355608,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356460,"byte_end":356466,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356916,"byte_end":356930,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357981,"byte_end":357988,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":358306,"byte_end":358313,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3332},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":358925,"byte_end":358940,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":359737,"byte_end":359741,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":360119,"byte_end":360123,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":360252,"byte_end":360256,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3359}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360835,"byte_end":360838,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361020,"byte_end":361023,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361358,"byte_end":361361,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361931,"byte_end":361939,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":362454,"byte_end":362465,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363670,"byte_end":363674,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363907,"byte_end":363911,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":364246,"byte_end":364250,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3427}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":364831,"byte_end":364839,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369672,"byte_end":369677,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369857,"byte_end":369862,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":370350,"byte_end":370363,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371283,"byte_end":371294,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371316,"byte_end":371327,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371468,"byte_end":371479,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371946,"byte_end":371957,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":372173,"byte_end":372184,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":372357,"byte_end":372366,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373351,"byte_end":373355,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373588,"byte_end":373592,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373927,"byte_end":373931,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":374494,"byte_end":374502,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375016,"byte_end":375023,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375925,"byte_end":375932,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":376128,"byte_end":376135,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":376831,"byte_end":376846,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":377737,"byte_end":377752,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3632},{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":378270,"byte_end":378283,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379011,"byte_end":379022,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379863,"byte_end":379874,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":380155,"byte_end":380166,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":380776,"byte_end":380795,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":381758,"byte_end":381777,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":382853,"byte_end":382870,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":382912,"byte_end":382929,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383031,"byte_end":383048,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383662,"byte_end":383679,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3749},{"krate":0,"index":3750}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383946,"byte_end":383963,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":384439,"byte_end":384454,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385794,"byte_end":385815,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385849,"byte_end":385870,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3802}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385964,"byte_end":385985,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":386564,"byte_end":386585,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3817},{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":386822,"byte_end":386843,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3823}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":387498,"byte_end":387517,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":391413,"byte_end":391418,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":392299,"byte_end":392308,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":393345,"byte_end":393357,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":393988,"byte_end":393994,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":395395,"byte_end":395401,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":396338,"byte_end":396351,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":397614,"byte_end":397627,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":398291,"byte_end":398302,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":399043,"byte_end":399055,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":400139,"byte_end":400147,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":401629,"byte_end":401638,"line_start":507,"line_end":507,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":401756,"byte_end":401765,"line_start":513,"line_end":513,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402642,"byte_end":402648,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4075}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402808,"byte_end":402814,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":403026,"byte_end":403032,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":403494,"byte_end":403500,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4093}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":404241,"byte_end":404249,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":404926,"byte_end":404940,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":406200,"byte_end":406214,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":406361,"byte_end":406375,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4145},{"krate":0,"index":4146}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":407121,"byte_end":407135,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":407656,"byte_end":407668,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":408614,"byte_end":408623,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":409373,"byte_end":409382,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":409486,"byte_end":409495,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410308,"byte_end":410317,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410507,"byte_end":410516,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":411146,"byte_end":411163,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":411963,"byte_end":411980,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":412383,"byte_end":412398,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414052,"byte_end":414055,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4265}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414278,"byte_end":414281,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414665,"byte_end":414668,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4278},{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":415328,"byte_end":415337,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4290},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":415958,"byte_end":415967,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":416624,"byte_end":416635,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418044,"byte_end":418049,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418319,"byte_end":418324,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418716,"byte_end":418721,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419818,"byte_end":419824,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":420031,"byte_end":420037,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4512}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":420372,"byte_end":420378,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4515},{"krate":0,"index":4517},{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":421060,"byte_end":421068,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":421749,"byte_end":421763,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40847,"byte_end":40848,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42356,"byte_end":42357,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106589,"byte_end":106590,"line_start":2230,"line_end":2230,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136878,"byte_end":136884,"line_start":3161,"line_end":3161,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8040},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":137209,"byte_end":137215,"line_start":3178,"line_end":3178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8041},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423562,"byte_end":423568,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423741,"byte_end":423749,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4904},{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424044,"byte_end":424052,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4912}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425209,"byte_end":425213,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":426689,"byte_end":426703,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":427315,"byte_end":427321,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4942}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430348,"byte_end":430353,"line_start":53,"line_end":53,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430630,"byte_end":430642,"line_start":69,"line_end":69,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432296,"byte_end":432300,"line_start":119,"line_end":119,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432629,"byte_end":432633,"line_start":135,"line_end":135,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5043},{"krate":0,"index":5045},{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":438268,"byte_end":438272,"line_start":323,"line_end":323,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5058}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":438579,"byte_end":438583,"line_start":338,"line_end":338,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443728,"byte_end":443732,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5076}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":444670,"byte_end":444684,"line_start":75,"line_end":75,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446357,"byte_end":446361,"line_start":125,"line_end":125,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5106}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446690,"byte_end":446694,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5111},{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":450190,"byte_end":450194,"line_start":265,"line_end":265,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":450574,"byte_end":450578,"line_start":281,"line_end":281,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5124},{"krate":0,"index":5126},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454202,"byte_end":454208,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454642,"byte_end":454646,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5147}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":455899,"byte_end":455905,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":492847,"byte_end":492857,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5202}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":495807,"byte_end":495813,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5211}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":496062,"byte_end":496075,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5218}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":499801,"byte_end":499810,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":511253,"byte_end":511258,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520433,"byte_end":520444,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520674,"byte_end":520680,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520887,"byte_end":520897,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5294}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474115,"byte_end":474119,"line_start":488,"line_end":488,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474246,"byte_end":474250,"line_start":494,"line_end":494,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474576,"byte_end":474580,"line_start":509,"line_end":509,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5440},{"krate":0,"index":5442},{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475083,"byte_end":475095,"line_start":533,"line_end":533,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475654,"byte_end":475660,"line_start":554,"line_end":554,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475789,"byte_end":475795,"line_start":560,"line_end":560,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":476123,"byte_end":476129,"line_start":575,"line_end":575,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5470},{"krate":0,"index":5472},{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":476752,"byte_end":476766,"line_start":603,"line_end":603,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477632,"byte_end":477643,"line_start":635,"line_end":635,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477930,"byte_end":477941,"line_start":644,"line_end":644,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5494}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":478075,"byte_end":478086,"line_start":650,"line_end":650,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5501}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":478414,"byte_end":478425,"line_start":665,"line_end":665,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5508}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479045,"byte_end":479064,"line_start":693,"line_end":693,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479906,"byte_end":479913,"line_start":724,"line_end":724,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5525}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":480043,"byte_end":480050,"line_start":730,"line_end":730,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5532}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":480378,"byte_end":480385,"line_start":745,"line_end":745,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5536},{"krate":0,"index":5538},{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481059,"byte_end":481074,"line_start":774,"line_end":774,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481949,"byte_end":481956,"line_start":805,"line_end":805,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":482286,"byte_end":482293,"line_start":820,"line_end":820,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5565},{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":482806,"byte_end":482821,"line_start":844,"line_end":844,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483460,"byte_end":483469,"line_start":868,"line_end":868,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5585}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483801,"byte_end":483810,"line_start":883,"line_end":883,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5589},{"krate":0,"index":5591},{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":484443,"byte_end":484460,"line_start":911,"line_end":911,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485356,"byte_end":485370,"line_start":943,"line_end":943,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486785,"byte_end":486799,"line_start":975,"line_end":975,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5618}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":487131,"byte_end":487145,"line_start":990,"line_end":990,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":487775,"byte_end":487797,"line_start":1018,"line_end":1018,"column_start":43,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488627,"byte_end":488632,"line_start":1048,"line_end":1048,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488815,"byte_end":488820,"line_start":1057,"line_end":1057,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":489016,"byte_end":489021,"line_start":1063,"line_end":1063,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5659},{"krate":0,"index":5660}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490508,"byte_end":490516,"line_start":1124,"line_end":1124,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5683}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490741,"byte_end":490749,"line_start":1132,"line_end":1132,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":563822,"byte_end":563824,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8570},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5772},{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565067,"byte_end":565072,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5783},{"krate":0,"index":5784}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565332,"byte_end":565345,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":566144,"byte_end":566155,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5798},{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":566506,"byte_end":566525,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567497,"byte_end":567502,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5812},{"krate":0,"index":5813}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567760,"byte_end":567773,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568530,"byte_end":568541,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5826},{"krate":0,"index":5827}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568806,"byte_end":568825,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569566,"byte_end":569571,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569721,"byte_end":569726,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571379,"byte_end":571394,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571548,"byte_end":571571,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571879,"byte_end":571894,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5873},{"krate":0,"index":5874}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":572242,"byte_end":572265,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5883}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573229,"byte_end":573234,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5888},{"krate":0,"index":5889}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573828,"byte_end":573843,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5894},{"krate":0,"index":5895}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574508,"byte_end":574515,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5906},{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574892,"byte_end":574907,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":575944,"byte_end":575956,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":576369,"byte_end":576389,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577957,"byte_end":577962,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":5960}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":578239,"byte_end":578244,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579444,"byte_end":579447,"line_start":42,"line_end":42,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6011},{"krate":0,"index":6012},{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579620,"byte_end":579628,"line_start":51,"line_end":51,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6019}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579925,"byte_end":579933,"line_start":66,"line_end":66,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6022},{"krate":0,"index":6024},{"krate":0,"index":6025}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":581008,"byte_end":581013,"line_start":108,"line_end":108,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6040}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":581324,"byte_end":581329,"line_start":123,"line_end":123,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6044},{"krate":0,"index":6046},{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":582409,"byte_end":582414,"line_start":158,"line_end":158,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6052}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":583555,"byte_end":583568,"line_start":187,"line_end":187,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6060}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":583890,"byte_end":583903,"line_start":196,"line_end":196,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066},{"krate":0,"index":6067}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":584562,"byte_end":584575,"line_start":216,"line_end":216,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6071}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":584951,"byte_end":584961,"line_start":230,"line_end":230,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585435,"byte_end":585445,"line_start":249,"line_end":249,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6086}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585766,"byte_end":585776,"line_start":258,"line_end":258,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585897,"byte_end":585907,"line_start":264,"line_end":264,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585953,"byte_end":585963,"line_start":266,"line_end":266,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6097}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":587979,"byte_end":587985,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6125},{"krate":0,"index":6126},{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":588505,"byte_end":588511,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6134},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":589305,"byte_end":589311,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3984,"byte_end":3989,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":3999,"byte_end":4010,"line_start":95,"line_end":95,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15067,"byte_end":15078,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15088,"byte_end":15097,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":149}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15107,"byte_end":15116,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":163}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15126,"byte_end":15134,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15144,"byte_end":15152,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":208}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15162,"byte_end":15173,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":238}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15183,"byte_end":15192,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":251}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4020,"byte_end":4024,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":357}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":35793,"byte_end":35801,"line_start":89,"line_end":89,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":386}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4034,"byte_end":4040,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4886}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4050,"byte_end":4057,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4948}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4067,"byte_end":4072,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4988}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4082,"byte_end":4097,"line_start":100,"line_end":100,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":5065}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4107,"byte_end":4113,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5129}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4123,"byte_end":4128,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5173}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4138,"byte_end":4141,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5702}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4151,"byte_end":4157,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5938}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/lib.rs","byte_start":4167,"byte_end":4170,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":5965}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/split_producer.rs","byte_start":8142,"byte_end":8147,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":26}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/split_producer.rs","byte_start":8573,"byte_end":8586,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/split_producer.rs","byte_start":10054,"byte_end":10067,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13345,"byte_end":13353,"line_start":53,"line_end":53,"column_start":52,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6210},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/array.rs","byte_start":13660,"byte_end":13668,"line_start":68,"line_end":68,"column_start":59,"column_end":67},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6210},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17393,"byte_end":17403,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":17860,"byte_end":17864,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6248},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18635,"byte_end":18640,"line_start":76,"line_end":76,"column_start":46,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6280},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":18951,"byte_end":18956,"line_start":91,"line_end":91,"column_start":53,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6280},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/binary_heap.rs","byte_start":19426,"byte_end":19431,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":6280},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_map.rs","byte_start":20502,"byte_end":20506,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/btree_set.rs","byte_start":22017,"byte_end":22021,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":6388},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_map.rs","byte_start":23315,"byte_end":23319,"line_start":36,"line_end":36,"column_start":50,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6437},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/hash_set.rs","byte_start":25702,"byte_end":25706,"line_start":36,"line_end":36,"column_start":41,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6534},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/linked_list.rs","byte_start":27461,"byte_end":27465,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6597},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":28630,"byte_end":28638,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":5,"index":3991},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":29188,"byte_end":29192,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":30865,"byte_end":30870,"line_start":113,"line_end":113,"column_start":40,"column_end":45},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6713},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":31175,"byte_end":31180,"line_start":128,"line_end":128,"column_start":47,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6713},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/vec_deque.rs","byte_start":31742,"byte_end":31747,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6713},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":15917,"byte_end":15927,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/collections/mod.rs","byte_start":16344,"byte_end":16354,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":333},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140252,"byte_end":140256,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":140259,"byte_end":140264,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143266,"byte_end":143270,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":143273,"byte_end":143278,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":144586,"byte_end":144591,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":146606,"byte_end":146614,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":413},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147719,"byte_end":147723,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":147726,"byte_end":147731,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":148719,"byte_end":148727,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":149856,"byte_end":149870,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/plumbing/mod.rs","byte_start":152229,"byte_end":152237,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":156950,"byte_end":156955,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":157184,"byte_end":157189,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6734},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":158292,"byte_end":158297,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6734},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":159232,"byte_end":159241,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":511},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":159919,"byte_end":159928,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":523},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":160597,"byte_end":160610,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":160793,"byte_end":160806,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":535},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162418,"byte_end":162426,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162640,"byte_end":162648,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":162944,"byte_end":162952,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chain.rs","byte_start":163073,"byte_end":163081,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":163851,"byte_end":163857,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":164057,"byte_end":164063,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6747},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":164396,"byte_end":164402,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6747},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":165100,"byte_end":165108,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":165681,"byte_end":165694,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":613},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":166813,"byte_end":166821,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":167499,"byte_end":167507,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/chunks.rs","byte_start":167668,"byte_end":167676,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":168807,"byte_end":168813,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":169001,"byte_end":169007,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6757},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":169455,"byte_end":169461,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6757},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":170106,"byte_end":170114,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":668},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":170671,"byte_end":170685,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":678},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":171581,"byte_end":171595,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":171707,"byte_end":171721,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":172369,"byte_end":172383,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/cloned.rs","byte_start":172703,"byte_end":172715,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":715},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":179990,"byte_end":180005,"line_start":12,"line_end":12,"column_start":24,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":180971,"byte_end":180984,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181022,"byte_end":181035,"line_start":37,"line_end":37,"column_start":13,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181381,"byte_end":181394,"line_start":51,"line_end":51,"column_start":22,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":181813,"byte_end":181828,"line_start":63,"line_end":63,"column_start":40,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":182789,"byte_end":182802,"line_start":96,"line_end":96,"column_start":38,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":183615,"byte_end":183630,"line_start":127,"line_end":127,"column_start":49,"column_end":64},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/consumer.rs","byte_start":184019,"byte_end":184033,"line_start":140,"line_end":140,"column_start":47,"column_end":61},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":809},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/mod.rs","byte_start":175697,"byte_end":175704,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/collect/mod.rs","byte_start":178690,"byte_end":178693,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199206,"byte_end":199212,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199400,"byte_end":199406,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6766},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":199853,"byte_end":199859,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6766},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":200503,"byte_end":200511,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":880},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":201067,"byte_end":201081,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":890},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":201976,"byte_end":201990,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":202102,"byte_end":202116,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":905},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":202763,"byte_end":202777,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":905},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/copied.rs","byte_start":203096,"byte_end":203108,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204390,"byte_end":204395,"line_start":35,"line_end":35,"column_start":25,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204485,"byte_end":204490,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204626,"byte_end":204631,"line_start":47,"line_end":47,"column_start":36,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":951},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":204917,"byte_end":204922,"line_start":62,"line_end":62,"column_start":43,"column_end":48},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":951},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/empty.rs","byte_start":205402,"byte_end":205415,"line_start":85,"line_end":85,"column_start":28,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":973},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206395,"byte_end":206404,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206598,"byte_end":206607,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6775},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":206951,"byte_end":206960,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6775},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":207466,"byte_end":207474,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1013},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/enumerate.rs","byte_start":208058,"byte_end":208075,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1022},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211064,"byte_end":211074,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211372,"byte_end":211382,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":211695,"byte_end":211703,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":1232},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212039,"byte_end":212047,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":1232},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212384,"byte_end":212392,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":7384},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":212687,"byte_end":212695,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":5,"index":7384},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":213166,"byte_end":213173,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"kind":{"Impl":{"id":117}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":213629,"byte_end":213636,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"kind":{"Impl":{"id":118}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214164,"byte_end":214171,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":1807},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214504,"byte_end":214511,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":1807},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":214964,"byte_end":214974,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":3197},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":215415,"byte_end":215425,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":3197},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":215830,"byte_end":215836,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":216492,"byte_end":216498,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"kind":{"Impl":{"id":124}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":216966,"byte_end":216972,"line_start":293,"line_end":293,"column_start":38,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217234,"byte_end":217240,"line_start":303,"line_end":303,"column_start":33,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217517,"byte_end":217523,"line_start":313,"line_end":313,"column_start":43,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":217895,"byte_end":217903,"line_start":327,"line_end":327,"column_start":31,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":3991},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":218190,"byte_end":218198,"line_start":340,"line_end":340,"column_start":39,"column_end":47},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":3991},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/extend.rs","byte_start":218611,"byte_end":218614,"line_start":356,"line_end":356,"column_start":39,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219669,"byte_end":219675,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6784},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":219835,"byte_end":219841,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220053,"byte_end":220059,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6784},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220603,"byte_end":220617,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":220768,"byte_end":220782,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1239},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":221526,"byte_end":221540,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1239},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter.rs","byte_start":221923,"byte_end":221935,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1268},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223211,"byte_end":223220,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223427,"byte_end":223436,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":223626,"byte_end":223635,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6793},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":224198,"byte_end":224215,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":224368,"byte_end":224385,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1308},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":225171,"byte_end":225188,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1308},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/filter_map.rs","byte_start":225589,"byte_end":225604,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1339},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":226774,"byte_end":226786,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":226940,"byte_end":226952,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":227537,"byte_end":227549,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":227909,"byte_end":227919,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find.rs","byte_start":228946,"byte_end":228957,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1414},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":231479,"byte_end":231491,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":232041,"byte_end":232053,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":233119,"byte_end":233131,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":234689,"byte_end":234699,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1468},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/find_first_last/mod.rs","byte_start":236407,"byte_end":236418,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1485},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237238,"byte_end":237245,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237424,"byte_end":237431,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":237612,"byte_end":237619,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6810},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":238185,"byte_end":238200,"line_start":56,"line_end":56,"column_start":16,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":238345,"byte_end":238360,"line_start":62,"line_end":62,"column_start":38,"column_end":53},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1515},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":239152,"byte_end":239167,"line_start":94,"line_end":94,"column_start":47,"column_end":62},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1515},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map.rs","byte_start":239607,"byte_end":239620,"line_start":115,"line_end":115,"column_start":36,"column_end":49},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1546},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241212,"byte_end":241223,"line_start":18,"line_end":18,"column_start":48,"column_end":59},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6819},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241432,"byte_end":241443,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":241632,"byte_end":241643,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6819},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":242229,"byte_end":242248,"line_start":59,"line_end":59,"column_start":16,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":242397,"byte_end":242416,"line_start":65,"line_end":65,"column_start":38,"column_end":57},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":243199,"byte_end":243218,"line_start":96,"line_end":96,"column_start":47,"column_end":66},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1589},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flat_map_iter.rs","byte_start":243630,"byte_end":243647,"line_start":116,"line_end":116,"column_start":36,"column_end":53},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1620},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":244864,"byte_end":244871,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245089,"byte_end":245096,"line_start":26,"line_end":26,"column_start":30,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6828},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245608,"byte_end":245623,"line_start":49,"line_end":49,"column_start":9,"column_end":24},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":245728,"byte_end":245743,"line_start":55,"line_end":55,"column_start":28,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1649},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":246426,"byte_end":246441,"line_start":85,"line_end":85,"column_start":37,"column_end":52},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1649},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten.rs","byte_start":246799,"byte_end":246812,"line_start":104,"line_end":104,"column_start":26,"column_end":39},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1669},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248228,"byte_end":248239,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":248500,"byte_end":248511,"line_start":27,"line_end":27,"column_start":30,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6837},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249058,"byte_end":249077,"line_start":51,"line_end":51,"column_start":9,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249186,"byte_end":249205,"line_start":57,"line_end":57,"column_start":28,"column_end":47},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1692},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":249879,"byte_end":249898,"line_start":86,"line_end":86,"column_start":37,"column_end":56},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1692},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/flatten_iter.rs","byte_start":250228,"byte_end":250245,"line_start":104,"line_end":104,"column_start":26,"column_end":43},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1712},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":250924,"byte_end":250928,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251725,"byte_end":251729,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6846},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":251919,"byte_end":251923,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6846},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":252532,"byte_end":252544,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":253400,"byte_end":253412,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":253881,"byte_end":253891,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1783},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255051,"byte_end":255059,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":255848,"byte_end":255856,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6858},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":256110,"byte_end":256118,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6858},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":256686,"byte_end":256702,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1826},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/fold.rs","byte_start":257620,"byte_end":257636,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1826},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":258365,"byte_end":258380,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1864},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":258776,"byte_end":258791,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1864},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/for_each.rs","byte_start":259215,"byte_end":259230,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1864},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260116,"byte_end":260119,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260389,"byte_end":260397,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":196}},"from":{"krate":5,"index":3991},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":260754,"byte_end":260764,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":197}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":261074,"byte_end":261084,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":198}},"from":{"krate":5,"index":3197},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":261548,"byte_end":261555,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":199}},"from":{"krate":1,"index":1090},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262090,"byte_end":262098,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":5,"index":1232},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262398,"byte_end":262405,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":201}},"from":{"krate":1,"index":1807},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":262728,"byte_end":262736,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":202}},"from":{"krate":5,"index":7384},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263015,"byte_end":263021,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263283,"byte_end":263289,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":204}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263557,"byte_end":263563,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":205}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":263827,"byte_end":263833,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":264104,"byte_end":264110,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":207}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/from_par_iter.rs","byte_start":264554,"byte_end":264557,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":208}},"from":{"krate":5,"index":546},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266091,"byte_end":266098,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6870},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266259,"byte_end":266266,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":6870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266482,"byte_end":266489,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":6870},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":266949,"byte_end":266956,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":6870},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":267698,"byte_end":267706,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2046},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":268377,"byte_end":268392,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2058},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":269602,"byte_end":269617,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":269767,"byte_end":269782,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2076},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":270525,"byte_end":270540,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2076},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/inspect.rs","byte_start":270919,"byte_end":270932,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272256,"byte_end":272266,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272518,"byte_end":272528,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6879},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":272905,"byte_end":272915,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":6879},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":273811,"byte_end":273820,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2150},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":274630,"byte_end":274639,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2164},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":275420,"byte_end":275438,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":275758,"byte_end":275776,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2178},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":278641,"byte_end":278654,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":279787,"byte_end":279800,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave.rs","byte_start":280361,"byte_end":280374,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281301,"byte_end":281319,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":6892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":281961,"byte_end":281979,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":6892},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/interleave_shortest.rs","byte_start":282356,"byte_end":282374,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6892},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283476,"byte_end":283487,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":283718,"byte_end":283729,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6904},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":284259,"byte_end":284270,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6904},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":285177,"byte_end":285185,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2271},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":285752,"byte_end":285771,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":286012,"byte_end":286031,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2283},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":288206,"byte_end":288221,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":288993,"byte_end":289008,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":289656,"byte_end":289671,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2302},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":290019,"byte_end":290038,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":290263,"byte_end":290282,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2319},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":291360,"byte_end":291379,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2319},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/intersperse.rs","byte_start":291919,"byte_end":291936,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2343},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293659,"byte_end":293665,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":293870,"byte_end":293876,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6914},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":294211,"byte_end":294217,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6914},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":294795,"byte_end":294803,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2381},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":295438,"byte_end":295452,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2391},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296744,"byte_end":296750,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":296955,"byte_end":296961,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6924},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":297296,"byte_end":297302,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6924},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":297880,"byte_end":297888,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2421},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/len.rs","byte_start":298523,"byte_end":298537,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2431},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":299904,"byte_end":299907,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300064,"byte_end":300067,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300270,"byte_end":300273,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6934},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":300747,"byte_end":300750,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6934},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":301492,"byte_end":301500,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2483},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":302179,"byte_end":302190,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2496},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":303362,"byte_end":303373,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":303514,"byte_end":303525,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2515},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":304264,"byte_end":304275,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2515},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map.rs","byte_start":304666,"byte_end":304675,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2546},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":305912,"byte_end":305919,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":6943},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306151,"byte_end":306158,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306390,"byte_end":306397,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6943},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":306913,"byte_end":306920,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6943},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":307765,"byte_end":307773,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2603},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":308556,"byte_end":308571,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2619},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":309904,"byte_end":309915,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2641},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310296,"byte_end":310307,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2641},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310598,"byte_end":310609,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2641},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":310923,"byte_end":310938,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":311104,"byte_end":311119,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2671},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":311963,"byte_end":311978,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2671},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":312438,"byte_end":312451,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2707},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":313982,"byte_end":313989,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6955},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314162,"byte_end":314169,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314413,"byte_end":314420,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6955},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":314960,"byte_end":314967,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6955},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":315842,"byte_end":315850,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2767},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":316660,"byte_end":316675,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2784},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":318125,"byte_end":318140,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":318322,"byte_end":318337,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2807},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/map_with.rs","byte_start":319193,"byte_end":319208,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2807},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":328586,"byte_end":328598,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":328942,"byte_end":328954,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":329310,"byte_end":329322,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2854},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/noop.rs","byte_start":329516,"byte_end":329527,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330495,"byte_end":330499,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7846},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/once.rs","byte_start":330785,"byte_end":330789,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7846},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":331976,"byte_end":331980,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7864},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332138,"byte_end":332142,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332252,"byte_end":332261,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":7855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332456,"byte_end":332465,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":7855},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":332975,"byte_end":332984,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7855},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":333684,"byte_end":333692,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2933},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":334401,"byte_end":334418,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2942},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":335516,"byte_end":335529,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":335876,"byte_end":335889,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":336140,"byte_end":336153,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":336464,"byte_end":336481,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2977},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":337439,"byte_end":337456,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2977},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":337935,"byte_end":337950,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2998},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/panic_fuse.rs","byte_start":338799,"byte_end":338815,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3018},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340559,"byte_end":340564,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":3078}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":340724,"byte_end":340725,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3081},"to":{"krate":0,"index":3078}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":341235,"byte_end":341245,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":7871},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":342243,"byte_end":342263,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3088},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/par_bridge.rs","byte_start":342555,"byte_end":342575,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3088},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347400,"byte_end":347409,"line_start":20,"line_end":20,"column_start":55,"column_end":64},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":7880},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347598,"byte_end":347607,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":7880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":347831,"byte_end":347840,"line_start":38,"line_end":38,"column_start":33,"column_end":42},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":7880},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":348406,"byte_end":348423,"line_start":63,"line_end":63,"column_start":16,"column_end":33},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":348641,"byte_end":348658,"line_start":73,"line_end":73,"column_start":35,"column_end":52},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":3130},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/positions.rs","byte_start":349557,"byte_end":349572,"line_start":110,"line_end":110,"column_start":29,"column_end":44},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3153},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350716,"byte_end":350731,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350753,"byte_end":350768,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":350917,"byte_end":350932,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3188},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351482,"byte_end":351497,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3188},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351729,"byte_end":351744,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3188},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/product.rs","byte_start":351929,"byte_end":351942,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3213},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":352957,"byte_end":352971,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353013,"byte_end":353027,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353129,"byte_end":353143,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3235},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353670,"byte_end":353684,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3235},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":353933,"byte_end":353947,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3235},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/reduce.rs","byte_start":354188,"byte_end":354200,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":355602,"byte_end":355608,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356460,"byte_end":356466,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7889},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":356916,"byte_end":356930,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3311},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":357981,"byte_end":357988,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7898},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":358306,"byte_end":358313,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7898},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":358925,"byte_end":358940,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3335},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":359737,"byte_end":359741,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3345},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":360119,"byte_end":360123,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3345},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/repeat.rs","byte_start":360252,"byte_end":360256,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3345},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":360835,"byte_end":360838,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361020,"byte_end":361023,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361358,"byte_end":361361,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7908},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":361931,"byte_end":361939,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3382},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/rev.rs","byte_start":362454,"byte_end":362465,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3392},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363670,"byte_end":363674,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":363907,"byte_end":363911,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7917},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":364246,"byte_end":364250,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7917},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/skip.rs","byte_start":364831,"byte_end":364839,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3429},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369672,"byte_end":369677,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7927},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":369857,"byte_end":369862,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7927},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/splitter.rs","byte_start":370350,"byte_end":370363,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371283,"byte_end":371294,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371316,"byte_end":371327,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371468,"byte_end":371479,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":371946,"byte_end":371957,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":372173,"byte_end":372184,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/sum.rs","byte_start":372357,"byte_end":372366,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373351,"byte_end":373355,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373588,"byte_end":373592,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7936},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":373927,"byte_end":373931,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7936},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/take.rs","byte_start":374494,"byte_end":374502,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3556},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375016,"byte_end":375023,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":375925,"byte_end":375932,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7946},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":376128,"byte_end":376135,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7946},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":376831,"byte_end":376846,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3602},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":377737,"byte_end":377752,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3602},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":378270,"byte_end":378283,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3634},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379011,"byte_end":379022,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":379863,"byte_end":379874,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7961},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":380155,"byte_end":380166,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7961},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":380776,"byte_end":380795,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_fold.rs","byte_start":381758,"byte_end":381777,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":382853,"byte_end":382870,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3717},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":382912,"byte_end":382929,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3717},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383031,"byte_end":383048,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3717},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383662,"byte_end":383679,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3717},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":383946,"byte_end":383963,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3717},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce.rs","byte_start":384439,"byte_end":384454,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3757},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385794,"byte_end":385815,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":2999}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385849,"byte_end":385870,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3791},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":385964,"byte_end":385985,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3791},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":386564,"byte_end":386585,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3791},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":386822,"byte_end":386843,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3791},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/try_reduce_with.rs","byte_start":387498,"byte_end":387517,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3824},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388725,"byte_end":388729,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":388732,"byte_end":388736,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":391413,"byte_end":391418,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3872},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":392299,"byte_end":392308,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":393345,"byte_end":393357,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":3906},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":393988,"byte_end":393994,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3919},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":395395,"byte_end":395401,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":3936},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":396338,"byte_end":396351,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":3954},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":397614,"byte_end":397627,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":3954},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":398291,"byte_end":398302,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":3982},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":399043,"byte_end":399055,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4000},"to":{"krate":0,"index":429}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":400139,"byte_end":400147,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4025},"to":{"krate":0,"index":3842}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":401629,"byte_end":401638,"line_start":507,"line_end":507,"column_start":25,"column_end":34},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/unzip.rs","byte_start":401756,"byte_end":401765,"line_start":513,"line_end":513,"column_start":38,"column_end":47},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4051},"to":{"krate":0,"index":4850}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402642,"byte_end":402648,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7973},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":402808,"byte_end":402814,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":403026,"byte_end":403032,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7973},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":403494,"byte_end":403500,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7973},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":404241,"byte_end":404249,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4095},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":404926,"byte_end":404940,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4107},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":406200,"byte_end":406214,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":406361,"byte_end":406375,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4125},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":407121,"byte_end":407135,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4125},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":407656,"byte_end":407668,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":408614,"byte_end":408623,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7982},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":409373,"byte_end":409382,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7982},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/update.rs","byte_start":409486,"byte_end":409495,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7982},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410308,"byte_end":410317,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":410507,"byte_end":410516,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7995},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":411146,"byte_end":411163,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4213},"to":{"krate":0,"index":413}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":411963,"byte_end":411980,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4213},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/while_some.rs","byte_start":412383,"byte_end":412398,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4234},"to":{"krate":0,"index":421}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414052,"byte_end":414055,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414278,"byte_end":414281,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8004},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":414665,"byte_end":414668,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8004},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":415328,"byte_end":415337,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4281},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":415958,"byte_end":415967,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4293},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip.rs","byte_start":416624,"byte_end":416635,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4305},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418044,"byte_end":418049,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":8017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418319,"byte_end":418324,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":8017},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/zip_eq.rs","byte_start":418716,"byte_end":418721,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":8017},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":419818,"byte_end":419824,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":420031,"byte_end":420037,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8029},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":420372,"byte_end":420378,"line_start":50,"line_end":50,"column_start":37,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8029},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":421060,"byte_end":421068,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4520},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/step_by.rs","byte_start":421749,"byte_end":421763,"line_start":108,"line_end":108,"column_start":22,"column_end":36},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4531},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":40847,"byte_end":40848,"line_start":275,"line_end":275,"column_start":67,"column_end":68},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4558},"to":{"krate":0,"index":4551}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":42356,"byte_end":42357,"line_start":322,"line_end":322,"column_start":70,"column_end":71},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4569},"to":{"krate":0,"index":4562}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43246,"byte_end":43251,"line_start":348,"line_end":348,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":43254,"byte_end":43258,"line_start":348,"line_end":348,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106589,"byte_end":106590,"line_start":2230,"line_end":2230,"column_start":52,"column_end":53},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":4777},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":106957,"byte_end":106973,"line_start":2244,"line_end":2244,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":4573},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":136878,"byte_end":136884,"line_start":3161,"line_end":3161,"column_start":21,"column_end":27},"kind":{"Impl":{"id":430}},"from":{"krate":2,"index":43184},"to":{"krate":0,"index":4865}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/iter/mod.rs","byte_start":137209,"byte_end":137215,"line_start":3178,"line_end":3178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":431}},"from":{"krate":2,"index":43310},"to":{"krate":0,"index":4865}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423562,"byte_end":423568,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"kind":{"Impl":{"id":432}},"from":{"krate":2,"index":43184},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":423741,"byte_end":423749,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":8042},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":424044,"byte_end":424052,"line_start":50,"line_end":50,"column_start":43,"column_end":51},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":8042},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":425209,"byte_end":425213,"line_start":91,"line_end":91,"column_start":29,"column_end":33},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":8051},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":426689,"byte_end":426703,"line_start":150,"line_end":150,"column_start":28,"column_end":42},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":4930},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/option.rs","byte_start":427315,"byte_end":427321,"line_start":173,"line_end":173,"column_start":48,"column_end":54},"kind":{"Impl":{"id":441}},"from":{"krate":2,"index":43184},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430348,"byte_end":430353,"line_start":53,"line_end":53,"column_start":34,"column_end":39},"kind":{"Impl":{"id":442}},"from":{"krate":2,"index":41733},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":430630,"byte_end":430642,"line_start":69,"line_end":69,"column_start":26,"column_end":38},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5008},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431526,"byte_end":431531,"line_start":92,"line_end":92,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":5018}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431534,"byte_end":431538,"line_start":92,"line_end":92,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":5018}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":431869,"byte_end":431881,"line_start":103,"line_end":103,"column_start":36,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5018},"to":{"krate":0,"index":5022}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432296,"byte_end":432300,"line_start":119,"line_end":119,"column_start":44,"column_end":48},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":8097},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":432629,"byte_end":432633,"line_start":135,"line_end":135,"column_start":58,"column_end":62},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8097},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":438268,"byte_end":438272,"line_start":323,"line_end":323,"column_start":27,"column_end":31},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8097},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range.rs","byte_start":438579,"byte_end":438583,"line_start":338,"line_end":338,"column_start":34,"column_end":38},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8097},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":443728,"byte_end":443732,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":444670,"byte_end":444684,"line_start":75,"line_end":75,"column_start":34,"column_end":48},"kind":{"Impl":{"id":469}},"from":{"krate":2,"index":41802},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445587,"byte_end":445592,"line_start":98,"line_end":98,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":5084}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445595,"byte_end":445599,"line_start":98,"line_end":98,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":5084}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":445930,"byte_end":445942,"line_start":109,"line_end":109,"column_start":36,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":5084},"to":{"krate":0,"index":5088}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446357,"byte_end":446361,"line_start":125,"line_end":125,"column_start":44,"column_end":48},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":446690,"byte_end":446694,"line_start":141,"line_end":141,"column_start":58,"column_end":62},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":450190,"byte_end":450194,"line_start":265,"line_end":265,"column_start":27,"column_end":31},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/range_inclusive.rs","byte_start":450574,"byte_end":450578,"line_start":281,"line_end":281,"column_start":34,"column_end":38},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454202,"byte_end":454208,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":490}},"from":{"krate":2,"index":43310},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":454642,"byte_end":454646,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8437},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/result.rs","byte_start":455899,"byte_end":455905,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":498}},"from":{"krate":2,"index":43310},"to":{"krate":0,"index":4846}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":492847,"byte_end":492857,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5195},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":495807,"byte_end":495813,"line_start":102,"line_end":102,"column_start":22,"column_end":28},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5206},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":496062,"byte_end":496075,"line_start":114,"line_end":114,"column_start":22,"column_end":35},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5212},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":499801,"byte_end":499810,"line_start":217,"line_end":217,"column_start":22,"column_end":31},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5222},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mergesort.rs","byte_start":511253,"byte_end":511258,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5244},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520433,"byte_end":520444,"line_start":21,"line_end":21,"column_start":18,"column_end":29},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5275},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520674,"byte_end":520680,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5282},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/quicksort.rs","byte_start":520887,"byte_end":520897,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":5288},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474115,"byte_end":474119,"line_start":488,"line_end":488,"column_start":32,"column_end":36},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8505},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474246,"byte_end":474250,"line_start":494,"line_end":494,"column_start":51,"column_end":55},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8505},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":474576,"byte_end":474580,"line_start":509,"line_end":509,"column_start":58,"column_end":62},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8505},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475083,"byte_end":475095,"line_start":533,"line_end":533,"column_start":43,"column_end":55},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":5445},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475654,"byte_end":475660,"line_start":554,"line_end":554,"column_start":32,"column_end":38},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":8513},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":475789,"byte_end":475795,"line_start":560,"line_end":560,"column_start":51,"column_end":57},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8513},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":476123,"byte_end":476129,"line_start":575,"line_end":575,"column_start":58,"column_end":64},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8513},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":476752,"byte_end":476766,"line_start":603,"line_end":603,"column_start":43,"column_end":57},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":5475},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477632,"byte_end":477643,"line_start":635,"line_end":635,"column_start":22,"column_end":33},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":477930,"byte_end":477941,"line_start":644,"line_end":644,"column_start":32,"column_end":43},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8522},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":478075,"byte_end":478086,"line_start":650,"line_end":650,"column_start":51,"column_end":62},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8522},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":478414,"byte_end":478425,"line_start":665,"line_end":665,"column_start":58,"column_end":69},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8522},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479045,"byte_end":479064,"line_start":693,"line_end":693,"column_start":43,"column_end":62},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":5510},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":479906,"byte_end":479913,"line_start":724,"line_end":724,"column_start":32,"column_end":39},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8532},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":480043,"byte_end":480050,"line_start":730,"line_end":730,"column_start":51,"column_end":58},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8532},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":480378,"byte_end":480385,"line_start":745,"line_end":745,"column_start":58,"column_end":65},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8532},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481059,"byte_end":481074,"line_start":774,"line_end":774,"column_start":43,"column_end":58},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5541},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":481949,"byte_end":481956,"line_start":805,"line_end":805,"column_start":51,"column_end":58},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8541},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":482286,"byte_end":482293,"line_start":820,"line_end":820,"column_start":58,"column_end":65},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8541},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":482806,"byte_end":482821,"line_start":844,"line_end":844,"column_start":43,"column_end":58},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5568},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483460,"byte_end":483469,"line_start":868,"line_end":868,"column_start":51,"column_end":60},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8549},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":483801,"byte_end":483810,"line_start":883,"line_end":883,"column_start":58,"column_end":67},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8549},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":484443,"byte_end":484460,"line_start":911,"line_end":911,"column_start":43,"column_end":60},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5594},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":485356,"byte_end":485370,"line_start":943,"line_end":943,"column_start":22,"column_end":36},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":486785,"byte_end":486799,"line_start":975,"line_end":975,"column_start":51,"column_end":65},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8558},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":487131,"byte_end":487145,"line_start":990,"line_end":990,"column_start":58,"column_end":72},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8558},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":487775,"byte_end":487797,"line_start":1018,"line_end":1018,"column_start":43,"column_end":65},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":5627},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488627,"byte_end":488632,"line_start":1048,"line_end":1048,"column_start":36,"column_end":41},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":5639},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":488815,"byte_end":488820,"line_start":1057,"line_end":1057,"column_start":36,"column_end":41},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":5639},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":489016,"byte_end":489021,"line_start":1063,"line_end":1063,"column_start":40,"column_end":45},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5639},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490508,"byte_end":490516,"line_start":1124,"line_end":1124,"column_start":36,"column_end":44},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":5673},"to":{"krate":2,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/slice/mod.rs","byte_start":490741,"byte_end":490749,"line_start":1132,"line_end":1132,"column_start":40,"column_end":48},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":5673},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561963,"byte_end":561968,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":5731}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561971,"byte_end":561975,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":5731}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":561978,"byte_end":561982,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":5731}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":563822,"byte_end":563824,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":5765},"to":{"krate":0,"index":5731}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565067,"byte_end":565072,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8571},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":565332,"byte_end":565345,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":5778},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":566144,"byte_end":566155,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":8580},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":566506,"byte_end":566525,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":5792},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567497,"byte_end":567502,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8589},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":567760,"byte_end":567773,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":5807},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568530,"byte_end":568541,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8598},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":568806,"byte_end":568825,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":5821},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569566,"byte_end":569571,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":569721,"byte_end":569726,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8607},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571379,"byte_end":571394,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571548,"byte_end":571571,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":5855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":571879,"byte_end":571894,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8620},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":572242,"byte_end":572265,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":5855},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573229,"byte_end":573234,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8633},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":573828,"byte_end":573843,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8643},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574508,"byte_end":574515,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8653},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":574892,"byte_end":574907,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":5897},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":575944,"byte_end":575956,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8666},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/str.rs","byte_start":576369,"byte_end":576389,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":5917},"to":{"krate":0,"index":436}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":577957,"byte_end":577962,"line_start":30,"line_end":30,"column_start":31,"column_end":36},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8679},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/string.rs","byte_start":578239,"byte_end":578244,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8679},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579444,"byte_end":579447,"line_start":42,"line_end":42,"column_start":40,"column_end":43},"kind":{"Impl":{"id":564}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":4547}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579620,"byte_end":579628,"line_start":51,"line_end":51,"column_start":36,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8686},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":579925,"byte_end":579933,"line_start":66,"line_end":66,"column_start":43,"column_end":51},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8686},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":581008,"byte_end":581013,"line_start":108,"line_end":108,"column_start":43,"column_end":48},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8695},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":581324,"byte_end":581329,"line_start":123,"line_end":123,"column_start":50,"column_end":55},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":8695},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":582409,"byte_end":582414,"line_start":158,"line_end":158,"column_start":31,"column_end":36},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8695},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":583555,"byte_end":583568,"line_start":187,"line_end":187,"column_start":30,"column_end":43},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":583890,"byte_end":583903,"line_start":196,"line_end":196,"column_start":43,"column_end":56},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6053},"to":{"krate":0,"index":404}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":584562,"byte_end":584575,"line_start":216,"line_end":216,"column_start":39,"column_end":52},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6053},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":584951,"byte_end":584961,"line_start":230,"line_end":230,"column_start":36,"column_end":46},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6072},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585435,"byte_end":585445,"line_start":249,"line_end":249,"column_start":47,"column_end":57},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6072},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585766,"byte_end":585776,"line_start":258,"line_end":258,"column_start":45,"column_end":55},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6072},"to":{"krate":2,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585897,"byte_end":585907,"line_start":264,"line_end":264,"column_start":47,"column_end":57},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6072},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/vec.rs","byte_start":585953,"byte_end":585963,"line_start":266,"line_end":266,"column_start":32,"column_end":42},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6072},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":587979,"byte_end":587985,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":578}},"from":{"krate":18,"index":216},"to":{"krate":0,"index":4573}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":588505,"byte_end":588511,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":579}},"from":{"krate":18,"index":216},"to":{"krate":0,"index":4781}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.5.1/src/par_either.rs","byte_start":589305,"byte_end":589311,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":580}},"from":{"krate":18,"index":216},"to":{"krate":0,"index":4850}}]}