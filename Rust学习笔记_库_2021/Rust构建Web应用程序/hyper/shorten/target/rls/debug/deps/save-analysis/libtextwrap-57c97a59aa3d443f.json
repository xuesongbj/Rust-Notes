{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","textwrap","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=57c97a59aa3d443f","-C","extra-filename=-57c97a59aa3d443f","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","unicode_width=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libunicode_width-dd11e752557368fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libtextwrap-57c97a59aa3d443f.rmeta"},"prelude":{"crate_id":{"name":"textwrap","disambiguator":[4672014404778372149,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","num":18,"id":{"name":"unicode_width","disambiguator":[12247868939394482018,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":0,"byte_end":33202,"line_start":1,"line_end":987,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1970,"byte_end":1976,"line_start":64,"line_end":64,"column_start":22,"column_end":28},"alias_span":null,"name":"dedent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1999,"byte_end":2005,"line_start":65,"line_end":65,"column_start":22,"column_end":28},"alias_span":null,"name":"indent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2043,"byte_end":2057,"line_start":68,"line_end":68,"column_start":21,"column_end":35},"alias_span":null,"name":"HyphenSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2043,"byte_end":2057,"line_start":68,"line_end":68,"column_start":21,"column_end":35},"alias_span":null,"name":"HyphenSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2059,"byte_end":2072,"line_start":68,"line_end":68,"column_start":37,"column_end":50},"alias_span":null,"name":"NoHyphenation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2059,"byte_end":2072,"line_start":68,"line_end":68,"column_start":37,"column_end":50},"alias_span":null,"name":"NoHyphenation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2074,"byte_end":2086,"line_start":68,"line_end":68,"column_start":52,"column_end":64},"alias_span":null,"name":"WordSplitter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":0,"byte_end":33202,"line_start":1,"line_end":987,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":98},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":114},{"krate":0,"index":119},{"krate":0,"index":63},{"krate":0,"index":123},{"krate":0,"index":129},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":134},{"krate":0,"index":145},{"krate":0,"index":75},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" `textwrap` provides functions for word wrapping and filling text.","sig":null,"attributes":[{"value":"/ `textwrap` provides functions for word wrapping and filling text.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":70,"byte_end":73,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Wrapping text can be very useful in commandline programs where you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":74,"byte_end":144,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ want to format dynamic output nicely so it looks good in a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":145,"byte_end":207,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ terminal. A quick example:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":208,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":243,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/ extern crate textwrap;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":257,"byte_end":283,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/ use textwrap::fill;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":284,"byte_end":307,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":308,"byte_end":311,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":312,"byte_end":327,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":328,"byte_end":394,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/     println!(\"{}\", fill(text, 18));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":395,"byte_end":434,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":435,"byte_end":440,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":441,"byte_end":448,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":449,"byte_end":452,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This will display the following output:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":453,"byte_end":496,"line_start":17,"line_end":17,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":497,"byte_end":500,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":501,"byte_end":512,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":513,"byte_end":534,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":535,"byte_end":550,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":551,"byte_end":569,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":570,"byte_end":577,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":578,"byte_end":581,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Displayed Width vs Byte Size","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":582,"byte_end":616,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":617,"byte_end":620,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ To word wrap text, one must know the width of each word so one can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":621,"byte_end":691,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ know when to break lines. This library measures the width of text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":692,"byte_end":761,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ using the [displayed width][unicode-width], not the size in bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":762,"byte_end":832,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":833,"byte_end":836,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is important for non-ASCII text. ASCII characters such as `a`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":837,"byte_end":907,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ and `!` are simple and take up one column each. This means that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":908,"byte_end":975,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ the displayed width is equal to the string length in bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":976,"byte_end":1039,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ However, non-ASCII characters and symbols take up more than one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1040,"byte_end":1107,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ byte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1108,"byte_end":1181,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ `0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1182,"byte_end":1240,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1241,"byte_end":1244,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is why we take care to use the displayed width instead of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1245,"byte_end":1315,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ byte count when computing line lengths. All functions in this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1316,"byte_end":1381,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ library handle Unicode characters like this.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1382,"byte_end":1430,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [unicode-width]: https://docs.rs/unicode-width/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1435,"byte_end":1486,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1547,"byte_end":1569,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":1570,"byte_end":1609,"line_start":46,"line_end":46,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34085,"byte_end":34091,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"indent","qualname":"::indentation::indent","value":"pub fn indent(&str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Add prefix to each non-empty line.","sig":null,"attributes":[{"value":"/ Add prefix to each non-empty line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33398,"byte_end":33436,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33437,"byte_end":33440,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33441,"byte_end":33448,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33449,"byte_end":33474,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33475,"byte_end":33478,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33479,"byte_end":33502,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ Foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33503,"byte_end":33510,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ Bar","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33511,"byte_end":33518,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ \", \"  \"), \"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33519,"byte_end":33534,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/   Foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33535,"byte_end":33544,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/   Bar","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33545,"byte_end":33554,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ \");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33555,"byte_end":33562,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33563,"byte_end":33570,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33571,"byte_end":33574,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Empty lines (lines consisting only of whitespace) are not indented","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33575,"byte_end":33645,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ and the whitespace is replaced by a single newline (`\\n`):","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33646,"byte_end":33708,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33709,"byte_end":33712,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33713,"byte_end":33720,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33721,"byte_end":33746,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33747,"byte_end":33750,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33751,"byte_end":33774,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ Foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33775,"byte_end":33782,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33783,"byte_end":33786,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Bar","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33787,"byte_end":33794,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/   \\t","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33795,"byte_end":33803,"line_start":31,"line_end":31,"column_start":1,"column_end":9}},{"value":"/ Baz","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33804,"byte_end":33811,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ \", \"->\"), \"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33812,"byte_end":33827,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/ ->Foo","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33828,"byte_end":33837,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33838,"byte_end":33841,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ->Bar","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33842,"byte_end":33851,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33852,"byte_end":33855,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ->Baz","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33856,"byte_end":33865,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ \");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33866,"byte_end":33873,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33874,"byte_end":33881,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33882,"byte_end":33885,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Leading and trailing whitespace on non-empty lines is kept","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33886,"byte_end":33948,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ unchanged:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33949,"byte_end":33963,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33964,"byte_end":33967,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33968,"byte_end":33975,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":33976,"byte_end":34001,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34002,"byte_end":34005,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \\n\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34006,"byte_end":34069,"line_start":48,"line_end":48,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34070,"byte_end":34077,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34763,"byte_end":34769,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"dedent","qualname":"::indentation::dedent","value":"pub fn dedent(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Removes common leading whitespace from each line.","sig":null,"attributes":[{"value":"/ Removes common leading whitespace from each line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34374,"byte_end":34427,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34428,"byte_end":34431,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function will look at each non-empty line and determine the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34432,"byte_end":34500,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ maximum amount of whitespace that can be removed from all lines:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34501,"byte_end":34569,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34570,"byte_end":34573,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34574,"byte_end":34581,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use textwrap::dedent;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34582,"byte_end":34607,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34608,"byte_end":34611,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dedent(\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34612,"byte_end":34635,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/     1st line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34636,"byte_end":34652,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/       2nd line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34653,"byte_end":34671,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/     3rd line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34672,"byte_end":34688,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ \"), \"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34689,"byte_end":34698,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/ 1st line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34699,"byte_end":34711,"line_start":75,"line_end":75,"column_start":1,"column_end":13}},{"value":"/   2nd line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34712,"byte_end":34726,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/ 3rd line","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34727,"byte_end":34739,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ \");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34740,"byte_end":34747,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/indentation.rs","byte_start":34748,"byte_end":34755,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41914,"byte_end":41926,"line_start":28,"line_end":28,"column_start":11,"column_end":23},"name":"WordSplitter","qualname":"::splitting::WordSplitter","value":"WordSplitter","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" An interface for splitting words.","sig":null,"attributes":[{"value":"/ An interface for splitting words.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41064,"byte_end":41101,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41102,"byte_end":41105,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When the [`wrap_iter`] method will try to fit text into a line, it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41106,"byte_end":41176,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ will eventually find a word that it too large the current text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41177,"byte_end":41243,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ width. It will then call the currently configured `WordSplitter` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41244,"byte_end":41315,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ have it attempt to split the word into smaller parts. This trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41316,"byte_end":41384,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ describes that functionality via the [`split`] method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41385,"byte_end":41443,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41444,"byte_end":41447,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If the `textwrap` crate has been compiled with the `hyphenation`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41448,"byte_end":41516,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ feature enabled, you will find an implementation of `WordSplitter`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41517,"byte_end":41587,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ by the `hyphenation::language::Corpus` struct. Use this struct for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41588,"byte_end":41658,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ language-aware hyphenation. See the [`hyphenation` documentation]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41659,"byte_end":41728,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41729,"byte_end":41745,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41746,"byte_end":41749,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`wrap_iter`]: ../struct.Wrapper.html#method.wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41750,"byte_end":41808,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ [`split`]: #tymethod.split","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41809,"byte_end":41839,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/ [`hyphenation` documentation]: https://docs.rs/hyphenation/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41840,"byte_end":41903,"line_start":27,"line_end":27,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42516,"byte_end":42521,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"split","qualname":"::splitting::WordSplitter::split","value":"pub fn split<'w>(&Self, &'w str) -> Vec<(&'w str, &'w str, &'w str)>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Return all possible splits of word. Each split is a triple\n with a head, a hyphen, and a tail where `head + &hyphen +\n &tail == word`. The hyphen can be empty if there is already a\n hyphen in the head.","sig":null,"attributes":[{"value":"/ Return all possible splits of word. Each split is a triple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":41933,"byte_end":41995,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/ with a head, a hyphen, and a tail where `head + &hyphen +","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42000,"byte_end":42061,"line_start":30,"line_end":30,"column_start":5,"column_end":66}},{"value":"/ &tail == word`. The hyphen can be empty if there is already a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42066,"byte_end":42131,"line_start":31,"line_end":31,"column_start":5,"column_end":70}},{"value":"/ hyphen in the head.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42136,"byte_end":42159,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42164,"byte_end":42167,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The splits should go from smallest to longest and should","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42172,"byte_end":42232,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"/ include no split at all. So the word \"technology\" could be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42237,"byte_end":42299,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ split into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42304,"byte_end":42318,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42323,"byte_end":42326,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42331,"byte_end":42344,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/ vec![(\"tech\", \"-\", \"nology\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42349,"byte_end":42382,"line_start":39,"line_end":39,"column_start":5,"column_end":38}},{"value":"/      (\"technol\", \"-\", \"ogy\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42387,"byte_end":42420,"line_start":40,"line_end":40,"column_start":5,"column_end":38}},{"value":"/      (\"technolo\", \"-\", \"gy\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42425,"byte_end":42458,"line_start":41,"line_end":41,"column_start":5,"column_end":38}},{"value":"/      (\"technology\", \"\", \"\")];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42463,"byte_end":42496,"line_start":42,"line_end":42,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42501,"byte_end":42508,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42971,"byte_end":42984,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"NoHyphenation","qualname":"::splitting::NoHyphenation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use this as a [`Wrapper.splitter`] to avoid any kind of\n hyphenation:","sig":null,"attributes":[{"value":"/ Use this as a [`Wrapper.splitter`] to avoid any kind of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42588,"byte_end":42647,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/ hyphenation:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42648,"byte_end":42664,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42665,"byte_end":42668,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42669,"byte_end":42676,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{Wrapper, NoHyphenation};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42677,"byte_end":42720,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42721,"byte_end":42724,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let wrapper = Wrapper::with_splitter(8, NoHyphenation);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42725,"byte_end":42784,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(wrapper.wrap(\"foo bar-baz\"), vec![\"foo\", \"bar-baz\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42785,"byte_end":42853,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42854,"byte_end":42861,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42862,"byte_end":42865,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Wrapper.splitter`]: ../struct.Wrapper.html#structfield.splitter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":42866,"byte_end":42935,"line_start":57,"line_end":57,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43449,"byte_end":43463,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"HyphenSplitter","qualname":"::splitting::HyphenSplitter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple and default way to split words: splitting on existing\n hyphens only.","sig":null,"attributes":[{"value":"/ Simple and default way to split words: splitting on existing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43224,"byte_end":43288,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/ hyphens only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43289,"byte_end":43306,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43307,"byte_end":43310,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ You probably don't need to use this type since it's already used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43311,"byte_end":43379,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/ by default by `Wrapper::new`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43380,"byte_end":43413,"line_start":73,"line_end":73,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2717,"byte_end":2724,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"Wrapper","qualname":"::Wrapper","value":"Wrapper { width, initial_indent, subsequent_indent, break_words, splitter }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" A Wrapper holds settings for wrapping and filling text. Use it\n when the convenience [`wrap_iter`], [`wrap`] and [`fill`] functions\n are not flexible enough.","sig":null,"attributes":[{"value":"/ A Wrapper holds settings for wrapping and filling text. Use it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2090,"byte_end":2156,"line_start":70,"line_end":70,"column_start":1,"column_end":67}},{"value":"/ when the convenience [`wrap_iter`], [`wrap`] and [`fill`] functions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2157,"byte_end":2228,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ are not flexible enough.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2229,"byte_end":2257,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2258,"byte_end":2261,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`wrap_iter`]: fn.wrap_iter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2262,"byte_end":2298,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ [`wrap`]: fn.wrap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2299,"byte_end":2325,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ [`fill`]: fn.fill.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2326,"byte_end":2352,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2353,"byte_end":2356,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The algorithm used by the `WrapIter` iterator (returned from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2357,"byte_end":2425,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ `wrap_iter` method)  works by doing successive partial scans over","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2426,"byte_end":2495,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ words in the input string (where each single scan yields a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2496,"byte_end":2565,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ line) so that the overall time and memory complexity is O(*n*) where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2566,"byte_end":2638,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/ *n* is the length of the input string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2639,"byte_end":2681,"line_start":82,"line_end":82,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2820,"byte_end":2825,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::Wrapper::width","value":"usize","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" The width in columns at which the text will be wrapped.\n","sig":null,"attributes":[{"value":"/ The width in columns at which the text will be wrapped.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2752,"byte_end":2811,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":102},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2897,"byte_end":2911,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"name":"initial_indent","qualname":"::Wrapper::initial_indent","value":"&'a str","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Indentation used for the first line of output.\n","sig":null,"attributes":[{"value":"/ Indentation used for the first line of output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2838,"byte_end":2888,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":103},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2987,"byte_end":3004,"line_start":90,"line_end":90,"column_start":9,"column_end":26},"name":"subsequent_indent","qualname":"::Wrapper::subsequent_indent","value":"&'a str","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Indentation used for subsequent lines of output.\n","sig":null,"attributes":[{"value":"/ Indentation used for subsequent lines of output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":2926,"byte_end":2978,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3172,"byte_end":3183,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"name":"break_words","qualname":"::Wrapper::break_words","value":"bool","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Allow long words to be broken if they cannot fit on a line.\n When set to `false`, some lines may be longer than\n `self.width`.\n","sig":null,"attributes":[{"value":"/ Allow long words to be broken if they cannot fit on a line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3019,"byte_end":3082,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/ When set to `false`, some lines may be longer than","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3087,"byte_end":3141,"line_start":92,"line_end":92,"column_start":5,"column_end":59}},{"value":"/ `self.width`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3146,"byte_end":3163,"line_start":93,"line_end":93,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3385,"byte_end":3393,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"name":"splitter","qualname":"::Wrapper::splitter","value":"S","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" The method for splitting words. If the `hyphenation` feature\n is enabled, you can use a `hyphenation::Standard` dictionary\n here to get language-aware hyphenation.\n","sig":null,"attributes":[{"value":"/ The method for splitting words. If the `hyphenation` feature","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3195,"byte_end":3259,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/ is enabled, you can use a `hyphenation::Standard` dictionary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3264,"byte_end":3328,"line_start":96,"line_end":96,"column_start":5,"column_end":69}},{"value":"/ here to get language-aware hyphenation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3333,"byte_end":3376,"line_start":97,"line_end":97,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3831,"byte_end":3834,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Wrapper>::new","value":"pub fn new(usize) -> Wrapper","parent":null,"children":[],"decl_id":null,"docs":" Create a new Wrapper for wrapping at the specified width. By\n default, we allow words longer than `width` to be broken. A\n [`HyphenSplitter`] will be used by default for splitting\n words. See the [`WordSplitter`] trait for other options.","sig":null,"attributes":[{"value":"/ Create a new Wrapper for wrapping at the specified width. By","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3444,"byte_end":3508,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ default, we allow words longer than `width` to be broken. A","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3513,"byte_end":3576,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/ [`HyphenSplitter`] will be used by default for splitting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3581,"byte_end":3641,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/ words. See the [`WordSplitter`] trait for other options.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3646,"byte_end":3706,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`HyphenSplitter`]: struct.HyphenSplitter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3719,"byte_end":3769,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ [`WordSplitter`]: trait.WordSplitter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3774,"byte_end":3819,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4908,"byte_end":4921,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"with_splitter","qualname":"<Wrapper>::with_splitter","value":"pub fn with_splitter(usize, S) -> Wrapper","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`WordSplitter`] to create a new Wrapper for\n wrapping at the specified width. By default, we allow words\n longer than `width` to be broken.","sig":null,"attributes":[{"value":"/ Use the given [`WordSplitter`] to create a new Wrapper for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4666,"byte_end":4728,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ wrapping at the specified width. By default, we allow words","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4733,"byte_end":4796,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ longer than `width` to be broken.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4801,"byte_end":4838,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4843,"byte_end":4846,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`WordSplitter`]: trait.WordSplitter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4851,"byte_end":4896,"line_start":138,"line_end":138,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5705,"byte_end":5719,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"initial_indent","qualname":"<Wrapper>::initial_indent","value":"pub fn initial_indent(Self, &'a str) -> Wrapper","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.initial_indent`]. The initial indentation is\n used on the very first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.initial_indent`]. The initial indentation is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5164,"byte_end":5226,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/ used on the very first line of output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5231,"byte_end":5273,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5278,"byte_end":5281,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5286,"byte_end":5300,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5305,"byte_end":5308,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Classic paragraph indentation can be achieved by specifying an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5313,"byte_end":5379,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/ initial indentation and wrapping each paragraph by itself:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5384,"byte_end":5446,"line_start":155,"line_end":155,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5451,"byte_end":5454,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5459,"byte_end":5472,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_variables)]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5477,"byte_end":5510,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5515,"byte_end":5541,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5546,"byte_end":5549,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let wrapper = Wrapper::new(15).initial_indent(\"    \");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5554,"byte_end":5612,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5617,"byte_end":5624,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5629,"byte_end":5632,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`self.initial_indent`]: #structfield.initial_indent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5637,"byte_end":5693,"line_start":164,"line_end":164,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6445,"byte_end":6462,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"subsequent_indent","qualname":"<Wrapper>::subsequent_indent","value":"pub fn subsequent_indent(Self, &'a str) -> Wrapper","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.subsequent_indent`]. The subsequent indentation\n is used on lines following the first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.subsequent_indent`]. The subsequent indentation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5857,"byte_end":5922,"line_start":172,"line_end":172,"column_start":5,"column_end":70}},{"value":"/ is used on lines following the first line of output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5927,"byte_end":5983,"line_start":173,"line_end":173,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5988,"byte_end":5991,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":5996,"byte_end":6010,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6015,"byte_end":6018,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Combining initial and subsequent indentation lets you format a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6023,"byte_end":6089,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ single paragraph as a bullet list:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6094,"byte_end":6132,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6137,"byte_end":6140,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6145,"byte_end":6158,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_variables)]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6163,"byte_end":6196,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6201,"byte_end":6227,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6232,"byte_end":6235,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let wrapper = Wrapper::new(15)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6240,"byte_end":6274,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/     .initial_indent(\"* \")","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6279,"byte_end":6308,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6313,"byte_end":6346,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6351,"byte_end":6358,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6363,"byte_end":6366,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`self.subsequent_indent`]: #structfield.subsequent_indent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6371,"byte_end":6433,"line_start":189,"line_end":189,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6849,"byte_end":6860,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"break_words","qualname":"<Wrapper>::break_words","value":"pub fn break_words(Self, bool) -> Wrapper","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.break_words`]. This controls if words longer\n than `self.width` can be broken, or if they will be left\n sticking out into the right margin.","sig":null,"attributes":[{"value":"/ Change [`self.break_words`]. This controls if words longer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6603,"byte_end":6665,"line_start":197,"line_end":197,"column_start":5,"column_end":67}},{"value":"/ than `self.width` can be broken, or if they will be left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6670,"byte_end":6730,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/ sticking out into the right margin.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6735,"byte_end":6774,"line_start":199,"line_end":199,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6779,"byte_end":6782,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`self.break_words`]: #structfield.break_words","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6787,"byte_end":6837,"line_start":201,"line_end":201,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7799,"byte_end":7803,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"fill","qualname":"<Wrapper>::fill","value":"pub fn fill(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Fill a line of text at `self.width` characters. Strings are\n wrapped based on their displayed width, not their size in\n bytes.","sig":null,"attributes":[{"value":"/ Fill a line of text at `self.width` characters. Strings are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":6994,"byte_end":7057,"line_start":209,"line_end":209,"column_start":5,"column_end":68}},{"value":"/ wrapped based on their displayed width, not their size in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7062,"byte_end":7123,"line_start":210,"line_end":210,"column_start":5,"column_end":66}},{"value":"/ bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7128,"byte_end":7138,"line_start":211,"line_end":211,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7143,"byte_end":7146,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The result is a string with newlines between each line. Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7151,"byte_end":7214,"line_start":213,"line_end":213,"column_start":5,"column_end":68}},{"value":"/ the `wrap` method if you need access to the individual lines.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7219,"byte_end":7284,"line_start":214,"line_end":214,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7289,"byte_end":7292,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Complexities","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7297,"byte_end":7315,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7320,"byte_end":7323,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method simply joins the lines produced by `wrap_iter`. As","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7328,"byte_end":7394,"line_start":218,"line_end":218,"column_start":5,"column_end":71}},{"value":"/ such, it inherits the O(*n*) time and memory complexity where","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7399,"byte_end":7464,"line_start":219,"line_end":219,"column_start":5,"column_end":70}},{"value":"/ *n* is the input string length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7469,"byte_end":7504,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7509,"byte_end":7512,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7517,"byte_end":7531,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7536,"byte_end":7539,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7544,"byte_end":7551,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7556,"byte_end":7582,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7587,"byte_end":7590,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let wrapper = Wrapper::new(15);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7595,"byte_end":7630,"line_start":227,"line_end":227,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(wrapper.fill(\"Memory safety without garbage collection.\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7635,"byte_end":7708,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/            \"Memory safety\\nwithout garbage\\ncollection.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7713,"byte_end":7775,"line_start":229,"line_end":229,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":7780,"byte_end":7787,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9505,"byte_end":9509,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Wrapper>::wrap","value":"pub fn wrap(&Self, &'a str) -> Vec<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a line of text at `self.width` characters. Strings are\n wrapped based on their displayed width, not their size in\n bytes.","sig":null,"attributes":[{"value":"/ Wrap a line of text at `self.width` characters. Strings are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8193,"byte_end":8256,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ wrapped based on their displayed width, not their size in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8261,"byte_end":8322,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8327,"byte_end":8337,"line_start":248,"line_end":248,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8342,"byte_end":8345,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Complexities","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8350,"byte_end":8368,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8373,"byte_end":8376,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ This method simply collects the lines produced by `wrap_iter`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8381,"byte_end":8447,"line_start":252,"line_end":252,"column_start":5,"column_end":71}},{"value":"/ As such, it inherits the O(*n*) overall time and memory","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8452,"byte_end":8511,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/ complexity where *n* is the input string length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8516,"byte_end":8568,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8573,"byte_end":8576,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8581,"byte_end":8595,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8600,"byte_end":8603,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8608,"byte_end":8615,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8620,"byte_end":8646,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8651,"byte_end":8654,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let wrap15 = Wrapper::new(15);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8659,"byte_end":8693,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(wrap15.wrap(\"Concurrency without data races.\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8698,"byte_end":8760,"line_start":262,"line_end":262,"column_start":5,"column_end":67}},{"value":"/            vec![\"Concurrency\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8765,"byte_end":8799,"line_start":263,"line_end":263,"column_start":5,"column_end":39}},{"value":"/                 \"without data\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8804,"byte_end":8839,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/                 \"races.\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8844,"byte_end":8875,"line_start":265,"line_end":265,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8880,"byte_end":8883,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let wrap20 = Wrapper::new(20);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8888,"byte_end":8922,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(wrap20.wrap(\"Concurrency without data races.\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8927,"byte_end":8989,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/            vec![\"Concurrency without\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":8994,"byte_end":9036,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/                 \"data races.\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9041,"byte_end":9077,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9082,"byte_end":9089,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9094,"byte_end":9097,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Notice that newlines in the input are preserved. This means","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9102,"byte_end":9165,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ that they force a line break, regardless of how long the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9170,"byte_end":9230,"line_start":274,"line_end":274,"column_start":5,"column_end":65}},{"value":"/ current line is:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9235,"byte_end":9255,"line_start":275,"line_end":275,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9260,"byte_end":9263,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9268,"byte_end":9275,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9280,"byte_end":9306,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9311,"byte_end":9314,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let wrapper = Wrapper::new(40);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9319,"byte_end":9354,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(wrapper.wrap(\"First line.\\nSecond line.\"),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9359,"byte_end":9416,"line_start":281,"line_end":281,"column_start":5,"column_end":62}},{"value":"/            vec![\"First line.\", \"Second line.\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9421,"byte_end":9473,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9478,"byte_end":9485,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9490,"byte_end":9493,"line_start":284,"line_end":284,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11435,"byte_end":11444,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"wrap_iter","qualname":"<Wrapper>::wrap_iter","value":"pub fn wrap_iter<'w>(&'w Self, &'a str) -> WrapIter","parent":null,"children":[],"decl_id":null,"docs":" Lazily wrap a line of text at `self.width` characters. Strings\n are wrapped based on their displayed width, not their size in\n bytes.","sig":null,"attributes":[{"value":"/ Lazily wrap a line of text at `self.width` characters. Strings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9609,"byte_end":9675,"line_start":289,"line_end":289,"column_start":5,"column_end":71}},{"value":"/ are wrapped based on their displayed width, not their size in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9680,"byte_end":9745,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9750,"byte_end":9760,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9765,"byte_end":9768,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The [`WordSplitter`] stored in [`self.splitter`] is used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9773,"byte_end":9833,"line_start":293,"line_end":293,"column_start":5,"column_end":65}},{"value":"/ whenever when a word is too large to fit on the current line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9838,"byte_end":9903,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/ By changing the field, different hyphenation strategies can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9908,"byte_end":9974,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ implemented.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":9979,"byte_end":9995,"line_start":296,"line_end":296,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10000,"byte_end":10003,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Complexities","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10008,"byte_end":10026,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10031,"byte_end":10034,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`WrapIter`] iterator which borrows this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10039,"byte_end":10105,"line_start":300,"line_end":300,"column_start":5,"column_end":71}},{"value":"/ `Wrapper`. The algorithm used has a linear complexity, so","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10110,"byte_end":10171,"line_start":301,"line_end":301,"column_start":5,"column_end":66}},{"value":"/ getting the next line from the iterator will take O(*w*) time,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10176,"byte_end":10242,"line_start":302,"line_end":302,"column_start":5,"column_end":71}},{"value":"/ where *w* is the wrapping width. Fully processing the iterator","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10247,"byte_end":10313,"line_start":303,"line_end":303,"column_start":5,"column_end":71}},{"value":"/ will take O(*n*) time for an input string of length *n*.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10318,"byte_end":10378,"line_start":304,"line_end":304,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10383,"byte_end":10386,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When no indentation is used, each line returned is a slice of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10391,"byte_end":10456,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ the input string and the memory overhead is thus constant.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10461,"byte_end":10523,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ Otherwise new memory is allocated for each line returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10528,"byte_end":10589,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10594,"byte_end":10597,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10602,"byte_end":10616,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10621,"byte_end":10624,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10629,"byte_end":10636,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10641,"byte_end":10666,"line_start":313,"line_end":313,"column_start":5,"column_end":30}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10671,"byte_end":10697,"line_start":314,"line_end":314,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10702,"byte_end":10705,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let wrap20 = Wrapper::new(20);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10710,"byte_end":10744,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ let mut wrap20_iter = wrap20.wrap_iter(\"Zero-cost abstractions.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10749,"byte_end":10819,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"Zero-cost\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10824,"byte_end":10889,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"abstractions.\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10894,"byte_end":10963,"line_start":319,"line_end":319,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(wrap20_iter.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":10968,"byte_end":11009,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11014,"byte_end":11017,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let wrap25 = Wrapper::new(25);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11022,"byte_end":11056,"line_start":322,"line_end":322,"column_start":5,"column_end":39}},{"value":"/ let mut wrap25_iter = wrap25.wrap_iter(\"Zero-cost abstractions.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11061,"byte_end":11131,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(wrap25_iter.next(), Some(Cow::from(\"Zero-cost abstractions.\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11136,"byte_end":11215,"line_start":324,"line_end":324,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(wrap25_iter.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11220,"byte_end":11261,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11266,"byte_end":11273,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11278,"byte_end":11281,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`self.splitter`]: #structfield.splitter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11286,"byte_end":11330,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ [`WordSplitter`]: trait.WordSplitter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11335,"byte_end":11380,"line_start":329,"line_end":329,"column_start":5,"column_end":50}},{"value":"/ [`WrapIter`]: struct.WrapIter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11385,"byte_end":11423,"line_start":330,"line_end":330,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12920,"byte_end":12934,"line_start":371,"line_end":371,"column_start":12,"column_end":26},"name":"into_wrap_iter","qualname":"<Wrapper>::into_wrap_iter","value":"pub fn into_wrap_iter(Self, &'a str) -> IntoWrapIter","parent":null,"children":[],"decl_id":null,"docs":" Lazily wrap a line of text at `self.width` characters. Strings\n are wrapped based on their displayed width, not their size in\n bytes.","sig":null,"attributes":[{"value":"/ Lazily wrap a line of text at `self.width` characters. Strings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11610,"byte_end":11676,"line_start":338,"line_end":338,"column_start":5,"column_end":71}},{"value":"/ are wrapped based on their displayed width, not their size in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11681,"byte_end":11746,"line_start":339,"line_end":339,"column_start":5,"column_end":70}},{"value":"/ bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11751,"byte_end":11761,"line_start":340,"line_end":340,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11766,"byte_end":11769,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The [`WordSplitter`] stored in [`self.splitter`] is used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11774,"byte_end":11834,"line_start":342,"line_end":342,"column_start":5,"column_end":65}},{"value":"/ whenever when a word is too large to fit on the current line.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11839,"byte_end":11904,"line_start":343,"line_end":343,"column_start":5,"column_end":70}},{"value":"/ By changing the field, different hyphenation strategies can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11909,"byte_end":11975,"line_start":344,"line_end":344,"column_start":5,"column_end":71}},{"value":"/ implemented.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":11980,"byte_end":11996,"line_start":345,"line_end":345,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12001,"byte_end":12004,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Complexities","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12009,"byte_end":12027,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12032,"byte_end":12035,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method consumes the `Wrapper` and returns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12040,"byte_end":12092,"line_start":349,"line_end":349,"column_start":5,"column_end":57}},{"value":"/ [`IntoWrapIter`] iterator. Fully processing the iterator has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12097,"byte_end":12161,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/ the same O(*n*) time complexity as [`wrap_iter`], where *n* is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12166,"byte_end":12232,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ the length of the input string.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12237,"byte_end":12272,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12277,"byte_end":12280,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12285,"byte_end":12299,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12304,"byte_end":12307,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12312,"byte_end":12319,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12324,"byte_end":12349,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ use textwrap::Wrapper;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12354,"byte_end":12380,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12385,"byte_end":12388,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let wrap20 = Wrapper::new(20);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12393,"byte_end":12427,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/ let mut wrap20_iter = wrap20.into_wrap_iter(\"Zero-cost abstractions.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12432,"byte_end":12507,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"Zero-cost\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12512,"byte_end":12577,"line_start":362,"line_end":362,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"abstractions.\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12582,"byte_end":12651,"line_start":363,"line_end":363,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(wrap20_iter.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12656,"byte_end":12697,"line_start":364,"line_end":364,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12702,"byte_end":12709,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12714,"byte_end":12717,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [`self.splitter`]: #structfield.splitter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12722,"byte_end":12766,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/ [`WordSplitter`]: trait.WordSplitter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12771,"byte_end":12816,"line_start":368,"line_end":368,"column_start":5,"column_end":50}},{"value":"/ [`IntoWrapIter`]: struct.IntoWrapIter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12821,"byte_end":12867,"line_start":369,"line_end":369,"column_start":5,"column_end":51}},{"value":"/ [`wrap_iter`]: #method.wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":12872,"byte_end":12908,"line_start":370,"line_end":370,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13612,"byte_end":13624,"line_start":391,"line_end":391,"column_start":12,"column_end":24},"name":"IntoWrapIter","qualname":"::IntoWrapIter","value":"IntoWrapIter {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" An iterator over the lines of the input string which owns a\n `Wrapper`. An instance of `IntoWrapIter` is typically obtained\n through either [`wrap_iter`] or [`Wrapper::into_wrap_iter`].","sig":null,"attributes":[{"value":"/ An iterator over the lines of the input string which owns a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13123,"byte_end":13186,"line_start":381,"line_end":381,"column_start":1,"column_end":64}},{"value":"/ `Wrapper`. An instance of `IntoWrapIter` is typically obtained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13187,"byte_end":13253,"line_start":382,"line_end":382,"column_start":1,"column_end":67}},{"value":"/ through either [`wrap_iter`] or [`Wrapper::into_wrap_iter`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13254,"byte_end":13318,"line_start":383,"line_end":383,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13319,"byte_end":13322,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ Each call of `.next()` method yields a line wrapped in `Some` if the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13323,"byte_end":13395,"line_start":385,"line_end":385,"column_start":1,"column_end":73}},{"value":"/ input hasn't been fully processed yet. Otherwise it returns `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13396,"byte_end":13467,"line_start":386,"line_end":386,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13468,"byte_end":13471,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`wrap_iter`]: fn.wrap_iter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13472,"byte_end":13508,"line_start":388,"line_end":388,"column_start":1,"column_end":37}},{"value":"/ [`Wrapper::into_wrap_iter`]: struct.Wrapper.html#method.into_wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13509,"byte_end":13583,"line_start":389,"line_end":389,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14321,"byte_end":14329,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"WrapIter","qualname":"::WrapIter","value":"WrapIter {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" An iterator over the lines of the input string which borrows a\n `Wrapper`. An instance of `WrapIter` is typically obtained\n through the [`Wrapper::wrap_iter`] method.","sig":null,"attributes":[{"value":"/ An iterator over the lines of the input string which borrows a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13898,"byte_end":13964,"line_start":404,"line_end":404,"column_start":1,"column_end":67}},{"value":"/ `Wrapper`. An instance of `WrapIter` is typically obtained","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13965,"byte_end":14027,"line_start":405,"line_end":405,"column_start":1,"column_end":63}},{"value":"/ through the [`Wrapper::wrap_iter`] method.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14028,"byte_end":14074,"line_start":406,"line_end":406,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14075,"byte_end":14078,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ Each call of `.next()` method yields a line wrapped in `Some` if the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14079,"byte_end":14151,"line_start":408,"line_end":408,"column_start":1,"column_end":73}},{"value":"/ input hasn't been fully processed yet. Otherwise it returns `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14152,"byte_end":14223,"line_start":409,"line_end":409,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14224,"byte_end":14227,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ [`Wrapper::wrap_iter`]: struct.Wrapper.html#method.wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14228,"byte_end":14292,"line_start":411,"line_end":411,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22282,"byte_end":22286,"line_start":630,"line_end":630,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill","value":"pub fn fill(&str, usize) -> String","parent":null,"children":[],"decl_id":null,"docs":" Fill a line of text at `width` characters. Strings are wrapped\n based on their displayed width, not their size in bytes.","sig":null,"attributes":[{"value":"/ Fill a line of text at `width` characters. Strings are wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21419,"byte_end":21485,"line_start":608,"line_end":608,"column_start":1,"column_end":67}},{"value":"/ based on their displayed width, not their size in bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21486,"byte_end":21546,"line_start":609,"line_end":609,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21547,"byte_end":21550,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ The result is a string with newlines between each line. Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21551,"byte_end":21614,"line_start":611,"line_end":611,"column_start":1,"column_end":64}},{"value":"/ [`wrap`] if you need access to the individual lines or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21615,"byte_end":21673,"line_start":612,"line_end":612,"column_start":1,"column_end":59}},{"value":"/ [`wrap_iter`] for its iterator counterpart.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21674,"byte_end":21721,"line_start":613,"line_end":613,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21722,"byte_end":21725,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21726,"byte_end":21733,"line_start":615,"line_end":615,"column_start":1,"column_end":8}},{"value":"/ use textwrap::fill;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21734,"byte_end":21757,"line_start":616,"line_end":616,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21758,"byte_end":21761,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fill(\"Memory safety without garbage collection.\", 15),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21762,"byte_end":21831,"line_start":618,"line_end":618,"column_start":1,"column_end":70}},{"value":"/            \"Memory safety\\nwithout garbage\\ncollection.\");","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21832,"byte_end":21894,"line_start":619,"line_end":619,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21895,"byte_end":21902,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21903,"byte_end":21906,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This function creates a Wrapper on the fly with default settings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21907,"byte_end":21976,"line_start":622,"line_end":622,"column_start":1,"column_end":70}},{"value":"/ If you need to set a language corpus for automatic hyphenation, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":21977,"byte_end":22047,"line_start":623,"line_end":623,"column_start":1,"column_end":71}},{"value":"/ need to fill many strings, then it is suggested to create a Wrapper","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22048,"byte_end":22119,"line_start":624,"line_end":624,"column_start":1,"column_end":72}},{"value":"/ and call its [`fill` method].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22120,"byte_end":22153,"line_start":625,"line_end":625,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22154,"byte_end":22157,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ [`wrap`]: fn.wrap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22158,"byte_end":22184,"line_start":627,"line_end":627,"column_start":1,"column_end":27}},{"value":"/ [`wrap_iter`]: fn.wrap_iter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22185,"byte_end":22221,"line_start":628,"line_end":628,"column_start":1,"column_end":37}},{"value":"/ [`fill` method]: struct.Wrapper.html#method.fill","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22222,"byte_end":22274,"line_start":629,"line_end":629,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23309,"byte_end":23313,"line_start":662,"line_end":662,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap(&str, usize) -> Vec<Cow<, str>>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a line of text at `width` characters. Strings are wrapped\n based on their displayed width, not their size in bytes.","sig":null,"attributes":[{"value":"/ Wrap a line of text at `width` characters. Strings are wrapped","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22357,"byte_end":22423,"line_start":634,"line_end":634,"column_start":1,"column_end":67}},{"value":"/ based on their displayed width, not their size in bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22424,"byte_end":22484,"line_start":635,"line_end":635,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22485,"byte_end":22488,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ This function creates a Wrapper on the fly with default settings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22489,"byte_end":22558,"line_start":637,"line_end":637,"column_start":1,"column_end":70}},{"value":"/ If you need to set a language corpus for automatic hyphenation, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22559,"byte_end":22629,"line_start":638,"line_end":638,"column_start":1,"column_end":71}},{"value":"/ need to wrap many strings, then it is suggested to create a Wrapper","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22630,"byte_end":22701,"line_start":639,"line_end":639,"column_start":1,"column_end":72}},{"value":"/ and call its [`wrap` method].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22702,"byte_end":22735,"line_start":640,"line_end":640,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22736,"byte_end":22739,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ The result is a vector of strings. Use [`wrap_iter`] if you need an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22740,"byte_end":22811,"line_start":642,"line_end":642,"column_start":1,"column_end":72}},{"value":"/ iterator version.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22812,"byte_end":22833,"line_start":643,"line_end":643,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22834,"byte_end":22837,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22838,"byte_end":22852,"line_start":645,"line_end":645,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22853,"byte_end":22856,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22857,"byte_end":22864,"line_start":647,"line_end":647,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22865,"byte_end":22888,"line_start":648,"line_end":648,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22889,"byte_end":22892,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"Concurrency without data races.\", 15),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22893,"byte_end":22952,"line_start":650,"line_end":650,"column_start":1,"column_end":60}},{"value":"/            vec![\"Concurrency\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22953,"byte_end":22987,"line_start":651,"line_end":651,"column_start":1,"column_end":35}},{"value":"/                 \"without data\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":22988,"byte_end":23023,"line_start":652,"line_end":652,"column_start":1,"column_end":36}},{"value":"/                 \"races.\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23024,"byte_end":23055,"line_start":653,"line_end":653,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23056,"byte_end":23059,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"Concurrency without data races.\", 20),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23060,"byte_end":23119,"line_start":655,"line_end":655,"column_start":1,"column_end":60}},{"value":"/            vec![\"Concurrency without\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23120,"byte_end":23162,"line_start":656,"line_end":656,"column_start":1,"column_end":43}},{"value":"/                 \"data races.\"]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23163,"byte_end":23199,"line_start":657,"line_end":657,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23200,"byte_end":23207,"line_start":658,"line_end":658,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23208,"byte_end":23211,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ [`wrap_iter`]: fn.wrap_iter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23212,"byte_end":23248,"line_start":660,"line_end":660,"column_start":1,"column_end":37}},{"value":"/ [`wrap` method]: struct.Wrapper.html#method.wrap","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23249,"byte_end":23301,"line_start":661,"line_end":661,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24736,"byte_end":24745,"line_start":698,"line_end":698,"column_start":8,"column_end":17},"name":"wrap_iter","qualname":"::wrap_iter","value":"pub fn wrap_iter(&str, usize) -> IntoWrapIter<, HyphenSplitter>","parent":null,"children":[],"decl_id":null,"docs":" Lazily wrap a line of text at `width` characters. Strings are\n wrapped based on their displayed width, not their size in bytes.","sig":null,"attributes":[{"value":"/ Lazily wrap a line of text at `width` characters. Strings are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23391,"byte_end":23456,"line_start":666,"line_end":666,"column_start":1,"column_end":66}},{"value":"/ wrapped based on their displayed width, not their size in bytes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23457,"byte_end":23525,"line_start":667,"line_end":667,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23526,"byte_end":23529,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ This function creates a Wrapper on the fly with default settings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23530,"byte_end":23599,"line_start":669,"line_end":669,"column_start":1,"column_end":70}},{"value":"/ It then calls the [`into_wrap_iter`] method. Hence, the return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23600,"byte_end":23666,"line_start":670,"line_end":670,"column_start":1,"column_end":67}},{"value":"/ value is an [`IntoWrapIter`], not a [`WrapIter`] as the function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23667,"byte_end":23735,"line_start":671,"line_end":671,"column_start":1,"column_end":69}},{"value":"/ name would otherwise suggest.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23736,"byte_end":23769,"line_start":672,"line_end":672,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23770,"byte_end":23773,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ If you need to set a language corpus for automatic hyphenation, or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23774,"byte_end":23844,"line_start":674,"line_end":674,"column_start":1,"column_end":71}},{"value":"/ need to wrap many strings, then it is suggested to create a Wrapper","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23845,"byte_end":23916,"line_start":675,"line_end":675,"column_start":1,"column_end":72}},{"value":"/ and call its [`wrap_iter`] or [`into_wrap_iter`] methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23917,"byte_end":23978,"line_start":676,"line_end":676,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23979,"byte_end":23982,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23983,"byte_end":23997,"line_start":678,"line_end":678,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":23998,"byte_end":24001,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24002,"byte_end":24009,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24010,"byte_end":24035,"line_start":681,"line_end":681,"column_start":1,"column_end":26}},{"value":"/ use textwrap::wrap_iter;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24036,"byte_end":24064,"line_start":682,"line_end":682,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24065,"byte_end":24068,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ let mut wrap20_iter = wrap_iter(\"Zero-cost abstractions.\", 20);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24069,"byte_end":24136,"line_start":684,"line_end":684,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"Zero-cost\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24137,"byte_end":24202,"line_start":685,"line_end":685,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(wrap20_iter.next(), Some(Cow::from(\"abstractions.\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24203,"byte_end":24272,"line_start":686,"line_end":686,"column_start":1,"column_end":70}},{"value":"/ assert_eq!(wrap20_iter.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24273,"byte_end":24314,"line_start":687,"line_end":687,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24315,"byte_end":24318,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ let mut wrap25_iter = wrap_iter(\"Zero-cost abstractions.\", 25);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24319,"byte_end":24386,"line_start":689,"line_end":689,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(wrap25_iter.next(), Some(Cow::from(\"Zero-cost abstractions.\")));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24387,"byte_end":24466,"line_start":690,"line_end":690,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(wrap25_iter.next(), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24467,"byte_end":24508,"line_start":691,"line_end":691,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24509,"byte_end":24516,"line_start":692,"line_end":692,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24517,"byte_end":24520,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ [`wrap_iter`]: struct.Wrapper.html#method.wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24521,"byte_end":24576,"line_start":694,"line_end":694,"column_start":1,"column_end":56}},{"value":"/ [`into_wrap_iter`]: struct.Wrapper.html#method.into_wrap_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24577,"byte_end":24642,"line_start":695,"line_end":695,"column_start":1,"column_end":66}},{"value":"/ [`IntoWrapIter`]: struct.IntoWrapIter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24643,"byte_end":24689,"line_start":696,"line_end":696,"column_start":1,"column_end":47}},{"value":"/ [`WrapIter`]: struct.WrapIter.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":24690,"byte_end":24728,"line_start":697,"line_end":697,"column_start":1,"column_end":39}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43093,"byte_end":43106,"line_start":63,"line_end":63,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43804,"byte_end":43818,"line_start":84,"line_end":84,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3410,"byte_end":3417,"line_start":101,"line_end":101,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4645,"byte_end":4652,"line_start":133,"line_end":133,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13748,"byte_end":13760,"line_start":396,"line_end":396,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14478,"byte_end":14486,"line_start":418,"line_end":418,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":15567,"byte_end":15579,"line_start":455,"line_end":455,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43093,"byte_end":43106,"line_start":63,"line_end":63,"column_start":23,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":86},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/splitting.rs","byte_start":43804,"byte_end":43818,"line_start":84,"line_end":84,"column_start":23,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":3410,"byte_end":3417,"line_start":101,"line_end":101,"column_start":10,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":4645,"byte_end":4652,"line_start":133,"line_end":133,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":13748,"byte_end":13760,"line_start":396,"line_end":396,"column_start":40,"column_end":52},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":114},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":14478,"byte_end":14486,"line_start":418,"line_end":418,"column_start":48,"column_end":56},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":123},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.11.0/src/lib.rs","byte_start":15567,"byte_end":15579,"line_start":455,"line_end":455,"column_start":10,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}}]}