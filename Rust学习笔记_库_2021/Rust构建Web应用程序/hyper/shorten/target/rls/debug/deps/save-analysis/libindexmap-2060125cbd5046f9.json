{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=2060125cbd5046f9","-C","extra-filename=-2060125cbd5046f9","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","hashbrown=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libhashbrown-4a68035a572338fd.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libindexmap-2060125cbd5046f9.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[2537221300354784470,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[8020528555714469895,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2616171986393301018,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11863058069360259562,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7336635111629826625,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17682353343153283130,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18363772334331137410,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[261838044429472101,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[961483500742368647,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3563483309267658170,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[9138460523039919354,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[17153798023924324853,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17086485320182659309,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6471156256391769804,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","num":18,"id":{"name":"hashbrown","disambiguator":[7948924823299686321,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":92,"byte_end":5364,"line_start":2,"line_end":187,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":12755,"byte_end":12766,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13313,"byte_end":13318,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13320,"byte_end":13333,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13335,"byte_end":13346,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":86}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3562,"byte_end":3572,"line_start":106,"line_end":106,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3594,"byte_end":3602,"line_start":107,"line_end":107,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3624,"byte_end":3632,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":92,"byte_end":5364,"line_start":2,"line_end":187,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":29},{"krate":0,"index":64},{"krate":0,"index":86},{"krate":0,"index":766},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1194},{"krate":0,"index":1303},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1196},{"krate":0,"index":1201},{"krate":0,"index":1212}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Alternate Hashers","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ to use alternate hashers:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use fnv::FnvBuildHasher;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ use fxhash::FxBuildHasher;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/ type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(std, fnv);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(std, fx);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.49 or later.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":1989,"byte_end":2046,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2051,"byte_end":2126,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2127,"byte_end":2202,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2203,"byte_end":2229,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2230,"byte_end":2233,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2234,"byte_end":2268,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2269,"byte_end":2272,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate supports being built without `std`, requiring","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2273,"byte_end":2333,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2334,"byte_end":2409,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2410,"byte_end":2484,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2485,"byte_end":2554,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2555,"byte_end":2558,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2559,"byte_end":2620,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2621,"byte_end":2699,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2700,"byte_end":2745,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2746,"byte_end":2791,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2792,"byte_end":2871,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2872,"byte_end":2940,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2941,"byte_end":2974,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":2975,"byte_end":3050,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3055,"byte_end":3103,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8995,"byte_end":9005,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8605,"byte_end":8631,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8632,"byte_end":8635,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8636,"byte_end":8693,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8694,"byte_end":8772,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8773,"byte_end":8853,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8854,"byte_end":8898,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8899,"byte_end":8902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8903,"byte_end":8917,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8918,"byte_end":8921,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":8922,"byte_end":8984,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":9093,"byte_end":9103,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":9023,"byte_end":9085,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9399,"byte_end":9412,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9960,"byte_end":9971,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9417,"byte_end":9451,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9452,"byte_end":9455,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9456,"byte_end":9536,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9537,"byte_end":9552,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9553,"byte_end":9627,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9628,"byte_end":9680,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9681,"byte_end":9684,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9685,"byte_end":9753,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9754,"byte_end":9823,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9824,"byte_end":9886,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9887,"byte_end":9890,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9891,"byte_end":9949,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9983,"byte_end":9986,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":9997,"byte_end":10002,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10074,"byte_end":10087,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10009,"byte_end":10066,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10523,"byte_end":10530,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10251,"byte_end":10323,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10328,"byte_end":10362,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10367,"byte_end":10370,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10375,"byte_end":10447,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10452,"byte_end":10462,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10467,"byte_end":10470,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10475,"byte_end":10515,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10822,"byte_end":10838,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10629,"byte_end":10708,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10713,"byte_end":10780,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":10785,"byte_end":10814,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":421},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":441},{"krate":0,"index":461},{"krate":0,"index":521},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":544},{"krate":0,"index":548},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":570},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":600},{"krate":0,"index":604},{"krate":0,"index":609},{"krate":0,"index":614},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":630},{"krate":0,"index":635},{"krate":0,"index":640},{"krate":0,"index":644},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":688},{"krate":0,"index":696},{"krate":0,"index":703},{"krate":0,"index":710},{"krate":0,"index":716},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":733},{"krate":0,"index":740},{"krate":0,"index":748},{"krate":0,"index":753},{"krate":0,"index":762}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":12583,"byte_end":12656,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":12657,"byte_end":12713,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87096,"byte_end":87109,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":86824,"byte_end":86874,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":86875,"byte_end":86912,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":86913,"byte_end":86916,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":86917,"byte_end":86947,"line_start":92,"line_end":92,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87840,"byte_end":87843,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key in the map.","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87510,"byte_end":87561,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87566,"byte_end":87569,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that this is not the key that was used to find the entry. There may be an observable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87574,"byte_end":87667,"line_start":109,"line_end":109,"column_start":5,"column_end":98}},{"value":"/ difference if the key type has any distinguishing features outside of `Hash` and `Eq`, like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87672,"byte_end":87767,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ extra fields or the memory address of an allocation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87772,"byte_end":87828,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87979,"byte_end":87982,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's value in the map.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's value in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87914,"byte_end":87967,"line_start":116,"line_end":116,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88248,"byte_end":88255,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the entry's value in the map.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the entry's value in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88055,"byte_end":88116,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88121,"byte_end":88124,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If you need a reference which may outlive the destruction of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88129,"byte_end":88197,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88202,"byte_end":88236,"line_start":124,"line_end":124,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88667,"byte_end":88672,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88599,"byte_end":88641,"line_start":137,"line_end":137,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88646,"byte_end":88655,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88942,"byte_end":88950,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts into a mutable reference to the entry's value in the map,\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts into a mutable reference to the entry's value in the map,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88811,"byte_end":88881,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":88886,"byte_end":88930,"line_start":145,"line_end":145,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89412,"byte_end":89429,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89060,"byte_end":89134,"line_start":151,"line_end":151,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89139,"byte_end":89142,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89147,"byte_end":89219,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89224,"byte_end":89287,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89292,"byte_end":89347,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89352,"byte_end":89355,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89360,"byte_end":89400,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":90079,"byte_end":90097,"line_start":172,"line_end":172,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89733,"byte_end":89807,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89812,"byte_end":89815,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89820,"byte_end":89886,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89891,"byte_end":89952,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":89957,"byte_end":90014,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":90019,"byte_end":90022,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":90027,"byte_end":90067,"line_start":171,"line_end":171,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76791,"byte_end":76799,"line_start":442,"line_end":442,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76748,"byte_end":76786,"line_start":441,"line_end":441,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76882,"byte_end":76888,"line_start":444,"line_end":444,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76830,"byte_end":76877,"line_start":443,"line_end":443,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":269},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76726,"byte_end":76731,"line_start":440,"line_end":440,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":276}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76636,"byte_end":76700,"line_start":438,"line_end":438,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76701,"byte_end":76716,"line_start":439,"line_end":439,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77211,"byte_end":77220,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given default value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the given default value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76953,"byte_end":77039,"line_start":448,"line_end":448,"column_start":5,"column_end":91}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77044,"byte_end":77136,"line_start":449,"line_end":449,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77141,"byte_end":77144,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77149,"byte_end":77199,"line_start":451,"line_end":451,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77679,"byte_end":77693,"line_start":463,"line_end":463,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77411,"byte_end":77507,"line_start":459,"line_end":459,"column_start":5,"column_end":101}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77512,"byte_end":77604,"line_start":460,"line_end":460,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77609,"byte_end":77612,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77617,"byte_end":77667,"line_start":462,"line_end":462,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78234,"byte_end":78252,"line_start":478,"line_end":478,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function with a reference to the entry's key if it is\n vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to\n an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function with a reference to the entry's key if it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":77923,"byte_end":78013,"line_start":473,"line_end":473,"column_start":5,"column_end":95}},{"value":"/ vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78018,"byte_end":78112,"line_start":474,"line_end":474,"column_start":5,"column_end":99}},{"value":"/ an already existent value is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78117,"byte_end":78159,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78164,"byte_end":78167,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78172,"byte_end":78222,"line_start":477,"line_end":477,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78708,"byte_end":78711,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key, either within the map if occupied,\n or else the new key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key, either within the map if occupied,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78560,"byte_end":78635,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ or else the new key that was used to find the entry.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78640,"byte_end":78696,"line_start":492,"line_end":492,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78963,"byte_end":78968,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":78878,"byte_end":78951,"line_start":500,"line_end":500,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79195,"byte_end":79205,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79142,"byte_end":79183,"line_start":508,"line_end":508,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79717,"byte_end":79727,"line_start":526,"line_end":526,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79455,"byte_end":79545,"line_start":522,"line_end":522,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79550,"byte_end":79642,"line_start":523,"line_end":523,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79647,"byte_end":79650,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79655,"byte_end":79705,"line_start":525,"line_end":525,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80522,"byte_end":80528,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80432,"byte_end":80510,"line_start":550,"line_end":550,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80771,"byte_end":80777,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80607,"byte_end":80693,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80698,"byte_end":80701,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80706,"byte_end":80759,"line_start":557,"line_end":557,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81193,"byte_end":81204,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80829,"byte_end":80915,"line_start":562,"line_end":562,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80920,"byte_end":80923,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80928,"byte_end":81000,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81005,"byte_end":81068,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81073,"byte_end":81128,"line_start":566,"line_end":566,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81133,"byte_end":81136,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81141,"byte_end":81181,"line_start":568,"line_end":568,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81622,"byte_end":81634,"line_start":580,"line_end":580,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81264,"byte_end":81350,"line_start":573,"line_end":573,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81355,"byte_end":81358,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81363,"byte_end":81429,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81434,"byte_end":81495,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81500,"byte_end":81557,"line_start":577,"line_end":577,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81562,"byte_end":81565,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81570,"byte_end":81610,"line_start":579,"line_end":579,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81853,"byte_end":81865,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81695,"byte_end":81769,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81774,"byte_end":81777,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81782,"byte_end":81841,"line_start":586,"line_end":586,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82356,"byte_end":82367,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82224,"byte_end":82271,"line_start":601,"line_end":601,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82272,"byte_end":82309,"line_start":602,"line_end":602,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82310,"byte_end":82313,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82314,"byte_end":82344,"line_start":604,"line_end":604,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82572,"byte_end":82575,"line_start":613,"line_end":613,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that was used to find the entry.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82496,"byte_end":82560,"line_start":612,"line_end":612,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82689,"byte_end":82697,"line_start":618,"line_end":618,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the key, leaving the entry vacant.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the key, leaving the entry vacant.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82620,"byte_end":82677,"line_start":617,"line_end":617,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82814,"byte_end":82819,"line_start":623,"line_end":623,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82739,"byte_end":82802,"line_start":622,"line_end":622,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82999,"byte_end":83005,"line_start":629,"line_end":629,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the entry's key and the given value into the map, and returns a mutable reference\n to the value.\n","sig":null,"attributes":[{"value":"/ Inserts the entry's key and the given value into the map, and returns a mutable reference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82872,"byte_end":82965,"line_start":627,"line_end":627,"column_start":5,"column_end":98}},{"value":"/ to the value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82970,"byte_end":82987,"line_start":628,"line_end":628,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14786,"byte_end":14794,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13350,"byte_end":13430,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13431,"byte_end":13466,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13467,"byte_end":13470,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13471,"byte_end":13548,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13549,"byte_end":13577,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13578,"byte_end":13581,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13582,"byte_end":13593,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13594,"byte_end":13597,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13598,"byte_end":13667,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13668,"byte_end":13742,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13743,"byte_end":13798,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13799,"byte_end":13802,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13803,"byte_end":13853,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13854,"byte_end":13857,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13858,"byte_end":13932,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":13933,"byte_end":14009,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14010,"byte_end":14075,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14076,"byte_end":14079,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14080,"byte_end":14093,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14094,"byte_end":14097,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14098,"byte_end":14173,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14174,"byte_end":14249,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14250,"byte_end":14329,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14330,"byte_end":14340,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14341,"byte_end":14344,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14345,"byte_end":14359,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14360,"byte_end":14363,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14364,"byte_end":14371,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14372,"byte_end":14399,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14400,"byte_end":14403,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14404,"byte_end":14460,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14461,"byte_end":14499,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14500,"byte_end":14551,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14552,"byte_end":14597,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14598,"byte_end":14603,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14604,"byte_end":14607,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14608,"byte_end":14641,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14642,"byte_end":14675,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14676,"byte_end":14709,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14710,"byte_end":14750,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14751,"byte_end":14758,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":14759,"byte_end":14774,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16500,"byte_end":16503,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16432,"byte_end":16474,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16479,"byte_end":16488,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16730,"byte_end":16743,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16558,"byte_end":16627,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16632,"byte_end":16661,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16666,"byte_end":16669,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16674,"byte_end":16704,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16709,"byte_end":16718,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17041,"byte_end":17065,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16869,"byte_end":16938,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16943,"byte_end":16972,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16977,"byte_end":16980,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16985,"byte_end":17015,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17020,"byte_end":17029,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17444,"byte_end":17455,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17392,"byte_end":17432,"line_start":181,"line_end":181,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17592,"byte_end":17600,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17550,"byte_end":17580,"line_start":186,"line_end":186,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17721,"byte_end":17727,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17659,"byte_end":17709,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17902,"byte_end":17905,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17781,"byte_end":17833,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17838,"byte_end":17841,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17846,"byte_end":17876,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17881,"byte_end":17890,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18077,"byte_end":18085,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":17959,"byte_end":18008,"line_start":204,"line_end":204,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18013,"byte_end":18016,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18021,"byte_end":18051,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18056,"byte_end":18065,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18224,"byte_end":18228,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18138,"byte_end":18212,"line_start":212,"line_end":212,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18422,"byte_end":18430,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18336,"byte_end":18410,"line_start":219,"line_end":219,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18631,"byte_end":18635,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18556,"byte_end":18619,"line_start":226,"line_end":226,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18820,"byte_end":18826,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18743,"byte_end":18808,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19045,"byte_end":19055,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the values of the map,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":18938,"byte_end":19010,"line_start":240,"line_end":240,"column_start":5,"column_end":77}},{"value":"/ in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19015,"byte_end":19033,"line_start":241,"line_end":241,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19313,"byte_end":19318,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19185,"byte_end":19258,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19263,"byte_end":19266,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19271,"byte_end":19301,"line_start":250,"line_end":250,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19546,"byte_end":19554,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexMap<K, V, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the map, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the map, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19370,"byte_end":19447,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19452,"byte_end":19455,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the map's current length, this has no effect.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19460,"byte_end":19534,"line_start":257,"line_end":257,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20306,"byte_end":20311,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19624,"byte_end":19691,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19696,"byte_end":19736,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19741,"byte_end":19744,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19749,"byte_end":19816,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19821,"byte_end":19895,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19900,"byte_end":19976,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":19981,"byte_end":20006,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20011,"byte_end":20014,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20019,"byte_end":20091,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20096,"byte_end":20146,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20151,"byte_end":20154,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20159,"byte_end":20233,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20238,"byte_end":20294,"line_start":274,"line_end":274,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20821,"byte_end":20830,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexMap<K, V, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20481,"byte_end":20535,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20540,"byte_end":20543,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated map containing the elements in the range","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20548,"byte_end":20618,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original map will be left containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20623,"byte_end":20696,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20701,"byte_end":20765,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20770,"byte_end":20773,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":20778,"byte_end":20809,"line_start":290,"line_end":290,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21221,"byte_end":21228,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21107,"byte_end":21166,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21171,"byte_end":21174,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21179,"byte_end":21209,"line_start":309,"line_end":309,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21421,"byte_end":21434,"line_start":317,"line_end":317,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21311,"byte_end":21366,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21371,"byte_end":21374,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21379,"byte_end":21409,"line_start":316,"line_end":316,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22333,"byte_end":22339,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21681,"byte_end":21720,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21725,"byte_end":21728,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21733,"byte_end":21804,"line_start":329,"line_end":329,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21809,"byte_end":21882,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21887,"byte_end":21953,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21958,"byte_end":21961,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21966,"byte_end":22036,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22041,"byte_end":22093,"line_start":334,"line_end":334,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22098,"byte_end":22101,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22106,"byte_end":22156,"line_start":336,"line_end":336,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22161,"byte_end":22164,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22169,"byte_end":22244,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22249,"byte_end":22321,"line_start":339,"line_end":339,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23125,"byte_end":23136,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22434,"byte_end":22494,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22499,"byte_end":22502,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22507,"byte_end":22578,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22583,"byte_end":22656,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22661,"byte_end":22736,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22741,"byte_end":22744,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22749,"byte_end":22819,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22824,"byte_end":22885,"line_start":351,"line_end":351,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22890,"byte_end":22893,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22898,"byte_end":22948,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22953,"byte_end":22956,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":22961,"byte_end":23036,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23041,"byte_end":23113,"line_start":356,"line_end":356,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23468,"byte_end":23473,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23285,"byte_end":23362,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23367,"byte_end":23393,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23398,"byte_end":23401,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23406,"byte_end":23456,"line_start":365,"line_end":365,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23723,"byte_end":23735,"line_start":374,"line_end":374,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23596,"byte_end":23658,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23663,"byte_end":23666,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23671,"byte_end":23711,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24029,"byte_end":24032,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23872,"byte_end":23943,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23948,"byte_end":23964,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23969,"byte_end":23972,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":23977,"byte_end":24017,"line_start":384,"line_end":384,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24471,"byte_end":24484,"line_start":401,"line_end":401,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24306,"byte_end":24367,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24372,"byte_end":24406,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24411,"byte_end":24414,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24419,"byte_end":24459,"line_start":400,"line_end":400,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24826,"byte_end":24834,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":24778,"byte_end":24814,"line_start":413,"line_end":413,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25249,"byte_end":25261,"line_start":429,"line_end":429,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25138,"byte_end":25184,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25189,"byte_end":25192,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25197,"byte_end":25237,"line_start":428,"line_end":428,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25531,"byte_end":25538,"line_start":441,"line_end":441,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":25839,"byte_end":25851,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26883,"byte_end":26889,"line_start":488,"line_end":488,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26562,"byte_end":26622,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26627,"byte_end":26641,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26646,"byte_end":26649,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26654,"byte_end":26725,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26730,"byte_end":26801,"line_start":484,"line_end":484,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26806,"byte_end":26818,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26823,"byte_end":26826,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":26831,"byte_end":26871,"line_start":487,"line_end":487,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27339,"byte_end":27351,"line_start":502,"line_end":502,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27024,"byte_end":27085,"line_start":495,"line_end":495,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27090,"byte_end":27093,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27098,"byte_end":27175,"line_start":497,"line_end":497,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27180,"byte_end":27257,"line_start":498,"line_end":498,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27262,"byte_end":27274,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27279,"byte_end":27282,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27287,"byte_end":27327,"line_start":501,"line_end":501,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27908,"byte_end":27919,"line_start":519,"line_end":519,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27497,"byte_end":27557,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27562,"byte_end":27576,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27581,"byte_end":27584,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27589,"byte_end":27661,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27666,"byte_end":27729,"line_start":513,"line_end":513,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27734,"byte_end":27789,"line_start":514,"line_end":514,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27794,"byte_end":27797,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27802,"byte_end":27843,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27848,"byte_end":27851,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":27856,"byte_end":27896,"line_start":518,"line_end":518,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28463,"byte_end":28480,"line_start":535,"line_end":535,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28070,"byte_end":28131,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28136,"byte_end":28139,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28144,"byte_end":28216,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28221,"byte_end":28284,"line_start":529,"line_end":529,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28289,"byte_end":28344,"line_start":530,"line_end":530,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28349,"byte_end":28352,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28357,"byte_end":28398,"line_start":532,"line_end":532,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28403,"byte_end":28406,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28411,"byte_end":28451,"line_start":534,"line_end":534,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29151,"byte_end":29167,"line_start":555,"line_end":555,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28726,"byte_end":28793,"line_start":545,"line_end":545,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28798,"byte_end":28819,"line_start":546,"line_end":546,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28824,"byte_end":28827,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28832,"byte_end":28904,"line_start":548,"line_end":548,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28909,"byte_end":28972,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":28977,"byte_end":29032,"line_start":550,"line_end":550,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29037,"byte_end":29040,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29045,"byte_end":29086,"line_start":552,"line_end":552,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29091,"byte_end":29094,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29099,"byte_end":29139,"line_start":554,"line_end":554,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29834,"byte_end":29846,"line_start":576,"line_end":576,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29429,"byte_end":29489,"line_start":566,"line_end":566,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29494,"byte_end":29508,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29513,"byte_end":29516,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29521,"byte_end":29587,"line_start":569,"line_end":569,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29592,"byte_end":29653,"line_start":570,"line_end":570,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29658,"byte_end":29715,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29720,"byte_end":29723,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29728,"byte_end":29769,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29774,"byte_end":29777,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29782,"byte_end":29822,"line_start":575,"line_end":575,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30385,"byte_end":30403,"line_start":592,"line_end":592,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":29998,"byte_end":30059,"line_start":583,"line_end":583,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30064,"byte_end":30067,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30072,"byte_end":30138,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30143,"byte_end":30204,"line_start":586,"line_end":586,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30209,"byte_end":30266,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30271,"byte_end":30274,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30279,"byte_end":30320,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30325,"byte_end":30328,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30333,"byte_end":30373,"line_start":591,"line_end":591,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31069,"byte_end":31086,"line_start":612,"line_end":612,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30650,"byte_end":30717,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30722,"byte_end":30743,"line_start":603,"line_end":603,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30748,"byte_end":30751,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30756,"byte_end":30822,"line_start":605,"line_end":605,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30827,"byte_end":30888,"line_start":606,"line_end":606,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30893,"byte_end":30950,"line_start":607,"line_end":607,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30955,"byte_end":30958,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":30963,"byte_end":31004,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31009,"byte_end":31012,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31017,"byte_end":31057,"line_start":611,"line_end":611,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31448,"byte_end":31451,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31349,"byte_end":31383,"line_start":623,"line_end":623,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31388,"byte_end":31391,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31396,"byte_end":31436,"line_start":625,"line_end":625,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31794,"byte_end":31800,"line_start":637,"line_end":637,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31518,"byte_end":31590,"line_start":630,"line_end":630,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31595,"byte_end":31629,"line_start":631,"line_end":631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31634,"byte_end":31637,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31642,"byte_end":31714,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31719,"byte_end":31729,"line_start":634,"line_end":634,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31734,"byte_end":31737,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":31742,"byte_end":31782,"line_start":636,"line_end":636,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32238,"byte_end":32247,"line_start":654,"line_end":654,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32110,"byte_end":32183,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32188,"byte_end":32191,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32196,"byte_end":32226,"line_start":653,"line_end":653,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32833,"byte_end":32840,"line_start":671,"line_end":671,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32414,"byte_end":32480,"line_start":663,"line_end":663,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32485,"byte_end":32508,"line_start":664,"line_end":664,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32513,"byte_end":32516,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32521,"byte_end":32597,"line_start":666,"line_end":666,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32602,"byte_end":32665,"line_start":667,"line_end":667,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32670,"byte_end":32673,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32678,"byte_end":32749,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":32754,"byte_end":32821,"line_start":670,"line_end":670,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33243,"byte_end":33252,"line_start":684,"line_end":684,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33077,"byte_end":33150,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33155,"byte_end":33195,"line_start":681,"line_end":681,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33200,"byte_end":33203,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33208,"byte_end":33231,"line_start":683,"line_end":683,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33695,"byte_end":33702,"line_start":698,"line_end":698,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33558,"byte_end":33621,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33626,"byte_end":33629,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33634,"byte_end":33683,"line_start":697,"line_end":697,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33939,"byte_end":33948,"line_start":709,"line_end":709,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33791,"byte_end":33824,"line_start":704,"line_end":704,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33829,"byte_end":33832,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33837,"byte_end":33884,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33889,"byte_end":33892,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33897,"byte_end":33927,"line_start":708,"line_end":708,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34206,"byte_end":34219,"line_start":718,"line_end":718,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34058,"byte_end":34091,"line_start":713,"line_end":713,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34096,"byte_end":34099,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34104,"byte_end":34151,"line_start":715,"line_end":715,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34156,"byte_end":34159,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34164,"byte_end":34194,"line_start":717,"line_end":717,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34436,"byte_end":34441,"line_start":725,"line_end":725,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexMap<K, V, S>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair","sig":null,"attributes":[{"value":"/ Get the first key-value pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34349,"byte_end":34381,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34386,"byte_end":34389,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34394,"byte_end":34424,"line_start":724,"line_end":724,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34655,"byte_end":34664,"line_start":732,"line_end":732,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<IndexMap<K, V, S>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the first key-value pair, with mutable access to the value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34534,"byte_end":34600,"line_start":729,"line_end":729,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34605,"byte_end":34608,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34613,"byte_end":34643,"line_start":731,"line_end":731,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34862,"byte_end":34866,"line_start":739,"line_end":739,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexMap<K, V, S>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair","sig":null,"attributes":[{"value":"/ Get the last key-value pair","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34776,"byte_end":34807,"line_start":736,"line_end":736,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34812,"byte_end":34815,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34820,"byte_end":34850,"line_start":738,"line_end":738,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35078,"byte_end":35086,"line_start":746,"line_end":746,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<IndexMap<K, V, S>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the last key-value pair, with mutable access to the value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":34958,"byte_end":35023,"line_start":743,"line_end":743,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35028,"byte_end":35031,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35036,"byte_end":35066,"line_start":745,"line_end":745,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35573,"byte_end":35590,"line_start":759,"line_end":759,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35197,"byte_end":35235,"line_start":750,"line_end":750,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35240,"byte_end":35243,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35248,"byte_end":35295,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35300,"byte_end":35303,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35308,"byte_end":35380,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35385,"byte_end":35448,"line_start":755,"line_end":755,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35453,"byte_end":35508,"line_start":756,"line_end":756,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35513,"byte_end":35516,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35521,"byte_end":35561,"line_start":758,"line_end":758,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36060,"byte_end":36078,"line_start":772,"line_end":772,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35690,"byte_end":35728,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35733,"byte_end":35736,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35741,"byte_end":35788,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35793,"byte_end":35796,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35801,"byte_end":35867,"line_start":767,"line_end":767,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35872,"byte_end":35933,"line_start":768,"line_end":768,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":35938,"byte_end":35995,"line_start":769,"line_end":769,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36000,"byte_end":36003,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36008,"byte_end":36048,"line_start":771,"line_end":771,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36310,"byte_end":36322,"line_start":779,"line_end":779,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexMap<K, V, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Swaps the position of two key-value pairs in the map.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36179,"byte_end":36236,"line_start":776,"line_end":776,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36241,"byte_end":36244,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36249,"byte_end":36298,"line_start":778,"line_end":778,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36659,"byte_end":36663,"line_start":791,"line_end":791,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":538}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36402,"byte_end":36448,"line_start":784,"line_end":784,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36449,"byte_end":36452,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36453,"byte_end":36529,"line_start":786,"line_end":786,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36530,"byte_end":36557,"line_start":787,"line_end":787,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36558,"byte_end":36561,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36562,"byte_end":36608,"line_start":789,"line_end":789,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36609,"byte_end":36647,"line_start":790,"line_end":790,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37757,"byte_end":37763,"line_start":835,"line_end":835,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":564}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37492,"byte_end":37540,"line_start":828,"line_end":828,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37541,"byte_end":37544,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37545,"byte_end":37623,"line_start":830,"line_end":830,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37624,"byte_end":37651,"line_start":831,"line_end":831,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37652,"byte_end":37655,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37656,"byte_end":37706,"line_start":833,"line_end":833,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37707,"byte_end":37745,"line_start":834,"line_end":834,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38881,"byte_end":38890,"line_start":879,"line_end":879,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":590}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38597,"byte_end":38652,"line_start":872,"line_end":872,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38653,"byte_end":38656,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38657,"byte_end":38739,"line_start":874,"line_end":874,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38740,"byte_end":38767,"line_start":875,"line_end":875,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38768,"byte_end":38771,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38772,"byte_end":38830,"line_start":877,"line_end":877,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38831,"byte_end":38869,"line_start":878,"line_end":878,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39619,"byte_end":39623,"line_start":908,"line_end":908,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39359,"byte_end":39408,"line_start":901,"line_end":901,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39409,"byte_end":39412,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39413,"byte_end":39489,"line_start":903,"line_end":903,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39490,"byte_end":39517,"line_start":904,"line_end":904,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39518,"byte_end":39521,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39522,"byte_end":39568,"line_start":906,"line_end":906,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39569,"byte_end":39607,"line_start":907,"line_end":907,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40735,"byte_end":40742,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":634}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40456,"byte_end":40512,"line_start":945,"line_end":945,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40513,"byte_end":40516,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40517,"byte_end":40597,"line_start":947,"line_end":947,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40598,"byte_end":40625,"line_start":948,"line_end":948,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40626,"byte_end":40629,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40630,"byte_end":40684,"line_start":950,"line_end":950,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40685,"byte_end":40723,"line_start":951,"line_end":951,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41531,"byte_end":41539,"line_start":981,"line_end":981,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":651}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41210,"byte_end":41266,"line_start":974,"line_end":974,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41267,"byte_end":41270,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41271,"byte_end":41343,"line_start":976,"line_end":976,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41344,"byte_end":41419,"line_start":977,"line_end":977,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41420,"byte_end":41423,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41424,"byte_end":41480,"line_start":979,"line_end":979,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41481,"byte_end":41519,"line_start":980,"line_end":980,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42512,"byte_end":42517,"line_start":1017,"line_end":1017,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":672}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42241,"byte_end":42298,"line_start":1010,"line_end":1010,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42299,"byte_end":42302,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42303,"byte_end":42380,"line_start":1012,"line_end":1012,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42381,"byte_end":42408,"line_start":1013,"line_end":1013,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42409,"byte_end":42412,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42413,"byte_end":42461,"line_start":1015,"line_end":1015,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42462,"byte_end":42500,"line_start":1016,"line_end":1016,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":766},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":835},{"krate":0,"index":840},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":857},{"krate":0,"index":872},{"krate":0,"index":937},{"krate":0,"index":948},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":972},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":1004},{"krate":0,"index":1010},{"krate":0,"index":1016},{"krate":0,"index":1022},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1052},{"krate":0,"index":1058},{"krate":0,"index":1065},{"krate":0,"index":1069},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1083},{"krate":0,"index":1090},{"krate":0,"index":1094},{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":1108},{"krate":0,"index":1119},{"krate":0,"index":1124},{"krate":0,"index":1129},{"krate":0,"index":1134},{"krate":0,"index":1139},{"krate":0,"index":1149},{"krate":0,"index":1153},{"krate":0,"index":1157},{"krate":0,"index":1161},{"krate":0,"index":1167},{"krate":0,"index":1173},{"krate":0,"index":1179}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":90400,"byte_end":90443,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92489,"byte_end":92497,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":834}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":90883,"byte_end":90961,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":90962,"byte_end":90978,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":90979,"byte_end":90982,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":90983,"byte_end":91060,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91061,"byte_end":91089,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91090,"byte_end":91093,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91094,"byte_end":91105,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91106,"byte_end":91109,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91110,"byte_end":91186,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91187,"byte_end":91263,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91264,"byte_end":91339,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91340,"byte_end":91410,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91411,"byte_end":91431,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91432,"byte_end":91435,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91436,"byte_end":91512,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91513,"byte_end":91585,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91586,"byte_end":91640,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91641,"byte_end":91644,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91645,"byte_end":91719,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91720,"byte_end":91796,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91797,"byte_end":91862,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91863,"byte_end":91866,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91867,"byte_end":91880,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91881,"byte_end":91884,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91885,"byte_end":91957,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":91958,"byte_end":92037,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92038,"byte_end":92107,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92108,"byte_end":92111,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92112,"byte_end":92126,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92127,"byte_end":92130,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92131,"byte_end":92138,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92139,"byte_end":92166,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92167,"byte_end":92170,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92171,"byte_end":92222,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92223,"byte_end":92300,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92301,"byte_end":92304,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92305,"byte_end":92341,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92342,"byte_end":92378,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92379,"byte_end":92415,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92416,"byte_end":92453,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92454,"byte_end":92461,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92462,"byte_end":92477,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93919,"byte_end":93922,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93865,"byte_end":93907,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94160,"byte_end":94173,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94009,"byte_end":94061,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94066,"byte_end":94105,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94110,"byte_end":94113,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94118,"byte_end":94148,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94460,"byte_end":94484,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94309,"byte_end":94361,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94366,"byte_end":94405,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94410,"byte_end":94413,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94418,"byte_end":94448,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94684,"byte_end":94695,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94632,"byte_end":94672,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94859,"byte_end":94867,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94817,"byte_end":94847,"line_start":165,"line_end":165,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94987,"byte_end":94993,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94925,"byte_end":94975,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95146,"byte_end":95149,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95046,"byte_end":95091,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95096,"byte_end":95099,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95104,"byte_end":95134,"line_start":177,"line_end":177,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95306,"byte_end":95314,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95202,"byte_end":95251,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95256,"byte_end":95259,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95264,"byte_end":95294,"line_start":184,"line_end":184,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95448,"byte_end":95452,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95371,"byte_end":95436,"line_start":189,"line_end":189,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95674,"byte_end":95679,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95553,"byte_end":95619,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95624,"byte_end":95627,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95632,"byte_end":95662,"line_start":198,"line_end":198,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95906,"byte_end":95914,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexSet<T, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the set, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the set, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95730,"byte_end":95807,"line_start":203,"line_end":203,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95812,"byte_end":95815,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the set's current length, this has no effect.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95820,"byte_end":95894,"line_start":205,"line_end":205,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96656,"byte_end":96661,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":95983,"byte_end":96057,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96062,"byte_end":96086,"line_start":211,"line_end":211,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96091,"byte_end":96094,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96099,"byte_end":96166,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96171,"byte_end":96245,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96250,"byte_end":96326,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96331,"byte_end":96356,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96361,"byte_end":96364,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96369,"byte_end":96441,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96446,"byte_end":96496,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96501,"byte_end":96504,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96509,"byte_end":96583,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96588,"byte_end":96644,"line_start":222,"line_end":222,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97172,"byte_end":97181,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexSet<T, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96832,"byte_end":96886,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96891,"byte_end":96894,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated set containing the elements in the range","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96899,"byte_end":96969,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original set will be left containing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":96974,"byte_end":97047,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97052,"byte_end":97116,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97121,"byte_end":97124,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97129,"byte_end":97160,"line_start":238,"line_end":238,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97502,"byte_end":97509,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97397,"byte_end":97447,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97452,"byte_end":97455,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97460,"byte_end":97490,"line_start":256,"line_end":256,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97701,"byte_end":97714,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97591,"byte_end":97646,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97651,"byte_end":97654,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97659,"byte_end":97689,"line_start":263,"line_end":263,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98125,"byte_end":98131,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97773,"byte_end":97807,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97812,"byte_end":97815,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97820,"byte_end":97883,"line_start":270,"line_end":270,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97888,"byte_end":97949,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97954,"byte_end":98017,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98022,"byte_end":98050,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98055,"byte_end":98058,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98063,"byte_end":98113,"line_start":275,"line_end":275,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98669,"byte_end":98680,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98219,"byte_end":98272,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98277,"byte_end":98280,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98285,"byte_end":98348,"line_start":282,"line_end":282,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98353,"byte_end":98412,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98417,"byte_end":98481,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98486,"byte_end":98553,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98558,"byte_end":98594,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98599,"byte_end":98602,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":98607,"byte_end":98657,"line_start":288,"line_end":288,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99170,"byte_end":99180,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99002,"byte_end":99076,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99081,"byte_end":99084,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99089,"byte_end":99158,"line_start":304,"line_end":304,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99629,"byte_end":99649,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99385,"byte_end":99454,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99459,"byte_end":99479,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99484,"byte_end":99487,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99492,"byte_end":99564,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99569,"byte_end":99617,"line_start":319,"line_end":319,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100089,"byte_end":100101,"line_start":335,"line_end":335,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":99920,"byte_end":99995,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100000,"byte_end":100003,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100008,"byte_end":100077,"line_start":334,"line_end":334,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100543,"byte_end":100548,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100310,"byte_end":100379,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100384,"byte_end":100387,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100392,"byte_end":100464,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100469,"byte_end":100531,"line_start":348,"line_end":348,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100882,"byte_end":100890,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100753,"byte_end":100817,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100822,"byte_end":100825,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":100830,"byte_end":100870,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101183,"byte_end":101186,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101025,"byte_end":101097,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101102,"byte_end":101118,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101123,"byte_end":101126,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101131,"byte_end":101171,"line_start":371,"line_end":371,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101389,"byte_end":101397,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101346,"byte_end":101377,"line_start":379,"line_end":379,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101627,"byte_end":101639,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101569,"byte_end":101615,"line_start":387,"line_end":387,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101982,"byte_end":101989,"line_start":399,"line_end":399,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101783,"byte_end":101857,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101862,"byte_end":101917,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101922,"byte_end":101925,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":101930,"byte_end":101970,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102565,"byte_end":102571,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102262,"byte_end":102333,"line_start":411,"line_end":411,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102338,"byte_end":102341,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102346,"byte_end":102416,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102421,"byte_end":102500,"line_start":414,"line_end":414,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102505,"byte_end":102508,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102513,"byte_end":102553,"line_start":416,"line_end":416,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103117,"byte_end":103128,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102705,"byte_end":102776,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102781,"byte_end":102784,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102789,"byte_end":102862,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102867,"byte_end":102930,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102935,"byte_end":102990,"line_start":428,"line_end":428,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":102995,"byte_end":102998,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103003,"byte_end":103052,"line_start":430,"line_end":430,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103057,"byte_end":103060,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103065,"byte_end":103105,"line_start":432,"line_end":432,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103682,"byte_end":103694,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103276,"byte_end":103347,"line_start":440,"line_end":440,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103352,"byte_end":103355,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103360,"byte_end":103427,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103432,"byte_end":103493,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103498,"byte_end":103555,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103560,"byte_end":103563,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103568,"byte_end":103617,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103622,"byte_end":103625,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103630,"byte_end":103670,"line_start":448,"line_end":448,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104180,"byte_end":104184,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103843,"byte_end":103917,"line_start":456,"line_end":456,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103922,"byte_end":103936,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103941,"byte_end":103944,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":103949,"byte_end":104020,"line_start":459,"line_end":459,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104025,"byte_end":104098,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104103,"byte_end":104115,"line_start":461,"line_end":461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104120,"byte_end":104123,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104128,"byte_end":104168,"line_start":463,"line_end":463,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104754,"byte_end":104763,"line_start":481,"line_end":481,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104321,"byte_end":104395,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104400,"byte_end":104414,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104419,"byte_end":104422,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104427,"byte_end":104500,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104505,"byte_end":104568,"line_start":475,"line_end":475,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104573,"byte_end":104628,"line_start":476,"line_end":476,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104633,"byte_end":104636,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104641,"byte_end":104689,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104694,"byte_end":104697,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104702,"byte_end":104742,"line_start":480,"line_end":480,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105356,"byte_end":105366,"line_start":498,"line_end":498,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":104929,"byte_end":105003,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105008,"byte_end":105022,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105027,"byte_end":105030,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105035,"byte_end":105102,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105107,"byte_end":105168,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105173,"byte_end":105230,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105235,"byte_end":105238,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105243,"byte_end":105291,"line_start":495,"line_end":495,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105296,"byte_end":105299,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105304,"byte_end":105344,"line_start":497,"line_end":497,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105885,"byte_end":105901,"line_start":512,"line_end":512,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105533,"byte_end":105598,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105603,"byte_end":105606,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105611,"byte_end":105684,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105689,"byte_end":105752,"line_start":508,"line_end":508,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105757,"byte_end":105812,"line_start":509,"line_end":509,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105817,"byte_end":105820,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":105825,"byte_end":105873,"line_start":511,"line_end":511,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106429,"byte_end":106446,"line_start":526,"line_end":526,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106083,"byte_end":106148,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106153,"byte_end":106156,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106161,"byte_end":106228,"line_start":521,"line_end":521,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106233,"byte_end":106294,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106299,"byte_end":106356,"line_start":523,"line_end":523,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106361,"byte_end":106364,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106369,"byte_end":106417,"line_start":525,"line_end":525,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106719,"byte_end":106722,"line_start":536,"line_end":536,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106629,"byte_end":106654,"line_start":533,"line_end":533,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106659,"byte_end":106662,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106667,"byte_end":106707,"line_start":535,"line_end":535,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107067,"byte_end":107073,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106800,"byte_end":106863,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106868,"byte_end":106902,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106907,"byte_end":106910,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106915,"byte_end":106987,"line_start":543,"line_end":543,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":106992,"byte_end":107002,"line_start":544,"line_end":544,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107007,"byte_end":107010,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107015,"byte_end":107055,"line_start":546,"line_end":546,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107318,"byte_end":107322,"line_start":557,"line_end":557,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107209,"byte_end":107263,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107268,"byte_end":107271,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107276,"byte_end":107306,"line_start":556,"line_end":556,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107583,"byte_end":107590,"line_start":567,"line_end":567,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107406,"byte_end":107483,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107488,"byte_end":107491,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107496,"byte_end":107571,"line_start":566,"line_end":566,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107893,"byte_end":107902,"line_start":578,"line_end":578,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107745,"byte_end":107809,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107814,"byte_end":107845,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107850,"byte_end":107853,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":107858,"byte_end":107881,"line_start":577,"line_end":577,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108237,"byte_end":108244,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108109,"byte_end":108163,"line_start":587,"line_end":587,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108168,"byte_end":108171,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108176,"byte_end":108225,"line_start":589,"line_end":589,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108465,"byte_end":108474,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108326,"byte_end":108350,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108355,"byte_end":108358,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108363,"byte_end":108410,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108415,"byte_end":108418,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108423,"byte_end":108453,"line_start":600,"line_end":600,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108659,"byte_end":108664,"line_start":608,"line_end":608,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexSet<T, S>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the first value","sig":null,"attributes":[{"value":"/ Get the first value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108581,"byte_end":108604,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108609,"byte_end":108612,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108617,"byte_end":108647,"line_start":607,"line_end":607,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108831,"byte_end":108835,"line_start":615,"line_end":615,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexSet<T, S>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value","sig":null,"attributes":[{"value":"/ Get the last value","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108754,"byte_end":108776,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108781,"byte_end":108784,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108789,"byte_end":108819,"line_start":614,"line_end":614,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109292,"byte_end":109309,"line_start":628,"line_end":628,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108924,"byte_end":108953,"line_start":619,"line_end":619,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108958,"byte_end":108961,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108966,"byte_end":109013,"line_start":621,"line_end":621,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109018,"byte_end":109021,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109026,"byte_end":109099,"line_start":623,"line_end":623,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109104,"byte_end":109167,"line_start":624,"line_end":624,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109172,"byte_end":109227,"line_start":625,"line_end":625,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109232,"byte_end":109235,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109240,"byte_end":109280,"line_start":627,"line_end":627,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109782,"byte_end":109800,"line_start":641,"line_end":641,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109420,"byte_end":109449,"line_start":632,"line_end":632,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109454,"byte_end":109457,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109462,"byte_end":109509,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109514,"byte_end":109517,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109522,"byte_end":109589,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109594,"byte_end":109655,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109660,"byte_end":109717,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109722,"byte_end":109725,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109730,"byte_end":109770,"line_start":640,"line_end":640,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":110034,"byte_end":110046,"line_start":648,"line_end":648,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexSet<T, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two values in the set.","sig":null,"attributes":[{"value":"/ Swaps the position of two values in the set.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109912,"byte_end":109960,"line_start":645,"line_end":645,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109965,"byte_end":109968,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":109973,"byte_end":110022,"line_start":647,"line_end":647,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111429,"byte_end":111437,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":955}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111110,"byte_end":111164,"line_start":693,"line_end":693,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111165,"byte_end":111168,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111169,"byte_end":111241,"line_start":695,"line_end":695,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111242,"byte_end":111317,"line_start":696,"line_end":696,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111318,"byte_end":111321,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111322,"byte_end":111360,"line_start":698,"line_end":698,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111361,"byte_end":111417,"line_start":699,"line_end":699,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":968},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112330,"byte_end":112334,"line_start":736,"line_end":736,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":971}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112072,"byte_end":112119,"line_start":729,"line_end":729,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112120,"byte_end":112123,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112124,"byte_end":112192,"line_start":731,"line_end":731,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112193,"byte_end":112228,"line_start":732,"line_end":732,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112229,"byte_end":112232,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112233,"byte_end":112271,"line_start":734,"line_end":734,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112272,"byte_end":112318,"line_start":735,"line_end":735,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113332,"byte_end":113337,"line_start":779,"line_end":779,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":991}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113063,"byte_end":113118,"line_start":772,"line_end":772,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113119,"byte_end":113122,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113123,"byte_end":113192,"line_start":774,"line_end":774,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113193,"byte_end":113228,"line_start":775,"line_end":775,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113229,"byte_end":113232,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113233,"byte_end":113271,"line_start":777,"line_end":777,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113272,"byte_end":113320,"line_start":778,"line_end":778,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115499,"byte_end":115510,"line_start":884,"line_end":884,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115419,"byte_end":115487,"line_start":883,"line_end":883,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115885,"byte_end":115894,"line_start":896,"line_end":896,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115803,"byte_end":115873,"line_start":895,"line_end":895,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116162,"byte_end":116173,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116080,"byte_end":116150,"line_start":903,"line_end":903,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116599,"byte_end":116609,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116298,"byte_end":116370,"line_start":912,"line_end":912,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116371,"byte_end":116374,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116375,"byte_end":116449,"line_start":914,"line_end":914,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116450,"byte_end":116485,"line_start":915,"line_end":915,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116486,"byte_end":116489,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116490,"byte_end":116528,"line_start":917,"line_end":917,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116529,"byte_end":116587,"line_start":918,"line_end":918,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118162,"byte_end":118174,"line_start":986,"line_end":986,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117853,"byte_end":117927,"line_start":979,"line_end":979,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117928,"byte_end":117931,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117932,"byte_end":118008,"line_start":981,"line_end":981,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118009,"byte_end":118044,"line_start":982,"line_end":982,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118045,"byte_end":118048,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118049,"byte_end":118087,"line_start":984,"line_end":984,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118088,"byte_end":118150,"line_start":985,"line_end":985,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119767,"byte_end":119786,"line_start":1053,"line_end":1053,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1107}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119426,"byte_end":119508,"line_start":1046,"line_end":1046,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119509,"byte_end":119512,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119513,"byte_end":119583,"line_start":1048,"line_end":1048,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119584,"byte_end":119633,"line_start":1049,"line_end":1049,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119634,"byte_end":119637,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119638,"byte_end":119676,"line_start":1051,"line_end":1051,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119677,"byte_end":119755,"line_start":1052,"line_end":1052,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121304,"byte_end":121309,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1138}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121023,"byte_end":121090,"line_start":1111,"line_end":1111,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121091,"byte_end":121094,"line_start":1112,"line_end":1112,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121095,"byte_end":121164,"line_start":1113,"line_end":1113,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121165,"byte_end":121200,"line_start":1114,"line_end":1114,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121201,"byte_end":121204,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121205,"byte_end":121243,"line_start":1116,"line_end":1116,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121244,"byte_end":121292,"line_start":1117,"line_end":1117,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":5120,"byte_end":5125,"line_start":180,"line_end":180,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":9177,"byte_end":9178,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":11006,"byte_end":11014,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":83979,"byte_end":83991,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":84291,"byte_end":84303,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87352,"byte_end":87365,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87480,"byte_end":87493,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":63968,"byte_end":63980,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":64666,"byte_end":64678,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":64997,"byte_end":65009,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":65512,"byte_end":65524,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76931,"byte_end":76936,"line_start":447,"line_end":447,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79993,"byte_end":79998,"line_start":537,"line_end":537,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80402,"byte_end":80415,"line_start":549,"line_end":549,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81976,"byte_end":81989,"line_start":592,"line_end":592,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82468,"byte_end":82479,"line_start":611,"line_end":611,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":83182,"byte_end":83193,"line_start":635,"line_end":635,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15003,"byte_end":15011,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15409,"byte_end":15417,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15941,"byte_end":15949,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16411,"byte_end":16419,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16845,"byte_end":16853,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21039,"byte_end":21047,"line_start":302,"line_end":302,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":517},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33767,"byte_end":33775,"line_start":703,"line_end":703,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36757,"byte_end":36761,"line_start":795,"line_end":795,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36876,"byte_end":36880,"line_start":801,"line_end":801,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37038,"byte_end":37042,"line_start":807,"line_end":807,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37193,"byte_end":37197,"line_start":814,"line_end":814,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37349,"byte_end":37353,"line_start":822,"line_end":822,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37846,"byte_end":37852,"line_start":839,"line_end":839,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37969,"byte_end":37975,"line_start":845,"line_end":845,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38135,"byte_end":38141,"line_start":851,"line_end":851,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38292,"byte_end":38298,"line_start":858,"line_end":858,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38452,"byte_end":38458,"line_start":866,"line_end":866,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38976,"byte_end":38985,"line_start":883,"line_end":883,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39106,"byte_end":39115,"line_start":889,"line_end":889,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39275,"byte_end":39284,"line_start":895,"line_end":895,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39706,"byte_end":39710,"line_start":912,"line_end":912,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39831,"byte_end":39835,"line_start":918,"line_end":918,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39990,"byte_end":39994,"line_start":924,"line_end":924,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40145,"byte_end":40149,"line_start":931,"line_end":931,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40313,"byte_end":40317,"line_start":939,"line_end":939,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40828,"byte_end":40835,"line_start":956,"line_end":956,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40963,"byte_end":40970,"line_start":962,"line_end":962,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41128,"byte_end":41135,"line_start":968,"line_end":968,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41625,"byte_end":41633,"line_start":985,"line_end":985,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41747,"byte_end":41755,"line_start":991,"line_end":991,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41911,"byte_end":41919,"line_start":997,"line_end":997,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42040,"byte_end":42048,"line_start":1003,"line_end":1003,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42608,"byte_end":42613,"line_start":1021,"line_end":1021,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42731,"byte_end":42736,"line_start":1027,"line_end":1027,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":43251,"byte_end":43259,"line_start":1047,"line_end":1047,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":44043,"byte_end":44051,"line_start":1079,"line_end":1079,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":45219,"byte_end":45227,"line_start":1124,"line_end":1124,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":46304,"byte_end":46312,"line_start":1166,"line_end":1166,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":47406,"byte_end":47414,"line_start":1208,"line_end":1208,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":47762,"byte_end":47770,"line_start":1219,"line_end":1219,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":48354,"byte_end":48362,"line_start":1238,"line_end":1238,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":49661,"byte_end":49669,"line_start":1271,"line_end":1271,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50065,"byte_end":50073,"line_start":1285,"line_end":1285,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50293,"byte_end":50301,"line_start":1295,"line_end":1295,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50666,"byte_end":50674,"line_start":1312,"line_end":1312,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92653,"byte_end":92661,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92923,"byte_end":92931,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93442,"byte_end":93450,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93847,"byte_end":93855,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94288,"byte_end":94296,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97332,"byte_end":97340,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108305,"byte_end":108313,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":110813,"byte_end":110821,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111503,"byte_end":111511,"line_start":704,"line_end":704,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111608,"byte_end":111616,"line_start":710,"line_end":710,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111760,"byte_end":111768,"line_start":716,"line_end":716,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111871,"byte_end":111879,"line_start":722,"line_end":722,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112410,"byte_end":112414,"line_start":740,"line_end":740,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112523,"byte_end":112527,"line_start":746,"line_end":746,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112679,"byte_end":112683,"line_start":752,"line_end":752,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112773,"byte_end":112777,"line_start":758,"line_end":758,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112923,"byte_end":112927,"line_start":766,"line_end":766,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113408,"byte_end":113413,"line_start":783,"line_end":783,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113514,"byte_end":113519,"line_start":789,"line_end":789,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113791,"byte_end":113799,"line_start":802,"line_end":802,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114018,"byte_end":114026,"line_start":813,"line_end":813,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114321,"byte_end":114329,"line_start":826,"line_end":826,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114580,"byte_end":114588,"line_start":837,"line_end":837,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114833,"byte_end":114841,"line_start":848,"line_end":848,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115057,"byte_end":115065,"line_start":860,"line_end":860,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115279,"byte_end":115287,"line_start":871,"line_end":871,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115354,"byte_end":115362,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116707,"byte_end":116717,"line_start":924,"line_end":924,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117151,"byte_end":117161,"line_start":945,"line_end":945,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117471,"byte_end":117481,"line_start":960,"line_end":960,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117647,"byte_end":117657,"line_start":969,"line_end":969,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118272,"byte_end":118284,"line_start":991,"line_end":991,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118717,"byte_end":118729,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119038,"byte_end":119050,"line_start":1027,"line_end":1027,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119218,"byte_end":119230,"line_start":1036,"line_end":1036,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119903,"byte_end":119922,"line_start":1057,"line_end":1057,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120377,"byte_end":120396,"line_start":1081,"line_end":1081,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120597,"byte_end":120616,"line_start":1092,"line_end":1092,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120781,"byte_end":120800,"line_start":1100,"line_end":1100,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121405,"byte_end":121410,"line_start":1122,"line_end":1122,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121833,"byte_end":121838,"line_start":1145,"line_end":1145,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":122007,"byte_end":122012,"line_start":1155,"line_end":1155,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":122153,"byte_end":122158,"line_start":1163,"line_end":1163,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3847,"byte_end":3856,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":4054,"byte_end":4060,"line_start":131,"line_end":131,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":4453,"byte_end":4459,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3364,"byte_end":3367,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3377,"byte_end":3380,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":766}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/equivalent.rs","byte_start":9177,"byte_end":9178,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/mutable_keys.rs","byte_start":11006,"byte_end":11014,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":83979,"byte_end":83991,"line_start":13,"line_end":13,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":115},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":84291,"byte_end":84303,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87352,"byte_end":87365,"line_start":103,"line_end":103,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core/raw.rs","byte_start":87480,"byte_end":87493,"line_start":106,"line_end":106,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":63968,"byte_end":63980,"line_start":58,"line_end":58,"column_start":22,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":64666,"byte_end":64678,"line_start":81,"line_end":81,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":64997,"byte_end":65009,"line_start":94,"line_end":94,"column_start":24,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":0,"index":1212}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":65512,"byte_end":65524,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":76931,"byte_end":76936,"line_start":447,"line_end":447,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":79993,"byte_end":79998,"line_start":537,"line_end":537,"column_start":51,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":269},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":80402,"byte_end":80415,"line_start":549,"line_end":549,"column_start":12,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":81976,"byte_end":81989,"line_start":592,"line_end":592,"column_start":51,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":82468,"byte_end":82479,"line_start":611,"line_end":611,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map/core.rs","byte_start":83182,"byte_end":83193,"line_start":635,"line_end":635,"column_start":39,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":312},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15003,"byte_end":15011,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15409,"byte_end":15417,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":1212}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":15941,"byte_end":15949,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16411,"byte_end":16419,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":16845,"byte_end":16853,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":21039,"byte_end":21047,"line_start":302,"line_end":302,"column_start":15,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":33767,"byte_end":33775,"line_start":703,"line_end":703,"column_start":15,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36757,"byte_end":36761,"line_start":795,"line_end":795,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":36876,"byte_end":36880,"line_start":801,"line_end":801,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37038,"byte_end":37042,"line_start":807,"line_end":807,"column_start":34,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37193,"byte_end":37197,"line_start":814,"line_end":814,"column_start":22,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37349,"byte_end":37353,"line_start":822,"line_end":822,"column_start":39,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37846,"byte_end":37852,"line_start":839,"line_end":839,"column_start":29,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":37969,"byte_end":37975,"line_start":845,"line_end":845,"column_start":36,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38135,"byte_end":38141,"line_start":851,"line_end":851,"column_start":34,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38292,"byte_end":38298,"line_start":858,"line_end":858,"column_start":22,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38452,"byte_end":38458,"line_start":866,"line_end":866,"column_start":39,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":38976,"byte_end":38985,"line_start":883,"line_end":883,"column_start":29,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39106,"byte_end":39115,"line_start":889,"line_end":889,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39275,"byte_end":39284,"line_start":895,"line_end":895,"column_start":34,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39706,"byte_end":39710,"line_start":912,"line_end":912,"column_start":29,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39831,"byte_end":39835,"line_start":918,"line_end":918,"column_start":36,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":39990,"byte_end":39994,"line_start":924,"line_end":924,"column_start":34,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40145,"byte_end":40149,"line_start":931,"line_end":931,"column_start":22,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40313,"byte_end":40317,"line_start":939,"line_end":939,"column_start":51,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40828,"byte_end":40835,"line_start":956,"line_end":956,"column_start":29,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":40963,"byte_end":40970,"line_start":962,"line_end":962,"column_start":36,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41128,"byte_end":41135,"line_start":968,"line_end":968,"column_start":34,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":630},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41625,"byte_end":41633,"line_start":985,"line_end":985,"column_start":25,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41747,"byte_end":41755,"line_start":991,"line_end":991,"column_start":36,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":41911,"byte_end":41919,"line_start":997,"line_end":997,"column_start":34,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42040,"byte_end":42048,"line_start":1003,"line_end":1003,"column_start":51,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42608,"byte_end":42613,"line_start":1021,"line_end":1021,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":42731,"byte_end":42736,"line_start":1027,"line_end":1027,"column_start":36,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":43251,"byte_end":43259,"line_start":1047,"line_end":1047,"column_start":32,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7379}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":44043,"byte_end":44051,"line_start":1079,"line_end":1079,"column_start":40,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":45219,"byte_end":45227,"line_start":1124,"line_end":1124,"column_start":43,"column_end":51},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":46304,"byte_end":46312,"line_start":1166,"line_end":1166,"column_start":32,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":47406,"byte_end":47414,"line_start":1208,"line_end":1208,"column_start":35,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":47762,"byte_end":47770,"line_start":1219,"line_end":1219,"column_start":40,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":48354,"byte_end":48362,"line_start":1238,"line_end":1238,"column_start":34,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7388}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":49661,"byte_end":49669,"line_start":1271,"line_end":1271,"column_start":46,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7388}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50065,"byte_end":50073,"line_start":1285,"line_end":1285,"column_start":27,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50293,"byte_end":50301,"line_start":1295,"line_end":1295,"column_start":60,"column_end":68},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/map.rs","byte_start":50666,"byte_end":50674,"line_start":1312,"line_end":1312,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92653,"byte_end":92661,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":92923,"byte_end":92931,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":831},"to":{"krate":0,"index":1212}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93442,"byte_end":93450,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":93847,"byte_end":93855,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":94288,"byte_end":94296,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":97332,"byte_end":97340,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":108305,"byte_end":108313,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":110813,"byte_end":110821,"line_start":681,"line_end":681,"column_start":29,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":3285}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111503,"byte_end":111511,"line_start":704,"line_end":704,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111608,"byte_end":111616,"line_start":710,"line_end":710,"column_start":33,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111760,"byte_end":111768,"line_start":716,"line_end":716,"column_start":31,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":111871,"byte_end":111879,"line_start":722,"line_end":722,"column_start":36,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":953},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112410,"byte_end":112414,"line_start":740,"line_end":740,"column_start":26,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112523,"byte_end":112527,"line_start":746,"line_end":746,"column_start":33,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112679,"byte_end":112683,"line_start":752,"line_end":752,"column_start":31,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112773,"byte_end":112777,"line_start":758,"line_end":758,"column_start":19,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":112923,"byte_end":112927,"line_start":766,"line_end":766,"column_start":36,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":968},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113408,"byte_end":113413,"line_start":783,"line_end":783,"column_start":22,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113514,"byte_end":113519,"line_start":789,"line_end":789,"column_start":33,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":988},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":113791,"byte_end":113799,"line_start":802,"line_end":802,"column_start":29,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":7379}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114018,"byte_end":114026,"line_start":813,"line_end":813,"column_start":32,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":7375}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114321,"byte_end":114329,"line_start":826,"line_end":826,"column_start":26,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":7388}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114580,"byte_end":114588,"line_start":837,"line_end":837,"column_start":34,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":7388}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":114833,"byte_end":114841,"line_start":848,"line_end":848,"column_start":24,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115057,"byte_end":115065,"line_start":860,"line_end":860,"column_start":48,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115279,"byte_end":115287,"line_start":871,"line_end":871,"column_start":19,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":115354,"byte_end":115362,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":116707,"byte_end":116717,"line_start":924,"line_end":924,"column_start":29,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117151,"byte_end":117161,"line_start":945,"line_end":945,"column_start":36,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117471,"byte_end":117481,"line_start":960,"line_end":960,"column_start":22,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":117647,"byte_end":117657,"line_start":969,"line_end":969,"column_start":27,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1052},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118272,"byte_end":118284,"line_start":991,"line_end":991,"column_start":29,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":118717,"byte_end":118729,"line_start":1012,"line_end":1012,"column_start":36,"column_end":48},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119038,"byte_end":119050,"line_start":1027,"line_end":1027,"column_start":22,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119218,"byte_end":119230,"line_start":1036,"line_end":1036,"column_start":27,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1077},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":119903,"byte_end":119922,"line_start":1057,"line_end":1057,"column_start":34,"column_end":53},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120377,"byte_end":120396,"line_start":1081,"line_end":1081,"column_start":41,"column_end":60},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120597,"byte_end":120616,"line_start":1092,"line_end":1092,"column_start":27,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":120781,"byte_end":120800,"line_start":1100,"line_end":1100,"column_start":32,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1102},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121405,"byte_end":121410,"line_start":1122,"line_end":1122,"column_start":29,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1134},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":121833,"byte_end":121838,"line_start":1145,"line_end":1145,"column_start":36,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1134},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":122007,"byte_end":122012,"line_start":1155,"line_end":1155,"column_start":22,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1134},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/set.rs","byte_start":122153,"byte_end":122158,"line_start":1163,"line_end":1163,"column_start":27,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1134},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":3847,"byte_end":3856,"line_start":117,"line_end":117,"column_start":6,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":4054,"byte_end":4060,"line_start":131,"line_end":131,"column_start":22,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1303},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.7.0/src/lib.rs","byte_start":4453,"byte_end":4459,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}}]}