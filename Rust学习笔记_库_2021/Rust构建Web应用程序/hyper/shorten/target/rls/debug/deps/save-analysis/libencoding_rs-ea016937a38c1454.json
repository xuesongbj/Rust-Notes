{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28","program":"/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","encoding_rs","--edition=2018","/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ea016937a38c1454","-C","extra-filename=-ea016937a38c1454","--out-dir","/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","-L","dependency=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps","--extern","cfg_if=/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libcfg_if-2e17af57814e124a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/zhangshaozhi/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/zhangshaozhi/Desktop/Rust-Notes/Rust学习笔记_库_2021/Rust构建Web应用程序/hyper/shorten/target/rls/debug/deps/libencoding_rs-ea016937a38c1454.rmeta"},"prelude":{"crate_id":{"name":"encoding_rs","disambiguator":[9614730197899609325,0]},"crate_root":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src","external_crates":[{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11210054105357105415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10211807999108752415,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4904877167227750013,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5106757451248417800,0]}},{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","num":5,"id":{"name":"cfg_if","disambiguator":[6307414420431848641,0]}}],"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":414,"byte_end":244774,"line_start":10,"line_end":6050,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":414,"byte_end":244774,"line_start":10,"line_end":6050,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":23},{"krate":0,"index":46},{"krate":0,"index":86},{"krate":0,"index":115},{"krate":0,"index":167},{"krate":0,"index":206},{"krate":0,"index":218},{"krate":0,"index":245},{"krate":0,"index":278},{"krate":0,"index":293},{"krate":0,"index":339},{"krate":0,"index":358},{"krate":0,"index":380},{"krate":0,"index":563},{"krate":0,"index":938},{"krate":0,"index":1062},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1453},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1537},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1340}],"decl_id":null,"docs":" encoding_rs is a Gecko-oriented Free Software / Open Source implementation\n of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.\n Gecko-oriented means that converting to and from UTF-16 is supported in\n addition to converting to and from UTF-8, that the performance and\n streamability goals are browser-oriented, and that FFI-friendliness is a\n goal.","sig":null,"attributes":[{"value":"/ encoding_rs is a Gecko-oriented Free Software / Open Source implementation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":517,"byte_end":595,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":596,"byte_end":670,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ Gecko-oriented means that converting to and from UTF-16 is supported in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":671,"byte_end":746,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ addition to converting to and from UTF-8, that the performance and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":747,"byte_end":817,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ streamability goals are browser-oriented, and that FFI-friendliness is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":818,"byte_end":894,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ goal.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":895,"byte_end":904,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":905,"byte_end":908,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Additionally, the `mem` module provides functions that are useful for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":909,"byte_end":982,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ applications that need to be able to deal with legacy in-memory","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":983,"byte_end":1050,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ representations of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1051,"byte_end":1082,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1083,"byte_end":1086,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For expectation setting, please be sure to read the sections","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1087,"byte_end":1151,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_UTF-16LE, UTF-16BE and Unicode Encoding Schemes_](#utf-16le-utf-16be-and-unicode-encoding-schemes),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1152,"byte_end":1257,"line_start":27,"line_end":27,"column_start":1,"column_end":106}},{"value":"/ [_ISO-8859-1_](#iso-8859-1) and [_Web / Browser Focus_](#web--browser-focus) below.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1258,"byte_end":1345,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1346,"byte_end":1349,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ There is a [long-form write-up](https://hsivonen.fi/encoding_rs/) about the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1350,"byte_end":1429,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ design and internals of the crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1430,"byte_end":1468,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Availability","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1473,"byte_end":1491,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1492,"byte_end":1495,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The code is available under the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1496,"byte_end":1531,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ [Apache license, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1532,"byte_end":1610,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ or the [MIT license](https://opensource.org/licenses/MIT), at your option.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1611,"byte_end":1689,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ See the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1690,"byte_end":1701,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ [`COPYRIGHT`](https://github.com/hsivonen/encoding_rs/blob/master/COPYRIGHT)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1702,"byte_end":1782,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ file for details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1783,"byte_end":1804,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ The [repository is on GitHub](https://github.com/hsivonen/encoding_rs). The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1805,"byte_end":1884,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ [crate is available on crates.io](https://crates.io/crates/encoding_rs).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1885,"byte_end":1961,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Integration with `std::io`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1966,"byte_end":1998,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":1999,"byte_end":2002,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This crate doesn't implement traits from `std::io`. However, for the case of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2003,"byte_end":2083,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ wrapping a `std::io::Read` in a decoder that implements `std::io::Read` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2084,"byte_end":2163,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ presents the data from the wrapped `std::io::Read` as UTF-8 is addressed by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2164,"byte_end":2243,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ the [`encoding_rs_io`](https://docs.rs/encoding_rs_io/) crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2244,"byte_end":2310,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2311,"byte_end":2314,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2315,"byte_end":2329,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2330,"byte_end":2333,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Example programs:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2334,"byte_end":2355,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2356,"byte_end":2359,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * [Rust](https://github.com/hsivonen/recode_rs)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2360,"byte_end":2411,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/ * [C](https://github.com/hsivonen/recode_c)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2412,"byte_end":2459,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ * [C++](https://github.com/hsivonen/recode_cpp)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2460,"byte_end":2511,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Decode using the non-streaming API:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2516,"byte_end":2555,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2556,"byte_end":2559,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2560,"byte_end":2567,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use encoding_rs::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2568,"byte_end":2591,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2592,"byte_end":2595,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let expectation = \"\\u{30CF}\\u{30ED}\\u{30FC}\\u{30FB}\\u{30EF}\\u{30FC}\\u{30EB}\\u{30C9}\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2596,"byte_end":2685,"line_start":64,"line_end":64,"column_start":1,"column_end":90}},{"value":"/ let bytes = b\"\\x83n\\x83\\x8D\\x81[\\x81E\\x83\\x8F\\x81[\\x83\\x8B\\x83h\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2686,"byte_end":2755,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2756,"byte_end":2759,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let (cow, encoding_used, had_errors) = SHIFT_JIS.decode(bytes);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2760,"byte_end":2827,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(&cow[..], expectation);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2828,"byte_end":2866,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(encoding_used, SHIFT_JIS);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2867,"byte_end":2908,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/ assert!(!had_errors);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2909,"byte_end":2934,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2935,"byte_end":2942,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2943,"byte_end":2946,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Decode using the streaming API with minimal `unsafe`:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":2947,"byte_end":3004,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3005,"byte_end":3008,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3009,"byte_end":3016,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use encoding_rs::*;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3017,"byte_end":3040,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3041,"byte_end":3044,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let expectation = \"\\u{30CF}\\u{30ED}\\u{30FC}\\u{30FB}\\u{30EF}\\u{30FC}\\u{30EB}\\u{30C9}\";","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3045,"byte_end":3134,"line_start":78,"line_end":78,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3135,"byte_end":3138,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // Use an array of byte slices to demonstrate content arriving piece by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3139,"byte_end":3214,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/ // piece from the network.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3215,"byte_end":3245,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ let bytes: [&'static [u8]; 4] = [b\"\\x83\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3246,"byte_end":3291,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/                                  b\"n\\x83\\x8D\\x81\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3292,"byte_end":3346,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/                                  b\"[\\x81E\\x83\\x8F\\x81[\\x83\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3347,"byte_end":3411,"line_start":84,"line_end":84,"column_start":1,"column_end":65}},{"value":"/                                  b\"\\x8B\\x83h\"];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3412,"byte_end":3463,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3464,"byte_end":3467,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Very short output buffer to demonstrate the output buffer getting full.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3468,"byte_end":3546,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ // Normally, you'd use something like `[0u8; 2048]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3547,"byte_end":3603,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/ let mut buffer_bytes = [0u8; 8];","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3604,"byte_end":3640,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/ let mut buffer: &mut str = std::str::from_utf8_mut(&mut buffer_bytes[..]).unwrap();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3641,"byte_end":3728,"line_start":90,"line_end":90,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3729,"byte_end":3732,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // How many bytes in the buffer currently hold significant data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3733,"byte_end":3801,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/ let mut bytes_in_buffer = 0usize;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3802,"byte_end":3839,"line_start":93,"line_end":93,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3840,"byte_end":3843,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // Collect the output to a string for demonstration purposes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3844,"byte_end":3909,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/ let mut output = String::new();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3910,"byte_end":3945,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3946,"byte_end":3949,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // The `Decoder`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3950,"byte_end":3970,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/ let mut decoder = SHIFT_JIS.new_decoder();","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":3971,"byte_end":4017,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4018,"byte_end":4021,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Track whether we see errors.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4022,"byte_end":4057,"line_start":101,"line_end":101,"column_start":1,"column_end":36}},{"value":"/ let mut total_had_errors = false;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4058,"byte_end":4095,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4096,"byte_end":4099,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // Decode using a fixed-size intermediate buffer (for demonstrating the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4100,"byte_end":4175,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ // use of a fixed-size buffer; normally when the output of an incremental","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4176,"byte_end":4253,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ // decode goes to a `String` one would use `Decoder.decode_to_string()` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4254,"byte_end":4332,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ // avoid the intermediate buffer).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4333,"byte_end":4371,"line_start":107,"line_end":107,"column_start":1,"column_end":39}},{"value":"/ for input in &bytes[..] {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4372,"byte_end":4401,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/     // The number of bytes already read from current `input` in total.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4402,"byte_end":4476,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"/     let mut total_read_from_current_input = 0usize;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4477,"byte_end":4532,"line_start":110,"line_end":110,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4533,"byte_end":4536,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4537,"byte_end":4551,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/         let (result, read, written, had_errors) =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4552,"byte_end":4605,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/             decoder.decode_to_str(&input[total_read_from_current_input..],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4606,"byte_end":4684,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/                                   &mut buffer[bytes_in_buffer..],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4685,"byte_end":4754,"line_start":115,"line_end":115,"column_start":1,"column_end":70}},{"value":"/                                   false);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4755,"byte_end":4800,"line_start":116,"line_end":116,"column_start":1,"column_end":46}},{"value":"/         total_read_from_current_input += read;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4801,"byte_end":4851,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/         bytes_in_buffer += written;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4852,"byte_end":4891,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/         total_had_errors |= had_errors;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4892,"byte_end":4935,"line_start":119,"line_end":119,"column_start":1,"column_end":44}},{"value":"/         match result {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4936,"byte_end":4962,"line_start":120,"line_end":120,"column_start":1,"column_end":27}},{"value":"/             CoderResult::InputEmpty => {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":4963,"byte_end":5007,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/                 // We have consumed the current input buffer. Break out of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5008,"byte_end":5086,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/                 // the inner loop to get the next input buffer from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5087,"byte_end":5162,"line_start":123,"line_end":123,"column_start":1,"column_end":76}},{"value":"/                 // outer loop.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5163,"byte_end":5197,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/                 break;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5198,"byte_end":5224,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/             },","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5225,"byte_end":5243,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/             CoderResult::OutputFull => {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5244,"byte_end":5288,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/                 // Write the current buffer out and consider the buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5289,"byte_end":5364,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/                 // empty.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5365,"byte_end":5394,"line_start":129,"line_end":129,"column_start":1,"column_end":30}},{"value":"/                 output.push_str(&buffer[..bytes_in_buffer]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5395,"byte_end":5459,"line_start":130,"line_end":130,"column_start":1,"column_end":65}},{"value":"/                 bytes_in_buffer = 0usize;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5460,"byte_end":5505,"line_start":131,"line_end":131,"column_start":1,"column_end":46}},{"value":"/                 continue;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5506,"byte_end":5535,"line_start":132,"line_end":132,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5536,"byte_end":5553,"line_start":133,"line_end":133,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5554,"byte_end":5567,"line_start":134,"line_end":134,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5568,"byte_end":5577,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5578,"byte_end":5583,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5584,"byte_end":5587,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Process EOF","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5588,"byte_end":5606,"line_start":138,"line_end":138,"column_start":1,"column_end":19}},{"value":"/ loop {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5607,"byte_end":5617,"line_start":139,"line_end":139,"column_start":1,"column_end":11}},{"value":"/     let (result, _, written, had_errors) =","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5618,"byte_end":5664,"line_start":140,"line_end":140,"column_start":1,"column_end":47}},{"value":"/         decoder.decode_to_str(b\"\",","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5665,"byte_end":5703,"line_start":141,"line_end":141,"column_start":1,"column_end":39}},{"value":"/                               &mut buffer[bytes_in_buffer..],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5704,"byte_end":5769,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/                               true);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5770,"byte_end":5810,"line_start":143,"line_end":143,"column_start":1,"column_end":41}},{"value":"/     bytes_in_buffer += written;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5811,"byte_end":5846,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/     total_had_errors |= had_errors;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5847,"byte_end":5886,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/     // Write the current buffer out and consider the buffer empty.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5887,"byte_end":5957,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/     // Need to do this here for both `match` arms, because we exit the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":5958,"byte_end":6032,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/     // loop on `CoderResult::InputEmpty`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6033,"byte_end":6078,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/     output.push_str(&buffer[..bytes_in_buffer]);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6079,"byte_end":6131,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/     bytes_in_buffer = 0usize;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6132,"byte_end":6165,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/     match result {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6166,"byte_end":6188,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/         CoderResult::InputEmpty => {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6189,"byte_end":6229,"line_start":152,"line_end":152,"column_start":1,"column_end":41}},{"value":"/             // Done!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6230,"byte_end":6254,"line_start":153,"line_end":153,"column_start":1,"column_end":25}},{"value":"/             break;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6255,"byte_end":6277,"line_start":154,"line_end":154,"column_start":1,"column_end":23}},{"value":"/         },","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6278,"byte_end":6292,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/         CoderResult::OutputFull => {","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6293,"byte_end":6333,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/             continue;","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6334,"byte_end":6359,"line_start":157,"line_end":157,"column_start":1,"column_end":26}},{"value":"/         }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6360,"byte_end":6373,"line_start":158,"line_end":158,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6374,"byte_end":6383,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6384,"byte_end":6389,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6390,"byte_end":6393,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&output[..], expectation);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6394,"byte_end":6435,"line_start":162,"line_end":162,"column_start":1,"column_end":42}},{"value":"/ assert!(!total_had_errors);","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6436,"byte_end":6467,"line_start":163,"line_end":163,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6468,"byte_end":6475,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6476,"byte_end":6479,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## UTF-16LE, UTF-16BE and Unicode Encoding Schemes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6480,"byte_end":6534,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6535,"byte_end":6538,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ The Encoding Standard doesn't specify encoders for UTF-16LE and UTF-16BE,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6539,"byte_end":6616,"line_start":168,"line_end":168,"column_start":1,"column_end":78}},{"value":"/ __so this crate does not provide encoders for those encodings__!","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6617,"byte_end":6685,"line_start":169,"line_end":169,"column_start":1,"column_end":69}},{"value":"/ Along with the replacement encoding, their _output encoding_ is UTF-8,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6686,"byte_end":6760,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ so you get an UTF-8 encoder if you request an encoder for them.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6761,"byte_end":6828,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6829,"byte_end":6832,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Additionally, the Encoding Standard factors BOM handling into wrapper","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6833,"byte_end":6906,"line_start":173,"line_end":173,"column_start":1,"column_end":74}},{"value":"/ algorithms so that BOM handling isn't part of the definition of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6907,"byte_end":6978,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"/ encodings themselves. The Unicode _encoding schemes_ in the Unicode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":6979,"byte_end":7050,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/ Standard define BOM handling or lack thereof as part of the encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7051,"byte_end":7123,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ scheme.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7124,"byte_end":7135,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7136,"byte_end":7139,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ When used with the `_without_bom_handling` entry points, the UTF-16LE","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7140,"byte_end":7213,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ and UTF-16BE _encodings_ match the same-named _encoding schemes_ from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7214,"byte_end":7287,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ the Unicode Standard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7288,"byte_end":7313,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7314,"byte_end":7317,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ When used with the `_with_bom_removal` entry points, the UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7318,"byte_end":7384,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ _encoding_ matches the UTF-8 _encoding scheme_ from the Unicode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7385,"byte_end":7452,"line_start":184,"line_end":184,"column_start":1,"column_end":68}},{"value":"/ Standard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7453,"byte_end":7466,"line_start":185,"line_end":185,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7467,"byte_end":7470,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ This crate does not provide a mode that matches the UTF-16 _encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7471,"byte_end":7543,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ scheme_ from the Unicode Stardard. The UTF-16BE encoding used with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7544,"byte_end":7614,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/ the entry points without `_bom_` qualifiers is the closest match,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7615,"byte_end":7684,"line_start":189,"line_end":189,"column_start":1,"column_end":70}},{"value":"/ but in that case, the UTF-8 BOM triggers UTF-8 decoding, which is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7685,"byte_end":7754,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/ not part of the behavior of the UTF-16 _encoding scheme_ per the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7755,"byte_end":7823,"line_start":191,"line_end":191,"column_start":1,"column_end":69}},{"value":"/ Unicode Standard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7824,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7846,"byte_end":7849,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The UTF-32 family of Unicode encoding schemes is not supported","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7850,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":67}},{"value":"/ by this crate. The Encoding Standard doesn't define any UTF-32","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7917,"byte_end":7983,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/ family encodings, since they aren't necessary for consuming Web","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":7984,"byte_end":8051,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ content.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8052,"byte_end":8064,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8065,"byte_end":8068,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## ISO-8859-1","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8069,"byte_end":8086,"line_start":199,"line_end":199,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8087,"byte_end":8090,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ISO-8859-1 does not exist as a distinct encoding from windows-1252 in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8091,"byte_end":8164,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/ the Encoding Standard. Therefore, an encoding that maps the unsigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8165,"byte_end":8237,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ byte value to the same Unicode scalar value is not available via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8238,"byte_end":8306,"line_start":203,"line_end":203,"column_start":1,"column_end":69}},{"value":"/ `Encoding` in this crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8307,"byte_end":8336,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8337,"byte_end":8340,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ However, the functions whose name starts with `convert` and contains","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8341,"byte_end":8413,"line_start":206,"line_end":206,"column_start":1,"column_end":73}},{"value":"/ `latin1` in the `mem` module support such conversions, which are known as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8414,"byte_end":8491,"line_start":207,"line_end":207,"column_start":1,"column_end":78}},{"value":"/ [_isomorphic decode_](https://infra.spec.whatwg.org/#isomorphic-decode)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8492,"byte_end":8567,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ and [_isomorphic encode_](https://infra.spec.whatwg.org/#isomorphic-encode)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8568,"byte_end":8647,"line_start":209,"line_end":209,"column_start":1,"column_end":80}},{"value":"/ in the [Infra Standard](https://infra.spec.whatwg.org/).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8648,"byte_end":8708,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8709,"byte_end":8712,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ## Web / Browser Focus","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8713,"byte_end":8739,"line_start":212,"line_end":212,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8740,"byte_end":8743,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Both in terms of scope and performance, the focus is on the Web. For scope,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8744,"byte_end":8823,"line_start":214,"line_end":214,"column_start":1,"column_end":80}},{"value":"/ this means that encoding_rs implements the Encoding Standard fully and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8824,"byte_end":8898,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ doesn't implement encodings that are not specified in the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8899,"byte_end":8969,"line_start":216,"line_end":216,"column_start":1,"column_end":71}},{"value":"/ Standard. For performance, this means that decoding performance is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":8970,"byte_end":9040,"line_start":217,"line_end":217,"column_start":1,"column_end":71}},{"value":"/ important as well as performance for encoding into UTF-8 or encoding the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9041,"byte_end":9117,"line_start":218,"line_end":218,"column_start":1,"column_end":77}},{"value":"/ Basic Latin range (ASCII) into legacy encodings. Non-Basic Latin needs to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9118,"byte_end":9195,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ be encoded into legacy encodings in only two places in the Web platform: in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9196,"byte_end":9275,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ the query part of URLs, in which case it's a matter of relatively rare","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9276,"byte_end":9350,"line_start":221,"line_end":221,"column_start":1,"column_end":75}},{"value":"/ error handling, and in form submission, in which case the user action and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9351,"byte_end":9428,"line_start":222,"line_end":222,"column_start":1,"column_end":78}},{"value":"/ networking tend to hide the performance of the encoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9429,"byte_end":9488,"line_start":223,"line_end":223,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9489,"byte_end":9492,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Deemphasizing performance of encoding non-Basic Latin text into legacy","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9493,"byte_end":9567,"line_start":225,"line_end":225,"column_start":1,"column_end":75}},{"value":"/ encodings enables smaller code size thanks to the encoder side using the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9568,"byte_end":9644,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ decode-optimized data tables without having encode-optimized data tables at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9645,"byte_end":9724,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ all. Even in decoders, smaller lookup table size is preferred over avoiding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9725,"byte_end":9804,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/ multiplication operations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9805,"byte_end":9835,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9836,"byte_end":9839,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Additionally, performance is a non-goal for the ASCII-incompatible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9840,"byte_end":9910,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/ ISO-2022-JP encoding, which are rarely used on the Web. Instead of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9911,"byte_end":9981,"line_start":232,"line_end":232,"column_start":1,"column_end":71}},{"value":"/ performance, the decoder for ISO-2022-JP optimizes for ease/clarity","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":9982,"byte_end":10053,"line_start":233,"line_end":233,"column_start":1,"column_end":72}},{"value":"/ of implementation.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10054,"byte_end":10076,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10077,"byte_end":10080,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Despite the browser focus, the hope is that non-browser applications","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10081,"byte_end":10153,"line_start":236,"line_end":236,"column_start":1,"column_end":73}},{"value":"/ that wish to consume Web content or submit Web forms in a Web-compatible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10154,"byte_end":10230,"line_start":237,"line_end":237,"column_start":1,"column_end":77}},{"value":"/ way will find encoding_rs useful. While encoding_rs does not try to match","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10231,"byte_end":10308,"line_start":238,"line_end":238,"column_start":1,"column_end":78}},{"value":"/ Windows behavior, many of the encodings are close enough to legacy","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10309,"byte_end":10379,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ encodings implemented by Windows that applications that need to consume","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10380,"byte_end":10455,"line_start":240,"line_end":240,"column_start":1,"column_end":76}},{"value":"/ data in legacy Windows encodins may find encoding_rs useful. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10456,"byte_end":10524,"line_start":241,"line_end":241,"column_start":1,"column_end":69}},{"value":"/ [codepage](https://crates.io/crates/codepage) crate maps from Windows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10525,"byte_end":10598,"line_start":242,"line_end":242,"column_start":1,"column_end":74}},{"value":"/ code page identifiers onto encoding_rs `Encoding`s and vice versa.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10599,"byte_end":10669,"line_start":243,"line_end":243,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10670,"byte_end":10673,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ For decoding email, UTF-7 support is needed (unfortunately) in additition","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10674,"byte_end":10751,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ to the encodings defined in the Encoding Standard. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10752,"byte_end":10810,"line_start":246,"line_end":246,"column_start":1,"column_end":59}},{"value":"/ [charset](https://crates.io/crates/charset) wraps encoding_rs and adds","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10811,"byte_end":10885,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ UTF-7 decoding for email purposes.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10886,"byte_end":10924,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10925,"byte_end":10928,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ For single-byte DOS encodings beyond the ones supported by the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":10929,"byte_end":11004,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/ Standard, there is the [`oem_cp`](https://crates.io/crates/oem_cp) crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11005,"byte_end":11082,"line_start":251,"line_end":251,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11083,"byte_end":11086,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ # Preparing Text for the Encoders","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11087,"byte_end":11124,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Normalizing text into Unicode Normalization Form C prior to encoding text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11129,"byte_end":11206,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ into a legacy encoding minimizes unmappable characters. Text can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11207,"byte_end":11278,"line_start":256,"line_end":256,"column_start":1,"column_end":72}},{"value":"/ normalized to Unicode Normalization Form C using the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11279,"byte_end":11335,"line_start":257,"line_end":257,"column_start":1,"column_end":57}},{"value":"/ [`unic-normal`](https://crates.io/crates/unic-normal) crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11336,"byte_end":11400,"line_start":258,"line_end":258,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11401,"byte_end":11404,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ The exception is windows-1258, which after normalizing to Unicode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11405,"byte_end":11474,"line_start":260,"line_end":260,"column_start":1,"column_end":70}},{"value":"/ Normalization Form C requires tone marks to be decomposed in order to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11475,"byte_end":11548,"line_start":261,"line_end":261,"column_start":1,"column_end":74}},{"value":"/ minimize unmappable characters. Vietnamese tone marks can be decomposed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11549,"byte_end":11624,"line_start":262,"line_end":262,"column_start":1,"column_end":76}},{"value":"/ using the [`detone`](https://crates.io/crates/detone) crate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11625,"byte_end":11689,"line_start":263,"line_end":263,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11690,"byte_end":11693,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ # Streaming & Non-Streaming; Rust & C/C++","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11694,"byte_end":11739,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11740,"byte_end":11743,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The API in Rust has two modes of operation: streaming and non-streaming.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11744,"byte_end":11820,"line_start":267,"line_end":267,"column_start":1,"column_end":77}},{"value":"/ The streaming API is the foundation of the implementation and should be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11821,"byte_end":11896,"line_start":268,"line_end":268,"column_start":1,"column_end":76}},{"value":"/ used when processing data that arrives piecemeal from an i/o stream. The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11897,"byte_end":11973,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/ streaming API has an FFI wrapper (as a [separate crate][1]) that exposes it","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":11974,"byte_end":12053,"line_start":270,"line_end":270,"column_start":1,"column_end":80}},{"value":"/ to C callers. The non-streaming part of the API is for Rust callers only and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12054,"byte_end":12134,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/ is smart about borrowing instead of copying when possible. When","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12135,"byte_end":12202,"line_start":272,"line_end":272,"column_start":1,"column_end":68}},{"value":"/ streamability is not needed, the non-streaming API should be preferrer in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12203,"byte_end":12280,"line_start":273,"line_end":273,"column_start":1,"column_end":78}},{"value":"/ order to avoid copying data when a borrow suffices.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12281,"byte_end":12336,"line_start":274,"line_end":274,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12337,"byte_end":12340,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ There is no analogous C API exposed via FFI, mainly because C doesn't have","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12341,"byte_end":12419,"line_start":276,"line_end":276,"column_start":1,"column_end":79}},{"value":"/ standard types for growable byte buffers and Unicode strings that know","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12420,"byte_end":12494,"line_start":277,"line_end":277,"column_start":1,"column_end":75}},{"value":"/ their length.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12495,"byte_end":12512,"line_start":278,"line_end":278,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12513,"byte_end":12516,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ The C API (header file generated at `target/include/encoding_rs.h` when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12517,"byte_end":12592,"line_start":280,"line_end":280,"column_start":1,"column_end":76}},{"value":"/ building encoding_rs) can, in turn, be wrapped for use from C++. Such a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12593,"byte_end":12668,"line_start":281,"line_end":281,"column_start":1,"column_end":76}},{"value":"/ C++ wrapper can re-create the non-streaming API in C++ for C++ callers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12669,"byte_end":12744,"line_start":282,"line_end":282,"column_start":1,"column_end":76}},{"value":"/ The C binding comes with a [C++14 wrapper][2] that uses standard library +","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12745,"byte_end":12823,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/ [GSL][3] types and that recreates the non-streaming API in C++ on top of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12824,"byte_end":12900,"line_start":284,"line_end":284,"column_start":1,"column_end":77}},{"value":"/ the streaming API. A C++ wrapper with XPCOM/MFBT types is being developed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12901,"byte_end":12978,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/ as part of Mozilla [bug 1261841][4].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":12979,"byte_end":13019,"line_start":286,"line_end":286,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13020,"byte_end":13023,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ The `Encoding` type is common to both the streaming and non-streaming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13024,"byte_end":13097,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ modes. In the streaming mode, decoding operations are performed with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13098,"byte_end":13172,"line_start":289,"line_end":289,"column_start":1,"column_end":75}},{"value":"/ `Decoder` and encoding operations with an `Encoder` object obtained via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13173,"byte_end":13248,"line_start":290,"line_end":290,"column_start":1,"column_end":76}},{"value":"/ `Encoding`. In the non-streaming mode, decoding and encoding operations are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13249,"byte_end":13328,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/ performed using methods on `Encoding` objects themselves, so the `Decoder`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13329,"byte_end":13407,"line_start":292,"line_end":292,"column_start":1,"column_end":79}},{"value":"/ and `Encoder` objects are not used at all.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13408,"byte_end":13454,"line_start":293,"line_end":293,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13455,"byte_end":13458,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/hsivonen/encoding_c","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13459,"byte_end":13506,"line_start":295,"line_end":295,"column_start":1,"column_end":48}},{"value":"/ [2]: https://github.com/hsivonen/encoding_c/blob/master/include/encoding_rs_cpp.h","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13507,"byte_end":13592,"line_start":296,"line_end":296,"column_start":1,"column_end":86}},{"value":"/ [3]: https://github.com/Microsoft/GSL/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13593,"byte_end":13635,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ [4]: https://bugzilla.mozilla.org/show_bug.cgi?id=encoding_rs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13636,"byte_end":13701,"line_start":298,"line_end":298,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13702,"byte_end":13705,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ # Memory management","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13706,"byte_end":13729,"line_start":300,"line_end":300,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13730,"byte_end":13733,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ The non-streaming mode never performs heap allocations (even the methods","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13734,"byte_end":13810,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ that write into a `Vec<u8>` or a `String` by taking them as arguments do","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13811,"byte_end":13887,"line_start":303,"line_end":303,"column_start":1,"column_end":77}},{"value":"/ not reallocate the backing buffer of the `Vec<u8>` or the `String`). That","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13888,"byte_end":13965,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ is, the non-streaming mode uses caller-allocated buffers exclusively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":13966,"byte_end":14039,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14040,"byte_end":14043,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The methods of the streaming mode that return a `Vec<u8>` or a `String`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14044,"byte_end":14119,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ perform heap allocations but only to allocate the backing buffer of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14120,"byte_end":14195,"line_start":308,"line_end":308,"column_start":1,"column_end":76}},{"value":"/ `Vec<u8>` or the `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14196,"byte_end":14226,"line_start":309,"line_end":309,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14227,"byte_end":14230,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ `Encoding` is always statically allocated. `Decoder` and `Encoder` need no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14231,"byte_end":14309,"line_start":311,"line_end":311,"column_start":1,"column_end":79}},{"value":"/ `Drop` cleanup.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14310,"byte_end":14329,"line_start":312,"line_end":312,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14330,"byte_end":14333,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ # Buffer reading and writing behavior","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14334,"byte_end":14375,"line_start":314,"line_end":314,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14376,"byte_end":14379,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Based on experience gained with the `java.nio.charset` encoding converter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14380,"byte_end":14457,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/ API and with the Gecko uconv encoding converter API, the buffer reading","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14458,"byte_end":14533,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/ and writing behaviors of encoding_rs are asymmetric: input buffers are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14534,"byte_end":14608,"line_start":318,"line_end":318,"column_start":1,"column_end":75}},{"value":"/ fully drained but output buffers are not always fully filled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14609,"byte_end":14674,"line_start":319,"line_end":319,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14675,"byte_end":14678,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ When reading from an input buffer, encoding_rs always consumes all input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14679,"byte_end":14755,"line_start":321,"line_end":321,"column_start":1,"column_end":77}},{"value":"/ up to the next error or to the end of the buffer. In particular, when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14756,"byte_end":14829,"line_start":322,"line_end":322,"column_start":1,"column_end":74}},{"value":"/ decoding, even if the input buffer ends in the middle of a byte sequence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14830,"byte_end":14906,"line_start":323,"line_end":323,"column_start":1,"column_end":77}},{"value":"/ for a character, the decoder consumes all input. This has the benefit that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14907,"byte_end":14985,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ the caller of the API can always fill the next buffer from the start from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":14986,"byte_end":15063,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ whatever source the bytes come from and never has to first copy the last","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15064,"byte_end":15140,"line_start":326,"line_end":326,"column_start":1,"column_end":77}},{"value":"/ bytes of the previous buffer to the start of the next buffer. However, when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15141,"byte_end":15220,"line_start":327,"line_end":327,"column_start":1,"column_end":80}},{"value":"/ encoding, the UTF-8 input buffers have to end at a character boundary, which","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15221,"byte_end":15301,"line_start":328,"line_end":328,"column_start":1,"column_end":81}},{"value":"/ is a requirement for the Rust `str` type anyway, and UTF-16 input buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15302,"byte_end":15378,"line_start":329,"line_end":329,"column_start":1,"column_end":77}},{"value":"/ boundaries falling in the middle of a surrogate pair result in both","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15379,"byte_end":15450,"line_start":330,"line_end":330,"column_start":1,"column_end":72}},{"value":"/ suggorates being treated individually as unpaired surrogates.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15451,"byte_end":15516,"line_start":331,"line_end":331,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15517,"byte_end":15520,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Additionally, decoders guarantee that they can be fed even one byte at a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15521,"byte_end":15597,"line_start":333,"line_end":333,"column_start":1,"column_end":77}},{"value":"/ time and encoders guarantee that they can be fed even one code point at a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15598,"byte_end":15675,"line_start":334,"line_end":334,"column_start":1,"column_end":78}},{"value":"/ time. This has the benefit of not placing restrictions on the size of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15676,"byte_end":15749,"line_start":335,"line_end":335,"column_start":1,"column_end":74}},{"value":"/ chunks the content arrives e.g. from network.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15750,"byte_end":15799,"line_start":336,"line_end":336,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15800,"byte_end":15803,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ When writing into an output buffer, encoding_rs makes sure that the code","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15804,"byte_end":15880,"line_start":338,"line_end":338,"column_start":1,"column_end":77}},{"value":"/ unit sequence for a character is never split across output buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15881,"byte_end":15950,"line_start":339,"line_end":339,"column_start":1,"column_end":70}},{"value":"/ boundaries. This may result in wasted space at the end of an output buffer,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":15951,"byte_end":16030,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/ but the advantages are that the output side of both decoders and encoders","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16031,"byte_end":16108,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ is greatly simplified compared to designs that attempt to fill output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16109,"byte_end":16182,"line_start":342,"line_end":342,"column_start":1,"column_end":74}},{"value":"/ buffers exactly even when that entails splitting a code unit sequence and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16183,"byte_end":16260,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ when encoding_rs methods return to the caller, the output produces thus","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16261,"byte_end":16336,"line_start":344,"line_end":344,"column_start":1,"column_end":76}},{"value":"/ far is always valid taken as whole. (In the case of encoding to ISO-2022-JP,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16337,"byte_end":16417,"line_start":345,"line_end":345,"column_start":1,"column_end":81}},{"value":"/ the output needs to be considered as a whole, because the latest output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16418,"byte_end":16493,"line_start":346,"line_end":346,"column_start":1,"column_end":76}},{"value":"/ buffer taken alone might not be valid taken alone if the transition away","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16494,"byte_end":16570,"line_start":347,"line_end":347,"column_start":1,"column_end":77}},{"value":"/ from the ASCII state occurred in an earlier output buffer. However, since","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16571,"byte_end":16648,"line_start":348,"line_end":348,"column_start":1,"column_end":78}},{"value":"/ the ISO-2022-JP decoder doesn't treat streams that don't end in the ASCII","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16649,"byte_end":16726,"line_start":349,"line_end":349,"column_start":1,"column_end":78}},{"value":"/ state as being in error despite the encoder generating a transition to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16727,"byte_end":16805,"line_start":350,"line_end":350,"column_start":1,"column_end":79}},{"value":"/ ASCII state at the end, the claim about the partial output taken as a whole","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16806,"byte_end":16885,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ being valid is true even for ISO-2022-JP.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16886,"byte_end":16932,"line_start":352,"line_end":352,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16933,"byte_end":16936,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ # Error Reporting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16937,"byte_end":16958,"line_start":354,"line_end":354,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16959,"byte_end":16962,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Based on experience gained with the `java.nio.charset` encoding converter","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":16963,"byte_end":17040,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ API and with the Gecko uconv encoding converter API, the error reporting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17041,"byte_end":17117,"line_start":357,"line_end":357,"column_start":1,"column_end":77}},{"value":"/ behaviors of encoding_rs are asymmetric: decoder errors include offsets","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17118,"byte_end":17193,"line_start":358,"line_end":358,"column_start":1,"column_end":76}},{"value":"/ that leave it up to the caller to extract the erroneous bytes from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17194,"byte_end":17268,"line_start":359,"line_end":359,"column_start":1,"column_end":75}},{"value":"/ input stream if the caller wishes to do so but encoder errors provide the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17269,"byte_end":17346,"line_start":360,"line_end":360,"column_start":1,"column_end":78}},{"value":"/ code point associated with the error without requiring the caller to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17347,"byte_end":17419,"line_start":361,"line_end":361,"column_start":1,"column_end":73}},{"value":"/ extract it from the input on its own.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17420,"byte_end":17461,"line_start":362,"line_end":362,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17462,"byte_end":17465,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ On the encoder side, an error is always triggered by the most recently","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17466,"byte_end":17540,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ pushed Unicode scalar, which makes it simple to pass the `char` to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17541,"byte_end":17615,"line_start":365,"line_end":365,"column_start":1,"column_end":75}},{"value":"/ caller. Also, it's very typical for the caller to wish to do something with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17616,"byte_end":17695,"line_start":366,"line_end":366,"column_start":1,"column_end":80}},{"value":"/ this data: generate a numeric escape for the character. Additionally, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17696,"byte_end":17773,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/ ISO-2022-JP encoder reports U+FFFD instead of the actual input character in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17774,"byte_end":17853,"line_start":368,"line_end":368,"column_start":1,"column_end":80}},{"value":"/ certain cases, so requiring the caller to extract the character from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17854,"byte_end":17930,"line_start":369,"line_end":369,"column_start":1,"column_end":77}},{"value":"/ input buffer would require the caller to handle ISO-2022-JP details.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":17931,"byte_end":18003,"line_start":370,"line_end":370,"column_start":1,"column_end":73}},{"value":"/ Furthermore, requiring the caller to extract the character from the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18004,"byte_end":18081,"line_start":371,"line_end":371,"column_start":1,"column_end":78}},{"value":"/ buffer would require the caller to implement UTF-8 or UTF-16 math, which is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18082,"byte_end":18161,"line_start":372,"line_end":372,"column_start":1,"column_end":80}},{"value":"/ the job of an encoding conversion library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18162,"byte_end":18208,"line_start":373,"line_end":373,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18209,"byte_end":18212,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ On the decoder side, errors are triggered in more complex ways. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18213,"byte_end":18284,"line_start":375,"line_end":375,"column_start":1,"column_end":72}},{"value":"/ example, when decoding the sequence ESC, '$', _buffer boundary_, 'A' as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18285,"byte_end":18360,"line_start":376,"line_end":376,"column_start":1,"column_end":76}},{"value":"/ ISO-2022-JP, the ESC byte is in error, but this is discovered only after","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18361,"byte_end":18437,"line_start":377,"line_end":377,"column_start":1,"column_end":77}},{"value":"/ the buffer boundary when processing 'A'. Thus, the bytes in error might not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18438,"byte_end":18517,"line_start":378,"line_end":378,"column_start":1,"column_end":80}},{"value":"/ be the ones most recently pushed to the decoder and the error might not even","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18518,"byte_end":18598,"line_start":379,"line_end":379,"column_start":1,"column_end":81}},{"value":"/ be in the current buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18599,"byte_end":18628,"line_start":380,"line_end":380,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18629,"byte_end":18632,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ Some encoding conversion APIs address the problem by not acknowledging","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18633,"byte_end":18707,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/ trailing bytes of an input buffer as consumed if it's still possible for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18708,"byte_end":18784,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ future bytes to cause the trailing bytes to be in error. This way, error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18785,"byte_end":18861,"line_start":384,"line_end":384,"column_start":1,"column_end":77}},{"value":"/ reporting can always refer to the most recently pushed buffer. This has the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18862,"byte_end":18941,"line_start":385,"line_end":385,"column_start":1,"column_end":80}},{"value":"/ problem that the caller of the API has to copy the unconsumed trailing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":18942,"byte_end":19016,"line_start":386,"line_end":386,"column_start":1,"column_end":75}},{"value":"/ bytes to the start of the next buffer before being able to fill the rest","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19017,"byte_end":19093,"line_start":387,"line_end":387,"column_start":1,"column_end":77}},{"value":"/ of the next buffer. This is annoying, error-prone and inefficient.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19094,"byte_end":19164,"line_start":388,"line_end":388,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19165,"byte_end":19168,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ A possible solution would be making the decoder remember recently consumed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19169,"byte_end":19247,"line_start":390,"line_end":390,"column_start":1,"column_end":79}},{"value":"/ bytes in order to be able to include a copy of the erroneous bytes when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19248,"byte_end":19323,"line_start":391,"line_end":391,"column_start":1,"column_end":76}},{"value":"/ reporting an error. This has two problem: First, callers a rarely","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19324,"byte_end":19393,"line_start":392,"line_end":392,"column_start":1,"column_end":70}},{"value":"/ interested in the erroneous bytes, so attempts to identify them are most","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19394,"byte_end":19470,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ often just overhead anyway. Second, the rare applications that are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19471,"byte_end":19541,"line_start":394,"line_end":394,"column_start":1,"column_end":71}},{"value":"/ interested typically care about the location of the error in the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19542,"byte_end":19616,"line_start":395,"line_end":395,"column_start":1,"column_end":75}},{"value":"/ stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19617,"byte_end":19628,"line_start":396,"line_end":396,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19629,"byte_end":19632,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ To keep the API convenient for common uses and the overhead low while making","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19633,"byte_end":19713,"line_start":398,"line_end":398,"column_start":1,"column_end":81}},{"value":"/ it possible to develop applications, such as HTML validators, that care","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19714,"byte_end":19789,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/ about which bytes were in error, encoding_rs reports the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19790,"byte_end":19864,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ erroneous sequence and the number of bytes consumed after the erroneous","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19865,"byte_end":19940,"line_start":401,"line_end":401,"column_start":1,"column_end":76}},{"value":"/ sequence. As long as the caller doesn't discard the 6 most recent bytes,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":19941,"byte_end":20017,"line_start":402,"line_end":402,"column_start":1,"column_end":77}},{"value":"/ this makes it possible for callers that care about the erroneous bytes to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20018,"byte_end":20095,"line_start":403,"line_end":403,"column_start":1,"column_end":78}},{"value":"/ locate them.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20096,"byte_end":20112,"line_start":404,"line_end":404,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20113,"byte_end":20116,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ # No Convenience API for Custom Replacements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20117,"byte_end":20165,"line_start":406,"line_end":406,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20166,"byte_end":20169,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ The Web Platform and, therefore, the Encoding Standard supports only one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20170,"byte_end":20246,"line_start":408,"line_end":408,"column_start":1,"column_end":77}},{"value":"/ error recovery mode for decoders and only one error recovery mode for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20247,"byte_end":20320,"line_start":409,"line_end":409,"column_start":1,"column_end":74}},{"value":"/ encoders. The supported error recovery mode for decoders is emitting the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20321,"byte_end":20397,"line_start":410,"line_end":410,"column_start":1,"column_end":77}},{"value":"/ REPLACEMENT CHARACTER on error. The supported error recovery mode for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20398,"byte_end":20471,"line_start":411,"line_end":411,"column_start":1,"column_end":74}},{"value":"/ encoders is emitting an HTML decimal numeric character reference for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20472,"byte_end":20544,"line_start":412,"line_end":412,"column_start":1,"column_end":73}},{"value":"/ unmappable characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20545,"byte_end":20571,"line_start":413,"line_end":413,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20572,"byte_end":20575,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ Since encoding_rs is Web-focused, these are the only error recovery modes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20576,"byte_end":20653,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ for which convenient support is provided. Moreover, on the decoder side,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20654,"byte_end":20730,"line_start":416,"line_end":416,"column_start":1,"column_end":77}},{"value":"/ there aren't really good alternatives for emitting the REPLACEMENT CHARACTER","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20731,"byte_end":20811,"line_start":417,"line_end":417,"column_start":1,"column_end":81}},{"value":"/ on error (other than treating errors as fatal). In particular, simply","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20812,"byte_end":20885,"line_start":418,"line_end":418,"column_start":1,"column_end":74}},{"value":"/ ignoring errors is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20886,"byte_end":20910,"line_start":419,"line_end":419,"column_start":1,"column_end":25}},{"value":"/ [security problem](http://www.unicode.org/reports/tr36/#Substituting_for_Ill_Formed_Subsequences),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":20911,"byte_end":21013,"line_start":420,"line_end":420,"column_start":1,"column_end":103}},{"value":"/ so it would be a bad idea for encoding_rs to provide a mode that encouraged","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21014,"byte_end":21093,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ callers to ignore errors.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21094,"byte_end":21123,"line_start":422,"line_end":422,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21124,"byte_end":21127,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ On the encoder side, there are plausible alternatives for HTML decimal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21128,"byte_end":21202,"line_start":424,"line_end":424,"column_start":1,"column_end":75}},{"value":"/ numeric character references. For example, when outputting CSS, CSS-style","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21203,"byte_end":21280,"line_start":425,"line_end":425,"column_start":1,"column_end":78}},{"value":"/ escapes would seem to make sense. However, instead of facilitating the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21281,"byte_end":21355,"line_start":426,"line_end":426,"column_start":1,"column_end":75}},{"value":"/ output of CSS, JS, etc. in non-UTF-8 encodings, encoding_rs takes the design","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21356,"byte_end":21436,"line_start":427,"line_end":427,"column_start":1,"column_end":81}},{"value":"/ position that you shouldn't generate output in encodings other than UTF-8,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21437,"byte_end":21515,"line_start":428,"line_end":428,"column_start":1,"column_end":79}},{"value":"/ except where backward compatibility with interacting with the legacy Web","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21516,"byte_end":21592,"line_start":429,"line_end":429,"column_start":1,"column_end":77}},{"value":"/ requires it. The legacy Web requires it only when parsing the query strings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21593,"byte_end":21672,"line_start":430,"line_end":430,"column_start":1,"column_end":80}},{"value":"/ of URLs and when submitting forms, and those two both use HTML decimal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21673,"byte_end":21747,"line_start":431,"line_end":431,"column_start":1,"column_end":75}},{"value":"/ numeric character references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21748,"byte_end":21781,"line_start":432,"line_end":432,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21782,"byte_end":21785,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ While encoding_rs doesn't make encoder replacements other than HTML decimal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21786,"byte_end":21865,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ numeric character references easy, it does make them _possible_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21866,"byte_end":21934,"line_start":435,"line_end":435,"column_start":1,"column_end":69}},{"value":"/ `encode_from_utf8()`, which emits HTML decimal numeric character references","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":21935,"byte_end":22014,"line_start":436,"line_end":436,"column_start":1,"column_end":80}},{"value":"/ for unmappable characters, is implemented on top of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22015,"byte_end":22070,"line_start":437,"line_end":437,"column_start":1,"column_end":56}},{"value":"/ `encode_from_utf8_without_replacement()`. Applications that really, really","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22071,"byte_end":22149,"line_start":438,"line_end":438,"column_start":1,"column_end":79}},{"value":"/ want other replacement schemes for unmappable characters can likewise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22150,"byte_end":22223,"line_start":439,"line_end":439,"column_start":1,"column_end":74}},{"value":"/ implement them on top of `encode_from_utf8_without_replacement()`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22224,"byte_end":22294,"line_start":440,"line_end":440,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22295,"byte_end":22298,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # No Extensibility by Design","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22299,"byte_end":22331,"line_start":442,"line_end":442,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22332,"byte_end":22335,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ The set of encodings supported by encoding_rs is not extensible by design.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22336,"byte_end":22414,"line_start":444,"line_end":444,"column_start":1,"column_end":79}},{"value":"/ That is, `Encoding`, `Decoder` and `Encoder` are intentionally `struct`s","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22415,"byte_end":22491,"line_start":445,"line_end":445,"column_start":1,"column_end":77}},{"value":"/ rather than `trait`s. encoding_rs takes the design position that all future","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22492,"byte_end":22571,"line_start":446,"line_end":446,"column_start":1,"column_end":80}},{"value":"/ text interchange should be done using UTF-8, which can represent all of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22572,"byte_end":22647,"line_start":447,"line_end":447,"column_start":1,"column_end":76}},{"value":"/ Unicode. (It is, in fact, the only encoding supported by the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22648,"byte_end":22721,"line_start":448,"line_end":448,"column_start":1,"column_end":74}},{"value":"/ Standard and encoding_rs that can represent all of Unicode and that has","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22722,"byte_end":22797,"line_start":449,"line_end":449,"column_start":1,"column_end":76}},{"value":"/ encoder support. UTF-16LE and UTF-16BE don't have encoder support, and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22798,"byte_end":22872,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/ gb18030 cannot encode U+E5E5.) The other encodings are supported merely for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22873,"byte_end":22952,"line_start":451,"line_end":451,"column_start":1,"column_end":80}},{"value":"/ legacy compatibility and not due to non-UTF-8 encodings having benefits","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":22953,"byte_end":23028,"line_start":452,"line_end":452,"column_start":1,"column_end":76}},{"value":"/ other than being able to consume legacy content.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23029,"byte_end":23081,"line_start":453,"line_end":453,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23082,"byte_end":23085,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ Considering that UTF-8 can represent all of Unicode and is already supported","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23086,"byte_end":23166,"line_start":455,"line_end":455,"column_start":1,"column_end":81}},{"value":"/ by all Web browsers, introducing a new encoding wouldn't add to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23167,"byte_end":23238,"line_start":456,"line_end":456,"column_start":1,"column_end":72}},{"value":"/ expressiveness but would add to compatibility problems. In that sense,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23239,"byte_end":23313,"line_start":457,"line_end":457,"column_start":1,"column_end":75}},{"value":"/ adding new encodings to the Web Platform doesn't make sense, and, in fact,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23314,"byte_end":23392,"line_start":458,"line_end":458,"column_start":1,"column_end":79}},{"value":"/ post-UTF-8 attempts at encodings, such as BOCU-1, have been rejected from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23393,"byte_end":23470,"line_start":459,"line_end":459,"column_start":1,"column_end":78}},{"value":"/ the Web Platform. On the other hand, the set of legacy encodings that must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23471,"byte_end":23549,"line_start":460,"line_end":460,"column_start":1,"column_end":79}},{"value":"/ be supported for a Web browser to be able to be successful is not going to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23550,"byte_end":23628,"line_start":461,"line_end":461,"column_start":1,"column_end":79}},{"value":"/ expand. Empirically, the set of encodings specified in the Encoding Standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23629,"byte_end":23709,"line_start":462,"line_end":462,"column_start":1,"column_end":81}},{"value":"/ is already sufficient and the set of legacy encodings won't grow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23710,"byte_end":23778,"line_start":463,"line_end":463,"column_start":1,"column_end":69}},{"value":"/ retroactively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23779,"byte_end":23797,"line_start":464,"line_end":464,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23798,"byte_end":23801,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ Since extensibility doesn't make sense considering the Web focus of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23802,"byte_end":23873,"line_start":466,"line_end":466,"column_start":1,"column_end":72}},{"value":"/ encoding_rs and adding encodings to Web clients would be actively harmful,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23874,"byte_end":23952,"line_start":467,"line_end":467,"column_start":1,"column_end":79}},{"value":"/ it makes sense to make the set of encodings that encoding_rs supports","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":23953,"byte_end":24026,"line_start":468,"line_end":468,"column_start":1,"column_end":74}},{"value":"/ non-extensible and to take the (admittedly small) benefits arising from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24027,"byte_end":24102,"line_start":469,"line_end":469,"column_start":1,"column_end":76}},{"value":"/ that, such as the size of `Decoder` and `Encoder` objects being known ahead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24103,"byte_end":24182,"line_start":470,"line_end":470,"column_start":1,"column_end":80}},{"value":"/  of time, which enables stack allocation thereof.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24183,"byte_end":24236,"line_start":471,"line_end":471,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24237,"byte_end":24240,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ This does have downsides for applications that might want to put encoding_rs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24241,"byte_end":24321,"line_start":473,"line_end":473,"column_start":1,"column_end":81}},{"value":"/ to non-Web uses if those non-Web uses involve legacy encodings that aren't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24322,"byte_end":24400,"line_start":474,"line_end":474,"column_start":1,"column_end":79}},{"value":"/ needed for Web uses. The needs of such applications should not complicate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24401,"byte_end":24478,"line_start":475,"line_end":475,"column_start":1,"column_end":78}},{"value":"/ encoding_rs itself, though. It is up to those applications to provide a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24479,"byte_end":24554,"line_start":476,"line_end":476,"column_start":1,"column_end":76}},{"value":"/ framework that delegates the operations with encodings that encoding_rs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24555,"byte_end":24630,"line_start":477,"line_end":477,"column_start":1,"column_end":76}},{"value":"/ supports to encoding_rs and operations with other encodings to something","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24631,"byte_end":24707,"line_start":478,"line_end":478,"column_start":1,"column_end":77}},{"value":"/ else (as opposed to encoding_rs itself providing an extensibility","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24708,"byte_end":24777,"line_start":479,"line_end":479,"column_start":1,"column_end":70}},{"value":"/ framework).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24778,"byte_end":24793,"line_start":480,"line_end":480,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24794,"byte_end":24797,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24798,"byte_end":24810,"line_start":482,"line_end":482,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24811,"byte_end":24814,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ Methods in encoding_rs can panic if the API is used against the requirements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24815,"byte_end":24895,"line_start":484,"line_end":484,"column_start":1,"column_end":81}},{"value":"/ stated in the documentation, if a state that's supposed to be impossible","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24896,"byte_end":24972,"line_start":485,"line_end":485,"column_start":1,"column_end":77}},{"value":"/ is reached due to an internal bug or on integer overflow. When used","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":24973,"byte_end":25044,"line_start":486,"line_end":486,"column_start":1,"column_end":72}},{"value":"/ according to documentation with buffer sizes that stay below integer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25045,"byte_end":25117,"line_start":487,"line_end":487,"column_start":1,"column_end":73}},{"value":"/ overflow, in the absence of internal bugs, encoding_rs does not panic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25118,"byte_end":25192,"line_start":488,"line_end":488,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25193,"byte_end":25196,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ Panics arising from API misuse aren't documented beyond this on individual","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25197,"byte_end":25275,"line_start":490,"line_end":490,"column_start":1,"column_end":79}},{"value":"/ methods.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25276,"byte_end":25288,"line_start":491,"line_end":491,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25289,"byte_end":25292,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ # At-Risk Parts of the API","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25293,"byte_end":25323,"line_start":493,"line_end":493,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25324,"byte_end":25327,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ The foreseeable source of partially backward-incompatible API change is the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25328,"byte_end":25407,"line_start":495,"line_end":495,"column_start":1,"column_end":80}},{"value":"/ way the instances of `Encoding` are made available.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25408,"byte_end":25463,"line_start":496,"line_end":496,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25464,"byte_end":25467,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ If Rust changes to allow the entries of `[&'static Encoding; N]` to be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25468,"byte_end":25542,"line_start":498,"line_end":498,"column_start":1,"column_end":75}},{"value":"/ initialized with `static`s of type `&'static Encoding`, the non-reference","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25543,"byte_end":25620,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/ `FOO_INIT` public `Encoding` instances will be removed from the public API.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25621,"byte_end":25700,"line_start":500,"line_end":500,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25701,"byte_end":25704,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ If Rust changes to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25705,"byte_end":25783,"line_start":502,"line_end":502,"column_start":1,"column_end":79}},{"value":"/ unique when the constant is used in different crates, the reference-typed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25784,"byte_end":25861,"line_start":503,"line_end":503,"column_start":1,"column_end":78}},{"value":"/ `static`s for the encoding instances will be changed from `static` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25862,"byte_end":25935,"line_start":504,"line_end":504,"column_start":1,"column_end":74}},{"value":"/ `const` and the non-reference-typed `_INIT` instances will be removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":25936,"byte_end":26010,"line_start":505,"line_end":505,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26011,"byte_end":26014,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ # Mapping Spec Concepts onto the API","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26015,"byte_end":26055,"line_start":507,"line_end":507,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26056,"byte_end":26059,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26060,"byte_end":26071,"line_start":509,"line_end":509,"column_start":1,"column_end":12}},{"value":"/ <thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26072,"byte_end":26083,"line_start":510,"line_end":510,"column_start":1,"column_end":12}},{"value":"/ <tr><th>Spec Concept</th><th>Streaming</th><th>Non-Streaming</th></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26084,"byte_end":26158,"line_start":511,"line_end":511,"column_start":1,"column_end":75}},{"value":"/ </thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26159,"byte_end":26171,"line_start":512,"line_end":512,"column_start":1,"column_end":13}},{"value":"/ <tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26172,"byte_end":26183,"line_start":513,"line_end":513,"column_start":1,"column_end":12}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#encoding\">encoding</a></td><td><code>&amp;'static Encoding</code></td><td><code>&amp;'static Encoding</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26184,"byte_end":26357,"line_start":514,"line_end":514,"column_start":1,"column_end":174}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#utf-8\">UTF-8 encoding</a></td><td><code>UTF_8</code></td><td><code>UTF_8</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26358,"byte_end":26502,"line_start":515,"line_end":515,"column_start":1,"column_end":145}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#concept-encoding-get\">get an encoding</a></td><td><code>Encoding::for_label(<var>label</var>)</code></td><td><code>Encoding::for_label(<var>label</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26503,"byte_end":26727,"line_start":516,"line_end":516,"column_start":1,"column_end":225}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#name\">name</a></td><td><code><var>encoding</var>.name()</code></td><td><code><var>encoding</var>.name()</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26728,"byte_end":26903,"line_start":517,"line_end":517,"column_start":1,"column_end":176}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#get-an-output-encoding\">get an output encoding</a></td><td><code><var>encoding</var>.output_encoding()</code></td><td><code><var>encoding</var>.output_encoding()</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":26904,"byte_end":27137,"line_start":518,"line_end":518,"column_start":1,"column_end":234}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#decode\">decode</a></td><td><code>let d = <var>encoding</var>.new_decoder();<br>let res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, false);<br>// &hellip;</br>let last_res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, true);</code></td><td><code><var>encoding</var>.decode(<var>src</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":27138,"byte_end":27525,"line_start":519,"line_end":519,"column_start":1,"column_end":388}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#utf-8-decode\">UTF-8 decode</a></td><td><code>let d = UTF_8.new_decoder_with_bom_removal();<br>let res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, false);<br>// &hellip;</br>let last_res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, true);</code></td><td><code>UTF_8.decode_with_bom_removal(<var>src</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":27526,"byte_end":27931,"line_start":520,"line_end":520,"column_start":1,"column_end":406}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#utf-8-decode-without-bom\">UTF-8 decode without BOM</a></td><td><code>let d = UTF_8.new_decoder_without_bom_handling();<br>let res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, false);<br>// &hellip;</br>let last_res = d.decode_to_<var>*</var>(<var>src</var>, <var>dst</var>, true);</code></td><td><code>UTF_8.decode_without_bom_handling(<var>src</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":27932,"byte_end":28369,"line_start":521,"line_end":521,"column_start":1,"column_end":438}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#utf-8-decode-without-bom-or-fail\">UTF-8 decode without BOM or fail</a></td><td><code>let d = UTF_8.new_decoder_without_bom_handling();<br>let res = d.decode_to_<var>*</var>_without_replacement(<var>src</var>, <var>dst</var>, false);<br>// &hellip; (fail if malformed)</br>let last_res = d.decode_to_<var>*</var>_without_replacement(<var>src</var>, <var>dst</var>, true);<br>// (fail if malformed)</code></td><td><code>UTF_8.decode_without_bom_handling_and_without_replacement(<var>src</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":28370,"byte_end":28933,"line_start":522,"line_end":522,"column_start":1,"column_end":564}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#encode\">encode</a></td><td><code>let e = <var>encoding</var>.new_encoder();<br>let res = e.encode_to_<var>*</var>(<var>src</var>, <var>dst</var>, false);<br>// &hellip;</br>let last_res = e.encode_to_<var>*</var>(<var>src</var>, <var>dst</var>, true);</code></td><td><code><var>encoding</var>.encode(<var>src</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":28934,"byte_end":29321,"line_start":523,"line_end":523,"column_start":1,"column_end":388}},{"value":"/ <tr><td><a href=\"https://encoding.spec.whatwg.org/#utf-8-encode\">UTF-8 encode</a></td><td>Use the UTF-8 nature of Rust strings directly:<br><code><var>write</var>(<var>src</var>.as_bytes());<br>// refill src<br><var>write</var>(<var>src</var>.as_bytes());<br>// refill src<br><var>write</var>(<var>src</var>.as_bytes());<br>// &hellip;</code></td><td>Use the UTF-8 nature of Rust strings directly:<br><code><var>src</var>.as_bytes()</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29322,"byte_end":29775,"line_start":524,"line_end":524,"column_start":1,"column_end":454}},{"value":"/ </tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29776,"byte_end":29788,"line_start":525,"line_end":525,"column_start":1,"column_end":13}},{"value":"/ </table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29789,"byte_end":29801,"line_start":526,"line_end":526,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29802,"byte_end":29805,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ # Compatibility with the rust-encoding API","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29806,"byte_end":29852,"line_start":528,"line_end":528,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29853,"byte_end":29856,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ The crate","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29857,"byte_end":29870,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/ [encoding_rs_compat](https://github.com/hsivonen/encoding_rs_compat/)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29871,"byte_end":29944,"line_start":531,"line_end":531,"column_start":1,"column_end":74}},{"value":"/ is a drop-in replacement for rust-encoding 0.2.32 that implements (most of)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":29945,"byte_end":30024,"line_start":532,"line_end":532,"column_start":1,"column_end":80}},{"value":"/ the API of rust-encoding 0.2.32 on top of encoding_rs.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30025,"byte_end":30083,"line_start":533,"line_end":533,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30084,"byte_end":30087,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ # Mapping rust-encoding concepts to encoding_rs concepts","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30088,"byte_end":30148,"line_start":535,"line_end":535,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30149,"byte_end":30152,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ The following table provides a mapping from rust-encoding constructs to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30153,"byte_end":30228,"line_start":537,"line_end":537,"column_start":1,"column_end":76}},{"value":"/ encoding_rs ones.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30229,"byte_end":30250,"line_start":538,"line_end":538,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30251,"byte_end":30254,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30255,"byte_end":30266,"line_start":540,"line_end":540,"column_start":1,"column_end":12}},{"value":"/ <thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30267,"byte_end":30278,"line_start":541,"line_end":541,"column_start":1,"column_end":12}},{"value":"/ <tr><th>rust-encoding</th><th>encoding_rs</th></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30279,"byte_end":30334,"line_start":542,"line_end":542,"column_start":1,"column_end":56}},{"value":"/ </thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30335,"byte_end":30347,"line_start":543,"line_end":543,"column_start":1,"column_end":13}},{"value":"/ <tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30348,"byte_end":30359,"line_start":544,"line_end":544,"column_start":1,"column_end":12}},{"value":"/ <tr><td><code>encoding::EncodingRef</code></td><td><code>&amp;'static encoding_rs::Encoding</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30360,"byte_end":30472,"line_start":545,"line_end":545,"column_start":1,"column_end":113}},{"value":"/ <tr><td><code>encoding::all::<var>WINDOWS_31J</var></code> (not based on the WHATWG name for some encodings)</td><td><code>encoding_rs::<var>SHIFT_JIS</var></code> (always the WHATWG name uppercased and hyphens replaced with underscores)</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30473,"byte_end":30724,"line_start":546,"line_end":546,"column_start":1,"column_end":252}},{"value":"/ <tr><td><code>encoding::all::ERROR</code></td><td>Not available because not in the Encoding Standard</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30725,"byte_end":30839,"line_start":547,"line_end":547,"column_start":1,"column_end":115}},{"value":"/ <tr><td><code>encoding::all::ASCII</code></td><td>Not available because not in the Encoding Standard</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30840,"byte_end":30954,"line_start":548,"line_end":548,"column_start":1,"column_end":115}},{"value":"/ <tr><td><code>encoding::all::ISO_8859_1</code></td><td>Not available because not in the Encoding Standard</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":30955,"byte_end":31074,"line_start":549,"line_end":549,"column_start":1,"column_end":120}},{"value":"/ <tr><td><code>encoding::all::HZ</code></td><td>Not available because not in the Encoding Standard</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31075,"byte_end":31186,"line_start":550,"line_end":550,"column_start":1,"column_end":112}},{"value":"/ <tr><td><code>encoding::label::encoding_from_whatwg_label(<var>string</var>)</code></td><td><code>encoding_rs::Encoding::for_label(<var>string</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31187,"byte_end":31357,"line_start":551,"line_end":551,"column_start":1,"column_end":171}},{"value":"/ <tr><td><code><var>enc</var>.whatwg_name()</code> (always lower case)</td><td><code><var>enc</var>.name()</code> (potentially mixed case)</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31358,"byte_end":31509,"line_start":552,"line_end":552,"column_start":1,"column_end":152}},{"value":"/ <tr><td><code><var>enc</var>.name()</code></td><td>Not available because not in the Encoding Standard</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31510,"byte_end":31625,"line_start":553,"line_end":553,"column_start":1,"column_end":116}},{"value":"/ <tr><td><code>encoding::decode(<var>bytes</var>, encoding::DecoderTrap::Replace, <var>enc</var>)</code></td><td><code><var>enc</var>.decode(<var>bytes</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31626,"byte_end":31804,"line_start":554,"line_end":554,"column_start":1,"column_end":179}},{"value":"/ <tr><td><code><var>enc</var>.decode(<var>bytes</var>, encoding::DecoderTrap::Replace)</code></td><td><code><var>enc</var>.decode_without_bom_handling(<var>bytes</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31805,"byte_end":31993,"line_start":555,"line_end":555,"column_start":1,"column_end":189}},{"value":"/ <tr><td><code><var>enc</var>.encode(<var>string</var>, encoding::EncoderTrap::NcrEscape)</code></td><td><code><var>enc</var>.encode(<var>string</var>)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":31994,"byte_end":32165,"line_start":556,"line_end":556,"column_start":1,"column_end":172}},{"value":"/ <tr><td><code><var>enc</var>.raw_decoder()</code></td><td><code><var>enc</var>.new_decoder_without_bom_handling()</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32166,"byte_end":32300,"line_start":557,"line_end":557,"column_start":1,"column_end":135}},{"value":"/ <tr><td><code><var>enc</var>.raw_encoder()</code></td><td><code><var>enc</var>.new_encoder()</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32301,"byte_end":32414,"line_start":558,"line_end":558,"column_start":1,"column_end":114}},{"value":"/ <tr><td><code>encoding::RawDecoder</code></td><td><code>encoding_rs::Decoder</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32415,"byte_end":32512,"line_start":559,"line_end":559,"column_start":1,"column_end":98}},{"value":"/ <tr><td><code>encoding::RawEncoder</code></td><td><code>encoding_rs::Encoder</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32513,"byte_end":32610,"line_start":560,"line_end":560,"column_start":1,"column_end":98}},{"value":"/ <tr><td><code><var>raw_decoder</var>.raw_feed(<var>src</var>, <var>dst_string</var>)</code></td><td><code><var>dst_string</var>.reserve(<var>decoder</var>.max_utf8_buffer_length_without_replacement(<var>src</var>.len()));<br><var>decoder</var>.decode_to_string_without_replacement(<var>src</var>, <var>dst_string</var>, false)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32611,"byte_end":32958,"line_start":561,"line_end":561,"column_start":1,"column_end":348}},{"value":"/ <tr><td><code><var>raw_encoder</var>.raw_feed(<var>src</var>, <var>dst_vec</var>)</code></td><td><code><var>dst_vec</var>.reserve(<var>encoder</var>.max_buffer_length_from_utf8_without_replacement(<var>src</var>.len()));<br><var>encoder</var>.encode_from_utf8_to_vec_without_replacement(<var>src</var>, <var>dst_vec</var>, false)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":32959,"byte_end":33309,"line_start":562,"line_end":562,"column_start":1,"column_end":351}},{"value":"/ <tr><td><code><var>raw_decoder</var>.raw_finish(<var>dst</var>)</code></td><td><code><var>dst_string</var>.reserve(<var>decoder</var>.max_utf8_buffer_length_without_replacement(0));<br><var>decoder</var>.decode_to_string_without_replacement(b\"\", <var>dst</var>, true)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":33310,"byte_end":33598,"line_start":563,"line_end":563,"column_start":1,"column_end":289}},{"value":"/ <tr><td><code><var>raw_encoder</var>.raw_finish(<var>dst</var>)</code></td><td><code><var>dst_vec</var>.reserve(<var>encoder</var>.max_buffer_length_from_utf8_without_replacement(0));<br><var>encoder</var>.encode_from_utf8_to_vec_without_replacement(\"\", <var>dst</var>, true)</code></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":33599,"byte_end":33895,"line_start":564,"line_end":564,"column_start":1,"column_end":297}},{"value":"/ <tr><td><code>encoding::DecoderTrap::Strict</code></td><td><code>decode*</code> methods that have <code>_without_replacement</code> in their name (and treating the `Malformed` result as fatal).</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":33896,"byte_end":34103,"line_start":565,"line_end":565,"column_start":1,"column_end":208}},{"value":"/ <tr><td><code>encoding::DecoderTrap::Replace</code></td><td><code>decode*</code> methods that <i>do not</i> have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":34104,"byte_end":34279,"line_start":566,"line_end":566,"column_start":1,"column_end":176}},{"value":"/ <tr><td><code>encoding::DecoderTrap::Ignore</code></td><td>It is a bad idea to ignore errors due to security issues, but this could be implemented using <code>decode*</code> methods that have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":34280,"byte_end":34534,"line_start":567,"line_end":567,"column_start":1,"column_end":255}},{"value":"/ <tr><td><code>encoding::DecoderTrap::Call(DecoderTrapFunc)</code></td><td>Can be implemented using <code>decode*</code> methods that have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":34535,"byte_end":34735,"line_start":568,"line_end":568,"column_start":1,"column_end":201}},{"value":"/ <tr><td><code>encoding::EncoderTrap::Strict</code></td><td><code>encode*</code> methods that have <code>_without_replacement</code> in their name (and treating the `Unmappable` result as fatal).</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":34736,"byte_end":34944,"line_start":569,"line_end":569,"column_start":1,"column_end":209}},{"value":"/ <tr><td><code>encoding::EncoderTrap::Replace</code></td><td>Can be implemented using <code>encode*</code> methods that have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":34945,"byte_end":35131,"line_start":570,"line_end":570,"column_start":1,"column_end":187}},{"value":"/ <tr><td><code>encoding::EncoderTrap::Ignore</code></td><td>It is a bad idea to ignore errors due to security issues, but this could be implemented using <code>encode*</code> methods that have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35132,"byte_end":35386,"line_start":571,"line_end":571,"column_start":1,"column_end":255}},{"value":"/ <tr><td><code>encoding::EncoderTrap::NcrEscape</code></td><td><code>encode*</code> methods that <i>do not</i> have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35387,"byte_end":35564,"line_start":572,"line_end":572,"column_start":1,"column_end":178}},{"value":"/ <tr><td><code>encoding::EncoderTrap::Call(EncoderTrapFunc)</code></td><td>Can be implemented using <code>encode*</code> methods that have <code>_without_replacement</code> in their name.</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35565,"byte_end":35765,"line_start":573,"line_end":573,"column_start":1,"column_end":201}},{"value":"/ </tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35766,"byte_end":35778,"line_start":574,"line_end":574,"column_start":1,"column_end":13}},{"value":"/ </table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35779,"byte_end":35791,"line_start":575,"line_end":575,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35792,"byte_end":35795,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ # Relationship with Windows Code Pages","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35796,"byte_end":35838,"line_start":577,"line_end":577,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35839,"byte_end":35842,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ Despite the Web and browser focus, the encodings defined by the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35843,"byte_end":35919,"line_start":579,"line_end":579,"column_start":1,"column_end":77}},{"value":"/ Standard and implemented by this crate may be useful for decoding legacy","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35920,"byte_end":35996,"line_start":580,"line_end":580,"column_start":1,"column_end":77}},{"value":"/ data that uses Windows code pages. The following table names the single-byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":35997,"byte_end":36077,"line_start":581,"line_end":581,"column_start":1,"column_end":81}},{"value":"/ encodings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36078,"byte_end":36091,"line_start":582,"line_end":582,"column_start":1,"column_end":14}},{"value":"/ that have a closely related Windows code page, the number of the closest","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36092,"byte_end":36168,"line_start":583,"line_end":583,"column_start":1,"column_end":77}},{"value":"/ code page, a column indicating whether Windows maps unassigned code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36169,"byte_end":36247,"line_start":584,"line_end":584,"column_start":1,"column_end":79}},{"value":"/ to the Unicode Private Use Area instead of U+FFFD and a remark number","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36248,"byte_end":36321,"line_start":585,"line_end":585,"column_start":1,"column_end":74}},{"value":"/ indicating remarks in the list after the table.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36322,"byte_end":36373,"line_start":586,"line_end":586,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36374,"byte_end":36377,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36378,"byte_end":36389,"line_start":588,"line_end":588,"column_start":1,"column_end":12}},{"value":"/ <thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36390,"byte_end":36401,"line_start":589,"line_end":589,"column_start":1,"column_end":12}},{"value":"/ <tr><th>Encoding</th><th>Code Page</th><th>PUA</th><th>Remarks</th></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36402,"byte_end":36478,"line_start":590,"line_end":590,"column_start":1,"column_end":77}},{"value":"/ </thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36479,"byte_end":36491,"line_start":591,"line_end":591,"column_start":1,"column_end":13}},{"value":"/ <tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36492,"byte_end":36503,"line_start":592,"line_end":592,"column_start":1,"column_end":12}},{"value":"/ <tr><td>Shift_JIS</td><td>932</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36504,"byte_end":36565,"line_start":593,"line_end":593,"column_start":1,"column_end":62}},{"value":"/ <tr><td>GBK</td><td>936</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36566,"byte_end":36621,"line_start":594,"line_end":594,"column_start":1,"column_end":56}},{"value":"/ <tr><td>EUC-KR</td><td>949</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36622,"byte_end":36680,"line_start":595,"line_end":595,"column_start":1,"column_end":59}},{"value":"/ <tr><td>Big5</td><td>950</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36681,"byte_end":36737,"line_start":596,"line_end":596,"column_start":1,"column_end":57}},{"value":"/ <tr><td>IBM866</td><td>866</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36738,"byte_end":36796,"line_start":597,"line_end":597,"column_start":1,"column_end":59}},{"value":"/ <tr><td>windows-874</td><td>874</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36797,"byte_end":36868,"line_start":598,"line_end":598,"column_start":1,"column_end":72}},{"value":"/ <tr><td>UTF-16LE</td><td>1200</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36869,"byte_end":36930,"line_start":599,"line_end":599,"column_start":1,"column_end":62}},{"value":"/ <tr><td>UTF-16BE</td><td>1201</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36931,"byte_end":36992,"line_start":600,"line_end":600,"column_start":1,"column_end":62}},{"value":"/ <tr><td>windows-1250</td><td>1250</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":36993,"byte_end":37058,"line_start":601,"line_end":601,"column_start":1,"column_end":66}},{"value":"/ <tr><td>windows-1251</td><td>1251</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37059,"byte_end":37124,"line_start":602,"line_end":602,"column_start":1,"column_end":66}},{"value":"/ <tr><td>windows-1252</td><td>1252</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37125,"byte_end":37190,"line_start":603,"line_end":603,"column_start":1,"column_end":66}},{"value":"/ <tr><td>windows-1253</td><td>1253</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37191,"byte_end":37264,"line_start":604,"line_end":604,"column_start":1,"column_end":74}},{"value":"/ <tr><td>windows-1254</td><td>1254</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37265,"byte_end":37330,"line_start":605,"line_end":605,"column_start":1,"column_end":66}},{"value":"/ <tr><td>windows-1255</td><td>1255</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37331,"byte_end":37404,"line_start":606,"line_end":606,"column_start":1,"column_end":74}},{"value":"/ <tr><td>windows-1256</td><td>1256</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37405,"byte_end":37470,"line_start":607,"line_end":607,"column_start":1,"column_end":66}},{"value":"/ <tr><td>windows-1257</td><td>1257</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37471,"byte_end":37544,"line_start":608,"line_end":608,"column_start":1,"column_end":74}},{"value":"/ <tr><td>windows-1258</td><td>1258</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37545,"byte_end":37610,"line_start":609,"line_end":609,"column_start":1,"column_end":66}},{"value":"/ <tr><td>macintosh</td><td>10000</td><td></td><td>1</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37611,"byte_end":37675,"line_start":610,"line_end":610,"column_start":1,"column_end":65}},{"value":"/ <tr><td>x-mac-cyrillic</td><td>10017</td><td></td><td>2</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37676,"byte_end":37745,"line_start":611,"line_end":611,"column_start":1,"column_end":70}},{"value":"/ <tr><td>KOI8-R</td><td>20866</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37746,"byte_end":37806,"line_start":612,"line_end":612,"column_start":1,"column_end":61}},{"value":"/ <tr><td>EUC-JP</td><td>20932</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37807,"byte_end":37867,"line_start":613,"line_end":613,"column_start":1,"column_end":61}},{"value":"/ <tr><td>KOI8-U</td><td>21866</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37868,"byte_end":37928,"line_start":614,"line_end":614,"column_start":1,"column_end":61}},{"value":"/ <tr><td>ISO-8859-2</td><td>28592</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37929,"byte_end":37993,"line_start":615,"line_end":615,"column_start":1,"column_end":65}},{"value":"/ <tr><td>ISO-8859-3</td><td>28593</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":37994,"byte_end":38058,"line_start":616,"line_end":616,"column_start":1,"column_end":65}},{"value":"/ <tr><td>ISO-8859-4</td><td>28594</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38059,"byte_end":38123,"line_start":617,"line_end":617,"column_start":1,"column_end":65}},{"value":"/ <tr><td>ISO-8859-5</td><td>28595</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38124,"byte_end":38188,"line_start":618,"line_end":618,"column_start":1,"column_end":65}},{"value":"/ <tr><td>ISO-8859-6</td><td>28596</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38189,"byte_end":38261,"line_start":619,"line_end":619,"column_start":1,"column_end":73}},{"value":"/ <tr><td>ISO-8859-7</td><td>28597</td><td>&bullet;</td><td>3</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38262,"byte_end":38335,"line_start":620,"line_end":620,"column_start":1,"column_end":74}},{"value":"/ <tr><td>ISO-8859-8</td><td>28598</td><td>&bullet;</td><td>4</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38336,"byte_end":38409,"line_start":621,"line_end":621,"column_start":1,"column_end":74}},{"value":"/ <tr><td>ISO-8859-13</td><td>28603</td><td>&bullet;</td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38410,"byte_end":38483,"line_start":622,"line_end":622,"column_start":1,"column_end":74}},{"value":"/ <tr><td>ISO-8859-15</td><td>28605</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38484,"byte_end":38549,"line_start":623,"line_end":623,"column_start":1,"column_end":66}},{"value":"/ <tr><td>ISO-8859-8-I</td><td>38598</td><td></td><td>5</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38550,"byte_end":38617,"line_start":624,"line_end":624,"column_start":1,"column_end":68}},{"value":"/ <tr><td>ISO-2022-JP</td><td>50220</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38618,"byte_end":38683,"line_start":625,"line_end":625,"column_start":1,"column_end":66}},{"value":"/ <tr><td>gb18030</td><td>54936</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38684,"byte_end":38745,"line_start":626,"line_end":626,"column_start":1,"column_end":62}},{"value":"/ <tr><td>UTF-8</td><td>65001</td><td></td><td></td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38746,"byte_end":38805,"line_start":627,"line_end":627,"column_start":1,"column_end":60}},{"value":"/ </tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38806,"byte_end":38818,"line_start":628,"line_end":628,"column_start":1,"column_end":13}},{"value":"/ </table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38819,"byte_end":38831,"line_start":629,"line_end":629,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38832,"byte_end":38835,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ 1. Windows decodes 0xBD to U+2126 OHM SIGN instead of U+03A9 GREEK CAPITAL LETTER OMEGA.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38836,"byte_end":38928,"line_start":631,"line_end":631,"column_start":1,"column_end":93}},{"value":"/ 2. Windows decodes 0xFF to U+00A4 CURRENCY SIGN instead of U+20AC EURO SIGN.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":38929,"byte_end":39009,"line_start":632,"line_end":632,"column_start":1,"column_end":81}},{"value":"/ 3. Windows decodes the currency signs at 0xA4 and 0xA5 as well as 0xAA,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39010,"byte_end":39085,"line_start":633,"line_end":633,"column_start":1,"column_end":76}},{"value":"/    which should be U+037A GREEK YPOGEGRAMMENI, to PUA code points. Windows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39086,"byte_end":39164,"line_start":634,"line_end":634,"column_start":1,"column_end":79}},{"value":"/    decodes 0xA1 to U+02BD MODIFIER LETTER REVERSED COMMA instead of U+2018","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39165,"byte_end":39243,"line_start":635,"line_end":635,"column_start":1,"column_end":79}},{"value":"/    LEFT SINGLE QUOTATION MARK and 0xA2 to U+02BC MODIFIER LETTER APOSTROPHE","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39244,"byte_end":39323,"line_start":636,"line_end":636,"column_start":1,"column_end":80}},{"value":"/    instead of U+2019 RIGHT SINGLE QUOTATION MARK.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39324,"byte_end":39377,"line_start":637,"line_end":637,"column_start":1,"column_end":54}},{"value":"/ 4. Windows decodes 0xAF to OVERLINE instead of MACRON and 0xFE and 0xFD to PUA instead","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39378,"byte_end":39468,"line_start":638,"line_end":638,"column_start":1,"column_end":91}},{"value":"/    of LRM and RLM.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39469,"byte_end":39491,"line_start":639,"line_end":639,"column_start":1,"column_end":23}},{"value":"/ 5. Remarks from the previous item apply.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39492,"byte_end":39536,"line_start":640,"line_end":640,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39537,"byte_end":39540,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ The differences between this crate and Windows in the case of multibyte encodings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39541,"byte_end":39626,"line_start":642,"line_end":642,"column_start":1,"column_end":86}},{"value":"/ are not yet fully documented here. The lack of remarks above should not be taken","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39627,"byte_end":39711,"line_start":643,"line_end":643,"column_start":1,"column_end":85}},{"value":"/ as indication of lack of differences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39712,"byte_end":39753,"line_start":644,"line_end":644,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39754,"byte_end":39757,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ # Notable Differences from IANA Naming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39758,"byte_end":39800,"line_start":646,"line_end":646,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39801,"byte_end":39804,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ In some cases, the Encoding Standard specifies the popular unextended encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39805,"byte_end":39887,"line_start":648,"line_end":648,"column_start":1,"column_end":83}},{"value":"/ name where in IANA terms one of the other labels would be more precise considering","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39888,"byte_end":39974,"line_start":649,"line_end":649,"column_start":1,"column_end":87}},{"value":"/ the extensions that the Encoding Standard has unified into the encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":39975,"byte_end":40051,"line_start":650,"line_end":650,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40052,"byte_end":40055,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40056,"byte_end":40067,"line_start":652,"line_end":652,"column_start":1,"column_end":12}},{"value":"/ <thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40068,"byte_end":40079,"line_start":653,"line_end":653,"column_start":1,"column_end":12}},{"value":"/ <tr><th>Encoding</th><th>IANA</th></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40080,"byte_end":40123,"line_start":654,"line_end":654,"column_start":1,"column_end":44}},{"value":"/ </thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40124,"byte_end":40136,"line_start":655,"line_end":655,"column_start":1,"column_end":13}},{"value":"/ <tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40137,"byte_end":40148,"line_start":656,"line_end":656,"column_start":1,"column_end":12}},{"value":"/ <tr><td>Big5</td><td>Big5-HKSCS</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40149,"byte_end":40194,"line_start":657,"line_end":657,"column_start":1,"column_end":46}},{"value":"/ <tr><td>EUC-KR</td><td>windows-949</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40195,"byte_end":40243,"line_start":658,"line_end":658,"column_start":1,"column_end":49}},{"value":"/ <tr><td>Shift_JIS</td><td>windows-31j</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40244,"byte_end":40295,"line_start":659,"line_end":659,"column_start":1,"column_end":52}},{"value":"/ <tr><td>x-mac-cyrillic</td><td>x-mac-ukrainian</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40296,"byte_end":40356,"line_start":660,"line_end":660,"column_start":1,"column_end":61}},{"value":"/ </tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40357,"byte_end":40369,"line_start":661,"line_end":661,"column_start":1,"column_end":13}},{"value":"/ </table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40370,"byte_end":40382,"line_start":662,"line_end":662,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40383,"byte_end":40386,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ In other cases where the Encoding Standard unifies unextended and extended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40387,"byte_end":40465,"line_start":664,"line_end":664,"column_start":1,"column_end":79}},{"value":"/ variants of an encoding, the encoding gets the name of the extended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40466,"byte_end":40537,"line_start":665,"line_end":665,"column_start":1,"column_end":72}},{"value":"/ variant.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40538,"byte_end":40550,"line_start":666,"line_end":666,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40551,"byte_end":40554,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40555,"byte_end":40566,"line_start":668,"line_end":668,"column_start":1,"column_end":12}},{"value":"/ <thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40567,"byte_end":40578,"line_start":669,"line_end":669,"column_start":1,"column_end":12}},{"value":"/ <tr><th>IANA</th><th>Unified into Encoding</th></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40579,"byte_end":40635,"line_start":670,"line_end":670,"column_start":1,"column_end":57}},{"value":"/ </thead>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40636,"byte_end":40648,"line_start":671,"line_end":671,"column_start":1,"column_end":13}},{"value":"/ <tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40649,"byte_end":40660,"line_start":672,"line_end":672,"column_start":1,"column_end":12}},{"value":"/ <tr><td>ISO-8859-1</td><td>windows-1252</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40661,"byte_end":40714,"line_start":673,"line_end":673,"column_start":1,"column_end":54}},{"value":"/ <tr><td>ISO-8859-9</td><td>windows-1254</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40715,"byte_end":40768,"line_start":674,"line_end":674,"column_start":1,"column_end":54}},{"value":"/ <tr><td>TIS-620</td><td>windows-874</td></tr>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40769,"byte_end":40818,"line_start":675,"line_end":675,"column_start":1,"column_end":50}},{"value":"/ </tbody>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40819,"byte_end":40831,"line_start":676,"line_end":676,"column_start":1,"column_end":13}},{"value":"/ </table>","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40832,"byte_end":40844,"line_start":677,"line_end":677,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40845,"byte_end":40848,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ See the section [_UTF-16LE, UTF-16BE and Unicode Encoding Schemes_](#utf-16le-utf-16be-and-unicode-encoding-schemes)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40849,"byte_end":40969,"line_start":679,"line_end":679,"column_start":1,"column_end":121}},{"value":"/ for discussion about the UTF-16 family.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":40970,"byte_end":41013,"line_start":680,"line_end":680,"column_start":1,"column_end":44}},{"value":"no_std","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":41015,"byte_end":41025,"line_start":682,"line_end":682,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1446},{"krate":0,"index":1096},{"krate":0,"index":1450},{"krate":0,"index":1097},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"decl_id":null,"docs":" Functions for converting between different in-RAM representations of text\n and for quickly checking if the Unicode Bidirectional Algorithm can be\n avoided.","sig":null,"attributes":[{"value":"/ Functions for converting between different in-RAM representations of text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315721,"byte_end":3315798,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ and for quickly checking if the Unicode Bidirectional Algorithm can be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315799,"byte_end":3315873,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ avoided.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315874,"byte_end":3315886,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315887,"byte_end":3315890,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ By using slices for output, the functions here seek to enable by-register","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315891,"byte_end":3315968,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ (ALU register or SIMD register as available) operations in order to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3315969,"byte_end":3316040,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ outperform iterator-based conversions available in the Rust standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316041,"byte_end":3316113,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ library.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316114,"byte_end":3316126,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316127,"byte_end":3316130,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ _Note:_ \"Latin1\" in this module refers to the Unicode range from U+0000 to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316131,"byte_end":3316209,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ U+00FF, inclusive, and does not refer to the windows-1252 range. This","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316210,"byte_end":3316283,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ in-memory encoding is sometimes used as a storage optimization of text","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316284,"byte_end":3316358,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ when UTF-16 indexing and length semantics are exposed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316359,"byte_end":3316417,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316418,"byte_end":3316421,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The FFI binding for this module are in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316422,"byte_end":3316468,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [encoding_c_mem crate](https://github.com/hsivonen/encoding_c_mem).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3316469,"byte_end":3316540,"line_start":25,"line_end":25,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317728,"byte_end":3317734,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::mem::Latin1Bidi::Latin1","value":"Latin1Bidi::Latin1","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" Every character is below U+0100.\n","sig":null,"attributes":[{"value":"/ Every character is below U+0100.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317687,"byte_end":3317723,"line_start":69,"line_end":69,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317860,"byte_end":3317871,"line_start":73,"line_end":73,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::mem::Latin1Bidi::LeftToRight","value":"Latin1Bidi::LeftToRight","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" There is at least one character that's U+0100 or higher, but there\n are no right-to-left characters.\n","sig":null,"attributes":[{"value":"/ There is at least one character that's U+0100 or higher, but there","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317744,"byte_end":3317814,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ are no right-to-left characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317819,"byte_end":3317855,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317936,"byte_end":3317940,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"Bidi","qualname":"::mem::Latin1Bidi::Bidi","value":"Latin1Bidi::Bidi","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" There is at least one right-to-left character.\n","sig":null,"attributes":[{"value":"/ There is at least one right-to-left character.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317881,"byte_end":3317931,"line_start":74,"line_end":74,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317670,"byte_end":3317680,"line_start":68,"line_end":68,"column_start":10,"column_end":20},"name":"Latin1Bidi","qualname":"::mem::Latin1Bidi","value":"pub enum Latin1Bidi { Latin1 = , LeftToRight = , Bidi = , }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435}],"decl_id":null,"docs":" Classification of text as Latin1 (all code points are below U+0100),\n left-to-right with some non-Latin1 characters or as containing at least\n some right-to-left characters.\n","sig":null,"attributes":[{"value":"/ Classification of text as Latin1 (all code points are below U+0100),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317422,"byte_end":3317494,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ left-to-right with some non-Latin1 characters or as containing at least","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317495,"byte_end":3317570,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ some right-to-left characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317571,"byte_end":3317605,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"must_use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317606,"byte_end":3317617,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3317650,"byte_end":3317660,"line_start":67,"line_end":67,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3341940,"byte_end":3341948,"line_start":639,"line_end":639,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::mem::is_ascii","value":"pub fn is_ascii(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-ASCII.","sig":null,"attributes":[{"value":"/ Checks whether the buffer is all-ASCII.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3341770,"byte_end":3341813,"line_start":635,"line_end":635,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3341814,"byte_end":3341817,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ May read the entire buffer even if it isn't all-ASCII. (I.e. the function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3341818,"byte_end":3341895,"line_start":637,"line_end":637,"column_start":1,"column_end":78}},{"value":"/ is not guaranteed to fail fast.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3341896,"byte_end":3341932,"line_start":638,"line_end":638,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342232,"byte_end":3342246,"line_start":648,"line_end":648,"column_start":8,"column_end":22},"name":"is_basic_latin","qualname":"::mem::is_basic_latin","value":"pub fn is_basic_latin(&[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing\n only ASCII characters).","sig":null,"attributes":[{"value":"/ Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342003,"byte_end":3342077,"line_start":643,"line_end":643,"column_start":1,"column_end":75}},{"value":"/ only ASCII characters).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342078,"byte_end":3342105,"line_start":644,"line_end":644,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342106,"byte_end":3342109,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ May read the entire buffer even if it isn't all-ASCII. (I.e. the function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342110,"byte_end":3342187,"line_start":646,"line_end":646,"column_start":1,"column_end":78}},{"value":"/ is not guaranteed to fail fast.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342188,"byte_end":3342224,"line_start":647,"line_end":647,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342562,"byte_end":3342576,"line_start":657,"line_end":657,"column_start":8,"column_end":22},"name":"is_utf8_latin1","qualname":"::mem::is_utf8_latin1","value":"pub fn is_utf8_latin1(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is valid UTF-8 representing only code points\n less than or equal to U+00FF.","sig":null,"attributes":[{"value":"/ Checks whether the buffer is valid UTF-8 representing only code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342308,"byte_end":3342382,"line_start":652,"line_end":652,"column_start":1,"column_end":75}},{"value":"/ less than or equal to U+00FF.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342383,"byte_end":3342416,"line_start":653,"line_end":653,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342417,"byte_end":3342420,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ Fails fast. (I.e. returns before having read the whole buffer if UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342421,"byte_end":3342495,"line_start":655,"line_end":655,"column_start":1,"column_end":75}},{"value":"/ invalidity or code points above U+00FF are discovered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342496,"byte_end":3342554,"line_start":656,"line_end":656,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342864,"byte_end":3342877,"line_start":666,"line_end":666,"column_start":8,"column_end":21},"name":"is_str_latin1","qualname":"::mem::is_str_latin1","value":"pub fn is_str_latin1(&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code points less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"/ Checks whether the buffer represents only code points less than or equal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342647,"byte_end":3342723,"line_start":661,"line_end":661,"column_start":1,"column_end":77}},{"value":"/ to U+00FF.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342724,"byte_end":3342738,"line_start":662,"line_end":662,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342739,"byte_end":3342742,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ Fails fast. (I.e. returns before having read the whole buffer if code","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342743,"byte_end":3342816,"line_start":664,"line_end":664,"column_start":1,"column_end":74}},{"value":"/ points above U+00FF are discovered.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342817,"byte_end":3342856,"line_start":665,"line_end":665,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343164,"byte_end":3343179,"line_start":675,"line_end":675,"column_start":8,"column_end":23},"name":"is_utf16_latin1","qualname":"::mem::is_utf16_latin1","value":"pub fn is_utf16_latin1(&[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"/ Checks whether the buffer represents only code point less than or equal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3342946,"byte_end":3343021,"line_start":670,"line_end":670,"column_start":1,"column_end":76}},{"value":"/ to U+00FF.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343022,"byte_end":3343036,"line_start":671,"line_end":671,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343037,"byte_end":3343040,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ May read the entire buffer even if it isn't all-Latin1. (I.e. the function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343041,"byte_end":3343119,"line_start":673,"line_end":673,"column_start":1,"column_end":79}},{"value":"/ is not guaranteed to fail fast.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343120,"byte_end":3343156,"line_start":674,"line_end":674,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344297,"byte_end":3344309,"line_start":697,"line_end":697,"column_start":8,"column_end":20},"name":"is_utf8_bidi","qualname":"::mem::is_utf8_bidi","value":"pub fn is_utf8_bidi(&[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially-invalid UTF-8 buffer contains code points\n that trigger right-to-left processing.","sig":null,"attributes":[{"value":"/ Checks whether a potentially-invalid UTF-8 buffer contains code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343242,"byte_end":3343316,"line_start":679,"line_end":679,"column_start":1,"column_end":75}},{"value":"/ that trigger right-to-left processing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343317,"byte_end":3343359,"line_start":680,"line_end":680,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343360,"byte_end":3343363,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ The check is done on a Unicode block basis without regard to assigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343364,"byte_end":3343437,"line_start":682,"line_end":682,"column_start":1,"column_end":74}},{"value":"/ vs. unassigned code points in the block. Hebrew presentation forms in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343438,"byte_end":3343511,"line_start":683,"line_end":683,"column_start":1,"column_end":74}},{"value":"/ the Alphabetic Presentation Forms block are treated as if they formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343512,"byte_end":3343585,"line_start":684,"line_end":684,"column_start":1,"column_end":74}},{"value":"/ a block on their own (i.e. it treated as right-to-left). Additionally,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343586,"byte_end":3343660,"line_start":685,"line_end":685,"column_start":1,"column_end":75}},{"value":"/ the four RIGHT-TO-LEFT FOO controls in General Punctuation are checked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343661,"byte_end":3343735,"line_start":686,"line_end":686,"column_start":1,"column_end":75}},{"value":"/ for. Control characters that are technically bidi controls but do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343736,"byte_end":3343809,"line_start":687,"line_end":687,"column_start":1,"column_end":74}},{"value":"/ cause right-to-left behavior without the presence of right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343810,"byte_end":3343880,"line_start":688,"line_end":688,"column_start":1,"column_end":71}},{"value":"/ characters or right-to-left controls are not checked for. As a special","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343881,"byte_end":3343955,"line_start":689,"line_end":689,"column_start":1,"column_end":75}},{"value":"/ case, U+FEFF is excluded from Arabic Presentation Forms-B.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3343956,"byte_end":3344018,"line_start":690,"line_end":690,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344019,"byte_end":3344022,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ Returns `true` if the input is invalid UTF-8 or the input contains an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344023,"byte_end":3344096,"line_start":692,"line_end":692,"column_start":1,"column_end":74}},{"value":"/ RTL character. Returns `false` if the input is valid UTF-8 and contains","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344097,"byte_end":3344172,"line_start":693,"line_end":693,"column_start":1,"column_end":76}},{"value":"/ no RTL characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344173,"byte_end":3344195,"line_start":694,"line_end":694,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3344280,"byte_end":3344289,"line_start":696,"line_end":696,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363649,"byte_end":3363660,"line_start":1127,"line_end":1127,"column_start":8,"column_end":19},"name":"is_str_bidi","qualname":"::mem::is_str_bidi","value":"pub fn is_str_bidi(&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"/ Checks whether a valid UTF-8 buffer contains code points that trigger","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3362808,"byte_end":3362881,"line_start":1113,"line_end":1113,"column_start":1,"column_end":74}},{"value":"/ right-to-left processing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3362882,"byte_end":3362911,"line_start":1114,"line_end":1114,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3362912,"byte_end":3362915,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ The check is done on a Unicode block basis without regard to assigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3362916,"byte_end":3362989,"line_start":1116,"line_end":1116,"column_start":1,"column_end":74}},{"value":"/ vs. unassigned code points in the block. Hebrew presentation forms in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3362990,"byte_end":3363063,"line_start":1117,"line_end":1117,"column_start":1,"column_end":74}},{"value":"/ the Alphabetic Presentation Forms block are treated as if they formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363064,"byte_end":3363137,"line_start":1118,"line_end":1118,"column_start":1,"column_end":74}},{"value":"/ a block on their own (i.e. it treated as right-to-left). Additionally,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363138,"byte_end":3363212,"line_start":1119,"line_end":1119,"column_start":1,"column_end":75}},{"value":"/ the four RIGHT-TO-LEFT FOO controls in General Punctuation are checked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363213,"byte_end":3363287,"line_start":1120,"line_end":1120,"column_start":1,"column_end":75}},{"value":"/ for. Control characters that are technically bidi controls but do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363288,"byte_end":3363361,"line_start":1121,"line_end":1121,"column_start":1,"column_end":74}},{"value":"/ cause right-to-left behavior without the presence of right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363362,"byte_end":3363432,"line_start":1122,"line_end":1122,"column_start":1,"column_end":71}},{"value":"/ characters or right-to-left controls are not checked for. As a special","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363433,"byte_end":3363507,"line_start":1123,"line_end":1123,"column_start":1,"column_end":75}},{"value":"/ case, U+FEFF is excluded from Arabic Presentation Forms-B.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363508,"byte_end":3363570,"line_start":1124,"line_end":1124,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3363632,"byte_end":3363641,"line_start":1126,"line_end":1126,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370436,"byte_end":3370449,"line_start":1286,"line_end":1286,"column_start":8,"column_end":21},"name":"is_utf16_bidi","qualname":"::mem::is_utf16_bidi","value":"pub fn is_utf16_bidi(&[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"/ Checks whether a UTF-16 buffer contains code points that trigger","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369381,"byte_end":3369449,"line_start":1269,"line_end":1269,"column_start":1,"column_end":69}},{"value":"/ right-to-left processing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369450,"byte_end":3369479,"line_start":1270,"line_end":1270,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369480,"byte_end":3369483,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ The check is done on a Unicode block basis without regard to assigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369484,"byte_end":3369557,"line_start":1272,"line_end":1272,"column_start":1,"column_end":74}},{"value":"/ vs. unassigned code points in the block. Hebrew presentation forms in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369558,"byte_end":3369631,"line_start":1273,"line_end":1273,"column_start":1,"column_end":74}},{"value":"/ the Alphabetic Presentation Forms block are treated as if they formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369632,"byte_end":3369705,"line_start":1274,"line_end":1274,"column_start":1,"column_end":74}},{"value":"/ a block on their own (i.e. it treated as right-to-left). Additionally,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369706,"byte_end":3369780,"line_start":1275,"line_end":1275,"column_start":1,"column_end":75}},{"value":"/ the four RIGHT-TO-LEFT FOO controls in General Punctuation are checked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369781,"byte_end":3369855,"line_start":1276,"line_end":1276,"column_start":1,"column_end":75}},{"value":"/ for. Control characters that are technically bidi controls but do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369856,"byte_end":3369929,"line_start":1277,"line_end":1277,"column_start":1,"column_end":74}},{"value":"/ cause right-to-left behavior without the presence of right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3369930,"byte_end":3370000,"line_start":1278,"line_end":1278,"column_start":1,"column_end":71}},{"value":"/ characters or right-to-left controls are not checked for. As a special","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370001,"byte_end":3370075,"line_start":1279,"line_end":1279,"column_start":1,"column_end":75}},{"value":"/ case, U+FEFF is excluded from Arabic Presentation Forms-B.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370076,"byte_end":3370138,"line_start":1280,"line_end":1280,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370139,"byte_end":3370142,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ Returns `true` if the input contains an RTL character or an unpaired","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370143,"byte_end":3370215,"line_start":1282,"line_end":1282,"column_start":1,"column_end":73}},{"value":"/ high surrogate that could be the high half of an RTL character.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370216,"byte_end":3370283,"line_start":1283,"line_end":1283,"column_start":1,"column_end":68}},{"value":"/ Returns `false` if the input contains neither RTL characters nor","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370284,"byte_end":3370352,"line_start":1284,"line_end":1284,"column_start":1,"column_end":69}},{"value":"/ unpaired high surrogates that could be higher halves of RTL characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370353,"byte_end":3370428,"line_start":1285,"line_end":1285,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3371263,"byte_end":3371275,"line_start":1302,"line_end":1302,"column_start":8,"column_end":20},"name":"is_char_bidi","qualname":"::mem::is_char_bidi","value":"pub fn is_char_bidi(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a scalar value triggers right-to-left processing.","sig":null,"attributes":[{"value":"/ Checks whether a scalar value triggers right-to-left processing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370510,"byte_end":3370578,"line_start":1290,"line_end":1290,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370579,"byte_end":3370582,"line_start":1291,"line_end":1291,"column_start":1,"column_end":4}},{"value":"/ The check is done on a Unicode block basis without regard to assigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370583,"byte_end":3370656,"line_start":1292,"line_end":1292,"column_start":1,"column_end":74}},{"value":"/ vs. unassigned code points in the block. Hebrew presentation forms in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370657,"byte_end":3370730,"line_start":1293,"line_end":1293,"column_start":1,"column_end":74}},{"value":"/ the Alphabetic Presentation Forms block are treated as if they formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370731,"byte_end":3370804,"line_start":1294,"line_end":1294,"column_start":1,"column_end":74}},{"value":"/ a block on their own (i.e. it treated as right-to-left). Additionally,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370805,"byte_end":3370879,"line_start":1295,"line_end":1295,"column_start":1,"column_end":75}},{"value":"/ the four RIGHT-TO-LEFT FOO controls in General Punctuation are checked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370880,"byte_end":3370954,"line_start":1296,"line_end":1296,"column_start":1,"column_end":75}},{"value":"/ for. Control characters that are technically bidi controls but do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3370955,"byte_end":3371028,"line_start":1297,"line_end":1297,"column_start":1,"column_end":74}},{"value":"/ cause right-to-left behavior without the presence of right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3371029,"byte_end":3371099,"line_start":1298,"line_end":1298,"column_start":1,"column_end":71}},{"value":"/ characters or right-to-left controls are not checked for. As a special","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3371100,"byte_end":3371174,"line_start":1299,"line_end":1299,"column_start":1,"column_end":75}},{"value":"/ case, U+FEFF is excluded from Arabic Presentation Forms-B.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3371175,"byte_end":3371237,"line_start":1300,"line_end":1300,"column_start":1,"column_end":63}},{"value":"inline(always)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3371238,"byte_end":3371255,"line_start":1301,"line_end":1301,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3374209,"byte_end":3374232,"line_start":1377,"line_end":1377,"column_start":8,"column_end":31},"name":"is_utf16_code_unit_bidi","qualname":"::mem::is_utf16_code_unit_bidi","value":"pub fn is_utf16_code_unit_bidi(u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 code unit triggers right-to-left processing.","sig":null,"attributes":[{"value":"/ Checks whether a UTF-16 code unit triggers right-to-left processing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373033,"byte_end":3373105,"line_start":1358,"line_end":1358,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373106,"byte_end":3373109,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ The check is done on a Unicode block basis without regard to assigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373110,"byte_end":3373183,"line_start":1360,"line_end":1360,"column_start":1,"column_end":74}},{"value":"/ vs. unassigned code points in the block. Hebrew presentation forms in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373184,"byte_end":3373257,"line_start":1361,"line_end":1361,"column_start":1,"column_end":74}},{"value":"/ the Alphabetic Presentation Forms block are treated as if they formed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373258,"byte_end":3373331,"line_start":1362,"line_end":1362,"column_start":1,"column_end":74}},{"value":"/ a block on their own (i.e. it treated as right-to-left). Additionally,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373332,"byte_end":3373406,"line_start":1363,"line_end":1363,"column_start":1,"column_end":75}},{"value":"/ the four RIGHT-TO-LEFT FOO controls in General Punctuation are checked","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373407,"byte_end":3373481,"line_start":1364,"line_end":1364,"column_start":1,"column_end":75}},{"value":"/ for. Control characters that are technically bidi controls but do not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373482,"byte_end":3373555,"line_start":1365,"line_end":1365,"column_start":1,"column_end":74}},{"value":"/ cause right-to-left behavior without the presence of right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373556,"byte_end":3373626,"line_start":1366,"line_end":1366,"column_start":1,"column_end":71}},{"value":"/ characters or right-to-left controls are not checked for. As a special","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373627,"byte_end":3373701,"line_start":1367,"line_end":1367,"column_start":1,"column_end":75}},{"value":"/ case, U+FEFF is excluded from Arabic Presentation Forms-B.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373702,"byte_end":3373764,"line_start":1368,"line_end":1368,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373765,"byte_end":3373768,"line_start":1369,"line_end":1369,"column_start":1,"column_end":4}},{"value":"/ Since supplementary-plane right-to-left blocks are identifiable from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373769,"byte_end":3373845,"line_start":1370,"line_end":1370,"column_start":1,"column_end":77}},{"value":"/ high surrogate without examining the low surrogate, this function returns","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373846,"byte_end":3373923,"line_start":1371,"line_end":1371,"column_start":1,"column_end":78}},{"value":"/ `true` for such high surrogates making the function suitable for handling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3373924,"byte_end":3374001,"line_start":1372,"line_end":1372,"column_start":1,"column_end":78}},{"value":"/ supplementary-plane text without decoding surrogate pairs to scalar","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3374002,"byte_end":3374073,"line_start":1373,"line_end":1373,"column_start":1,"column_end":72}},{"value":"/ values. Obviously, such high surrogates are then reported as right-to-left","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3374074,"byte_end":3374152,"line_start":1374,"line_end":1374,"column_start":1,"column_end":79}},{"value":"/ even if actually unpaired.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3374153,"byte_end":3374183,"line_start":1375,"line_end":1375,"column_start":1,"column_end":31}},{"value":"inline(always)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3374184,"byte_end":3374201,"line_start":1376,"line_end":1376,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375584,"byte_end":3375614,"line_start":1418,"line_end":1418,"column_start":8,"column_end":38},"name":"check_utf8_for_latin1_and_bidi","qualname":"::mem::check_utf8_for_latin1_and_bidi","value":"pub fn check_utf8_for_latin1_and_bidi(&[u8]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"/ Checks whether a potentially invalid UTF-8 buffer contains code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375158,"byte_end":3375232,"line_start":1410,"line_end":1410,"column_start":1,"column_end":75}},{"value":"/ that trigger right-to-left processing or is all-Latin1.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375233,"byte_end":3375292,"line_start":1411,"line_end":1411,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375293,"byte_end":3375296,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ Possibly more efficient than performing the checks separately.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375297,"byte_end":3375363,"line_start":1413,"line_end":1413,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375364,"byte_end":3375367,"line_start":1414,"line_end":1414,"column_start":1,"column_end":4}},{"value":"/ Returns `Latin1Bidi::Latin1` if `is_utf8_latin1()` would return `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375368,"byte_end":3375443,"line_start":1415,"line_end":1415,"column_start":1,"column_end":76}},{"value":"/ Otherwise, returns `Latin1Bidi::Bidi` if `is_utf8_bidi()` would return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375444,"byte_end":3375518,"line_start":1416,"line_end":1416,"column_start":1,"column_end":75}},{"value":"/ `true`. Otherwise, returns `Latin1Bidi::LeftToRight`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375519,"byte_end":3375576,"line_start":1417,"line_end":1417,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376298,"byte_end":3376327,"line_start":1438,"line_end":1438,"column_start":8,"column_end":37},"name":"check_str_for_latin1_and_bidi","qualname":"::mem::check_str_for_latin1_and_bidi","value":"pub fn check_str_for_latin1_and_bidi(&str) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"/ Checks whether a valid UTF-8 buffer contains code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375888,"byte_end":3375948,"line_start":1430,"line_end":1430,"column_start":1,"column_end":61}},{"value":"/ that trigger right-to-left processing or is all-Latin1.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3375949,"byte_end":3376008,"line_start":1431,"line_end":1431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376009,"byte_end":3376012,"line_start":1432,"line_end":1432,"column_start":1,"column_end":4}},{"value":"/ Possibly more efficient than performing the checks separately.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376013,"byte_end":3376079,"line_start":1433,"line_end":1433,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376080,"byte_end":3376083,"line_start":1434,"line_end":1434,"column_start":1,"column_end":4}},{"value":"/ Returns `Latin1Bidi::Latin1` if `is_str_latin1()` would return `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376084,"byte_end":3376158,"line_start":1435,"line_end":1435,"column_start":1,"column_end":75}},{"value":"/ Otherwise, returns `Latin1Bidi::Bidi` if `is_str_bidi()` would return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376159,"byte_end":3376232,"line_start":1436,"line_end":1436,"column_start":1,"column_end":74}},{"value":"/ `true`. Otherwise, returns `Latin1Bidi::LeftToRight`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376233,"byte_end":3376290,"line_start":1437,"line_end":1437,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377151,"byte_end":3377182,"line_start":1460,"line_end":1460,"column_start":8,"column_end":39},"name":"check_utf16_for_latin1_and_bidi","qualname":"::mem::check_utf16_for_latin1_and_bidi","value":"pub fn check_utf16_for_latin1_and_bidi(&[u16]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-16 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"/ Checks whether a potentially invalid UTF-16 buffer contains code points","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376722,"byte_end":3376797,"line_start":1452,"line_end":1452,"column_start":1,"column_end":76}},{"value":"/ that trigger right-to-left processing or is all-Latin1.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376798,"byte_end":3376857,"line_start":1453,"line_end":1453,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376858,"byte_end":3376861,"line_start":1454,"line_end":1454,"column_start":1,"column_end":4}},{"value":"/ Possibly more efficient than performing the checks separately.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376862,"byte_end":3376928,"line_start":1455,"line_end":1455,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376929,"byte_end":3376932,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ Returns `Latin1Bidi::Latin1` if `is_utf16_latin1()` would return `true`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3376933,"byte_end":3377009,"line_start":1457,"line_end":1457,"column_start":1,"column_end":77}},{"value":"/ Otherwise, returns `Latin1Bidi::Bidi` if `is_utf16_bidi()` would return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377010,"byte_end":3377085,"line_start":1458,"line_end":1458,"column_start":1,"column_end":76}},{"value":"/ `true`. Otherwise, returns `Latin1Bidi::LeftToRight`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377086,"byte_end":3377143,"line_start":1459,"line_end":1459,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377630,"byte_end":3377651,"line_start":1475,"line_end":1475,"column_start":8,"column_end":29},"name":"convert_utf8_to_utf16","qualname":"::mem::convert_utf8_to_utf16","value":"pub fn convert_utf8_to_utf16(&[u8], &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377267,"byte_end":3377342,"line_start":1464,"line_end":1464,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377343,"byte_end":3377378,"line_start":1465,"line_end":1465,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377379,"byte_end":3377382,"line_start":1466,"line_end":1466,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377383,"byte_end":3377458,"line_start":1467,"line_end":1467,"column_start":1,"column_end":76}},{"value":"/ source buffer _plus one_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377459,"byte_end":3377488,"line_start":1468,"line_end":1468,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377489,"byte_end":3377492,"line_start":1469,"line_end":1469,"column_start":1,"column_end":4}},{"value":"/ Returns the number of `u16`s written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377493,"byte_end":3377534,"line_start":1470,"line_end":1470,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377535,"byte_end":3377538,"line_start":1471,"line_end":1471,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377539,"byte_end":3377551,"line_start":1472,"line_end":1472,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377552,"byte_end":3377555,"line_start":1473,"line_end":1473,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3377556,"byte_end":3377622,"line_start":1474,"line_end":1474,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378997,"byte_end":3379017,"line_start":1514,"line_end":1514,"column_start":8,"column_end":28},"name":"convert_str_to_utf16","qualname":"::mem::convert_str_to_utf16","value":"pub fn convert_str_to_utf16(&str, &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts valid UTF-8 to valid UTF-16.","sig":null,"attributes":[{"value":"/ Converts valid UTF-8 to valid UTF-16.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378715,"byte_end":3378756,"line_start":1504,"line_end":1504,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378757,"byte_end":3378760,"line_start":1505,"line_end":1505,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378761,"byte_end":3378836,"line_start":1506,"line_end":1506,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378837,"byte_end":3378855,"line_start":1507,"line_end":1507,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378856,"byte_end":3378859,"line_start":1508,"line_end":1508,"column_start":1,"column_end":4}},{"value":"/ Returns the number of `u16`s written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378860,"byte_end":3378901,"line_start":1509,"line_end":1509,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378902,"byte_end":3378905,"line_start":1510,"line_end":1510,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378906,"byte_end":3378918,"line_start":1511,"line_end":1511,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378919,"byte_end":3378922,"line_start":1512,"line_end":1512,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3378923,"byte_end":3378989,"line_start":1513,"line_end":1513,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383081,"byte_end":3383122,"line_start":1613,"line_end":1613,"column_start":8,"column_end":49},"name":"convert_utf8_to_utf16_without_replacement","qualname":"::mem::convert_utf8_to_utf16_without_replacement","value":"pub fn convert_utf8_to_utf16_without_replacement(&[u8], &mut [u16])\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 signaling on error.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-8 to valid UTF-16 signaling on error.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382660,"byte_end":3382734,"line_start":1601,"line_end":1601,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382735,"byte_end":3382738,"line_start":1602,"line_end":1602,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382739,"byte_end":3382814,"line_start":1603,"line_end":1603,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382815,"byte_end":3382833,"line_start":1604,"line_end":1604,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382834,"byte_end":3382837,"line_start":1605,"line_end":1605,"column_start":1,"column_end":4}},{"value":"/ Returns the number of `u16`s written or `None` if the input was invalid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382838,"byte_end":3382914,"line_start":1606,"line_end":1606,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382915,"byte_end":3382918,"line_start":1607,"line_end":1607,"column_start":1,"column_end":4}},{"value":"/ When the input was invalid, some output may have been written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382919,"byte_end":3382985,"line_start":1608,"line_end":1608,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382986,"byte_end":3382989,"line_start":1609,"line_end":1609,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3382990,"byte_end":3383002,"line_start":1610,"line_end":1610,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383003,"byte_end":3383006,"line_start":1611,"line_end":1611,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383007,"byte_end":3383073,"line_start":1612,"line_end":1612,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384502,"byte_end":3384531,"line_start":1651,"line_end":1651,"column_start":8,"column_end":37},"name":"convert_utf16_to_utf8_partial","qualname":"::mem::convert_utf16_to_utf8_partial","value":"pub fn convert_utf16_to_utf8_partial(&[u16], &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383430,"byte_end":3383505,"line_start":1625,"line_end":1625,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER with potentially insufficient output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383506,"byte_end":3383577,"line_start":1626,"line_end":1626,"column_start":1,"column_end":72}},{"value":"/ space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383578,"byte_end":3383588,"line_start":1627,"line_end":1627,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383589,"byte_end":3383592,"line_start":1628,"line_end":1628,"column_start":1,"column_end":4}},{"value":"/ Returns the number of code units read and the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383593,"byte_end":3383667,"line_start":1629,"line_end":1629,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383668,"byte_end":3383671,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ Guarantees that the bytes in the destination beyond the number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383672,"byte_end":3383741,"line_start":1631,"line_end":1631,"column_start":1,"column_end":70}},{"value":"/ bytes claimed as written by the second item of the return tuple","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383742,"byte_end":3383809,"line_start":1632,"line_end":1632,"column_start":1,"column_end":68}},{"value":"/ are left unmodified.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383810,"byte_end":3383834,"line_start":1633,"line_end":1633,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383835,"byte_end":3383838,"line_start":1634,"line_end":1634,"column_start":1,"column_end":4}},{"value":"/ Not all code units are read if there isn't enough output space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383839,"byte_end":3383906,"line_start":1635,"line_end":1635,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383907,"byte_end":3383910,"line_start":1636,"line_end":1636,"column_start":1,"column_end":4}},{"value":"/ Note  that this method isn't designed for general streamability but for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383911,"byte_end":3383986,"line_start":1637,"line_end":1637,"column_start":1,"column_end":76}},{"value":"/ not allocating memory for the worst case up front. Specifically,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3383987,"byte_end":3384055,"line_start":1638,"line_end":1638,"column_start":1,"column_end":69}},{"value":"/ if the input starts with or ends with an unpaired surrogate, those are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384056,"byte_end":3384130,"line_start":1639,"line_end":1639,"column_start":1,"column_end":75}},{"value":"/ replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384131,"byte_end":3384175,"line_start":1640,"line_end":1640,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384176,"byte_end":3384179,"line_start":1641,"line_end":1641,"column_start":1,"column_end":4}},{"value":"/ Matches the semantics of `TextEncoder.encodeInto()` from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384180,"byte_end":3384244,"line_start":1642,"line_end":1642,"column_start":1,"column_end":65}},{"value":"/ Encoding Standard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384245,"byte_end":3384267,"line_start":1643,"line_end":1643,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384268,"byte_end":3384271,"line_start":1644,"line_end":1644,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384272,"byte_end":3384284,"line_start":1645,"line_end":1645,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384285,"byte_end":3384288,"line_start":1646,"line_end":1646,"column_start":1,"column_end":4}},{"value":"/ If you want to convert into a `&mut str`, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384289,"byte_end":3384338,"line_start":1647,"line_end":1647,"column_start":1,"column_end":50}},{"value":"/ `convert_utf16_to_str_partial()` instead of using this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384339,"byte_end":3384406,"line_start":1648,"line_end":1648,"column_start":1,"column_end":68}},{"value":"/ together with the `unsafe` method `as_bytes_mut()` on `&mut str`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384407,"byte_end":3384476,"line_start":1649,"line_end":1649,"column_start":1,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3384477,"byte_end":3384494,"line_start":1650,"line_end":1650,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385978,"byte_end":3385999,"line_start":1686,"line_end":1686,"column_start":8,"column_end":29},"name":"convert_utf16_to_utf8","qualname":"::mem::convert_utf16_to_utf8","value":"pub fn convert_utf16_to_utf8(&[u16], &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385396,"byte_end":3385471,"line_start":1668,"line_end":1668,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385472,"byte_end":3385507,"line_start":1669,"line_end":1669,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385508,"byte_end":3385511,"line_start":1670,"line_end":1670,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385512,"byte_end":3385587,"line_start":1671,"line_end":1671,"column_start":1,"column_end":76}},{"value":"/ source buffer times three.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385588,"byte_end":3385618,"line_start":1672,"line_end":1672,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385619,"byte_end":3385622,"line_start":1673,"line_end":1673,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385623,"byte_end":3385663,"line_start":1674,"line_end":1674,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385664,"byte_end":3385667,"line_start":1675,"line_end":1675,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385668,"byte_end":3385680,"line_start":1676,"line_end":1676,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385681,"byte_end":3385684,"line_start":1677,"line_end":1677,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385685,"byte_end":3385751,"line_start":1678,"line_end":1678,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385752,"byte_end":3385755,"line_start":1679,"line_end":1679,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385756,"byte_end":3385768,"line_start":1680,"line_end":1680,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385769,"byte_end":3385772,"line_start":1681,"line_end":1681,"column_start":1,"column_end":4}},{"value":"/ If you want to convert into a `&mut str`, use `convert_utf16_to_str()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385773,"byte_end":3385847,"line_start":1682,"line_end":1682,"column_start":1,"column_end":75}},{"value":"/ instead of using this function together with the `unsafe` method","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385848,"byte_end":3385916,"line_start":1683,"line_end":1683,"column_start":1,"column_end":69}},{"value":"/ `as_bytes_mut()` on `&mut str`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385917,"byte_end":3385952,"line_start":1684,"line_end":1684,"column_start":1,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3385953,"byte_end":3385970,"line_start":1685,"line_end":1685,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386868,"byte_end":3386896,"line_start":1706,"line_end":1706,"column_start":8,"column_end":36},"name":"convert_utf16_to_str_partial","qualname":"::mem::convert_utf16_to_str_partial","value":"pub fn convert_utf16_to_str_partial(&[u16], &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386202,"byte_end":3386277,"line_start":1693,"line_end":1693,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER such that the validity of the output is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386278,"byte_end":3386352,"line_start":1694,"line_end":1694,"column_start":1,"column_end":75}},{"value":"/ signaled using the Rust type system with potentially insufficient output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386353,"byte_end":3386429,"line_start":1695,"line_end":1695,"column_start":1,"column_end":77}},{"value":"/ space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386430,"byte_end":3386440,"line_start":1696,"line_end":1696,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386441,"byte_end":3386444,"line_start":1697,"line_end":1697,"column_start":1,"column_end":4}},{"value":"/ Returns the number of code units read and the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386445,"byte_end":3386519,"line_start":1698,"line_end":1698,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386520,"byte_end":3386523,"line_start":1699,"line_end":1699,"column_start":1,"column_end":4}},{"value":"/ Not all code units are read if there isn't enough output space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386524,"byte_end":3386591,"line_start":1700,"line_end":1700,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386592,"byte_end":3386595,"line_start":1701,"line_end":1701,"column_start":1,"column_end":4}},{"value":"/ Note  that this method isn't designed for general streamability but for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386596,"byte_end":3386671,"line_start":1702,"line_end":1702,"column_start":1,"column_end":76}},{"value":"/ not allocating memory for the worst case up front. Specifically,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386672,"byte_end":3386740,"line_start":1703,"line_end":1703,"column_start":1,"column_end":69}},{"value":"/ if the input starts with or ends with an unpaired surrogate, those are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386741,"byte_end":3386815,"line_start":1704,"line_end":1704,"column_start":1,"column_end":75}},{"value":"/ replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3386816,"byte_end":3386860,"line_start":1705,"line_end":1705,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387723,"byte_end":3387743,"line_start":1731,"line_end":1731,"column_start":8,"column_end":28},"name":"convert_utf16_to_str","qualname":"::mem::convert_utf16_to_str","value":"pub fn convert_utf16_to_str(&[u16], &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system.","sig":null,"attributes":[{"value":"/ Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387262,"byte_end":3387337,"line_start":1718,"line_end":1718,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER such that the validity of the output is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387338,"byte_end":3387412,"line_start":1719,"line_end":1719,"column_start":1,"column_end":75}},{"value":"/ signaled using the Rust type system.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387413,"byte_end":3387453,"line_start":1720,"line_end":1720,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387454,"byte_end":3387457,"line_start":1721,"line_end":1721,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387458,"byte_end":3387533,"line_start":1722,"line_end":1722,"column_start":1,"column_end":76}},{"value":"/ source buffer times three.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387534,"byte_end":3387564,"line_start":1723,"line_end":1723,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387565,"byte_end":3387568,"line_start":1724,"line_end":1724,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387569,"byte_end":3387609,"line_start":1725,"line_end":1725,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387610,"byte_end":3387613,"line_start":1726,"line_end":1726,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387614,"byte_end":3387626,"line_start":1727,"line_end":1727,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387627,"byte_end":3387630,"line_start":1728,"line_end":1728,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387631,"byte_end":3387697,"line_start":1729,"line_end":1729,"column_start":1,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387698,"byte_end":3387715,"line_start":1730,"line_end":1730,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388342,"byte_end":3388365,"line_start":1749,"line_end":1749,"column_start":8,"column_end":31},"name":"convert_latin1_to_utf16","qualname":"::mem::convert_latin1_to_utf16","value":"pub fn convert_latin1_to_utf16(&[u8], &mut [u16])","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3387944,"byte_end":3388020,"line_start":1738,"line_end":1738,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388021,"byte_end":3388070,"line_start":1739,"line_end":1739,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388071,"byte_end":3388074,"line_start":1740,"line_end":1740,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388075,"byte_end":3388150,"line_start":1741,"line_end":1741,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388151,"byte_end":3388169,"line_start":1742,"line_end":1742,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388170,"byte_end":3388173,"line_start":1743,"line_end":1743,"column_start":1,"column_end":4}},{"value":"/ The number of `u16`s written equals the length of the source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388174,"byte_end":3388246,"line_start":1744,"line_end":1744,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388247,"byte_end":3388250,"line_start":1745,"line_end":1745,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388251,"byte_end":3388263,"line_start":1746,"line_end":1746,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388264,"byte_end":3388267,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388268,"byte_end":3388334,"line_start":1748,"line_end":1748,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389297,"byte_end":3389327,"line_start":1775,"line_end":1775,"column_start":8,"column_end":38},"name":"convert_latin1_to_utf8_partial","qualname":"::mem::convert_latin1_to_utf8_partial","value":"pub fn convert_latin1_to_utf8_partial(&[u8], &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388765,"byte_end":3388841,"line_start":1762,"line_end":1762,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-8 with potentially insufficient","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388842,"byte_end":3388919,"line_start":1763,"line_end":1763,"column_start":1,"column_end":78}},{"value":"/ output space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388920,"byte_end":3388937,"line_start":1764,"line_end":1764,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388938,"byte_end":3388941,"line_start":1765,"line_end":1765,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes read and the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3388942,"byte_end":3389011,"line_start":1766,"line_end":1766,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389012,"byte_end":3389015,"line_start":1767,"line_end":1767,"column_start":1,"column_end":4}},{"value":"/ If the output isn't large enough, not all input is consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389016,"byte_end":3389080,"line_start":1768,"line_end":1768,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389081,"byte_end":3389084,"line_start":1769,"line_end":1769,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389085,"byte_end":3389097,"line_start":1770,"line_end":1770,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389098,"byte_end":3389101,"line_start":1771,"line_end":1771,"column_start":1,"column_end":4}},{"value":"/ If you want to convert into a `&mut str`, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389102,"byte_end":3389151,"line_start":1772,"line_end":1772,"column_start":1,"column_end":50}},{"value":"/ `convert_utf16_to_str_partial()` instead of using this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389152,"byte_end":3389219,"line_start":1773,"line_end":1773,"column_start":1,"column_end":68}},{"value":"/ together with the `unsafe` method `as_bytes_mut()` on `&mut str`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3389220,"byte_end":3389289,"line_start":1774,"line_end":1774,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391247,"byte_end":3391269,"line_start":1831,"line_end":1831,"column_start":8,"column_end":30},"name":"convert_latin1_to_utf8","qualname":"::mem::convert_latin1_to_utf8","value":"pub fn convert_latin1_to_utf8(&[u8], &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390547,"byte_end":3390623,"line_start":1812,"line_end":1812,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390624,"byte_end":3390672,"line_start":1813,"line_end":1813,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390673,"byte_end":3390676,"line_start":1814,"line_end":1814,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390677,"byte_end":3390752,"line_start":1815,"line_end":1815,"column_start":1,"column_end":76}},{"value":"/ source buffer times two.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390753,"byte_end":3390781,"line_start":1816,"line_end":1816,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390782,"byte_end":3390785,"line_start":1817,"line_end":1817,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390786,"byte_end":3390826,"line_start":1818,"line_end":1818,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390827,"byte_end":3390830,"line_start":1819,"line_end":1819,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390831,"byte_end":3390843,"line_start":1820,"line_end":1820,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390844,"byte_end":3390847,"line_start":1821,"line_end":1821,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390848,"byte_end":3390914,"line_start":1822,"line_end":1822,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390915,"byte_end":3390918,"line_start":1823,"line_end":1823,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390919,"byte_end":3390931,"line_start":1824,"line_end":1824,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390932,"byte_end":3390935,"line_start":1825,"line_end":1825,"column_start":1,"column_end":4}},{"value":"/ Note that this function may write garbage beyond the number of bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3390936,"byte_end":3391008,"line_start":1826,"line_end":1826,"column_start":1,"column_end":73}},{"value":"/ indicated by the return value, so using a `&mut str` interpreted as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391009,"byte_end":3391080,"line_start":1827,"line_end":1827,"column_start":1,"column_end":72}},{"value":"/ `&mut [u8]` as the destination is not safe. If you want to convert into","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391081,"byte_end":3391156,"line_start":1828,"line_end":1828,"column_start":1,"column_end":76}},{"value":"/ a `&mut str`, use `convert_utf16_to_str()` instead of this function.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391157,"byte_end":3391229,"line_start":1829,"line_end":1829,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391230,"byte_end":3391239,"line_start":1830,"line_end":1830,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391969,"byte_end":3391998,"line_start":1850,"line_end":1850,"column_start":8,"column_end":37},"name":"convert_latin1_to_str_partial","qualname":"::mem::convert_latin1_to_str_partial","value":"pub fn convert_latin1_to_str_partial(&[u8], &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391556,"byte_end":3391632,"line_start":1841,"line_end":1841,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391633,"byte_end":3391710,"line_start":1842,"line_end":1842,"column_start":1,"column_end":78}},{"value":"/ output is signaled using the Rust type system with potentially insufficient","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391711,"byte_end":3391790,"line_start":1843,"line_end":1843,"column_start":1,"column_end":80}},{"value":"/ output space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391791,"byte_end":3391808,"line_start":1844,"line_end":1844,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391809,"byte_end":3391812,"line_start":1845,"line_end":1845,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes read and the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391813,"byte_end":3391882,"line_start":1846,"line_end":1846,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391883,"byte_end":3391886,"line_start":1847,"line_end":1847,"column_start":1,"column_end":4}},{"value":"/ If the output isn't large enough, not all input is consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391887,"byte_end":3391951,"line_start":1848,"line_end":1848,"column_start":1,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3391952,"byte_end":3391961,"line_start":1849,"line_end":1849,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392967,"byte_end":3392988,"line_start":1880,"line_end":1880,"column_start":8,"column_end":29},"name":"convert_latin1_to_str","qualname":"::mem::convert_latin1_to_str","value":"pub fn convert_latin1_to_str(&[u8], &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392502,"byte_end":3392578,"line_start":1867,"line_end":1867,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392579,"byte_end":3392656,"line_start":1868,"line_end":1868,"column_start":1,"column_end":78}},{"value":"/ output is signaled using the Rust type system.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392657,"byte_end":3392707,"line_start":1869,"line_end":1869,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392708,"byte_end":3392711,"line_start":1870,"line_end":1870,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392712,"byte_end":3392787,"line_start":1871,"line_end":1871,"column_start":1,"column_end":76}},{"value":"/ source buffer times two.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392788,"byte_end":3392816,"line_start":1872,"line_end":1872,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392817,"byte_end":3392820,"line_start":1873,"line_end":1873,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392821,"byte_end":3392861,"line_start":1874,"line_end":1874,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392862,"byte_end":3392865,"line_start":1875,"line_end":1875,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392866,"byte_end":3392878,"line_start":1876,"line_end":1876,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392879,"byte_end":3392882,"line_start":1877,"line_end":1877,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392883,"byte_end":3392949,"line_start":1878,"line_end":1878,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3392950,"byte_end":3392959,"line_start":1879,"line_end":1879,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394321,"byte_end":3394349,"line_start":1913,"line_end":1913,"column_start":8,"column_end":36},"name":"convert_utf8_to_latin1_lossy","qualname":"::mem::convert_utf8_to_latin1_lossy","value":"pub fn convert_utf8_to_latin1_lossy(&[u8], &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"/ If the input is valid UTF-8 representing only Unicode code points from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393273,"byte_end":3393347,"line_start":1890,"line_end":1890,"column_start":1,"column_end":75}},{"value":"/ U+0000 to U+00FF, inclusive, converts the input into output that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393348,"byte_end":3393416,"line_start":1891,"line_end":1891,"column_start":1,"column_end":69}},{"value":"/ represents the value of each code point as the unsigned byte value of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393417,"byte_end":3393490,"line_start":1892,"line_end":1892,"column_start":1,"column_end":74}},{"value":"/ each output byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393491,"byte_end":3393512,"line_start":1893,"line_end":1893,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393513,"byte_end":3393516,"line_start":1894,"line_end":1894,"column_start":1,"column_end":4}},{"value":"/ If the input does not fulfill the condition stated above, this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393517,"byte_end":3393592,"line_start":1895,"line_end":1895,"column_start":1,"column_end":76}},{"value":"/ panics if debug assertions are enabled (and fuzzing isn't) and otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393593,"byte_end":3393669,"line_start":1896,"line_end":1896,"column_start":1,"column_end":77}},{"value":"/ does something that is memory-safe without any promises about any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393670,"byte_end":3393739,"line_start":1897,"line_end":1897,"column_start":1,"column_end":70}},{"value":"/ properties of the output. In particular, callers shouldn't assume the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393740,"byte_end":3393813,"line_start":1898,"line_end":1898,"column_start":1,"column_end":74}},{"value":"/ output to be the same across crate versions or CPU architectures and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393814,"byte_end":3393886,"line_start":1899,"line_end":1899,"column_start":1,"column_end":73}},{"value":"/ should not assume that non-ASCII input can't map to ASCII output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393887,"byte_end":3393956,"line_start":1900,"line_end":1900,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393957,"byte_end":3393960,"line_start":1901,"line_end":1901,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3393961,"byte_end":3394036,"line_start":1902,"line_end":1902,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394037,"byte_end":3394055,"line_start":1903,"line_end":1903,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394056,"byte_end":3394059,"line_start":1904,"line_end":1904,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394060,"byte_end":3394100,"line_start":1905,"line_end":1905,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394101,"byte_end":3394104,"line_start":1906,"line_end":1906,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394105,"byte_end":3394117,"line_start":1907,"line_end":1907,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394118,"byte_end":3394121,"line_start":1908,"line_end":1908,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394122,"byte_end":3394188,"line_start":1909,"line_end":1909,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394189,"byte_end":3394192,"line_start":1910,"line_end":1910,"column_start":1,"column_end":4}},{"value":"/ If debug assertions are enabled (and not fuzzing) and the input is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394193,"byte_end":3394263,"line_start":1911,"line_end":1911,"column_start":1,"column_end":71}},{"value":"/ not in the range U+0000 to U+00FF, inclusive.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3394264,"byte_end":3394313,"line_start":1912,"line_end":1912,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396550,"byte_end":3396579,"line_start":1975,"line_end":1975,"column_start":8,"column_end":37},"name":"convert_utf16_to_latin1_lossy","qualname":"::mem::convert_utf16_to_latin1_lossy","value":"pub fn convert_utf16_to_latin1_lossy(&[u16], &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-16 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"/ If the input is valid UTF-16 representing only Unicode code points from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395467,"byte_end":3395542,"line_start":1952,"line_end":1952,"column_start":1,"column_end":76}},{"value":"/ U+0000 to U+00FF, inclusive, converts the input into output that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395543,"byte_end":3395611,"line_start":1953,"line_end":1953,"column_start":1,"column_end":69}},{"value":"/ represents the value of each code point as the unsigned byte value of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395612,"byte_end":3395685,"line_start":1954,"line_end":1954,"column_start":1,"column_end":74}},{"value":"/ each output byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395686,"byte_end":3395707,"line_start":1955,"line_end":1955,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395708,"byte_end":3395711,"line_start":1956,"line_end":1956,"column_start":1,"column_end":4}},{"value":"/ If the input does not fulfill the condition stated above, does something","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395712,"byte_end":3395788,"line_start":1957,"line_end":1957,"column_start":1,"column_end":77}},{"value":"/ that is memory-safe without any promises about any properties of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395789,"byte_end":3395861,"line_start":1958,"line_end":1958,"column_start":1,"column_end":73}},{"value":"/ output and will probably assert in debug builds in future versions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395862,"byte_end":3395933,"line_start":1959,"line_end":1959,"column_start":1,"column_end":72}},{"value":"/ In particular, callers shouldn't assume the output to be the same across","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3395934,"byte_end":3396010,"line_start":1960,"line_end":1960,"column_start":1,"column_end":77}},{"value":"/ crate versions or CPU architectures and should not assume that non-ASCII","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396011,"byte_end":3396087,"line_start":1961,"line_end":1961,"column_start":1,"column_end":77}},{"value":"/ input can't map to ASCII output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396088,"byte_end":3396124,"line_start":1962,"line_end":1962,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396125,"byte_end":3396128,"line_start":1963,"line_end":1963,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396129,"byte_end":3396204,"line_start":1964,"line_end":1964,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396205,"byte_end":3396223,"line_start":1965,"line_end":1965,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396224,"byte_end":3396227,"line_start":1966,"line_end":1966,"column_start":1,"column_end":4}},{"value":"/ The number of bytes written equals the length of the source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396228,"byte_end":3396299,"line_start":1967,"line_end":1967,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396300,"byte_end":3396303,"line_start":1968,"line_end":1968,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396304,"byte_end":3396316,"line_start":1969,"line_end":1969,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396317,"byte_end":3396320,"line_start":1970,"line_end":1970,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396321,"byte_end":3396387,"line_start":1971,"line_end":1971,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396388,"byte_end":3396391,"line_start":1972,"line_end":1972,"column_start":1,"column_end":4}},{"value":"/ (Probably in future versions if debug assertions are enabled (and not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396392,"byte_end":3396465,"line_start":1973,"line_end":1973,"column_start":1,"column_end":74}},{"value":"/ fuzzing) and the input is not in the range U+0000 to U+00FF, inclusive.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396466,"byte_end":3396542,"line_start":1974,"line_end":1974,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3397083,"byte_end":3397096,"line_start":1991,"line_end":1991,"column_start":8,"column_end":21},"name":"decode_latin1","qualname":"::mem::decode_latin1","value":"pub fn decode_latin1<'a>(&'a [u8]) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"/ Converts bytes whose unsigned value is interpreted as Unicode code point","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396861,"byte_end":3396937,"line_start":1986,"line_end":1986,"column_start":1,"column_end":77}},{"value":"/ (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396938,"byte_end":3396986,"line_start":1987,"line_end":1987,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396987,"byte_end":3396990,"line_start":1988,"line_end":1988,"column_start":1,"column_end":4}},{"value":"/ Borrows if input is ASCII-only. Performs a single heap allocation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3396991,"byte_end":3397060,"line_start":1989,"line_end":1989,"column_start":1,"column_end":70}},{"value":"/ otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3397061,"byte_end":3397075,"line_start":1990,"line_end":1990,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398604,"byte_end":3398623,"line_start":2025,"line_end":2025,"column_start":8,"column_end":27},"name":"encode_latin1_lossy","qualname":"::mem::encode_latin1_lossy","value":"pub fn encode_latin1_lossy<'a>(&'a str) -> Cow","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"/ If the input is valid UTF-8 representing only Unicode code points from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3397824,"byte_end":3397898,"line_start":2011,"line_end":2011,"column_start":1,"column_end":75}},{"value":"/ U+0000 to U+00FF, inclusive, converts the input into output that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3397899,"byte_end":3397967,"line_start":2012,"line_end":2012,"column_start":1,"column_end":69}},{"value":"/ represents the value of each code point as the unsigned byte value of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3397968,"byte_end":3398041,"line_start":2013,"line_end":2013,"column_start":1,"column_end":74}},{"value":"/ each output byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398042,"byte_end":3398063,"line_start":2014,"line_end":2014,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398064,"byte_end":3398067,"line_start":2015,"line_end":2015,"column_start":1,"column_end":4}},{"value":"/ If the input does not fulfill the condition stated above, this function","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398068,"byte_end":3398143,"line_start":2016,"line_end":2016,"column_start":1,"column_end":76}},{"value":"/ panics if debug assertions are enabled (and fuzzing isn't) and otherwise","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398144,"byte_end":3398220,"line_start":2017,"line_end":2017,"column_start":1,"column_end":77}},{"value":"/ does something that is memory-safe without any promises about any","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398221,"byte_end":3398290,"line_start":2018,"line_end":2018,"column_start":1,"column_end":70}},{"value":"/ properties of the output. In particular, callers shouldn't assume the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398291,"byte_end":3398364,"line_start":2019,"line_end":2019,"column_start":1,"column_end":74}},{"value":"/ output to be the same across crate versions or CPU architectures and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398365,"byte_end":3398437,"line_start":2020,"line_end":2020,"column_start":1,"column_end":73}},{"value":"/ should not assume that non-ASCII input can't map to ASCII output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398438,"byte_end":3398507,"line_start":2021,"line_end":2021,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398508,"byte_end":3398511,"line_start":2022,"line_end":2022,"column_start":1,"column_end":4}},{"value":"/ Borrows if input is ASCII-only. Performs a single heap allocation","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398512,"byte_end":3398581,"line_start":2023,"line_end":2023,"column_start":1,"column_end":70}},{"value":"/ otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3398582,"byte_end":3398596,"line_start":2024,"line_end":2024,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399407,"byte_end":3399424,"line_start":2047,"line_end":2047,"column_start":8,"column_end":25},"name":"utf16_valid_up_to","qualname":"::mem::utf16_valid_up_to","value":"pub fn utf16_valid_up_to(&[u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first unpaired surrogate or, if the input is\n valid UTF-16 in its entirety, the length of the input.\n","sig":null,"attributes":[{"value":"/ Returns the index of the first unpaired surrogate or, if the input is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399267,"byte_end":3399340,"line_start":2045,"line_end":2045,"column_start":1,"column_end":74}},{"value":"/ valid UTF-16 in its entirety, the length of the input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399341,"byte_end":3399399,"line_start":2046,"line_end":2046,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399659,"byte_end":3399676,"line_start":2054,"line_end":2054,"column_start":8,"column_end":25},"name":"utf8_latin1_up_to","qualname":"::mem::utf8_latin1_up_to","value":"pub fn utf8_latin1_up_to(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of first byte that starts an invalid byte\n sequence or a non-Latin1 byte sequence, or the length of the\n string if there are neither.\n","sig":null,"attributes":[{"value":"/ Returns the index of first byte that starts an invalid byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399490,"byte_end":3399553,"line_start":2051,"line_end":2051,"column_start":1,"column_end":64}},{"value":"/ sequence or a non-Latin1 byte sequence, or the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399554,"byte_end":3399618,"line_start":2052,"line_end":2052,"column_start":1,"column_end":65}},{"value":"/ string if there are neither.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399619,"byte_end":3399651,"line_start":2053,"line_end":2053,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399896,"byte_end":3399912,"line_start":2060,"line_end":2060,"column_start":8,"column_end":24},"name":"str_latin1_up_to","qualname":"::mem::str_latin1_up_to","value":"pub fn str_latin1_up_to(&str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of first byte that starts a non-Latin1 byte\n sequence, or the length of the string if there are none.\n","sig":null,"attributes":[{"value":"/ Returns the index of first byte that starts a non-Latin1 byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399762,"byte_end":3399827,"line_start":2058,"line_end":2058,"column_start":1,"column_end":66}},{"value":"/ sequence, or the length of the string if there are none.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399828,"byte_end":3399888,"line_start":2059,"line_end":2059,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400091,"byte_end":3400112,"line_start":2066,"line_end":2066,"column_start":8,"column_end":29},"name":"ensure_utf16_validity","qualname":"::mem::ensure_utf16_validity","value":"pub fn ensure_utf16_validity(&mut [u16])","parent":null,"children":[],"decl_id":null,"docs":" Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.\n","sig":null,"attributes":[{"value":"/ Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3399996,"byte_end":3400073,"line_start":2064,"line_end":2064,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400074,"byte_end":3400083,"line_start":2065,"line_end":2065,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400731,"byte_end":3400750,"line_start":2089,"line_end":2089,"column_start":8,"column_end":27},"name":"copy_ascii_to_ascii","qualname":"::mem::copy_ascii_to_ascii","value":"pub fn copy_ascii_to_ascii(&[u8], &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination up to the first non-ASCII byte\n (or the end of the input if it is ASCII in its entirety).","sig":null,"attributes":[{"value":"/ Copies ASCII from source to destination up to the first non-ASCII byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400355,"byte_end":3400429,"line_start":2078,"line_end":2078,"column_start":1,"column_end":75}},{"value":"/ (or the end of the input if it is ASCII in its entirety).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400430,"byte_end":3400491,"line_start":2079,"line_end":2079,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400492,"byte_end":3400495,"line_start":2080,"line_end":2080,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400496,"byte_end":3400571,"line_start":2081,"line_end":2081,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400572,"byte_end":3400590,"line_start":2082,"line_end":2082,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400591,"byte_end":3400594,"line_start":2083,"line_end":2083,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400595,"byte_end":3400635,"line_start":2084,"line_end":2084,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400636,"byte_end":3400639,"line_start":2085,"line_end":2085,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400640,"byte_end":3400652,"line_start":2086,"line_end":2086,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400653,"byte_end":3400656,"line_start":2087,"line_end":2087,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3400657,"byte_end":3400723,"line_start":2088,"line_end":2088,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401483,"byte_end":3401508,"line_start":2115,"line_end":2115,"column_start":8,"column_end":33},"name":"copy_ascii_to_basic_latin","qualname":"::mem::copy_ascii_to_basic_latin","value":"pub fn copy_ascii_to_basic_latin(&[u8], &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination zero-extending it to UTF-16 up to\n the first non-ASCII byte (or the end of the input if it is ASCII in its\n entirety).","sig":null,"attributes":[{"value":"/ Copies ASCII from source to destination zero-extending it to UTF-16 up to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401074,"byte_end":3401151,"line_start":2103,"line_end":2103,"column_start":1,"column_end":78}},{"value":"/ the first non-ASCII byte (or the end of the input if it is ASCII in its","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401152,"byte_end":3401227,"line_start":2104,"line_end":2104,"column_start":1,"column_end":76}},{"value":"/ entirety).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401228,"byte_end":3401242,"line_start":2105,"line_end":2105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401243,"byte_end":3401246,"line_start":2106,"line_end":2106,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401247,"byte_end":3401322,"line_start":2107,"line_end":2107,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401323,"byte_end":3401341,"line_start":2108,"line_end":2108,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401342,"byte_end":3401345,"line_start":2109,"line_end":2109,"column_start":1,"column_end":4}},{"value":"/ Returns the number of `u16`s written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401346,"byte_end":3401387,"line_start":2110,"line_end":2110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401388,"byte_end":3401391,"line_start":2111,"line_end":2111,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401392,"byte_end":3401404,"line_start":2112,"line_end":2112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401405,"byte_end":3401408,"line_start":2113,"line_end":2113,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401409,"byte_end":3401475,"line_start":2114,"line_end":2114,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402264,"byte_end":3402289,"line_start":2141,"line_end":2141,"column_start":8,"column_end":33},"name":"copy_basic_latin_to_ascii","qualname":"::mem::copy_basic_latin_to_ascii","value":"pub fn copy_basic_latin_to_ascii(&[u16], &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies Basic Latin from source to destination narrowing it to ASCII up to\n the first non-Basic Latin code unit (or the end of the input if it is\n Basic Latin in its entirety).","sig":null,"attributes":[{"value":"/ Copies Basic Latin from source to destination narrowing it to ASCII up to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401839,"byte_end":3401916,"line_start":2129,"line_end":2129,"column_start":1,"column_end":78}},{"value":"/ the first non-Basic Latin code unit (or the end of the input if it is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401917,"byte_end":3401990,"line_start":2130,"line_end":2130,"column_start":1,"column_end":74}},{"value":"/ Basic Latin in its entirety).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3401991,"byte_end":3402024,"line_start":2131,"line_end":2131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402025,"byte_end":3402028,"line_start":2132,"line_end":2132,"column_start":1,"column_end":4}},{"value":"/ The length of the destination buffer must be at least the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402029,"byte_end":3402104,"line_start":2133,"line_end":2133,"column_start":1,"column_end":76}},{"value":"/ source buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402105,"byte_end":3402123,"line_start":2134,"line_end":2134,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402124,"byte_end":3402127,"line_start":2135,"line_end":2135,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402128,"byte_end":3402168,"line_start":2136,"line_end":2136,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402169,"byte_end":3402172,"line_start":2137,"line_end":2137,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402173,"byte_end":3402185,"line_start":2138,"line_end":2138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402186,"byte_end":3402189,"line_start":2139,"line_end":2139,"column_start":1,"column_end":4}},{"value":"/ Panics if the destination buffer is shorter than stated above.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/mem.rs","byte_start":3402190,"byte_end":3402256,"line_start":2140,"line_end":2140,"column_start":1,"column_end":67}}]},{"kind":"Static","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43728,"byte_end":43737,"line_start":789,"line_end":789,"column_start":12,"column_end":21},"name":"BIG5_INIT","qualname":"::BIG5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Big5](static.BIG5.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [Big5](static.BIG5.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43140,"byte_end":43202,"line_start":777,"line_end":777,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43203,"byte_end":43206,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43207,"byte_end":43264,"line_start":779,"line_end":779,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43265,"byte_end":43325,"line_start":780,"line_end":780,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43326,"byte_end":43386,"line_start":781,"line_end":781,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43387,"byte_end":43450,"line_start":782,"line_end":782,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43451,"byte_end":43454,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43455,"byte_end":43515,"line_start":784,"line_end":784,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43516,"byte_end":43578,"line_start":785,"line_end":785,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43579,"byte_end":43642,"line_start":786,"line_end":786,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43643,"byte_end":43705,"line_start":787,"line_end":787,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43706,"byte_end":43716,"line_start":788,"line_end":788,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44927,"byte_end":44931,"line_start":817,"line_end":817,"column_start":12,"column_end":16},"name":"BIG5","qualname":"::BIG5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Big5 encoding.","sig":null,"attributes":[{"value":"/ The Big5 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43819,"byte_end":43841,"line_start":794,"line_end":794,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43842,"byte_end":43845,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ This is Big5 with HKSCS with mappings to more recent Unicode assignments","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43846,"byte_end":43922,"line_start":796,"line_end":796,"column_start":1,"column_end":77}},{"value":"/ instead of the Private Use Area code points that have been used historically.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":43923,"byte_end":44004,"line_start":797,"line_end":797,"column_start":1,"column_end":82}},{"value":"/ It is believed to be able to decode existing Web content in a way that makes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44005,"byte_end":44085,"line_start":798,"line_end":798,"column_start":1,"column_end":81}},{"value":"/ sense.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44086,"byte_end":44096,"line_start":799,"line_end":799,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44097,"byte_end":44100,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ To avoid form submissions generating data that Web servers don't understand,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44101,"byte_end":44181,"line_start":801,"line_end":801,"column_start":1,"column_end":81}},{"value":"/ the encoder doesn't use the HKSCS byte sequences that precede the unextended","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44182,"byte_end":44262,"line_start":802,"line_end":802,"column_start":1,"column_end":81}},{"value":"/ Big5 in the lexical order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44263,"byte_end":44293,"line_start":803,"line_end":803,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44294,"byte_end":44297,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/big5.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44298,"byte_end":44368,"line_start":805,"line_end":805,"column_start":1,"column_end":71}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/big5-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44369,"byte_end":44452,"line_start":806,"line_end":806,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44453,"byte_end":44456,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ This encoding is designed to be suited for decoding the Windows code page 950","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44457,"byte_end":44538,"line_start":808,"line_end":808,"column_start":1,"column_end":82}},{"value":"/ and its HKSCS patched \"951\" variant such that the text makes sense, given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44539,"byte_end":44616,"line_start":809,"line_end":809,"column_start":1,"column_end":78}},{"value":"/ assignments that Unicode has made after those encodings used Private Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44617,"byte_end":44693,"line_start":810,"line_end":810,"column_start":1,"column_end":77}},{"value":"/ Area characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44694,"byte_end":44714,"line_start":811,"line_end":811,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44715,"byte_end":44718,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44719,"byte_end":44780,"line_start":813,"line_end":813,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44781,"byte_end":44843,"line_start":814,"line_end":814,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44844,"byte_end":44901,"line_start":815,"line_end":815,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44902,"byte_end":44915,"line_start":816,"line_end":816,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45558,"byte_end":45569,"line_start":831,"line_end":831,"column_start":12,"column_end":23},"name":"EUC_JP_INIT","qualname":"::EUC_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-JP](static.EUC_JP.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [EUC-JP](static.EUC_JP.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":44966,"byte_end":45032,"line_start":819,"line_end":819,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45033,"byte_end":45036,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45037,"byte_end":45094,"line_start":821,"line_end":821,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45095,"byte_end":45155,"line_start":822,"line_end":822,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45156,"byte_end":45216,"line_start":823,"line_end":823,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45217,"byte_end":45280,"line_start":824,"line_end":824,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45281,"byte_end":45284,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45285,"byte_end":45345,"line_start":826,"line_end":826,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45346,"byte_end":45408,"line_start":827,"line_end":827,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45409,"byte_end":45472,"line_start":828,"line_end":828,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45473,"byte_end":45535,"line_start":829,"line_end":829,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45536,"byte_end":45546,"line_start":830,"line_end":830,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46545,"byte_end":46551,"line_start":855,"line_end":855,"column_start":12,"column_end":18},"name":"EUC_JP","qualname":"::EUC_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-JP encoding.","sig":null,"attributes":[{"value":"/ The EUC-JP encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45654,"byte_end":45678,"line_start":836,"line_end":836,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45679,"byte_end":45682,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ This is the legacy Unix encoding for Japanese.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45683,"byte_end":45733,"line_start":838,"line_end":838,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45734,"byte_end":45737,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ For compatibility with Web servers that don't expect three-byte sequences","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45738,"byte_end":45815,"line_start":840,"line_end":840,"column_start":1,"column_end":78}},{"value":"/ in form submissions, the encoder doesn't generate three-byte sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45816,"byte_end":45891,"line_start":841,"line_end":841,"column_start":1,"column_end":76}},{"value":"/ That is, the JIS X 0212 support is decode-only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45892,"byte_end":45943,"line_start":842,"line_end":842,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45944,"byte_end":45947,"line_start":843,"line_end":843,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/euc-jp.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":45948,"byte_end":46020,"line_start":844,"line_end":844,"column_start":1,"column_end":73}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/euc-jp-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46021,"byte_end":46106,"line_start":845,"line_end":845,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46107,"byte_end":46110,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ This encoding roughly matches the Windows code page 20932. There are error","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46111,"byte_end":46189,"line_start":847,"line_end":847,"column_start":1,"column_end":79}},{"value":"/ handling differences and a handful of 2-byte sequences that decode differently.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46190,"byte_end":46273,"line_start":848,"line_end":848,"column_start":1,"column_end":84}},{"value":"/ Additionall, Windows doesn't support 3-byte sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46274,"byte_end":46332,"line_start":849,"line_end":849,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46333,"byte_end":46336,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46337,"byte_end":46398,"line_start":851,"line_end":851,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46399,"byte_end":46461,"line_start":852,"line_end":852,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46462,"byte_end":46519,"line_start":853,"line_end":853,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46520,"byte_end":46533,"line_start":854,"line_end":854,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47180,"byte_end":47191,"line_start":869,"line_end":869,"column_start":12,"column_end":23},"name":"EUC_KR_INIT","qualname":"::EUC_KR_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-KR](static.EUC_KR.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [EUC-KR](static.EUC_KR.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46588,"byte_end":46654,"line_start":857,"line_end":857,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46655,"byte_end":46658,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46659,"byte_end":46716,"line_start":859,"line_end":859,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46717,"byte_end":46777,"line_start":860,"line_end":860,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46778,"byte_end":46838,"line_start":861,"line_end":861,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46839,"byte_end":46902,"line_start":862,"line_end":862,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46903,"byte_end":46906,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46907,"byte_end":46967,"line_start":864,"line_end":864,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":46968,"byte_end":47030,"line_start":865,"line_end":865,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47031,"byte_end":47094,"line_start":866,"line_end":866,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47095,"byte_end":47157,"line_start":867,"line_end":867,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47158,"byte_end":47168,"line_start":868,"line_end":868,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48148,"byte_end":48154,"line_start":891,"line_end":891,"column_start":12,"column_end":18},"name":"EUC_KR","qualname":"::EUC_KR","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-KR encoding.","sig":null,"attributes":[{"value":"/ The EUC-KR encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47276,"byte_end":47300,"line_start":874,"line_end":874,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47301,"byte_end":47304,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ This is the Korean encoding for Windows. It extends the Unix legacy encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47305,"byte_end":47385,"line_start":876,"line_end":876,"column_start":1,"column_end":81}},{"value":"/ for Korean, based on KS X 1001 (which also formed the base of MacKorean on Mac OS","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47386,"byte_end":47471,"line_start":877,"line_end":877,"column_start":1,"column_end":86}},{"value":"/ Classic), with all the characters from the Hangul Syllables block of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47472,"byte_end":47553,"line_start":878,"line_end":878,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47554,"byte_end":47557,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/euc-kr.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47558,"byte_end":47630,"line_start":880,"line_end":880,"column_start":1,"column_end":73}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/euc-kr-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47631,"byte_end":47716,"line_start":881,"line_end":881,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47717,"byte_end":47720,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 949, except Windows decodes byte 0x80","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47721,"byte_end":47806,"line_start":883,"line_end":883,"column_start":1,"column_end":86}},{"value":"/ to U+0080 and some byte sequences that are error per the Encoding Standard to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47807,"byte_end":47888,"line_start":884,"line_end":884,"column_start":1,"column_end":82}},{"value":"/ the question mark or the Private Use Area.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47889,"byte_end":47935,"line_start":885,"line_end":885,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47936,"byte_end":47939,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":47940,"byte_end":48001,"line_start":887,"line_end":887,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48002,"byte_end":48064,"line_start":888,"line_end":888,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48065,"byte_end":48122,"line_start":889,"line_end":889,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48123,"byte_end":48136,"line_start":890,"line_end":890,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48777,"byte_end":48785,"line_start":905,"line_end":905,"column_start":12,"column_end":20},"name":"GBK_INIT","qualname":"::GBK_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [GBK](static.GBK.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [GBK](static.GBK.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48191,"byte_end":48251,"line_start":893,"line_end":893,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48252,"byte_end":48255,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48256,"byte_end":48313,"line_start":895,"line_end":895,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48314,"byte_end":48374,"line_start":896,"line_end":896,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48375,"byte_end":48435,"line_start":897,"line_end":897,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48436,"byte_end":48499,"line_start":898,"line_end":898,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48500,"byte_end":48503,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48504,"byte_end":48564,"line_start":900,"line_end":900,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48565,"byte_end":48627,"line_start":901,"line_end":901,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48628,"byte_end":48691,"line_start":902,"line_end":902,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48692,"byte_end":48754,"line_start":903,"line_end":903,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48755,"byte_end":48765,"line_start":904,"line_end":904,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50070,"byte_end":50073,"line_start":933,"line_end":933,"column_start":12,"column_end":15},"name":"GBK","qualname":"::GBK","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The GBK encoding.","sig":null,"attributes":[{"value":"/ The GBK encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48865,"byte_end":48886,"line_start":910,"line_end":910,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48887,"byte_end":48890,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ The decoder for this encoding is the same as the decoder for gb18030.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48891,"byte_end":48964,"line_start":912,"line_end":912,"column_start":1,"column_end":74}},{"value":"/ The encoder side of this encoding is GBK with Windows code page 936 euro","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":48965,"byte_end":49041,"line_start":913,"line_end":913,"column_start":1,"column_end":77}},{"value":"/ sign behavior. GBK extends GB2312-80 to cover the CJK Unified Ideographs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49042,"byte_end":49118,"line_start":914,"line_end":914,"column_start":1,"column_end":77}},{"value":"/ Unicode block as well as a handful of ideographs from the CJK Unified","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49119,"byte_end":49192,"line_start":915,"line_end":915,"column_start":1,"column_end":74}},{"value":"/ Ideographs Extension A and CJK Compatibility Ideographs blocks.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49193,"byte_end":49260,"line_start":916,"line_end":916,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49261,"byte_end":49264,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ Unlike e.g. in the case of ISO-8859-1 and windows-1252, GBK encoder wasn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49265,"byte_end":49343,"line_start":918,"line_end":918,"column_start":1,"column_end":79}},{"value":"/ unified with the gb18030 encoder in the Encoding Standard out of concern","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49344,"byte_end":49420,"line_start":919,"line_end":919,"column_start":1,"column_end":77}},{"value":"/ that servers that expect GBK form submissions might not be able to handle","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49421,"byte_end":49498,"line_start":920,"line_end":920,"column_start":1,"column_end":78}},{"value":"/ the four-byte sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49499,"byte_end":49527,"line_start":921,"line_end":921,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49528,"byte_end":49531,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ [Index visualization for the two-byte sequences](https://encoding.spec.whatwg.org/gb18030.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49532,"byte_end":49632,"line_start":923,"line_end":923,"column_start":1,"column_end":101}},{"value":"/ [Visualization of BMP coverage of the two-byte index](https://encoding.spec.whatwg.org/gb18030-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49633,"byte_end":49741,"line_start":924,"line_end":924,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49742,"byte_end":49745,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ The encoder of this encoding roughly matches the Windows code page 936.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49746,"byte_end":49821,"line_start":926,"line_end":926,"column_start":1,"column_end":76}},{"value":"/ The decoder side is a superset.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49822,"byte_end":49857,"line_start":927,"line_end":927,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49858,"byte_end":49861,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49862,"byte_end":49923,"line_start":929,"line_end":929,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49924,"byte_end":49986,"line_start":930,"line_end":930,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":49987,"byte_end":50044,"line_start":931,"line_end":931,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50045,"byte_end":50058,"line_start":932,"line_end":932,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50699,"byte_end":50710,"line_start":947,"line_end":947,"column_start":12,"column_end":23},"name":"IBM866_INIT","qualname":"::IBM866_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [IBM866](static.IBM866.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [IBM866](static.IBM866.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50107,"byte_end":50173,"line_start":935,"line_end":935,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50174,"byte_end":50177,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50178,"byte_end":50235,"line_start":937,"line_end":937,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50236,"byte_end":50296,"line_start":938,"line_end":938,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50297,"byte_end":50357,"line_start":939,"line_end":939,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50358,"byte_end":50421,"line_start":940,"line_end":940,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50422,"byte_end":50425,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50426,"byte_end":50486,"line_start":942,"line_end":942,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50487,"byte_end":50549,"line_start":943,"line_end":943,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50550,"byte_end":50613,"line_start":944,"line_end":944,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50614,"byte_end":50676,"line_start":945,"line_end":945,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50677,"byte_end":50687,"line_start":946,"line_end":946,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51501,"byte_end":51507,"line_start":967,"line_end":967,"column_start":12,"column_end":18},"name":"IBM866","qualname":"::IBM866","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The IBM866 encoding.","sig":null,"attributes":[{"value":"/ The IBM866 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50848,"byte_end":50872,"line_start":952,"line_end":952,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50873,"byte_end":50876,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ This the most notable one of the DOS Cyrillic code pages. It has the same","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50877,"byte_end":50954,"line_start":954,"line_end":954,"column_start":1,"column_end":78}},{"value":"/ box drawing characters as code page 437, so it can be used for decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":50955,"byte_end":51030,"line_start":955,"line_end":955,"column_start":1,"column_end":76}},{"value":"/ DOS-era ASCII + box drawing data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51031,"byte_end":51068,"line_start":956,"line_end":956,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51069,"byte_end":51072,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/ibm866.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51073,"byte_end":51145,"line_start":958,"line_end":958,"column_start":1,"column_end":73}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/ibm866-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51146,"byte_end":51231,"line_start":959,"line_end":959,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51232,"byte_end":51235,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 866.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51236,"byte_end":51288,"line_start":961,"line_end":961,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51289,"byte_end":51292,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51293,"byte_end":51354,"line_start":963,"line_end":963,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51355,"byte_end":51417,"line_start":964,"line_end":964,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51418,"byte_end":51475,"line_start":965,"line_end":965,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51476,"byte_end":51489,"line_start":966,"line_end":966,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52146,"byte_end":52162,"line_start":981,"line_end":981,"column_start":12,"column_end":28},"name":"ISO_2022_JP_INIT","qualname":"::ISO_2022_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-2022-JP](static.ISO_2022_JP.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-2022-JP](static.ISO_2022_JP.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51544,"byte_end":51620,"line_start":969,"line_end":969,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51621,"byte_end":51624,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51625,"byte_end":51682,"line_start":971,"line_end":971,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51683,"byte_end":51743,"line_start":972,"line_end":972,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51744,"byte_end":51804,"line_start":973,"line_end":973,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51805,"byte_end":51868,"line_start":974,"line_end":974,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51869,"byte_end":51872,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51873,"byte_end":51933,"line_start":976,"line_end":976,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51934,"byte_end":51996,"line_start":977,"line_end":977,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":51997,"byte_end":52060,"line_start":978,"line_end":978,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52061,"byte_end":52123,"line_start":979,"line_end":979,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52124,"byte_end":52134,"line_start":980,"line_end":980,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53059,"byte_end":53070,"line_start":1003,"line_end":1003,"column_start":12,"column_end":23},"name":"ISO_2022_JP","qualname":"::ISO_2022_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-2022-JP encoding.","sig":null,"attributes":[{"value":"/ The ISO-2022-JP encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52256,"byte_end":52285,"line_start":986,"line_end":986,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52286,"byte_end":52289,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ This the primary pre-UTF-8 encoding for Japanese email. It uses the ASCII","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52290,"byte_end":52367,"line_start":988,"line_end":988,"column_start":1,"column_end":78}},{"value":"/ byte range to encode non-Basic Latin characters. It's the only encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52368,"byte_end":52443,"line_start":989,"line_end":989,"column_start":1,"column_end":76}},{"value":"/ supported by this crate whose encoder is stateful.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52444,"byte_end":52498,"line_start":990,"line_end":990,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52499,"byte_end":52502,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/jis0208.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52503,"byte_end":52576,"line_start":992,"line_end":992,"column_start":1,"column_end":74}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/jis0208-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52577,"byte_end":52663,"line_start":993,"line_end":993,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52664,"byte_end":52667,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This encoding roughly matches the Windows code page 50220. Notably, Windows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52668,"byte_end":52747,"line_start":995,"line_end":995,"column_start":1,"column_end":80}},{"value":"/ uses U+30FB in place of the REPLACEMENT CHARACTER and otherwise differs in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52748,"byte_end":52826,"line_start":996,"line_end":996,"column_start":1,"column_end":79}},{"value":"/ error handling.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52827,"byte_end":52846,"line_start":997,"line_end":997,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52847,"byte_end":52850,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52851,"byte_end":52912,"line_start":999,"line_end":999,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52913,"byte_end":52975,"line_start":1000,"line_end":1000,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":52976,"byte_end":53033,"line_start":1001,"line_end":1001,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53034,"byte_end":53047,"line_start":1002,"line_end":1002,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53714,"byte_end":53730,"line_start":1017,"line_end":1017,"column_start":12,"column_end":28},"name":"ISO_8859_10_INIT","qualname":"::ISO_8859_10_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-10](static.ISO_8859_10.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-10](static.ISO_8859_10.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53112,"byte_end":53188,"line_start":1005,"line_end":1005,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53189,"byte_end":53192,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53193,"byte_end":53250,"line_start":1007,"line_end":1007,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53251,"byte_end":53311,"line_start":1008,"line_end":1008,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53312,"byte_end":53372,"line_start":1009,"line_end":1009,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53373,"byte_end":53436,"line_start":1010,"line_end":1010,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53437,"byte_end":53440,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53441,"byte_end":53501,"line_start":1012,"line_end":1012,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53502,"byte_end":53564,"line_start":1013,"line_end":1013,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53565,"byte_end":53628,"line_start":1014,"line_end":1014,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53629,"byte_end":53691,"line_start":1015,"line_end":1015,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53692,"byte_end":53702,"line_start":1016,"line_end":1016,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54523,"byte_end":54534,"line_start":1037,"line_end":1037,"column_start":12,"column_end":23},"name":"ISO_8859_10","qualname":"::ISO_8859_10","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-10 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-10 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53877,"byte_end":53906,"line_start":1022,"line_end":1022,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53907,"byte_end":53910,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ This is the Nordic part of the ISO/IEC 8859 encoding family. This encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53911,"byte_end":53989,"line_start":1024,"line_end":1024,"column_start":1,"column_end":79}},{"value":"/ is also known as Latin 6.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":53990,"byte_end":54019,"line_start":1025,"line_end":1025,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54020,"byte_end":54023,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-10.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54024,"byte_end":54101,"line_start":1027,"line_end":1027,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-10-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54102,"byte_end":54192,"line_start":1028,"line_end":1028,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54193,"byte_end":54196,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ The Windows code page number for this encoding is 28600, but kernel32.dll","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54197,"byte_end":54274,"line_start":1030,"line_end":1030,"column_start":1,"column_end":78}},{"value":"/ does not support this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54275,"byte_end":54310,"line_start":1031,"line_end":1031,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54311,"byte_end":54314,"line_start":1032,"line_end":1032,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54315,"byte_end":54376,"line_start":1033,"line_end":1033,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54377,"byte_end":54439,"line_start":1034,"line_end":1034,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54440,"byte_end":54497,"line_start":1035,"line_end":1035,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54498,"byte_end":54511,"line_start":1036,"line_end":1036,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55178,"byte_end":55194,"line_start":1051,"line_end":1051,"column_start":12,"column_end":28},"name":"ISO_8859_13_INIT","qualname":"::ISO_8859_13_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-13](static.ISO_8859_13.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-13](static.ISO_8859_13.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54576,"byte_end":54652,"line_start":1039,"line_end":1039,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54653,"byte_end":54656,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54657,"byte_end":54714,"line_start":1041,"line_end":1041,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54715,"byte_end":54775,"line_start":1042,"line_end":1042,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54776,"byte_end":54836,"line_start":1043,"line_end":1043,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54837,"byte_end":54900,"line_start":1044,"line_end":1044,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54901,"byte_end":54904,"line_start":1045,"line_end":1045,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54905,"byte_end":54965,"line_start":1046,"line_end":1046,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":54966,"byte_end":55028,"line_start":1047,"line_end":1047,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55029,"byte_end":55092,"line_start":1048,"line_end":1048,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55093,"byte_end":55155,"line_start":1049,"line_end":1049,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55156,"byte_end":55166,"line_start":1050,"line_end":1050,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56014,"byte_end":56025,"line_start":1071,"line_end":1071,"column_start":12,"column_end":23},"name":"ISO_8859_13","qualname":"::ISO_8859_13","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-13 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-13 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55341,"byte_end":55370,"line_start":1056,"line_end":1056,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55371,"byte_end":55374,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ This is the Baltic part of the ISO/IEC 8859 encoding family. This encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55375,"byte_end":55453,"line_start":1058,"line_end":1058,"column_start":1,"column_end":79}},{"value":"/ is also known as Latin 7.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55454,"byte_end":55483,"line_start":1059,"line_end":1059,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55484,"byte_end":55487,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-13.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55488,"byte_end":55565,"line_start":1061,"line_end":1061,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-13-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55566,"byte_end":55656,"line_start":1062,"line_end":1062,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55657,"byte_end":55660,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28603, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55661,"byte_end":55738,"line_start":1064,"line_end":1064,"column_start":1,"column_end":78}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55739,"byte_end":55801,"line_start":1065,"line_end":1065,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55802,"byte_end":55805,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55806,"byte_end":55867,"line_start":1067,"line_end":1067,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55868,"byte_end":55930,"line_start":1068,"line_end":1068,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55931,"byte_end":55988,"line_start":1069,"line_end":1069,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":55989,"byte_end":56002,"line_start":1070,"line_end":1070,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56669,"byte_end":56685,"line_start":1085,"line_end":1085,"column_start":12,"column_end":28},"name":"ISO_8859_14_INIT","qualname":"::ISO_8859_14_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-14](static.ISO_8859_14.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-14](static.ISO_8859_14.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56067,"byte_end":56143,"line_start":1073,"line_end":1073,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56144,"byte_end":56147,"line_start":1074,"line_end":1074,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56148,"byte_end":56205,"line_start":1075,"line_end":1075,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56206,"byte_end":56266,"line_start":1076,"line_end":1076,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56267,"byte_end":56327,"line_start":1077,"line_end":1077,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56328,"byte_end":56391,"line_start":1078,"line_end":1078,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56392,"byte_end":56395,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56396,"byte_end":56456,"line_start":1080,"line_end":1080,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56457,"byte_end":56519,"line_start":1081,"line_end":1081,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56520,"byte_end":56583,"line_start":1082,"line_end":1082,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56584,"byte_end":56646,"line_start":1083,"line_end":1083,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56647,"byte_end":56657,"line_start":1084,"line_end":1084,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57479,"byte_end":57490,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"ISO_8859_14","qualname":"::ISO_8859_14","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-14 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-14 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56833,"byte_end":56862,"line_start":1090,"line_end":1090,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56863,"byte_end":56866,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ This is the Celtic part of the ISO/IEC 8859 encoding family. This encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56867,"byte_end":56945,"line_start":1092,"line_end":1092,"column_start":1,"column_end":79}},{"value":"/ is also known as Latin 8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56946,"byte_end":56975,"line_start":1093,"line_end":1093,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56976,"byte_end":56979,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-14.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":56980,"byte_end":57057,"line_start":1095,"line_end":1095,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-14-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57058,"byte_end":57148,"line_start":1096,"line_end":1096,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57149,"byte_end":57152,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ The Windows code page number for this encoding is 28604, but kernel32.dll","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57153,"byte_end":57230,"line_start":1098,"line_end":1098,"column_start":1,"column_end":78}},{"value":"/ does not support this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57231,"byte_end":57266,"line_start":1099,"line_end":1099,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57267,"byte_end":57270,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57271,"byte_end":57332,"line_start":1101,"line_end":1101,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57333,"byte_end":57395,"line_start":1102,"line_end":1102,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57396,"byte_end":57453,"line_start":1103,"line_end":1103,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57454,"byte_end":57467,"line_start":1104,"line_end":1104,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58134,"byte_end":58150,"line_start":1119,"line_end":1119,"column_start":12,"column_end":28},"name":"ISO_8859_15_INIT","qualname":"::ISO_8859_15_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-15](static.ISO_8859_15.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-15](static.ISO_8859_15.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57532,"byte_end":57608,"line_start":1107,"line_end":1107,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57609,"byte_end":57612,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57613,"byte_end":57670,"line_start":1109,"line_end":1109,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57671,"byte_end":57731,"line_start":1110,"line_end":1110,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57732,"byte_end":57792,"line_start":1111,"line_end":1111,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57793,"byte_end":57856,"line_start":1112,"line_end":1112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57857,"byte_end":57860,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57861,"byte_end":57921,"line_start":1114,"line_end":1114,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57922,"byte_end":57984,"line_start":1115,"line_end":1115,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":57985,"byte_end":58048,"line_start":1116,"line_end":1116,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58049,"byte_end":58111,"line_start":1117,"line_end":1117,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58112,"byte_end":58122,"line_start":1118,"line_end":1118,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58903,"byte_end":58914,"line_start":1138,"line_end":1138,"column_start":12,"column_end":23},"name":"ISO_8859_15","qualname":"::ISO_8859_15","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-15 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-15 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58298,"byte_end":58327,"line_start":1124,"line_end":1124,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58328,"byte_end":58331,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ This is the revised Western European part of the ISO/IEC 8859 encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58332,"byte_end":58406,"line_start":1126,"line_end":1126,"column_start":1,"column_end":75}},{"value":"/ family. This encoding is also known as Latin 9.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58407,"byte_end":58458,"line_start":1127,"line_end":1127,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58459,"byte_end":58462,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-15.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58463,"byte_end":58540,"line_start":1129,"line_end":1129,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-15-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58541,"byte_end":58631,"line_start":1130,"line_end":1130,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58632,"byte_end":58635,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28605.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58636,"byte_end":58690,"line_start":1132,"line_end":1132,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58691,"byte_end":58694,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58695,"byte_end":58756,"line_start":1134,"line_end":1134,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58757,"byte_end":58819,"line_start":1135,"line_end":1135,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58820,"byte_end":58877,"line_start":1136,"line_end":1136,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58878,"byte_end":58891,"line_start":1137,"line_end":1137,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59558,"byte_end":59574,"line_start":1152,"line_end":1152,"column_start":12,"column_end":28},"name":"ISO_8859_16_INIT","qualname":"::ISO_8859_16_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-16](static.ISO_8859_16.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-16](static.ISO_8859_16.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":58956,"byte_end":59032,"line_start":1140,"line_end":1140,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59033,"byte_end":59036,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59037,"byte_end":59094,"line_start":1142,"line_end":1142,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59095,"byte_end":59155,"line_start":1143,"line_end":1143,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59156,"byte_end":59216,"line_start":1144,"line_end":1144,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59217,"byte_end":59280,"line_start":1145,"line_end":1145,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59281,"byte_end":59284,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59285,"byte_end":59345,"line_start":1147,"line_end":1147,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59346,"byte_end":59408,"line_start":1148,"line_end":1148,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59409,"byte_end":59472,"line_start":1149,"line_end":1149,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59473,"byte_end":59535,"line_start":1150,"line_end":1150,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59536,"byte_end":59546,"line_start":1151,"line_end":1151,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60384,"byte_end":60395,"line_start":1172,"line_end":1172,"column_start":12,"column_end":23},"name":"ISO_8859_16","qualname":"::ISO_8859_16","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-16 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-16 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59721,"byte_end":59750,"line_start":1157,"line_end":1157,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59751,"byte_end":59754,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/ This is the South-Eastern European part of the ISO/IEC 8859 encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59755,"byte_end":59827,"line_start":1159,"line_end":1159,"column_start":1,"column_end":73}},{"value":"/ family. This encoding is also known as Latin 10.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59828,"byte_end":59880,"line_start":1160,"line_end":1160,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59881,"byte_end":59884,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-16.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59885,"byte_end":59962,"line_start":1162,"line_end":1162,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-16-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":59963,"byte_end":60053,"line_start":1163,"line_end":1163,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60054,"byte_end":60057,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ The Windows code page number for this encoding is 28606, but kernel32.dll","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60058,"byte_end":60135,"line_start":1165,"line_end":1165,"column_start":1,"column_end":78}},{"value":"/ does not support this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60136,"byte_end":60171,"line_start":1166,"line_end":1166,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60172,"byte_end":60175,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60176,"byte_end":60237,"line_start":1168,"line_end":1168,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60238,"byte_end":60300,"line_start":1169,"line_end":1169,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60301,"byte_end":60358,"line_start":1170,"line_end":1170,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60359,"byte_end":60372,"line_start":1171,"line_end":1171,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61037,"byte_end":61052,"line_start":1186,"line_end":1186,"column_start":12,"column_end":27},"name":"ISO_8859_2_INIT","qualname":"::ISO_8859_2_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-2](static.ISO_8859_2.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-2](static.ISO_8859_2.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60437,"byte_end":60511,"line_start":1174,"line_end":1174,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60512,"byte_end":60515,"line_start":1175,"line_end":1175,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60516,"byte_end":60573,"line_start":1176,"line_end":1176,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60574,"byte_end":60634,"line_start":1177,"line_end":1177,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60635,"byte_end":60695,"line_start":1178,"line_end":1178,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60696,"byte_end":60759,"line_start":1179,"line_end":1179,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60760,"byte_end":60763,"line_start":1180,"line_end":1180,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60764,"byte_end":60824,"line_start":1181,"line_end":1181,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60825,"byte_end":60887,"line_start":1182,"line_end":1182,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60888,"byte_end":60951,"line_start":1183,"line_end":1183,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":60952,"byte_end":61014,"line_start":1184,"line_end":1184,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61015,"byte_end":61025,"line_start":1185,"line_end":1185,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61787,"byte_end":61797,"line_start":1204,"line_end":1204,"column_start":12,"column_end":22},"name":"ISO_8859_2","qualname":"::ISO_8859_2","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-2 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-2 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61197,"byte_end":61225,"line_start":1191,"line_end":1191,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61226,"byte_end":61229,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ This is the Central European part of the ISO/IEC 8859 encoding family. This encoding is also known as Latin 2.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61230,"byte_end":61344,"line_start":1193,"line_end":1193,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61345,"byte_end":61348,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-2.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61349,"byte_end":61425,"line_start":1195,"line_end":1195,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-2-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61426,"byte_end":61515,"line_start":1196,"line_end":1196,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61516,"byte_end":61519,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28592.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61520,"byte_end":61574,"line_start":1198,"line_end":1198,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61575,"byte_end":61578,"line_start":1199,"line_end":1199,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61579,"byte_end":61640,"line_start":1200,"line_end":1200,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61641,"byte_end":61703,"line_start":1201,"line_end":1201,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61704,"byte_end":61761,"line_start":1202,"line_end":1202,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61762,"byte_end":61775,"line_start":1203,"line_end":1203,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62438,"byte_end":62453,"line_start":1218,"line_end":1218,"column_start":12,"column_end":27},"name":"ISO_8859_3_INIT","qualname":"::ISO_8859_3_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-3](static.ISO_8859_3.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-3](static.ISO_8859_3.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61838,"byte_end":61912,"line_start":1206,"line_end":1206,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61913,"byte_end":61916,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61917,"byte_end":61974,"line_start":1208,"line_end":1208,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":61975,"byte_end":62035,"line_start":1209,"line_end":1209,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62036,"byte_end":62096,"line_start":1210,"line_end":1210,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62097,"byte_end":62160,"line_start":1211,"line_end":1211,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62161,"byte_end":62164,"line_start":1212,"line_end":1212,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62165,"byte_end":62225,"line_start":1213,"line_end":1213,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62226,"byte_end":62288,"line_start":1214,"line_end":1214,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62289,"byte_end":62352,"line_start":1215,"line_end":1215,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62353,"byte_end":62415,"line_start":1216,"line_end":1216,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62416,"byte_end":62426,"line_start":1217,"line_end":1217,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63186,"byte_end":63196,"line_start":1236,"line_end":1236,"column_start":12,"column_end":22},"name":"ISO_8859_3","qualname":"::ISO_8859_3","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-3 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-3 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62598,"byte_end":62626,"line_start":1223,"line_end":1223,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62627,"byte_end":62630,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ This is the South European part of the ISO/IEC 8859 encoding family. This encoding is also known as Latin 3.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62631,"byte_end":62743,"line_start":1225,"line_end":1225,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62744,"byte_end":62747,"line_start":1226,"line_end":1226,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-3.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62748,"byte_end":62824,"line_start":1227,"line_end":1227,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-3-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62825,"byte_end":62914,"line_start":1228,"line_end":1228,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62915,"byte_end":62918,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28593.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62919,"byte_end":62973,"line_start":1230,"line_end":1230,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62974,"byte_end":62977,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":62978,"byte_end":63039,"line_start":1232,"line_end":1232,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63040,"byte_end":63102,"line_start":1233,"line_end":1233,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63103,"byte_end":63160,"line_start":1234,"line_end":1234,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63161,"byte_end":63174,"line_start":1235,"line_end":1235,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63837,"byte_end":63852,"line_start":1250,"line_end":1250,"column_start":12,"column_end":27},"name":"ISO_8859_4_INIT","qualname":"::ISO_8859_4_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-4](static.ISO_8859_4.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-4](static.ISO_8859_4.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63237,"byte_end":63311,"line_start":1238,"line_end":1238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63312,"byte_end":63315,"line_start":1239,"line_end":1239,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63316,"byte_end":63373,"line_start":1240,"line_end":1240,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63374,"byte_end":63434,"line_start":1241,"line_end":1241,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63435,"byte_end":63495,"line_start":1242,"line_end":1242,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63496,"byte_end":63559,"line_start":1243,"line_end":1243,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63560,"byte_end":63563,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63564,"byte_end":63624,"line_start":1245,"line_end":1245,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63625,"byte_end":63687,"line_start":1246,"line_end":1246,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63688,"byte_end":63751,"line_start":1247,"line_end":1247,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63752,"byte_end":63814,"line_start":1248,"line_end":1248,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63815,"byte_end":63825,"line_start":1249,"line_end":1249,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64585,"byte_end":64595,"line_start":1268,"line_end":1268,"column_start":12,"column_end":22},"name":"ISO_8859_4","qualname":"::ISO_8859_4","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-4 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-4 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":63997,"byte_end":64025,"line_start":1255,"line_end":1255,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64026,"byte_end":64029,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ This is the North European part of the ISO/IEC 8859 encoding family. This encoding is also known as Latin 4.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64030,"byte_end":64142,"line_start":1257,"line_end":1257,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64143,"byte_end":64146,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-4.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64147,"byte_end":64223,"line_start":1259,"line_end":1259,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-4-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64224,"byte_end":64313,"line_start":1260,"line_end":1260,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64314,"byte_end":64317,"line_start":1261,"line_end":1261,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28594.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64318,"byte_end":64372,"line_start":1262,"line_end":1262,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64373,"byte_end":64376,"line_start":1263,"line_end":1263,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64377,"byte_end":64438,"line_start":1264,"line_end":1264,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64439,"byte_end":64501,"line_start":1265,"line_end":1265,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64502,"byte_end":64559,"line_start":1266,"line_end":1266,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64560,"byte_end":64573,"line_start":1267,"line_end":1267,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65236,"byte_end":65251,"line_start":1282,"line_end":1282,"column_start":12,"column_end":27},"name":"ISO_8859_5_INIT","qualname":"::ISO_8859_5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-5](static.ISO_8859_5.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-5](static.ISO_8859_5.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64636,"byte_end":64710,"line_start":1270,"line_end":1270,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64711,"byte_end":64714,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64715,"byte_end":64772,"line_start":1272,"line_end":1272,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64773,"byte_end":64833,"line_start":1273,"line_end":1273,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64834,"byte_end":64894,"line_start":1274,"line_end":1274,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64895,"byte_end":64958,"line_start":1275,"line_end":1275,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64959,"byte_end":64962,"line_start":1276,"line_end":1276,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":64963,"byte_end":65023,"line_start":1277,"line_end":1277,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65024,"byte_end":65086,"line_start":1278,"line_end":1278,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65087,"byte_end":65150,"line_start":1279,"line_end":1279,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65151,"byte_end":65213,"line_start":1280,"line_end":1280,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65214,"byte_end":65224,"line_start":1281,"line_end":1281,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65939,"byte_end":65949,"line_start":1300,"line_end":1300,"column_start":12,"column_end":22},"name":"ISO_8859_5","qualname":"::ISO_8859_5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-5 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-5 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65397,"byte_end":65425,"line_start":1287,"line_end":1287,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65426,"byte_end":65429,"line_start":1288,"line_end":1288,"column_start":1,"column_end":4}},{"value":"/ This is the Cyrillic part of the ISO/IEC 8859 encoding family.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65430,"byte_end":65496,"line_start":1289,"line_end":1289,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65497,"byte_end":65500,"line_start":1290,"line_end":1290,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-5.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65501,"byte_end":65577,"line_start":1291,"line_end":1291,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-5-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65578,"byte_end":65667,"line_start":1292,"line_end":1292,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65668,"byte_end":65671,"line_start":1293,"line_end":1293,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28595.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65672,"byte_end":65726,"line_start":1294,"line_end":1294,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65727,"byte_end":65730,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65731,"byte_end":65792,"line_start":1296,"line_end":1296,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65793,"byte_end":65855,"line_start":1297,"line_end":1297,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65856,"byte_end":65913,"line_start":1298,"line_end":1298,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65914,"byte_end":65927,"line_start":1299,"line_end":1299,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66590,"byte_end":66605,"line_start":1314,"line_end":1314,"column_start":12,"column_end":27},"name":"ISO_8859_6_INIT","qualname":"::ISO_8859_6_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-6](static.ISO_8859_6.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-6](static.ISO_8859_6.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":65990,"byte_end":66064,"line_start":1302,"line_end":1302,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66065,"byte_end":66068,"line_start":1303,"line_end":1303,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66069,"byte_end":66126,"line_start":1304,"line_end":1304,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66127,"byte_end":66187,"line_start":1305,"line_end":1305,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66188,"byte_end":66248,"line_start":1306,"line_end":1306,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66249,"byte_end":66312,"line_start":1307,"line_end":1307,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66313,"byte_end":66316,"line_start":1308,"line_end":1308,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66317,"byte_end":66377,"line_start":1309,"line_end":1309,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66378,"byte_end":66440,"line_start":1310,"line_end":1310,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66441,"byte_end":66504,"line_start":1311,"line_end":1311,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66505,"byte_end":66567,"line_start":1312,"line_end":1312,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66568,"byte_end":66578,"line_start":1313,"line_end":1313,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67377,"byte_end":67387,"line_start":1333,"line_end":1333,"column_start":12,"column_end":22},"name":"ISO_8859_6","qualname":"::ISO_8859_6","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-6 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-6 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66751,"byte_end":66779,"line_start":1319,"line_end":1319,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66780,"byte_end":66783,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ This is the Arabic part of the ISO/IEC 8859 encoding family.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66784,"byte_end":66848,"line_start":1321,"line_end":1321,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66849,"byte_end":66852,"line_start":1322,"line_end":1322,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-6.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66853,"byte_end":66929,"line_start":1323,"line_end":1323,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-6-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":66930,"byte_end":67019,"line_start":1324,"line_end":1324,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67020,"byte_end":67023,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 28596, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67024,"byte_end":67101,"line_start":1326,"line_end":1326,"column_start":1,"column_end":78}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67102,"byte_end":67164,"line_start":1327,"line_end":1327,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67165,"byte_end":67168,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67169,"byte_end":67230,"line_start":1329,"line_end":1329,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67231,"byte_end":67293,"line_start":1330,"line_end":1330,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67294,"byte_end":67351,"line_start":1331,"line_end":1331,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67352,"byte_end":67365,"line_start":1332,"line_end":1332,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68028,"byte_end":68043,"line_start":1347,"line_end":1347,"column_start":12,"column_end":27},"name":"ISO_8859_7_INIT","qualname":"::ISO_8859_7_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-7](static.ISO_8859_7.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-7](static.ISO_8859_7.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67428,"byte_end":67502,"line_start":1335,"line_end":1335,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67503,"byte_end":67506,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67507,"byte_end":67564,"line_start":1337,"line_end":1337,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67565,"byte_end":67625,"line_start":1338,"line_end":1338,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67626,"byte_end":67686,"line_start":1339,"line_end":1339,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67687,"byte_end":67750,"line_start":1340,"line_end":1340,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67751,"byte_end":67754,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67755,"byte_end":67815,"line_start":1342,"line_end":1342,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67816,"byte_end":67878,"line_start":1343,"line_end":1343,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67879,"byte_end":67942,"line_start":1344,"line_end":1344,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":67943,"byte_end":68005,"line_start":1345,"line_end":1345,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68006,"byte_end":68016,"line_start":1346,"line_end":1346,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69129,"byte_end":69139,"line_start":1370,"line_end":1370,"column_start":12,"column_end":22},"name":"ISO_8859_7","qualname":"::ISO_8859_7","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-7 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-7 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68189,"byte_end":68217,"line_start":1352,"line_end":1352,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68218,"byte_end":68221,"line_start":1353,"line_end":1353,"column_start":1,"column_end":4}},{"value":"/ This is the Greek part of the ISO/IEC 8859 encoding family.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68222,"byte_end":68285,"line_start":1354,"line_end":1354,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68286,"byte_end":68289,"line_start":1355,"line_end":1355,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-7.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68290,"byte_end":68366,"line_start":1356,"line_end":1356,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-7-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68367,"byte_end":68456,"line_start":1357,"line_end":1357,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68457,"byte_end":68460,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ This encoding roughly matches the Windows code page 28597. Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68461,"byte_end":68539,"line_start":1359,"line_end":1359,"column_start":1,"column_end":79}},{"value":"/ unassigned code points, the currency signs at 0xA4 and 0xA5 as well as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68540,"byte_end":68614,"line_start":1360,"line_end":1360,"column_start":1,"column_end":75}},{"value":"/ 0xAA, which should be U+037A GREEK YPOGEGRAMMENI, to the Private Use Area","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68615,"byte_end":68692,"line_start":1361,"line_end":1361,"column_start":1,"column_end":78}},{"value":"/ of Unicode. Windows decodes 0xA1 to U+02BD MODIFIER LETTER REVERSED COMMA","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68693,"byte_end":68770,"line_start":1362,"line_end":1362,"column_start":1,"column_end":78}},{"value":"/ instead of U+2018 LEFT SINGLE QUOTATION MARK and 0xA2 to U+02BC MODIFIER","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68771,"byte_end":68847,"line_start":1363,"line_end":1363,"column_start":1,"column_end":77}},{"value":"/ LETTER APOSTROPHE instead of U+2019 RIGHT SINGLE QUOTATION MARK.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68848,"byte_end":68916,"line_start":1364,"line_end":1364,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68917,"byte_end":68920,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68921,"byte_end":68982,"line_start":1366,"line_end":1366,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":68983,"byte_end":69045,"line_start":1367,"line_end":1367,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69046,"byte_end":69103,"line_start":1368,"line_end":1368,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69104,"byte_end":69117,"line_start":1369,"line_end":1369,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69780,"byte_end":69795,"line_start":1384,"line_end":1384,"column_start":12,"column_end":27},"name":"ISO_8859_8_INIT","qualname":"::ISO_8859_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8](static.ISO_8859_8.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-8](static.ISO_8859_8.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69180,"byte_end":69254,"line_start":1372,"line_end":1372,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69255,"byte_end":69258,"line_start":1373,"line_end":1373,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69259,"byte_end":69316,"line_start":1374,"line_end":1374,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69317,"byte_end":69377,"line_start":1375,"line_end":1375,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69378,"byte_end":69438,"line_start":1376,"line_end":1376,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69439,"byte_end":69502,"line_start":1377,"line_end":1377,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69503,"byte_end":69506,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69507,"byte_end":69567,"line_start":1379,"line_end":1379,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69568,"byte_end":69630,"line_start":1380,"line_end":1380,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69631,"byte_end":69694,"line_start":1381,"line_end":1381,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69695,"byte_end":69757,"line_start":1382,"line_end":1382,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69758,"byte_end":69768,"line_start":1383,"line_end":1383,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70698,"byte_end":70708,"line_start":1405,"line_end":1405,"column_start":12,"column_end":22},"name":"ISO_8859_8","qualname":"::ISO_8859_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8 encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-8 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69941,"byte_end":69969,"line_start":1389,"line_end":1389,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69970,"byte_end":69973,"line_start":1390,"line_end":1390,"column_start":1,"column_end":4}},{"value":"/ This is the Hebrew part of the ISO/IEC 8859 encoding family in visual order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":69974,"byte_end":70054,"line_start":1391,"line_end":1391,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70055,"byte_end":70058,"line_start":1392,"line_end":1392,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-8.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70059,"byte_end":70135,"line_start":1393,"line_end":1393,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-8-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70136,"byte_end":70225,"line_start":1394,"line_end":1394,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70226,"byte_end":70229,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ This encoding roughly matches the Windows code page 28598. Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70230,"byte_end":70308,"line_start":1396,"line_end":1396,"column_start":1,"column_end":79}},{"value":"/ 0xAF to OVERLINE instead of MACRON and 0xFE and 0xFD to the Private Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70309,"byte_end":70384,"line_start":1397,"line_end":1397,"column_start":1,"column_end":76}},{"value":"/ Area instead of LRM and RLM. Windows decodes unassigned code points to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70385,"byte_end":70459,"line_start":1398,"line_end":1398,"column_start":1,"column_end":75}},{"value":"/ the private use area.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70460,"byte_end":70485,"line_start":1399,"line_end":1399,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70486,"byte_end":70489,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70490,"byte_end":70551,"line_start":1401,"line_end":1401,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70552,"byte_end":70614,"line_start":1402,"line_end":1402,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70615,"byte_end":70672,"line_start":1403,"line_end":1403,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70673,"byte_end":70686,"line_start":1404,"line_end":1404,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71353,"byte_end":71370,"line_start":1419,"line_end":1419,"column_start":12,"column_end":29},"name":"ISO_8859_8_I_INIT","qualname":"::ISO_8859_8_I_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8-I](static.ISO_8859_8_I.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [ISO-8859-8-I](static.ISO_8859_8_I.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70749,"byte_end":70827,"line_start":1407,"line_end":1407,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70828,"byte_end":70831,"line_start":1408,"line_end":1408,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70832,"byte_end":70889,"line_start":1409,"line_end":1409,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70890,"byte_end":70950,"line_start":1410,"line_end":1410,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":70951,"byte_end":71011,"line_start":1411,"line_end":1411,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71012,"byte_end":71075,"line_start":1412,"line_end":1412,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71076,"byte_end":71079,"line_start":1413,"line_end":1413,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71080,"byte_end":71140,"line_start":1414,"line_end":1414,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71141,"byte_end":71203,"line_start":1415,"line_end":1415,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71204,"byte_end":71267,"line_start":1416,"line_end":1416,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71268,"byte_end":71330,"line_start":1417,"line_end":1417,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71331,"byte_end":71341,"line_start":1418,"line_end":1418,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72278,"byte_end":72290,"line_start":1440,"line_end":1440,"column_start":12,"column_end":24},"name":"ISO_8859_8_I","qualname":"::ISO_8859_8_I","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8-I encoding.","sig":null,"attributes":[{"value":"/ The ISO-8859-8-I encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71518,"byte_end":71548,"line_start":1424,"line_end":1424,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71549,"byte_end":71552,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ This is the Hebrew part of the ISO/IEC 8859 encoding family in logical order.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71553,"byte_end":71634,"line_start":1426,"line_end":1426,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71635,"byte_end":71638,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/iso-8859-8.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71639,"byte_end":71715,"line_start":1428,"line_end":1428,"column_start":1,"column_end":77}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/iso-8859-8-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71716,"byte_end":71805,"line_start":1429,"line_end":1429,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71806,"byte_end":71809,"line_start":1430,"line_end":1430,"column_start":1,"column_end":4}},{"value":"/ This encoding roughly matches the Windows code page 38598. Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71810,"byte_end":71888,"line_start":1431,"line_end":1431,"column_start":1,"column_end":79}},{"value":"/ 0xAF to OVERLINE instead of MACRON and 0xFE and 0xFD to the Private Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71889,"byte_end":71964,"line_start":1432,"line_end":1432,"column_start":1,"column_end":76}},{"value":"/ Area instead of LRM and RLM. Windows decodes unassigned code points to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":71965,"byte_end":72039,"line_start":1433,"line_end":1433,"column_start":1,"column_end":75}},{"value":"/ the private use area.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72040,"byte_end":72065,"line_start":1434,"line_end":1434,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72066,"byte_end":72069,"line_start":1435,"line_end":1435,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72070,"byte_end":72131,"line_start":1436,"line_end":1436,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72132,"byte_end":72194,"line_start":1437,"line_end":1437,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72195,"byte_end":72252,"line_start":1438,"line_end":1438,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72253,"byte_end":72266,"line_start":1439,"line_end":1439,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72925,"byte_end":72936,"line_start":1454,"line_end":1454,"column_start":12,"column_end":23},"name":"KOI8_R_INIT","qualname":"::KOI8_R_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-R](static.KOI8_R.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [KOI8-R](static.KOI8_R.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72333,"byte_end":72399,"line_start":1442,"line_end":1442,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72400,"byte_end":72403,"line_start":1443,"line_end":1443,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72404,"byte_end":72461,"line_start":1444,"line_end":1444,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72462,"byte_end":72522,"line_start":1445,"line_end":1445,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72523,"byte_end":72583,"line_start":1446,"line_end":1446,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72584,"byte_end":72647,"line_start":1447,"line_end":1447,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72648,"byte_end":72651,"line_start":1448,"line_end":1448,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72652,"byte_end":72712,"line_start":1449,"line_end":1449,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72713,"byte_end":72775,"line_start":1450,"line_end":1450,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72776,"byte_end":72839,"line_start":1451,"line_end":1451,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72840,"byte_end":72902,"line_start":1452,"line_end":1452,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":72903,"byte_end":72913,"line_start":1453,"line_end":1453,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73626,"byte_end":73632,"line_start":1472,"line_end":1472,"column_start":12,"column_end":18},"name":"KOI8_R","qualname":"::KOI8_R","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-R encoding.","sig":null,"attributes":[{"value":"/ The KOI8-R encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73073,"byte_end":73097,"line_start":1459,"line_end":1459,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73098,"byte_end":73101,"line_start":1460,"line_end":1460,"column_start":1,"column_end":4}},{"value":"/ This is an encoding for Russian from [RFC 1489](https://tools.ietf.org/html/rfc1489).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73102,"byte_end":73191,"line_start":1461,"line_end":1461,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73192,"byte_end":73195,"line_start":1462,"line_end":1462,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/koi8-r.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73196,"byte_end":73268,"line_start":1463,"line_end":1463,"column_start":1,"column_end":73}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/koi8-r-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73269,"byte_end":73354,"line_start":1464,"line_end":1464,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73355,"byte_end":73358,"line_start":1465,"line_end":1465,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 20866.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73359,"byte_end":73413,"line_start":1466,"line_end":1466,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73414,"byte_end":73417,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73418,"byte_end":73479,"line_start":1468,"line_end":1468,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73480,"byte_end":73542,"line_start":1469,"line_end":1469,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73543,"byte_end":73600,"line_start":1470,"line_end":1470,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73601,"byte_end":73614,"line_start":1471,"line_end":1471,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74261,"byte_end":74272,"line_start":1486,"line_end":1486,"column_start":12,"column_end":23},"name":"KOI8_U_INIT","qualname":"::KOI8_U_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-U](static.KOI8_U.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [KOI8-U](static.KOI8_U.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73669,"byte_end":73735,"line_start":1474,"line_end":1474,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73736,"byte_end":73739,"line_start":1475,"line_end":1475,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73740,"byte_end":73797,"line_start":1476,"line_end":1476,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73798,"byte_end":73858,"line_start":1477,"line_end":1477,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73859,"byte_end":73919,"line_start":1478,"line_end":1478,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73920,"byte_end":73983,"line_start":1479,"line_end":1479,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73984,"byte_end":73987,"line_start":1480,"line_end":1480,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":73988,"byte_end":74048,"line_start":1481,"line_end":1481,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74049,"byte_end":74111,"line_start":1482,"line_end":1482,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74112,"byte_end":74175,"line_start":1483,"line_end":1483,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74176,"byte_end":74238,"line_start":1484,"line_end":1484,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74239,"byte_end":74249,"line_start":1485,"line_end":1485,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74931,"byte_end":74937,"line_start":1504,"line_end":1504,"column_start":12,"column_end":18},"name":"KOI8_U","qualname":"::KOI8_U","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-U encoding.","sig":null,"attributes":[{"value":"/ The KOI8-U encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74409,"byte_end":74433,"line_start":1491,"line_end":1491,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74434,"byte_end":74437,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ This is an encoding for Ukrainian adapted from KOI8-R.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74438,"byte_end":74496,"line_start":1493,"line_end":1493,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74497,"byte_end":74500,"line_start":1494,"line_end":1494,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/koi8-u.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74501,"byte_end":74573,"line_start":1495,"line_end":1495,"column_start":1,"column_end":73}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/koi8-u-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74574,"byte_end":74659,"line_start":1496,"line_end":1496,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74660,"byte_end":74663,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 21866.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74664,"byte_end":74718,"line_start":1498,"line_end":1498,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74719,"byte_end":74722,"line_start":1499,"line_end":1499,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74723,"byte_end":74784,"line_start":1500,"line_end":1500,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74785,"byte_end":74847,"line_start":1501,"line_end":1501,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74848,"byte_end":74905,"line_start":1502,"line_end":1502,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74906,"byte_end":74919,"line_start":1503,"line_end":1503,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75572,"byte_end":75586,"line_start":1518,"line_end":1518,"column_start":12,"column_end":26},"name":"SHIFT_JIS_INIT","qualname":"::SHIFT_JIS_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Shift_JIS](static.SHIFT_JIS.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [Shift_JIS](static.SHIFT_JIS.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":74974,"byte_end":75046,"line_start":1506,"line_end":1506,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75047,"byte_end":75050,"line_start":1507,"line_end":1507,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75051,"byte_end":75108,"line_start":1508,"line_end":1508,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75109,"byte_end":75169,"line_start":1509,"line_end":1509,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75170,"byte_end":75230,"line_start":1510,"line_end":1510,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75231,"byte_end":75294,"line_start":1511,"line_end":1511,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75295,"byte_end":75298,"line_start":1512,"line_end":1512,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75299,"byte_end":75359,"line_start":1513,"line_end":1513,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75360,"byte_end":75422,"line_start":1514,"line_end":1514,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75423,"byte_end":75486,"line_start":1515,"line_end":1515,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75487,"byte_end":75549,"line_start":1516,"line_end":1516,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75550,"byte_end":75560,"line_start":1517,"line_end":1517,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76396,"byte_end":76405,"line_start":1538,"line_end":1538,"column_start":12,"column_end":21},"name":"SHIFT_JIS","qualname":"::SHIFT_JIS","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Shift_JIS encoding.","sig":null,"attributes":[{"value":"/ The Shift_JIS encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75677,"byte_end":75704,"line_start":1523,"line_end":1523,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75705,"byte_end":75708,"line_start":1524,"line_end":1524,"column_start":1,"column_end":4}},{"value":"/ This is the Japanese encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75709,"byte_end":75755,"line_start":1525,"line_end":1525,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75756,"byte_end":75759,"line_start":1526,"line_end":1526,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/shift_jis.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75760,"byte_end":75835,"line_start":1527,"line_end":1527,"column_start":1,"column_end":76}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/shift_jis-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75836,"byte_end":75924,"line_start":1528,"line_end":1528,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75925,"byte_end":75928,"line_start":1529,"line_end":1529,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 932, except Windows decodes some byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":75929,"byte_end":76014,"line_start":1530,"line_end":1530,"column_start":1,"column_end":86}},{"value":"/ sequences that are error per the Encoding Standard to the question mark or the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76015,"byte_end":76097,"line_start":1531,"line_end":1531,"column_start":1,"column_end":83}},{"value":"/ Private Use Area and generally uses U+30FB in place of the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76098,"byte_end":76183,"line_start":1532,"line_end":1532,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76184,"byte_end":76187,"line_start":1533,"line_end":1533,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76188,"byte_end":76249,"line_start":1534,"line_end":1534,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76250,"byte_end":76312,"line_start":1535,"line_end":1535,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76313,"byte_end":76370,"line_start":1536,"line_end":1536,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76371,"byte_end":76384,"line_start":1537,"line_end":1537,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77041,"byte_end":77054,"line_start":1552,"line_end":1552,"column_start":12,"column_end":25},"name":"UTF_16BE_INIT","qualname":"::UTF_16BE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16BE](static.UTF_16BE.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [UTF-16BE](static.UTF_16BE.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76445,"byte_end":76515,"line_start":1540,"line_end":1540,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76516,"byte_end":76519,"line_start":1541,"line_end":1541,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76520,"byte_end":76577,"line_start":1542,"line_end":1542,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76578,"byte_end":76638,"line_start":1543,"line_end":1543,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76639,"byte_end":76699,"line_start":1544,"line_end":1544,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76700,"byte_end":76763,"line_start":1545,"line_end":1545,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76764,"byte_end":76767,"line_start":1546,"line_end":1546,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76768,"byte_end":76828,"line_start":1547,"line_end":1547,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76829,"byte_end":76891,"line_start":1548,"line_end":1548,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76892,"byte_end":76955,"line_start":1549,"line_end":1549,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":76956,"byte_end":77018,"line_start":1550,"line_end":1550,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77019,"byte_end":77029,"line_start":1551,"line_end":1551,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77786,"byte_end":77794,"line_start":1572,"line_end":1572,"column_start":12,"column_end":20},"name":"UTF_16BE","qualname":"::UTF_16BE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16BE encoding.","sig":null,"attributes":[{"value":"/ The UTF-16BE encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77143,"byte_end":77169,"line_start":1557,"line_end":1557,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77170,"byte_end":77173,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ This decode-only encoding uses 16-bit code units due to Unicode originally","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77174,"byte_end":77252,"line_start":1559,"line_end":1559,"column_start":1,"column_end":79}},{"value":"/ having been designed as a 16-bit reportoire. In the absence of a byte order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77253,"byte_end":77332,"line_start":1560,"line_end":1560,"column_start":1,"column_end":80}},{"value":"/ mark the big endian byte order is assumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77333,"byte_end":77379,"line_start":1561,"line_end":1561,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77380,"byte_end":77383,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ There is no corresponding encoder in this crate or in the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77384,"byte_end":77454,"line_start":1563,"line_end":1563,"column_start":1,"column_end":71}},{"value":"/ Standard. The output encoding of this encoding is UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77455,"byte_end":77515,"line_start":1564,"line_end":1564,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77516,"byte_end":77519,"line_start":1565,"line_end":1565,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1201.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77520,"byte_end":77573,"line_start":1566,"line_end":1566,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77574,"byte_end":77577,"line_start":1567,"line_end":1567,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77578,"byte_end":77639,"line_start":1568,"line_end":1568,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77640,"byte_end":77702,"line_start":1569,"line_end":1569,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77703,"byte_end":77760,"line_start":1570,"line_end":1570,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77761,"byte_end":77774,"line_start":1571,"line_end":1571,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78429,"byte_end":78442,"line_start":1586,"line_end":1586,"column_start":12,"column_end":25},"name":"UTF_16LE_INIT","qualname":"::UTF_16LE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16LE](static.UTF_16LE.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [UTF-16LE](static.UTF_16LE.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77833,"byte_end":77903,"line_start":1574,"line_end":1574,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77904,"byte_end":77907,"line_start":1575,"line_end":1575,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77908,"byte_end":77965,"line_start":1576,"line_end":1576,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":77966,"byte_end":78026,"line_start":1577,"line_end":1577,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78027,"byte_end":78087,"line_start":1578,"line_end":1578,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78088,"byte_end":78151,"line_start":1579,"line_end":1579,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78152,"byte_end":78155,"line_start":1580,"line_end":1580,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78156,"byte_end":78216,"line_start":1581,"line_end":1581,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78217,"byte_end":78279,"line_start":1582,"line_end":1582,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78280,"byte_end":78343,"line_start":1583,"line_end":1583,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78344,"byte_end":78406,"line_start":1584,"line_end":1584,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78407,"byte_end":78417,"line_start":1585,"line_end":1585,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79177,"byte_end":79185,"line_start":1606,"line_end":1606,"column_start":12,"column_end":20},"name":"UTF_16LE","qualname":"::UTF_16LE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16LE encoding.","sig":null,"attributes":[{"value":"/ The UTF-16LE encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78531,"byte_end":78557,"line_start":1591,"line_end":1591,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78558,"byte_end":78561,"line_start":1592,"line_end":1592,"column_start":1,"column_end":4}},{"value":"/ This decode-only encoding uses 16-bit code units due to Unicode originally","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78562,"byte_end":78640,"line_start":1593,"line_end":1593,"column_start":1,"column_end":79}},{"value":"/ having been designed as a 16-bit reportoire. In the absence of a byte order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78641,"byte_end":78720,"line_start":1594,"line_end":1594,"column_start":1,"column_end":80}},{"value":"/ mark the little endian byte order is assumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78721,"byte_end":78770,"line_start":1595,"line_end":1595,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78771,"byte_end":78774,"line_start":1596,"line_end":1596,"column_start":1,"column_end":4}},{"value":"/ There is no corresponding encoder in this crate or in the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78775,"byte_end":78845,"line_start":1597,"line_end":1597,"column_start":1,"column_end":71}},{"value":"/ Standard. The output encoding of this encoding is UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78846,"byte_end":78906,"line_start":1598,"line_end":1598,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78907,"byte_end":78910,"line_start":1599,"line_end":1599,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1200.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78911,"byte_end":78964,"line_start":1600,"line_end":1600,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78965,"byte_end":78968,"line_start":1601,"line_end":1601,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":78969,"byte_end":79030,"line_start":1602,"line_end":1602,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79031,"byte_end":79093,"line_start":1603,"line_end":1603,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79094,"byte_end":79151,"line_start":1604,"line_end":1604,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79152,"byte_end":79165,"line_start":1605,"line_end":1605,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79814,"byte_end":79824,"line_start":1620,"line_end":1620,"column_start":12,"column_end":22},"name":"UTF_8_INIT","qualname":"::UTF_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-8](static.UTF_8.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [UTF-8](static.UTF_8.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79224,"byte_end":79288,"line_start":1608,"line_end":1608,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79289,"byte_end":79292,"line_start":1609,"line_end":1609,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79293,"byte_end":79350,"line_start":1610,"line_end":1610,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79351,"byte_end":79411,"line_start":1611,"line_end":1611,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79412,"byte_end":79472,"line_start":1612,"line_end":1612,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79473,"byte_end":79536,"line_start":1613,"line_end":1613,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79537,"byte_end":79540,"line_start":1614,"line_end":1614,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79541,"byte_end":79601,"line_start":1615,"line_end":1615,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79602,"byte_end":79664,"line_start":1616,"line_end":1616,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79665,"byte_end":79728,"line_start":1617,"line_end":1617,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79729,"byte_end":79791,"line_start":1618,"line_end":1618,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79792,"byte_end":79802,"line_start":1619,"line_end":1619,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80408,"byte_end":80413,"line_start":1637,"line_end":1637,"column_start":12,"column_end":17},"name":"UTF_8","qualname":"::UTF_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-8 encoding.","sig":null,"attributes":[{"value":"/ The UTF-8 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79907,"byte_end":79930,"line_start":1625,"line_end":1625,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79931,"byte_end":79934,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ This is the encoding that should be used for all new development it can","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":79935,"byte_end":80010,"line_start":1627,"line_end":1627,"column_start":1,"column_end":76}},{"value":"/ represent all of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80011,"byte_end":80040,"line_start":1628,"line_end":1628,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80041,"byte_end":80044,"line_start":1629,"line_end":1629,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 65001, except Windows differs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80045,"byte_end":80122,"line_start":1630,"line_end":1630,"column_start":1,"column_end":78}},{"value":"/ in the number of errors generated for some erroneous byte sequences.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80123,"byte_end":80195,"line_start":1631,"line_end":1631,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80196,"byte_end":80199,"line_start":1632,"line_end":1632,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80200,"byte_end":80261,"line_start":1633,"line_end":1633,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80262,"byte_end":80324,"line_start":1634,"line_end":1634,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80325,"byte_end":80382,"line_start":1635,"line_end":1635,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80383,"byte_end":80396,"line_start":1636,"line_end":1636,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81043,"byte_end":81055,"line_start":1651,"line_end":1651,"column_start":12,"column_end":24},"name":"GB18030_INIT","qualname":"::GB18030_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [gb18030](static.GB18030.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [gb18030](static.GB18030.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80449,"byte_end":80517,"line_start":1639,"line_end":1639,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80518,"byte_end":80521,"line_start":1640,"line_end":1640,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80522,"byte_end":80579,"line_start":1641,"line_end":1641,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80580,"byte_end":80640,"line_start":1642,"line_end":1642,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80641,"byte_end":80701,"line_start":1643,"line_end":1643,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80702,"byte_end":80765,"line_start":1644,"line_end":1644,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80766,"byte_end":80769,"line_start":1645,"line_end":1645,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80770,"byte_end":80830,"line_start":1646,"line_end":1646,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80831,"byte_end":80893,"line_start":1647,"line_end":1647,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80894,"byte_end":80957,"line_start":1648,"line_end":1648,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":80958,"byte_end":81020,"line_start":1649,"line_end":1649,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81021,"byte_end":81031,"line_start":1650,"line_end":1650,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81909,"byte_end":81916,"line_start":1672,"line_end":1672,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::GB18030","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The gb18030 encoding.","sig":null,"attributes":[{"value":"/ The gb18030 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81143,"byte_end":81168,"line_start":1656,"line_end":1656,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81169,"byte_end":81172,"line_start":1657,"line_end":1657,"column_start":1,"column_end":4}},{"value":"/ This encoding matches GB18030-2005 except the two-byte sequence 0xA3 0xA0","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81173,"byte_end":81250,"line_start":1658,"line_end":1658,"column_start":1,"column_end":78}},{"value":"/ maps to U+3000 for compatibility with existing Web content. As a result,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81251,"byte_end":81327,"line_start":1659,"line_end":1659,"column_start":1,"column_end":77}},{"value":"/ this encoding can represent all of Unicode except for the private-use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81328,"byte_end":81401,"line_start":1660,"line_end":1660,"column_start":1,"column_end":74}},{"value":"/ character U+E5E5.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81402,"byte_end":81423,"line_start":1661,"line_end":1661,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81424,"byte_end":81427,"line_start":1662,"line_end":1662,"column_start":1,"column_end":4}},{"value":"/ [Index visualization for the two-byte sequences](https://encoding.spec.whatwg.org/gb18030.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81428,"byte_end":81528,"line_start":1663,"line_end":1663,"column_start":1,"column_end":101}},{"value":"/ [Visualization of BMP coverage of the two-byte index](https://encoding.spec.whatwg.org/gb18030-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81529,"byte_end":81637,"line_start":1664,"line_end":1664,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81638,"byte_end":81641,"line_start":1665,"line_end":1665,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 54936.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81642,"byte_end":81696,"line_start":1666,"line_end":1666,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81697,"byte_end":81700,"line_start":1667,"line_end":1667,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81701,"byte_end":81762,"line_start":1668,"line_end":1668,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81763,"byte_end":81825,"line_start":1669,"line_end":1669,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81826,"byte_end":81883,"line_start":1670,"line_end":1670,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81884,"byte_end":81897,"line_start":1671,"line_end":1671,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82552,"byte_end":82566,"line_start":1686,"line_end":1686,"column_start":12,"column_end":26},"name":"MACINTOSH_INIT","qualname":"::MACINTOSH_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [macintosh](static.MACINTOSH.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [macintosh](static.MACINTOSH.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":81954,"byte_end":82026,"line_start":1674,"line_end":1674,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82027,"byte_end":82030,"line_start":1675,"line_end":1675,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82031,"byte_end":82088,"line_start":1676,"line_end":1676,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82089,"byte_end":82149,"line_start":1677,"line_end":1677,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82150,"byte_end":82210,"line_start":1678,"line_end":1678,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82211,"byte_end":82274,"line_start":1679,"line_end":1679,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82275,"byte_end":82278,"line_start":1680,"line_end":1680,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82279,"byte_end":82339,"line_start":1681,"line_end":1681,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82340,"byte_end":82402,"line_start":1682,"line_end":1682,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82403,"byte_end":82466,"line_start":1683,"line_end":1683,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82467,"byte_end":82529,"line_start":1684,"line_end":1684,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82530,"byte_end":82540,"line_start":1685,"line_end":1685,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83334,"byte_end":83343,"line_start":1705,"line_end":1705,"column_start":12,"column_end":21},"name":"MACINTOSH","qualname":"::MACINTOSH","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The macintosh encoding.","sig":null,"attributes":[{"value":"/ The macintosh encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82710,"byte_end":82737,"line_start":1691,"line_end":1691,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82738,"byte_end":82741,"line_start":1692,"line_end":1692,"column_start":1,"column_end":4}},{"value":"/ This is the MacRoman encoding from Mac OS Classic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82742,"byte_end":82796,"line_start":1693,"line_end":1693,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82797,"byte_end":82800,"line_start":1694,"line_end":1694,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/macintosh.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82801,"byte_end":82876,"line_start":1695,"line_end":1695,"column_start":1,"column_end":76}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/macintosh-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82877,"byte_end":82965,"line_start":1696,"line_end":1696,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82966,"byte_end":82969,"line_start":1697,"line_end":1697,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 10000, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":82970,"byte_end":83047,"line_start":1698,"line_end":1698,"column_start":1,"column_end":78}},{"value":"/ 0xBD to U+2126 OHM SIGN instead of U+03A9 GREEK CAPITAL LETTER OMEGA.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83048,"byte_end":83121,"line_start":1699,"line_end":1699,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83122,"byte_end":83125,"line_start":1700,"line_end":1700,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83126,"byte_end":83187,"line_start":1701,"line_end":1701,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83188,"byte_end":83250,"line_start":1702,"line_end":1702,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83251,"byte_end":83308,"line_start":1703,"line_end":1703,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83309,"byte_end":83322,"line_start":1704,"line_end":1704,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83985,"byte_end":84001,"line_start":1719,"line_end":1719,"column_start":12,"column_end":28},"name":"REPLACEMENT_INIT","qualname":"::REPLACEMENT_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [replacement](static.REPLACEMENT.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [replacement](static.REPLACEMENT.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83383,"byte_end":83459,"line_start":1707,"line_end":1707,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83460,"byte_end":83463,"line_start":1708,"line_end":1708,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83464,"byte_end":83521,"line_start":1709,"line_end":1709,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83522,"byte_end":83582,"line_start":1710,"line_end":1710,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83583,"byte_end":83643,"line_start":1711,"line_end":1711,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83644,"byte_end":83707,"line_start":1712,"line_end":1712,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83708,"byte_end":83711,"line_start":1713,"line_end":1713,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83712,"byte_end":83772,"line_start":1714,"line_end":1714,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83773,"byte_end":83835,"line_start":1715,"line_end":1715,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83836,"byte_end":83899,"line_start":1716,"line_end":1716,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83900,"byte_end":83962,"line_start":1717,"line_end":1717,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":83963,"byte_end":83973,"line_start":1718,"line_end":1718,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84842,"byte_end":84853,"line_start":1741,"line_end":1741,"column_start":12,"column_end":23},"name":"REPLACEMENT","qualname":"::REPLACEMENT","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The replacement encoding.","sig":null,"attributes":[{"value":"/ The replacement encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84097,"byte_end":84126,"line_start":1724,"line_end":1724,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84127,"byte_end":84130,"line_start":1725,"line_end":1725,"column_start":1,"column_end":4}},{"value":"/ This decode-only encoding decodes all non-zero-length streams to a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84131,"byte_end":84208,"line_start":1726,"line_end":1726,"column_start":1,"column_end":78}},{"value":"/ REPLACEMENT CHARACTER. Its purpose is to avoid the use of an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84209,"byte_end":84273,"line_start":1727,"line_end":1727,"column_start":1,"column_end":65}},{"value":"/ ASCII-compatible fallback encoding (typically windows-1252) for some","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84274,"byte_end":84346,"line_start":1728,"line_end":1728,"column_start":1,"column_end":73}},{"value":"/ encodings that are no longer supported by the Web Platform and that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84347,"byte_end":84418,"line_start":1729,"line_end":1729,"column_start":1,"column_end":72}},{"value":"/ would be dangerous to treat as ASCII-compatible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84419,"byte_end":84471,"line_start":1730,"line_end":1730,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84472,"byte_end":84475,"line_start":1731,"line_end":1731,"column_start":1,"column_end":4}},{"value":"/ There is no corresponding encoder. The output encoding of this encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84476,"byte_end":84551,"line_start":1732,"line_end":1732,"column_start":1,"column_end":76}},{"value":"/ is UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84552,"byte_end":84565,"line_start":1733,"line_end":1733,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84566,"byte_end":84569,"line_start":1734,"line_end":1734,"column_start":1,"column_end":4}},{"value":"/ This encoding does not have a Windows code page number.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84570,"byte_end":84629,"line_start":1735,"line_end":1735,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84630,"byte_end":84633,"line_start":1736,"line_end":1736,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84634,"byte_end":84695,"line_start":1737,"line_end":1737,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84696,"byte_end":84758,"line_start":1738,"line_end":1738,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84759,"byte_end":84816,"line_start":1739,"line_end":1739,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84817,"byte_end":84830,"line_start":1740,"line_end":1740,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85499,"byte_end":85516,"line_start":1755,"line_end":1755,"column_start":12,"column_end":29},"name":"WINDOWS_1250_INIT","qualname":"::WINDOWS_1250_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1250](static.WINDOWS_1250.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1250](static.WINDOWS_1250.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84895,"byte_end":84973,"line_start":1743,"line_end":1743,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84974,"byte_end":84977,"line_start":1744,"line_end":1744,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":84978,"byte_end":85035,"line_start":1745,"line_end":1745,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85036,"byte_end":85096,"line_start":1746,"line_end":1746,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85097,"byte_end":85157,"line_start":1747,"line_end":1747,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85158,"byte_end":85221,"line_start":1748,"line_end":1748,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85222,"byte_end":85225,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85226,"byte_end":85286,"line_start":1750,"line_end":1750,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85287,"byte_end":85349,"line_start":1751,"line_end":1751,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85350,"byte_end":85413,"line_start":1752,"line_end":1752,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85414,"byte_end":85476,"line_start":1753,"line_end":1753,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85477,"byte_end":85487,"line_start":1754,"line_end":1754,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86200,"byte_end":86212,"line_start":1773,"line_end":1773,"column_start":12,"column_end":24},"name":"WINDOWS_1250","qualname":"::WINDOWS_1250","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1250 encoding.","sig":null,"attributes":[{"value":"/ The windows-1250 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85665,"byte_end":85695,"line_start":1760,"line_end":1760,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85696,"byte_end":85699,"line_start":1761,"line_end":1761,"column_start":1,"column_end":4}},{"value":"/ This is the Central European encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85700,"byte_end":85754,"line_start":1762,"line_end":1762,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85755,"byte_end":85758,"line_start":1763,"line_end":1763,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1250.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85759,"byte_end":85837,"line_start":1764,"line_end":1764,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1250-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85838,"byte_end":85929,"line_start":1765,"line_end":1765,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85930,"byte_end":85933,"line_start":1766,"line_end":1766,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1250.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85934,"byte_end":85987,"line_start":1767,"line_end":1767,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85988,"byte_end":85991,"line_start":1768,"line_end":1768,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":85992,"byte_end":86053,"line_start":1769,"line_end":1769,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86054,"byte_end":86116,"line_start":1770,"line_end":1770,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86117,"byte_end":86174,"line_start":1771,"line_end":1771,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86175,"byte_end":86188,"line_start":1772,"line_end":1772,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86859,"byte_end":86876,"line_start":1787,"line_end":1787,"column_start":12,"column_end":29},"name":"WINDOWS_1251_INIT","qualname":"::WINDOWS_1251_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1251](static.WINDOWS_1251.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1251](static.WINDOWS_1251.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86255,"byte_end":86333,"line_start":1775,"line_end":1775,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86334,"byte_end":86337,"line_start":1776,"line_end":1776,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86338,"byte_end":86395,"line_start":1777,"line_end":1777,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86396,"byte_end":86456,"line_start":1778,"line_end":1778,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86457,"byte_end":86517,"line_start":1779,"line_end":1779,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86518,"byte_end":86581,"line_start":1780,"line_end":1780,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86582,"byte_end":86585,"line_start":1781,"line_end":1781,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86586,"byte_end":86646,"line_start":1782,"line_end":1782,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86647,"byte_end":86709,"line_start":1783,"line_end":1783,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86710,"byte_end":86773,"line_start":1784,"line_end":1784,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86774,"byte_end":86836,"line_start":1785,"line_end":1785,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":86837,"byte_end":86847,"line_start":1786,"line_end":1786,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87553,"byte_end":87565,"line_start":1805,"line_end":1805,"column_start":12,"column_end":24},"name":"WINDOWS_1251","qualname":"::WINDOWS_1251","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1251 encoding.","sig":null,"attributes":[{"value":"/ The windows-1251 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87026,"byte_end":87056,"line_start":1792,"line_end":1792,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87057,"byte_end":87060,"line_start":1793,"line_end":1793,"column_start":1,"column_end":4}},{"value":"/ This is the Cyrillic encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87061,"byte_end":87107,"line_start":1794,"line_end":1794,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87108,"byte_end":87111,"line_start":1795,"line_end":1795,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1251.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87112,"byte_end":87190,"line_start":1796,"line_end":1796,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1251-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87191,"byte_end":87282,"line_start":1797,"line_end":1797,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87283,"byte_end":87286,"line_start":1798,"line_end":1798,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1251.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87287,"byte_end":87340,"line_start":1799,"line_end":1799,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87341,"byte_end":87344,"line_start":1800,"line_end":1800,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87345,"byte_end":87406,"line_start":1801,"line_end":1801,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87407,"byte_end":87469,"line_start":1802,"line_end":1802,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87470,"byte_end":87527,"line_start":1803,"line_end":1803,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87528,"byte_end":87541,"line_start":1804,"line_end":1804,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88212,"byte_end":88229,"line_start":1819,"line_end":1819,"column_start":12,"column_end":29},"name":"WINDOWS_1252_INIT","qualname":"::WINDOWS_1252_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1252](static.WINDOWS_1252.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1252](static.WINDOWS_1252.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87608,"byte_end":87686,"line_start":1807,"line_end":1807,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87687,"byte_end":87690,"line_start":1808,"line_end":1808,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87691,"byte_end":87748,"line_start":1809,"line_end":1809,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87749,"byte_end":87809,"line_start":1810,"line_end":1810,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87810,"byte_end":87870,"line_start":1811,"line_end":1811,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87871,"byte_end":87934,"line_start":1812,"line_end":1812,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87935,"byte_end":87938,"line_start":1813,"line_end":1813,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":87939,"byte_end":87999,"line_start":1814,"line_end":1814,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88000,"byte_end":88062,"line_start":1815,"line_end":1815,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88063,"byte_end":88126,"line_start":1816,"line_end":1816,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88127,"byte_end":88189,"line_start":1817,"line_end":1817,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88190,"byte_end":88200,"line_start":1818,"line_end":1818,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88970,"byte_end":88982,"line_start":1838,"line_end":1838,"column_start":12,"column_end":24},"name":"WINDOWS_1252","qualname":"::WINDOWS_1252","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1252 encoding.","sig":null,"attributes":[{"value":"/ The windows-1252 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88379,"byte_end":88409,"line_start":1824,"line_end":1824,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88410,"byte_end":88413,"line_start":1825,"line_end":1825,"column_start":1,"column_end":4}},{"value":"/ This is the Western encoding for Windows. It is an extension of ISO-8859-1,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88414,"byte_end":88493,"line_start":1826,"line_end":1826,"column_start":1,"column_end":80}},{"value":"/ which is known as Latin 1.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88494,"byte_end":88524,"line_start":1827,"line_end":1827,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88525,"byte_end":88528,"line_start":1828,"line_end":1828,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1252.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88529,"byte_end":88607,"line_start":1829,"line_end":1829,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1252-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88608,"byte_end":88699,"line_start":1830,"line_end":1830,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88700,"byte_end":88703,"line_start":1831,"line_end":1831,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1252.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88704,"byte_end":88757,"line_start":1832,"line_end":1832,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88758,"byte_end":88761,"line_start":1833,"line_end":1833,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88762,"byte_end":88823,"line_start":1834,"line_end":1834,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88824,"byte_end":88886,"line_start":1835,"line_end":1835,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88887,"byte_end":88944,"line_start":1836,"line_end":1836,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":88945,"byte_end":88958,"line_start":1837,"line_end":1837,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89629,"byte_end":89646,"line_start":1852,"line_end":1852,"column_start":12,"column_end":29},"name":"WINDOWS_1253_INIT","qualname":"::WINDOWS_1253_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1253](static.WINDOWS_1253.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1253](static.WINDOWS_1253.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89025,"byte_end":89103,"line_start":1840,"line_end":1840,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89104,"byte_end":89107,"line_start":1841,"line_end":1841,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89108,"byte_end":89165,"line_start":1842,"line_end":1842,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89166,"byte_end":89226,"line_start":1843,"line_end":1843,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89227,"byte_end":89287,"line_start":1844,"line_end":1844,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89288,"byte_end":89351,"line_start":1845,"line_end":1845,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89352,"byte_end":89355,"line_start":1846,"line_end":1846,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89356,"byte_end":89416,"line_start":1847,"line_end":1847,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89417,"byte_end":89479,"line_start":1848,"line_end":1848,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89480,"byte_end":89543,"line_start":1849,"line_end":1849,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89544,"byte_end":89606,"line_start":1850,"line_end":1850,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89607,"byte_end":89617,"line_start":1851,"line_end":1851,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90493,"byte_end":90505,"line_start":1872,"line_end":1872,"column_start":12,"column_end":24},"name":"WINDOWS_1253","qualname":"::WINDOWS_1253","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1253 encoding.","sig":null,"attributes":[{"value":"/ The windows-1253 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89796,"byte_end":89826,"line_start":1857,"line_end":1857,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89827,"byte_end":89830,"line_start":1858,"line_end":1858,"column_start":1,"column_end":4}},{"value":"/ This is the Greek encoding for Windows. It is mostly an extension of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89831,"byte_end":89903,"line_start":1859,"line_end":1859,"column_start":1,"column_end":73}},{"value":"/ ISO-8859-7, but U+0386 is mapped to a different byte.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89904,"byte_end":89961,"line_start":1860,"line_end":1860,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89962,"byte_end":89965,"line_start":1861,"line_end":1861,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1253.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":89966,"byte_end":90044,"line_start":1862,"line_end":1862,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1253-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90045,"byte_end":90136,"line_start":1863,"line_end":1863,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90137,"byte_end":90140,"line_start":1864,"line_end":1864,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1253, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90141,"byte_end":90217,"line_start":1865,"line_end":1865,"column_start":1,"column_end":77}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90218,"byte_end":90280,"line_start":1866,"line_end":1866,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90281,"byte_end":90284,"line_start":1867,"line_end":1867,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90285,"byte_end":90346,"line_start":1868,"line_end":1868,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90347,"byte_end":90409,"line_start":1869,"line_end":1869,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90410,"byte_end":90467,"line_start":1870,"line_end":1870,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90468,"byte_end":90481,"line_start":1871,"line_end":1871,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91152,"byte_end":91169,"line_start":1886,"line_end":1886,"column_start":12,"column_end":29},"name":"WINDOWS_1254_INIT","qualname":"::WINDOWS_1254_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1254](static.WINDOWS_1254.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1254](static.WINDOWS_1254.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90548,"byte_end":90626,"line_start":1874,"line_end":1874,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90627,"byte_end":90630,"line_start":1875,"line_end":1875,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90631,"byte_end":90688,"line_start":1876,"line_end":1876,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90689,"byte_end":90749,"line_start":1877,"line_end":1877,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90750,"byte_end":90810,"line_start":1878,"line_end":1878,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90811,"byte_end":90874,"line_start":1879,"line_end":1879,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90875,"byte_end":90878,"line_start":1880,"line_end":1880,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90879,"byte_end":90939,"line_start":1881,"line_end":1881,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":90940,"byte_end":91002,"line_start":1882,"line_end":1882,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91003,"byte_end":91066,"line_start":1883,"line_end":1883,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91067,"byte_end":91129,"line_start":1884,"line_end":1884,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91130,"byte_end":91140,"line_start":1885,"line_end":1885,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91910,"byte_end":91922,"line_start":1905,"line_end":1905,"column_start":12,"column_end":24},"name":"WINDOWS_1254","qualname":"::WINDOWS_1254","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1254 encoding.","sig":null,"attributes":[{"value":"/ The windows-1254 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91319,"byte_end":91349,"line_start":1891,"line_end":1891,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91350,"byte_end":91353,"line_start":1892,"line_end":1892,"column_start":1,"column_end":4}},{"value":"/ This is the Turkish encoding for Windows. It is an extension of ISO-8859-9,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91354,"byte_end":91433,"line_start":1893,"line_end":1893,"column_start":1,"column_end":80}},{"value":"/ which is known as Latin 5.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91434,"byte_end":91464,"line_start":1894,"line_end":1894,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91465,"byte_end":91468,"line_start":1895,"line_end":1895,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1254.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91469,"byte_end":91547,"line_start":1896,"line_end":1896,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1254-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91548,"byte_end":91639,"line_start":1897,"line_end":1897,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91640,"byte_end":91643,"line_start":1898,"line_end":1898,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1254.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91644,"byte_end":91697,"line_start":1899,"line_end":1899,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91698,"byte_end":91701,"line_start":1900,"line_end":1900,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91702,"byte_end":91763,"line_start":1901,"line_end":1901,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91764,"byte_end":91826,"line_start":1902,"line_end":1902,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91827,"byte_end":91884,"line_start":1903,"line_end":1903,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91885,"byte_end":91898,"line_start":1904,"line_end":1904,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92569,"byte_end":92586,"line_start":1919,"line_end":1919,"column_start":12,"column_end":29},"name":"WINDOWS_1255_INIT","qualname":"::WINDOWS_1255_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1255](static.WINDOWS_1255.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1255](static.WINDOWS_1255.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":91965,"byte_end":92043,"line_start":1907,"line_end":1907,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92044,"byte_end":92047,"line_start":1908,"line_end":1908,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92048,"byte_end":92105,"line_start":1909,"line_end":1909,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92106,"byte_end":92166,"line_start":1910,"line_end":1910,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92167,"byte_end":92227,"line_start":1911,"line_end":1911,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92228,"byte_end":92291,"line_start":1912,"line_end":1912,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92292,"byte_end":92295,"line_start":1913,"line_end":1913,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92296,"byte_end":92356,"line_start":1914,"line_end":1914,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92357,"byte_end":92419,"line_start":1915,"line_end":1915,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92420,"byte_end":92483,"line_start":1916,"line_end":1916,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92484,"byte_end":92546,"line_start":1917,"line_end":1917,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92547,"byte_end":92557,"line_start":1918,"line_end":1918,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93420,"byte_end":93432,"line_start":1939,"line_end":1939,"column_start":12,"column_end":24},"name":"WINDOWS_1255","qualname":"::WINDOWS_1255","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1255 encoding.","sig":null,"attributes":[{"value":"/ The windows-1255 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92736,"byte_end":92766,"line_start":1924,"line_end":1924,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92767,"byte_end":92770,"line_start":1925,"line_end":1925,"column_start":1,"column_end":4}},{"value":"/ This is the Hebrew encoding for Windows. It is an extension of ISO-8859-8-I,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92771,"byte_end":92851,"line_start":1926,"line_end":1926,"column_start":1,"column_end":81}},{"value":"/ except for a currency sign swap.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92852,"byte_end":92888,"line_start":1927,"line_end":1927,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92889,"byte_end":92892,"line_start":1928,"line_end":1928,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1255.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92893,"byte_end":92971,"line_start":1929,"line_end":1929,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1255-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":92972,"byte_end":93063,"line_start":1930,"line_end":1930,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93064,"byte_end":93067,"line_start":1931,"line_end":1931,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1255, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93068,"byte_end":93144,"line_start":1932,"line_end":1932,"column_start":1,"column_end":77}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93145,"byte_end":93207,"line_start":1933,"line_end":1933,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93208,"byte_end":93211,"line_start":1934,"line_end":1934,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93212,"byte_end":93273,"line_start":1935,"line_end":1935,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93274,"byte_end":93336,"line_start":1936,"line_end":1936,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93337,"byte_end":93394,"line_start":1937,"line_end":1937,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93395,"byte_end":93408,"line_start":1938,"line_end":1938,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94079,"byte_end":94096,"line_start":1953,"line_end":1953,"column_start":12,"column_end":29},"name":"WINDOWS_1256_INIT","qualname":"::WINDOWS_1256_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1256](static.WINDOWS_1256.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1256](static.WINDOWS_1256.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93475,"byte_end":93553,"line_start":1941,"line_end":1941,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93554,"byte_end":93557,"line_start":1942,"line_end":1942,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93558,"byte_end":93615,"line_start":1943,"line_end":1943,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93616,"byte_end":93676,"line_start":1944,"line_end":1944,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93677,"byte_end":93737,"line_start":1945,"line_end":1945,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93738,"byte_end":93801,"line_start":1946,"line_end":1946,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93802,"byte_end":93805,"line_start":1947,"line_end":1947,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93806,"byte_end":93866,"line_start":1948,"line_end":1948,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93867,"byte_end":93929,"line_start":1949,"line_end":1949,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93930,"byte_end":93993,"line_start":1950,"line_end":1950,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":93994,"byte_end":94056,"line_start":1951,"line_end":1951,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94057,"byte_end":94067,"line_start":1952,"line_end":1952,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94771,"byte_end":94783,"line_start":1971,"line_end":1971,"column_start":12,"column_end":24},"name":"WINDOWS_1256","qualname":"::WINDOWS_1256","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1256 encoding.","sig":null,"attributes":[{"value":"/ The windows-1256 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94246,"byte_end":94276,"line_start":1958,"line_end":1958,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94277,"byte_end":94280,"line_start":1959,"line_end":1959,"column_start":1,"column_end":4}},{"value":"/ This is the Arabic encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94281,"byte_end":94325,"line_start":1960,"line_end":1960,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94326,"byte_end":94329,"line_start":1961,"line_end":1961,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1256.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94330,"byte_end":94408,"line_start":1962,"line_end":1962,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1256-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94409,"byte_end":94500,"line_start":1963,"line_end":1963,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94501,"byte_end":94504,"line_start":1964,"line_end":1964,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1256.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94505,"byte_end":94558,"line_start":1965,"line_end":1965,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94559,"byte_end":94562,"line_start":1966,"line_end":1966,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94563,"byte_end":94624,"line_start":1967,"line_end":1967,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94625,"byte_end":94687,"line_start":1968,"line_end":1968,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94688,"byte_end":94745,"line_start":1969,"line_end":1969,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94746,"byte_end":94759,"line_start":1970,"line_end":1970,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95430,"byte_end":95447,"line_start":1985,"line_end":1985,"column_start":12,"column_end":29},"name":"WINDOWS_1257_INIT","qualname":"::WINDOWS_1257_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1257](static.WINDOWS_1257.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1257](static.WINDOWS_1257.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94826,"byte_end":94904,"line_start":1973,"line_end":1973,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94905,"byte_end":94908,"line_start":1974,"line_end":1974,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94909,"byte_end":94966,"line_start":1975,"line_end":1975,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":94967,"byte_end":95027,"line_start":1976,"line_end":1976,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95028,"byte_end":95088,"line_start":1977,"line_end":1977,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95089,"byte_end":95152,"line_start":1978,"line_end":1978,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95153,"byte_end":95156,"line_start":1979,"line_end":1979,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95157,"byte_end":95217,"line_start":1980,"line_end":1980,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95218,"byte_end":95280,"line_start":1981,"line_end":1981,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95281,"byte_end":95344,"line_start":1982,"line_end":1982,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95345,"byte_end":95407,"line_start":1983,"line_end":1983,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95408,"byte_end":95418,"line_start":1984,"line_end":1984,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96207,"byte_end":96219,"line_start":2004,"line_end":2004,"column_start":12,"column_end":24},"name":"WINDOWS_1257","qualname":"::WINDOWS_1257","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1257 encoding.","sig":null,"attributes":[{"value":"/ The windows-1257 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95596,"byte_end":95626,"line_start":1990,"line_end":1990,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95627,"byte_end":95630,"line_start":1991,"line_end":1991,"column_start":1,"column_end":4}},{"value":"/ This is the Baltic encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95631,"byte_end":95675,"line_start":1992,"line_end":1992,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95676,"byte_end":95679,"line_start":1993,"line_end":1993,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1257.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95680,"byte_end":95758,"line_start":1994,"line_end":1994,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1257-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95759,"byte_end":95850,"line_start":1995,"line_end":1995,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95851,"byte_end":95854,"line_start":1996,"line_end":1996,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1257, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95855,"byte_end":95931,"line_start":1997,"line_end":1997,"column_start":1,"column_end":77}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95932,"byte_end":95994,"line_start":1998,"line_end":1998,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95995,"byte_end":95998,"line_start":1999,"line_end":1999,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":95999,"byte_end":96060,"line_start":2000,"line_end":2000,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96061,"byte_end":96123,"line_start":2001,"line_end":2001,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96124,"byte_end":96181,"line_start":2002,"line_end":2002,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96182,"byte_end":96195,"line_start":2003,"line_end":2003,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96866,"byte_end":96883,"line_start":2018,"line_end":2018,"column_start":12,"column_end":29},"name":"WINDOWS_1258_INIT","qualname":"::WINDOWS_1258_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1258](static.WINDOWS_1258.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-1258](static.WINDOWS_1258.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96262,"byte_end":96340,"line_start":2006,"line_end":2006,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96341,"byte_end":96344,"line_start":2007,"line_end":2007,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96345,"byte_end":96402,"line_start":2008,"line_end":2008,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96403,"byte_end":96463,"line_start":2009,"line_end":2009,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96464,"byte_end":96524,"line_start":2010,"line_end":2010,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96525,"byte_end":96588,"line_start":2011,"line_end":2011,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96589,"byte_end":96592,"line_start":2012,"line_end":2012,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96593,"byte_end":96653,"line_start":2013,"line_end":2013,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96654,"byte_end":96716,"line_start":2014,"line_end":2014,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96717,"byte_end":96780,"line_start":2015,"line_end":2015,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96781,"byte_end":96843,"line_start":2016,"line_end":2016,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":96844,"byte_end":96854,"line_start":2017,"line_end":2017,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97945,"byte_end":97957,"line_start":2041,"line_end":2041,"column_start":12,"column_end":24},"name":"WINDOWS_1258","qualname":"::WINDOWS_1258","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1258 encoding.","sig":null,"attributes":[{"value":"/ The windows-1258 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97032,"byte_end":97062,"line_start":2023,"line_end":2023,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97063,"byte_end":97066,"line_start":2024,"line_end":2024,"column_start":1,"column_end":4}},{"value":"/ This is the Vietnamese encoding for Windows.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97067,"byte_end":97115,"line_start":2025,"line_end":2025,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97116,"byte_end":97119,"line_start":2026,"line_end":2026,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-1258.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97120,"byte_end":97198,"line_start":2027,"line_end":2027,"column_start":1,"column_end":79}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-1258-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97199,"byte_end":97290,"line_start":2028,"line_end":2028,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97291,"byte_end":97294,"line_start":2029,"line_end":2029,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 1258 when used in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97295,"byte_end":97364,"line_start":2030,"line_end":2030,"column_start":1,"column_end":70}},{"value":"/ non-normalizing mode. Unlike with the other single-byte encodings, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97365,"byte_end":97439,"line_start":2031,"line_end":2031,"column_start":1,"column_end":75}},{"value":"/ result of decoding is not necessarily in Normalization Form C. On the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97440,"byte_end":97513,"line_start":2032,"line_end":2032,"column_start":1,"column_end":74}},{"value":"/ other hand, input in the Normalization Form C is not encoded without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97514,"byte_end":97586,"line_start":2033,"line_end":2033,"column_start":1,"column_end":73}},{"value":"/ replacement. In general, it's a bad idea to encode to encodings other","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97587,"byte_end":97660,"line_start":2034,"line_end":2034,"column_start":1,"column_end":74}},{"value":"/ than UTF-8, but this encoding is especially hazardous to encode to.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97661,"byte_end":97732,"line_start":2035,"line_end":2035,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97733,"byte_end":97736,"line_start":2036,"line_end":2036,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97737,"byte_end":97798,"line_start":2037,"line_end":2037,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97799,"byte_end":97861,"line_start":2038,"line_end":2038,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97862,"byte_end":97919,"line_start":2039,"line_end":2039,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":97920,"byte_end":97933,"line_start":2040,"line_end":2040,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98602,"byte_end":98618,"line_start":2055,"line_end":2055,"column_start":12,"column_end":28},"name":"WINDOWS_874_INIT","qualname":"::WINDOWS_874_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-874](static.WINDOWS_874.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [windows-874](static.WINDOWS_874.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98000,"byte_end":98076,"line_start":2043,"line_end":2043,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98077,"byte_end":98080,"line_start":2044,"line_end":2044,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98081,"byte_end":98138,"line_start":2045,"line_end":2045,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98139,"byte_end":98199,"line_start":2046,"line_end":2046,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98200,"byte_end":98260,"line_start":2047,"line_end":2047,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98261,"byte_end":98324,"line_start":2048,"line_end":2048,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98325,"byte_end":98328,"line_start":2049,"line_end":2049,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98329,"byte_end":98389,"line_start":2050,"line_end":2050,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98390,"byte_end":98452,"line_start":2051,"line_end":2051,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98453,"byte_end":98516,"line_start":2052,"line_end":2052,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98517,"byte_end":98579,"line_start":2053,"line_end":2053,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98580,"byte_end":98590,"line_start":2054,"line_end":2054,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99416,"byte_end":99427,"line_start":2074,"line_end":2074,"column_start":12,"column_end":23},"name":"WINDOWS_874","qualname":"::WINDOWS_874","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-874 encoding.","sig":null,"attributes":[{"value":"/ The windows-874 encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98766,"byte_end":98795,"line_start":2060,"line_end":2060,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98796,"byte_end":98799,"line_start":2061,"line_end":2061,"column_start":1,"column_end":4}},{"value":"/ This is the Thai encoding for Windows. It is an extension of TIS-620 / ISO-8859-11.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98800,"byte_end":98887,"line_start":2062,"line_end":2062,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98888,"byte_end":98891,"line_start":2063,"line_end":2063,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/windows-874.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98892,"byte_end":98969,"line_start":2064,"line_end":2064,"column_start":1,"column_end":78}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/windows-874-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":98970,"byte_end":99060,"line_start":2065,"line_end":2065,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99061,"byte_end":99064,"line_start":2066,"line_end":2066,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 874, except Windows decodes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99065,"byte_end":99140,"line_start":2067,"line_end":2067,"column_start":1,"column_end":76}},{"value":"/ unassigned code points to the Private Use Area of Unicode.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99141,"byte_end":99203,"line_start":2068,"line_end":2068,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99204,"byte_end":99207,"line_start":2069,"line_end":2069,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99208,"byte_end":99269,"line_start":2070,"line_end":2070,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99270,"byte_end":99332,"line_start":2071,"line_end":2071,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99333,"byte_end":99390,"line_start":2072,"line_end":2072,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99391,"byte_end":99404,"line_start":2073,"line_end":2073,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100077,"byte_end":100096,"line_start":2088,"line_end":2088,"column_start":12,"column_end":31},"name":"X_MAC_CYRILLIC_INIT","qualname":"::X_MAC_CYRILLIC_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-mac-cyrillic](static.X_MAC_CYRILLIC.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [x-mac-cyrillic](static.X_MAC_CYRILLIC.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99469,"byte_end":99551,"line_start":2076,"line_end":2076,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99552,"byte_end":99555,"line_start":2077,"line_end":2077,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99556,"byte_end":99613,"line_start":2078,"line_end":2078,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99614,"byte_end":99674,"line_start":2079,"line_end":2079,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99675,"byte_end":99735,"line_start":2080,"line_end":2080,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99736,"byte_end":99799,"line_start":2081,"line_end":2081,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99800,"byte_end":99803,"line_start":2082,"line_end":2082,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99804,"byte_end":99864,"line_start":2083,"line_end":2083,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99865,"byte_end":99927,"line_start":2084,"line_end":2084,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99928,"byte_end":99991,"line_start":2085,"line_end":2085,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":99992,"byte_end":100054,"line_start":2086,"line_end":2086,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100055,"byte_end":100065,"line_start":2087,"line_end":2087,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100796,"byte_end":100810,"line_start":2106,"line_end":2106,"column_start":12,"column_end":26},"name":"X_MAC_CYRILLIC","qualname":"::X_MAC_CYRILLIC","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-mac-cyrillic encoding.","sig":null,"attributes":[{"value":"/ The x-mac-cyrillic encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100250,"byte_end":100282,"line_start":2093,"line_end":2093,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100283,"byte_end":100286,"line_start":2094,"line_end":2094,"column_start":1,"column_end":4}},{"value":"/ This is the MacUkrainian encoding from Mac OS Classic.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100287,"byte_end":100345,"line_start":2095,"line_end":2095,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100346,"byte_end":100349,"line_start":2096,"line_end":2096,"column_start":1,"column_end":4}},{"value":"/ [Index visualization](https://encoding.spec.whatwg.org/x-mac-cyrillic.html),","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100350,"byte_end":100430,"line_start":2097,"line_end":2097,"column_start":1,"column_end":81}},{"value":"/ [Visualization of BMP coverage](https://encoding.spec.whatwg.org/x-mac-cyrillic-bmp.html)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100431,"byte_end":100524,"line_start":2098,"line_end":2098,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100525,"byte_end":100528,"line_start":2099,"line_end":2099,"column_start":1,"column_end":4}},{"value":"/ This encoding matches the Windows code page 10017.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100529,"byte_end":100583,"line_start":2100,"line_end":2100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100584,"byte_end":100587,"line_start":2101,"line_end":2101,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100588,"byte_end":100649,"line_start":2102,"line_end":2102,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100650,"byte_end":100712,"line_start":2103,"line_end":2103,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100713,"byte_end":100770,"line_start":2104,"line_end":2104,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100771,"byte_end":100784,"line_start":2105,"line_end":2105,"column_start":1,"column_end":14}}]},{"kind":"Static","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101463,"byte_end":101482,"line_start":2120,"line_end":2120,"column_start":12,"column_end":31},"name":"X_USER_DEFINED_INIT","qualname":"::X_USER_DEFINED_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-user-defined](static.X_USER_DEFINED.html) encoding.","sig":null,"attributes":[{"value":"/ The initializer for the [x-user-defined](static.X_USER_DEFINED.html) encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100855,"byte_end":100937,"line_start":2108,"line_end":2108,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100938,"byte_end":100941,"line_start":2109,"line_end":2109,"column_start":1,"column_end":4}},{"value":"/ For use only for taking the address of this form when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":100942,"byte_end":100999,"line_start":2110,"line_end":2110,"column_start":1,"column_end":58}},{"value":"/ Rust prohibits the use of the non-`_INIT` form directly,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101000,"byte_end":101060,"line_start":2111,"line_end":2111,"column_start":1,"column_end":61}},{"value":"/ such as in initializers of other `static`s. If in doubt,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101061,"byte_end":101121,"line_start":2112,"line_end":2112,"column_start":1,"column_end":61}},{"value":"/ use the corresponding non-`_INIT` reference-typed `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101122,"byte_end":101185,"line_start":2113,"line_end":2113,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101186,"byte_end":101189,"line_start":2114,"line_end":2114,"column_start":1,"column_end":4}},{"value":"/ This part of the public API will go away if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101190,"byte_end":101250,"line_start":2115,"line_end":2115,"column_start":1,"column_end":61}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101251,"byte_end":101313,"line_start":2116,"line_end":2116,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate or if Rust starts allowing static arrays","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101314,"byte_end":101377,"line_start":2117,"line_end":2117,"column_start":1,"column_end":64}},{"value":"/ to be initialized with `pub static FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101378,"byte_end":101440,"line_start":2118,"line_end":2118,"column_start":1,"column_end":63}},{"value":"/ items.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101441,"byte_end":101451,"line_start":2119,"line_end":2119,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":102162,"byte_end":102176,"line_start":2138,"line_end":2138,"column_start":12,"column_end":26},"name":"X_USER_DEFINED","qualname":"::X_USER_DEFINED","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-user-defined encoding.","sig":null,"attributes":[{"value":"/ The x-user-defined encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101581,"byte_end":101613,"line_start":2125,"line_end":2125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101614,"byte_end":101617,"line_start":2126,"line_end":2126,"column_start":1,"column_end":4}},{"value":"/ This encoding offsets the non-ASCII bytes by `0xF700` thereby decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101618,"byte_end":101692,"line_start":2127,"line_end":2127,"column_start":1,"column_end":75}},{"value":"/ them to the Private Use Area of Unicode. It was used for loading binary","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101693,"byte_end":101768,"line_start":2128,"line_end":2128,"column_start":1,"column_end":76}},{"value":"/ data into a JavaScript string using `XMLHttpRequest` before XHR supported","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101769,"byte_end":101846,"line_start":2129,"line_end":2129,"column_start":1,"column_end":78}},{"value":"/ the `\"arraybuffer\"` response type.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101847,"byte_end":101885,"line_start":2130,"line_end":2130,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101886,"byte_end":101889,"line_start":2131,"line_end":2131,"column_start":1,"column_end":4}},{"value":"/ This encoding does not have a Windows code page number.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101890,"byte_end":101949,"line_start":2132,"line_end":2132,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101950,"byte_end":101953,"line_start":2133,"line_end":2133,"column_start":1,"column_end":4}},{"value":"/ This will change from `static` to `const` if Rust changes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":101954,"byte_end":102015,"line_start":2134,"line_end":2134,"column_start":1,"column_end":62}},{"value":"/ to make the referent of `pub const FOO: &'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":102016,"byte_end":102078,"line_start":2135,"line_end":2135,"column_start":1,"column_end":63}},{"value":"/ unique cross-crate, so don't take the address of this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":102079,"byte_end":102136,"line_start":2136,"line_end":2136,"column_start":1,"column_end":58}},{"value":"/ `static`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":102137,"byte_end":102150,"line_start":2137,"line_end":2137,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113864,"byte_end":113872,"line_start":2648,"line_end":2648,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"decl_id":null,"docs":" An encoding as defined in the [Encoding Standard][1].","sig":null,"attributes":[{"value":"/ An encoding as defined in the [Encoding Standard][1].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":110845,"byte_end":110902,"line_start":2586,"line_end":2586,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":110903,"byte_end":110906,"line_start":2587,"line_end":2587,"column_start":1,"column_end":4}},{"value":"/ An _encoding_ defines a mapping from a `u8` sequence to a `char` sequence","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":110907,"byte_end":110984,"line_start":2588,"line_end":2588,"column_start":1,"column_end":78}},{"value":"/ and, in most cases, vice versa. Each encoding has a name, an output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":110985,"byte_end":111056,"line_start":2589,"line_end":2589,"column_start":1,"column_end":72}},{"value":"/ encoding, and one or more labels.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111057,"byte_end":111094,"line_start":2590,"line_end":2590,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111095,"byte_end":111098,"line_start":2591,"line_end":2591,"column_start":1,"column_end":4}},{"value":"/ _Labels_ are ASCII-case-insensitive strings that are used to identify an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111099,"byte_end":111175,"line_start":2592,"line_end":2592,"column_start":1,"column_end":77}},{"value":"/ encoding in formats and protocols. The _name_ of the encoding is the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111176,"byte_end":111248,"line_start":2593,"line_end":2593,"column_start":1,"column_end":73}},{"value":"/ preferred label in the case appropriate for returning from the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111249,"byte_end":111315,"line_start":2594,"line_end":2594,"column_start":1,"column_end":67}},{"value":"/ [`characterSet`][2] property of the `Document` DOM interface.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111316,"byte_end":111381,"line_start":2595,"line_end":2595,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111382,"byte_end":111385,"line_start":2596,"line_end":2596,"column_start":1,"column_end":4}},{"value":"/ The _output encoding_ is the encoding used for form submission and URL","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111386,"byte_end":111460,"line_start":2597,"line_end":2597,"column_start":1,"column_end":75}},{"value":"/ parsing on Web pages in the encoding. This is UTF-8 for the replacement,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111461,"byte_end":111537,"line_start":2598,"line_end":2598,"column_start":1,"column_end":77}},{"value":"/ UTF-16LE and UTF-16BE encodings and the encoding itself for other","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111538,"byte_end":111607,"line_start":2599,"line_end":2599,"column_start":1,"column_end":70}},{"value":"/ encodings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111608,"byte_end":111622,"line_start":2600,"line_end":2600,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111623,"byte_end":111626,"line_start":2601,"line_end":2601,"column_start":1,"column_end":4}},{"value":"/ [1]: https://encoding.spec.whatwg.org/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111627,"byte_end":111669,"line_start":2602,"line_end":2602,"column_start":1,"column_end":43}},{"value":"/ [2]: https://dom.spec.whatwg.org/#dom-document-characterset","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111670,"byte_end":111733,"line_start":2603,"line_end":2603,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111734,"byte_end":111737,"line_start":2604,"line_end":2604,"column_start":1,"column_end":4}},{"value":"/ # Streaming vs. Non-Streaming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111738,"byte_end":111771,"line_start":2605,"line_end":2605,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111772,"byte_end":111775,"line_start":2606,"line_end":2606,"column_start":1,"column_end":4}},{"value":"/ When you have the entire input in a single buffer, you can use the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111776,"byte_end":111846,"line_start":2607,"line_end":2607,"column_start":1,"column_end":71}},{"value":"/ methods [`decode()`][3], [`decode_with_bom_removal()`][3],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111847,"byte_end":111909,"line_start":2608,"line_end":2608,"column_start":1,"column_end":63}},{"value":"/ [`decode_without_bom_handling()`][5],","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111910,"byte_end":111951,"line_start":2609,"line_end":2609,"column_start":1,"column_end":42}},{"value":"/ [`decode_without_bom_handling_and_without_replacement()`][6] and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":111952,"byte_end":112020,"line_start":2610,"line_end":2610,"column_start":1,"column_end":69}},{"value":"/ [`encode()`][7]. (These methods are available to Rust callers only and are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112021,"byte_end":112099,"line_start":2611,"line_end":2611,"column_start":1,"column_end":79}},{"value":"/ not available in the C API.) Unlike the rest of the API available to Rust,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112100,"byte_end":112178,"line_start":2612,"line_end":2612,"column_start":1,"column_end":79}},{"value":"/ these methods perform heap allocations. You should the `Decoder` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112179,"byte_end":112251,"line_start":2613,"line_end":2613,"column_start":1,"column_end":73}},{"value":"/ `Encoder` objects when your input is split into multiple buffers or when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112252,"byte_end":112328,"line_start":2614,"line_end":2614,"column_start":1,"column_end":77}},{"value":"/ you want to control the allocation of the output buffers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112329,"byte_end":112390,"line_start":2615,"line_end":2615,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112391,"byte_end":112394,"line_start":2616,"line_end":2616,"column_start":1,"column_end":4}},{"value":"/ [3]: #method.decode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112395,"byte_end":112418,"line_start":2617,"line_end":2617,"column_start":1,"column_end":24}},{"value":"/ [4]: #method.decode_with_bom_removal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112419,"byte_end":112459,"line_start":2618,"line_end":2618,"column_start":1,"column_end":41}},{"value":"/ [5]: #method.decode_without_bom_handling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112460,"byte_end":112504,"line_start":2619,"line_end":2619,"column_start":1,"column_end":45}},{"value":"/ [6]: #method.decode_without_bom_handling_and_without_replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112505,"byte_end":112573,"line_start":2620,"line_end":2620,"column_start":1,"column_end":69}},{"value":"/ [7]: #method.encode","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112574,"byte_end":112597,"line_start":2621,"line_end":2621,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112598,"byte_end":112601,"line_start":2622,"line_end":2622,"column_start":1,"column_end":4}},{"value":"/ # Instances","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112602,"byte_end":112617,"line_start":2623,"line_end":2623,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112618,"byte_end":112621,"line_start":2624,"line_end":2624,"column_start":1,"column_end":4}},{"value":"/ All instances of `Encoding` are statically allocated and have the `'static`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112622,"byte_end":112701,"line_start":2625,"line_end":2625,"column_start":1,"column_end":80}},{"value":"/ lifetime. There is precisely one unique `Encoding` instance for each","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112702,"byte_end":112774,"line_start":2626,"line_end":2626,"column_start":1,"column_end":73}},{"value":"/ encoding defined in the Encoding Standard.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112775,"byte_end":112821,"line_start":2627,"line_end":2627,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112822,"byte_end":112825,"line_start":2628,"line_end":2628,"column_start":1,"column_end":4}},{"value":"/ To obtain a reference to a particular encoding whose identity you know at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112826,"byte_end":112903,"line_start":2629,"line_end":2629,"column_start":1,"column_end":78}},{"value":"/ compile time, use a `static` that refers to encoding. There is a `static`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112904,"byte_end":112981,"line_start":2630,"line_end":2630,"column_start":1,"column_end":78}},{"value":"/ for each encoding. The `static`s are named in all caps with hyphens","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":112982,"byte_end":113053,"line_start":2631,"line_end":2631,"column_start":1,"column_end":72}},{"value":"/ replaced with underscores (and in C/C++ have `_ENCODING` appended to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113054,"byte_end":113130,"line_start":2632,"line_end":2632,"column_start":1,"column_end":77}},{"value":"/ name). For example, if you know at compile time that you will want to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113131,"byte_end":113204,"line_start":2633,"line_end":2633,"column_start":1,"column_end":74}},{"value":"/ decode using the UTF-8 encoding, use the `UTF_8` `static` (`UTF_8_ENCODING`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113205,"byte_end":113284,"line_start":2634,"line_end":2634,"column_start":1,"column_end":80}},{"value":"/ in C/C++).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113285,"byte_end":113299,"line_start":2635,"line_end":2635,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113300,"byte_end":113303,"line_start":2636,"line_end":2636,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are non-reference-typed forms ending with `_INIT` to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113304,"byte_end":113380,"line_start":2637,"line_end":2637,"column_start":1,"column_end":77}},{"value":"/ work around the problem that `static`s of the type `&'static Encoding`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113381,"byte_end":113455,"line_start":2638,"line_end":2638,"column_start":1,"column_end":75}},{"value":"/ cannot be used to initialize items of an array whose type is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113456,"byte_end":113520,"line_start":2639,"line_end":2639,"column_start":1,"column_end":65}},{"value":"/ `[&'static Encoding; N]`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113521,"byte_end":113550,"line_start":2640,"line_end":2640,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113551,"byte_end":113554,"line_start":2641,"line_end":2641,"column_start":1,"column_end":4}},{"value":"/ If you don't know what encoding you need at compile time and need to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113555,"byte_end":113627,"line_start":2642,"line_end":2642,"column_start":1,"column_end":73}},{"value":"/ dynamically get an encoding by label, use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113628,"byte_end":113673,"line_start":2643,"line_end":2643,"column_start":1,"column_end":46}},{"value":"/ <code>Encoding::<a href=\"#method.for_label\">for_label</a>(<var>label</var>)</code>.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113674,"byte_end":113761,"line_start":2644,"line_end":2644,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113762,"byte_end":113765,"line_start":2645,"line_end":2645,"column_start":1,"column_end":4}},{"value":"/ Instances of `Encoding` can be compared with `==` (in both Rust and in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113766,"byte_end":113840,"line_start":2646,"line_end":2646,"column_start":1,"column_end":75}},{"value":"/ C/C++).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113841,"byte_end":113852,"line_start":2647,"line_end":2647,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":115028,"byte_end":115037,"line_start":2675,"line_end":2675,"column_start":12,"column_end":21},"name":"for_label","qualname":"<Encoding>::for_label","value":"pub fn for_label(&[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Implements the\n [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)\n algorithm.","sig":null,"attributes":[{"value":"/ Implements the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113952,"byte_end":113970,"line_start":2654,"line_end":2654,"column_start":5,"column_end":23}},{"value":"/ [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113975,"byte_end":114054,"line_start":2655,"line_end":2655,"column_start":5,"column_end":84}},{"value":"/ algorithm.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114059,"byte_end":114073,"line_start":2656,"line_end":2656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114078,"byte_end":114081,"line_start":2657,"line_end":2657,"column_start":5,"column_end":8}},{"value":"/ If, after ASCII-lowercasing and removing leading and trailing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114086,"byte_end":114151,"line_start":2658,"line_end":2658,"column_start":5,"column_end":70}},{"value":"/ whitespace, the argument matches a label defined in the Encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114156,"byte_end":114224,"line_start":2659,"line_end":2659,"column_start":5,"column_end":73}},{"value":"/ Standard, `Some(&'static Encoding)` representing the corresponding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114229,"byte_end":114299,"line_start":2660,"line_end":2660,"column_start":5,"column_end":75}},{"value":"/ encoding is returned. If there is no match, `None` is returned.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114304,"byte_end":114371,"line_start":2661,"line_end":2661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114376,"byte_end":114379,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ This is the right method to use if the action upon the method returning","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114384,"byte_end":114459,"line_start":2663,"line_end":2663,"column_start":5,"column_end":80}},{"value":"/ `None` is to use a fallback encoding (e.g. `WINDOWS_1252`) instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114464,"byte_end":114535,"line_start":2664,"line_end":2664,"column_start":5,"column_end":76}},{"value":"/ When the action upon the method returning `None` is not to proceed with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114540,"byte_end":114615,"line_start":2665,"line_end":2665,"column_start":5,"column_end":80}},{"value":"/ a fallback but to refuse processing, `for_label_no_replacement()` is more","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114620,"byte_end":114697,"line_start":2666,"line_end":2666,"column_start":5,"column_end":82}},{"value":"/ appropriate.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114702,"byte_end":114718,"line_start":2667,"line_end":2667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114723,"byte_end":114726,"line_start":2668,"line_end":2668,"column_start":5,"column_end":8}},{"value":"/ The argument is of type `&[u8]` instead of `&str` to save callers","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114731,"byte_end":114800,"line_start":2669,"line_end":2669,"column_start":5,"column_end":74}},{"value":"/ that are extracting the label from a non-UTF-8 protocol the trouble","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114805,"byte_end":114876,"line_start":2670,"line_end":2670,"column_start":5,"column_end":76}},{"value":"/ of conversion to UTF-8. (If you have a `&str`, just call `.as_bytes()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114881,"byte_end":114955,"line_start":2671,"line_end":2671,"column_start":5,"column_end":79}},{"value":"/ on it.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114960,"byte_end":114971,"line_start":2672,"line_end":2672,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114976,"byte_end":114979,"line_start":2673,"line_end":2673,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":114984,"byte_end":115016,"line_start":2674,"line_end":2674,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119739,"byte_end":119763,"line_start":2797,"line_end":2797,"column_start":12,"column_end":36},"name":"for_label_no_replacement","qualname":"<Encoding>::for_label_no_replacement","value":"pub fn for_label_no_replacement(&[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" This method behaves the same as `for_label()`, except when `for_label()`\n would return `Some(REPLACEMENT)`, this method returns `None` instead.","sig":null,"attributes":[{"value":"/ This method behaves the same as `for_label()`, except when `for_label()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":118926,"byte_end":119002,"line_start":2782,"line_end":2782,"column_start":5,"column_end":81}},{"value":"/ would return `Some(REPLACEMENT)`, this method returns `None` instead.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119007,"byte_end":119080,"line_start":2783,"line_end":2783,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119085,"byte_end":119088,"line_start":2784,"line_end":2784,"column_start":5,"column_end":8}},{"value":"/ This method is useful in scenarios where a fatal error is required","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119093,"byte_end":119163,"line_start":2785,"line_end":2785,"column_start":5,"column_end":75}},{"value":"/ upon invalid label, because in those cases the caller typically wishes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119168,"byte_end":119242,"line_start":2786,"line_end":2786,"column_start":5,"column_end":79}},{"value":"/ to treat the labels that map to the replacement encoding as fatal","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119247,"byte_end":119316,"line_start":2787,"line_end":2787,"column_start":5,"column_end":74}},{"value":"/ errors, too.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119321,"byte_end":119337,"line_start":2788,"line_end":2788,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119342,"byte_end":119345,"line_start":2789,"line_end":2789,"column_start":5,"column_end":8}},{"value":"/ It is not OK to use this method when the action upon the method returning","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119350,"byte_end":119427,"line_start":2790,"line_end":2790,"column_start":5,"column_end":82}},{"value":"/ `None` is to use a fallback encoding (e.g. `WINDOWS_1252`). In such a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119432,"byte_end":119505,"line_start":2791,"line_end":2791,"column_start":5,"column_end":78}},{"value":"/ case, the `for_label()` method should be used instead in order to avoid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119510,"byte_end":119585,"line_start":2792,"line_end":2792,"column_start":5,"column_end":80}},{"value":"/ unsafe fallback for labels that `for_label()` maps to `Some(REPLACEMENT)`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119590,"byte_end":119668,"line_start":2793,"line_end":2793,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119673,"byte_end":119676,"line_start":2794,"line_end":2794,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119681,"byte_end":119713,"line_start":2795,"line_end":2795,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":119718,"byte_end":119727,"line_start":2796,"line_end":2796,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120619,"byte_end":120626,"line_start":2822,"line_end":2822,"column_start":12,"column_end":19},"name":"for_bom","qualname":"<Encoding>::for_bom","value":"pub fn for_bom(&[u8]) -> Option<(&'static Encoding, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Performs non-incremental BOM sniffing.","sig":null,"attributes":[{"value":"/ Performs non-incremental BOM sniffing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120093,"byte_end":120135,"line_start":2810,"line_end":2810,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120140,"byte_end":120143,"line_start":2811,"line_end":2811,"column_start":5,"column_end":8}},{"value":"/ The argument must either be a buffer representing the entire input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120148,"byte_end":120218,"line_start":2812,"line_end":2812,"column_start":5,"column_end":75}},{"value":"/ stream (non-streaming case) or a buffer representing at least the first","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120223,"byte_end":120298,"line_start":2813,"line_end":2813,"column_start":5,"column_end":80}},{"value":"/ three bytes of the input stream (streaming case).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120303,"byte_end":120356,"line_start":2814,"line_end":2814,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120361,"byte_end":120364,"line_start":2815,"line_end":2815,"column_start":5,"column_end":8}},{"value":"/ Returns `Some((UTF_8, 3))`, `Some((UTF_16LE, 2))` or","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120369,"byte_end":120425,"line_start":2816,"line_end":2816,"column_start":5,"column_end":61}},{"value":"/ `Some((UTF_16BE, 2))` if the argument starts with the UTF-8, UTF-16LE","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120430,"byte_end":120503,"line_start":2817,"line_end":2817,"column_start":5,"column_end":78}},{"value":"/ or UTF-16BE BOM or `None` otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120508,"byte_end":120548,"line_start":2818,"line_end":2818,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120553,"byte_end":120556,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120561,"byte_end":120593,"line_start":2820,"line_end":2820,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120598,"byte_end":120607,"line_start":2821,"line_end":2821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121204,"byte_end":121208,"line_start":2841,"line_end":2841,"column_start":12,"column_end":16},"name":"name","qualname":"<Encoding>::name","value":"pub fn name(&'static Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this encoding.","sig":null,"attributes":[{"value":"/ Returns the name of this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":120983,"byte_end":121021,"line_start":2834,"line_end":2834,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121026,"byte_end":121029,"line_start":2835,"line_end":2835,"column_start":5,"column_end":8}},{"value":"/ This name is appropriate to return as-is from the DOM","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121034,"byte_end":121091,"line_start":2836,"line_end":2836,"column_start":5,"column_end":62}},{"value":"/ `document.characterSet` property.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121096,"byte_end":121133,"line_start":2837,"line_end":2837,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121138,"byte_end":121141,"line_start":2838,"line_end":2838,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121146,"byte_end":121178,"line_start":2839,"line_end":2839,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121183,"byte_end":121192,"line_start":2840,"line_end":2840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121477,"byte_end":121498,"line_start":2850,"line_end":2850,"column_start":12,"column_end":33},"name":"can_encode_everything","qualname":"<Encoding>::can_encode_everything","value":"pub fn can_encode_everything(&'static Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the _output encoding_ of this encoding can encode every\n `char`. (Only true if the output encoding is UTF-8.)","sig":null,"attributes":[{"value":"/ Checks whether the _output encoding_ of this encoding can encode every","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121271,"byte_end":121345,"line_start":2845,"line_end":2845,"column_start":5,"column_end":79}},{"value":"/ `char`. (Only true if the output encoding is UTF-8.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121350,"byte_end":121406,"line_start":2846,"line_end":2846,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121411,"byte_end":121414,"line_start":2847,"line_end":2847,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121419,"byte_end":121451,"line_start":2848,"line_end":2848,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121456,"byte_end":121465,"line_start":2849,"line_end":2849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121760,"byte_end":121779,"line_start":2859,"line_end":2859,"column_start":12,"column_end":31},"name":"is_ascii_compatible","qualname":"<Encoding>::is_ascii_compatible","value":"pub fn is_ascii_compatible(&'static Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the bytes 0x00...0x7F map exclusively to the characters\n U+0000...U+007F and vice versa.","sig":null,"attributes":[{"value":"/ Checks whether the bytes 0x00...0x7F map exclusively to the characters","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121575,"byte_end":121649,"line_start":2854,"line_end":2854,"column_start":5,"column_end":79}},{"value":"/ U+0000...U+007F and vice versa.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121654,"byte_end":121689,"line_start":2855,"line_end":2855,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121694,"byte_end":121697,"line_start":2856,"line_end":2856,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121702,"byte_end":121734,"line_start":2857,"line_end":2857,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121739,"byte_end":121748,"line_start":2858,"line_end":2858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122377,"byte_end":122391,"line_start":2873,"line_end":2873,"column_start":12,"column_end":26},"name":"is_single_byte","qualname":"<Encoding>::is_single_byte","value":"pub fn is_single_byte(&'static Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this encoding maps one byte to one Basic Multilingual\n Plane code point (i.e. byte length equals decoded UTF-16 length) and\n vice versa (for mappable characters).","sig":null,"attributes":[{"value":"/ Checks whether this encoding maps one byte to one Basic Multilingual","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121910,"byte_end":121982,"line_start":2863,"line_end":2863,"column_start":5,"column_end":77}},{"value":"/ Plane code point (i.e. byte length equals decoded UTF-16 length) and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":121987,"byte_end":122059,"line_start":2864,"line_end":2864,"column_start":5,"column_end":77}},{"value":"/ vice versa (for mappable characters).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122064,"byte_end":122105,"line_start":2865,"line_end":2865,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122110,"byte_end":122113,"line_start":2866,"line_end":2866,"column_start":5,"column_end":8}},{"value":"/ `true` iff this encoding is on the list of [Legacy single-byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122118,"byte_end":122184,"line_start":2867,"line_end":2867,"column_start":5,"column_end":71}},{"value":"/ encodings](https://encoding.spec.whatwg.org/#legacy-single-byte-encodings)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122189,"byte_end":122267,"line_start":2868,"line_end":2868,"column_start":5,"column_end":83}},{"value":"/ in the spec or x-user-defined.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122272,"byte_end":122306,"line_start":2869,"line_end":2869,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122311,"byte_end":122314,"line_start":2870,"line_end":2870,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122319,"byte_end":122351,"line_start":2871,"line_end":2871,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122356,"byte_end":122365,"line_start":2872,"line_end":2872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122948,"byte_end":122963,"line_start":2889,"line_end":2889,"column_start":12,"column_end":27},"name":"output_encoding","qualname":"<Encoding>::output_encoding","value":"pub fn output_encoding(&'static Self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the _output encoding_ of this encoding. This is UTF-8 for\n UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","sig":null,"attributes":[{"value":"/ Returns the _output encoding_ of this encoding. This is UTF-8 for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122730,"byte_end":122799,"line_start":2884,"line_end":2884,"column_start":5,"column_end":74}},{"value":"/ UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122804,"byte_end":122877,"line_start":2885,"line_end":2885,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122882,"byte_end":122885,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122890,"byte_end":122922,"line_start":2887,"line_end":2887,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":122927,"byte_end":122936,"line_start":2888,"line_end":2888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124924,"byte_end":124930,"line_start":2932,"line_end":2932,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"pub fn decode<'a>(&'static Self, &'a [u8]) -> (Cow, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"/ Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123148,"byte_end":123220,"line_start":2897,"line_end":2897,"column_start":5,"column_end":77}},{"value":"/ malformed sequences replaced with the REPLACEMENT CHARACTER when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123225,"byte_end":123297,"line_start":2898,"line_end":2898,"column_start":5,"column_end":77}},{"value":"/ entire input is available as a single buffer (i.e. the end of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123302,"byte_end":123371,"line_start":2899,"line_end":2899,"column_start":5,"column_end":74}},{"value":"/ buffer marks the end of the stream).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123376,"byte_end":123416,"line_start":2900,"line_end":2900,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123421,"byte_end":123424,"line_start":2901,"line_end":2901,"column_start":5,"column_end":8}},{"value":"/ This method implements the (non-streaming version of) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123429,"byte_end":123490,"line_start":2902,"line_end":2902,"column_start":5,"column_end":66}},{"value":"/ [_decode_](https://encoding.spec.whatwg.org/#decode) spec concept.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123495,"byte_end":123565,"line_start":2903,"line_end":2903,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123570,"byte_end":123573,"line_start":2904,"line_end":2904,"column_start":5,"column_end":8}},{"value":"/ The second item in the returned tuple is the encoding that was actually","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123578,"byte_end":123653,"line_start":2905,"line_end":2905,"column_start":5,"column_end":80}},{"value":"/ used (which may differ from this encoding thanks to BOM sniffing).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123658,"byte_end":123728,"line_start":2906,"line_end":2906,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123733,"byte_end":123736,"line_start":2907,"line_end":2907,"column_start":5,"column_end":8}},{"value":"/ The third item in the returned tuple indicates whether there were","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123741,"byte_end":123810,"line_start":2908,"line_end":2908,"column_start":5,"column_end":74}},{"value":"/ malformed sequences (that were replaced with the REPLACEMENT CHARACTER).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123815,"byte_end":123891,"line_start":2909,"line_end":2909,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123896,"byte_end":123899,"line_start":2910,"line_end":2910,"column_start":5,"column_end":8}},{"value":"/ _Note:_ It is wrong to use this when the input buffer represents only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123904,"byte_end":123977,"line_start":2911,"line_end":2911,"column_start":5,"column_end":78}},{"value":"/ a segment of the input instead of the whole input. Use `new_decoder()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":123982,"byte_end":124056,"line_start":2912,"line_end":2912,"column_start":5,"column_end":79}},{"value":"/ when decoding segmented input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124061,"byte_end":124095,"line_start":2913,"line_end":2913,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124100,"byte_end":124103,"line_start":2914,"line_end":2914,"column_start":5,"column_end":8}},{"value":"/ This method performs a one or two heap allocations for the backing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124108,"byte_end":124178,"line_start":2915,"line_end":2915,"column_start":5,"column_end":75}},{"value":"/ buffer of the `String` when unable to borrow. (One allocation if not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124183,"byte_end":124255,"line_start":2916,"line_end":2916,"column_start":5,"column_end":77}},{"value":"/ errors and potentially another one in the presence of errors.) The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124260,"byte_end":124330,"line_start":2917,"line_end":2917,"column_start":5,"column_end":75}},{"value":"/ first allocation assumes jemalloc and may not be optimal with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124335,"byte_end":124400,"line_start":2918,"line_end":2918,"column_start":5,"column_end":70}},{"value":"/ allocators that do not use power-of-two buckets. A borrow is performed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124405,"byte_end":124479,"line_start":2919,"line_end":2919,"column_start":5,"column_end":79}},{"value":"/ if decoding UTF-8 and the input is valid UTF-8, if decoding an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124484,"byte_end":124550,"line_start":2920,"line_end":2920,"column_start":5,"column_end":71}},{"value":"/ ASCII-compatible encoding and the input is ASCII-only, or when decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124555,"byte_end":124630,"line_start":2921,"line_end":2921,"column_start":5,"column_end":80}},{"value":"/ ISO-2022-JP and the input is entirely in the ASCII state without state","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124635,"byte_end":124709,"line_start":2922,"line_end":2922,"column_start":5,"column_end":79}},{"value":"/ transitions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124714,"byte_end":124730,"line_start":2923,"line_end":2923,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124735,"byte_end":124738,"line_start":2924,"line_end":2924,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124743,"byte_end":124755,"line_start":2925,"line_end":2925,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124760,"byte_end":124763,"line_start":2926,"line_end":2926,"column_start":5,"column_end":8}},{"value":"/ If the size calculation for a heap-allocated backing buffer overflows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124768,"byte_end":124841,"line_start":2927,"line_end":2927,"column_start":5,"column_end":78}},{"value":"/ `usize`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124846,"byte_end":124858,"line_start":2928,"line_end":2928,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124863,"byte_end":124866,"line_start":2929,"line_end":2929,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124871,"byte_end":124898,"line_start":2930,"line_end":2930,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":124903,"byte_end":124912,"line_start":2931,"line_end":2931,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127019,"byte_end":127042,"line_start":2975,"line_end":2975,"column_start":12,"column_end":35},"name":"decode_with_bom_removal","qualname":"<Encoding>::decode_with_bom_removal","value":"pub fn decode_with_bom_removal<'a>(&'static Self, &'a [u8]) -> (Cow, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM removal_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"/ Decode complete input to `Cow<'a, str>` _with BOM removal_ and with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125337,"byte_end":125408,"line_start":2941,"line_end":2941,"column_start":5,"column_end":76}},{"value":"/ malformed sequences replaced with the REPLACEMENT CHARACTER when the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125413,"byte_end":125485,"line_start":2942,"line_end":2942,"column_start":5,"column_end":77}},{"value":"/ entire input is available as a single buffer (i.e. the end of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125490,"byte_end":125559,"line_start":2943,"line_end":2943,"column_start":5,"column_end":74}},{"value":"/ buffer marks the end of the stream).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125564,"byte_end":125604,"line_start":2944,"line_end":2944,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125609,"byte_end":125612,"line_start":2945,"line_end":2945,"column_start":5,"column_end":8}},{"value":"/ When invoked on `UTF_8`, this method implements the (non-streaming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125617,"byte_end":125687,"line_start":2946,"line_end":2946,"column_start":5,"column_end":75}},{"value":"/ version of) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125692,"byte_end":125711,"line_start":2947,"line_end":2947,"column_start":5,"column_end":24}},{"value":"/ [_UTF-8 decode_](https://encoding.spec.whatwg.org/#utf-8-decode) spec","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125716,"byte_end":125789,"line_start":2948,"line_end":2948,"column_start":5,"column_end":78}},{"value":"/ concept.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125794,"byte_end":125806,"line_start":2949,"line_end":2949,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125811,"byte_end":125814,"line_start":2950,"line_end":2950,"column_start":5,"column_end":8}},{"value":"/ The second item in the returned pair indicates whether there were","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125819,"byte_end":125888,"line_start":2951,"line_end":2951,"column_start":5,"column_end":74}},{"value":"/ malformed sequences (that were replaced with the REPLACEMENT CHARACTER).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125893,"byte_end":125969,"line_start":2952,"line_end":2952,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125974,"byte_end":125977,"line_start":2953,"line_end":2953,"column_start":5,"column_end":8}},{"value":"/ _Note:_ It is wrong to use this when the input buffer represents only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":125982,"byte_end":126055,"line_start":2954,"line_end":2954,"column_start":5,"column_end":78}},{"value":"/ a segment of the input instead of the whole input. Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126060,"byte_end":126118,"line_start":2955,"line_end":2955,"column_start":5,"column_end":63}},{"value":"/ `new_decoder_with_bom_removal()` when decoding segmented input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126123,"byte_end":126190,"line_start":2956,"line_end":2956,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126195,"byte_end":126198,"line_start":2957,"line_end":2957,"column_start":5,"column_end":8}},{"value":"/ This method performs a one or two heap allocations for the backing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126203,"byte_end":126273,"line_start":2958,"line_end":2958,"column_start":5,"column_end":75}},{"value":"/ buffer of the `String` when unable to borrow. (One allocation if not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126278,"byte_end":126350,"line_start":2959,"line_end":2959,"column_start":5,"column_end":77}},{"value":"/ errors and potentially another one in the presence of errors.) The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126355,"byte_end":126425,"line_start":2960,"line_end":2960,"column_start":5,"column_end":75}},{"value":"/ first allocation assumes jemalloc and may not be optimal with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126430,"byte_end":126495,"line_start":2961,"line_end":2961,"column_start":5,"column_end":70}},{"value":"/ allocators that do not use power-of-two buckets. A borrow is performed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126500,"byte_end":126574,"line_start":2962,"line_end":2962,"column_start":5,"column_end":79}},{"value":"/ if decoding UTF-8 and the input is valid UTF-8, if decoding an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126579,"byte_end":126645,"line_start":2963,"line_end":2963,"column_start":5,"column_end":71}},{"value":"/ ASCII-compatible encoding and the input is ASCII-only, or when decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126650,"byte_end":126725,"line_start":2964,"line_end":2964,"column_start":5,"column_end":80}},{"value":"/ ISO-2022-JP and the input is entirely in the ASCII state without state","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126730,"byte_end":126804,"line_start":2965,"line_end":2965,"column_start":5,"column_end":79}},{"value":"/ transitions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126809,"byte_end":126825,"line_start":2966,"line_end":2966,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126830,"byte_end":126833,"line_start":2967,"line_end":2967,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126838,"byte_end":126850,"line_start":2968,"line_end":2968,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126855,"byte_end":126858,"line_start":2969,"line_end":2969,"column_start":5,"column_end":8}},{"value":"/ If the size calculation for a heap-allocated backing buffer overflows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126863,"byte_end":126936,"line_start":2970,"line_end":2970,"column_start":5,"column_end":78}},{"value":"/ `usize`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126941,"byte_end":126953,"line_start":2971,"line_end":2971,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126958,"byte_end":126961,"line_start":2972,"line_end":2972,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126966,"byte_end":126993,"line_start":2973,"line_end":2973,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":126998,"byte_end":127007,"line_start":2974,"line_end":2974,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129196,"byte_end":129223,"line_start":3021,"line_end":3021,"column_start":12,"column_end":39},"name":"decode_without_bom_handling","qualname":"<Encoding>::decode_without_bom_handling","value":"pub fn decode_without_bom_handling<'a>(&'static Self, &'a [u8]) -> (Cow, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n with malformed sequences replaced with the REPLACEMENT CHARACTER when\n the entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"/ Decode complete input to `Cow<'a, str>` _without BOM handling_ and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127496,"byte_end":127566,"line_start":2988,"line_end":2988,"column_start":5,"column_end":75}},{"value":"/ with malformed sequences replaced with the REPLACEMENT CHARACTER when","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127571,"byte_end":127644,"line_start":2989,"line_end":2989,"column_start":5,"column_end":78}},{"value":"/ the entire input is available as a single buffer (i.e. the end of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127649,"byte_end":127722,"line_start":2990,"line_end":2990,"column_start":5,"column_end":78}},{"value":"/ buffer marks the end of the stream).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127727,"byte_end":127767,"line_start":2991,"line_end":2991,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127772,"byte_end":127775,"line_start":2992,"line_end":2992,"column_start":5,"column_end":8}},{"value":"/ When invoked on `UTF_8`, this method implements the (non-streaming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127780,"byte_end":127850,"line_start":2993,"line_end":2993,"column_start":5,"column_end":75}},{"value":"/ version of) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127855,"byte_end":127874,"line_start":2994,"line_end":2994,"column_start":5,"column_end":24}},{"value":"/ [_UTF-8 decode without BOM_](https://encoding.spec.whatwg.org/#utf-8-decode-without-bom)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127879,"byte_end":127971,"line_start":2995,"line_end":2995,"column_start":5,"column_end":97}},{"value":"/ spec concept.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127976,"byte_end":127993,"line_start":2996,"line_end":2996,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":127998,"byte_end":128001,"line_start":2997,"line_end":2997,"column_start":5,"column_end":8}},{"value":"/ The second item in the returned pair indicates whether there were","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128006,"byte_end":128075,"line_start":2998,"line_end":2998,"column_start":5,"column_end":74}},{"value":"/ malformed sequences (that were replaced with the REPLACEMENT CHARACTER).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128080,"byte_end":128156,"line_start":2999,"line_end":2999,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128161,"byte_end":128164,"line_start":3000,"line_end":3000,"column_start":5,"column_end":8}},{"value":"/ _Note:_ It is wrong to use this when the input buffer represents only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128169,"byte_end":128242,"line_start":3001,"line_end":3001,"column_start":5,"column_end":78}},{"value":"/ a segment of the input instead of the whole input. Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128247,"byte_end":128305,"line_start":3002,"line_end":3002,"column_start":5,"column_end":63}},{"value":"/ `new_decoder_without_bom_handling()` when decoding segmented input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128310,"byte_end":128381,"line_start":3003,"line_end":3003,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128386,"byte_end":128389,"line_start":3004,"line_end":3004,"column_start":5,"column_end":8}},{"value":"/ This method performs a one or two heap allocations for the backing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128394,"byte_end":128464,"line_start":3005,"line_end":3005,"column_start":5,"column_end":75}},{"value":"/ buffer of the `String` when unable to borrow. (One allocation if not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128469,"byte_end":128541,"line_start":3006,"line_end":3006,"column_start":5,"column_end":77}},{"value":"/ errors and potentially another one in the presence of errors.) The","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128546,"byte_end":128616,"line_start":3007,"line_end":3007,"column_start":5,"column_end":75}},{"value":"/ first allocation assumes jemalloc and may not be optimal with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128621,"byte_end":128686,"line_start":3008,"line_end":3008,"column_start":5,"column_end":70}},{"value":"/ allocators that do not use power-of-two buckets. A borrow is performed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128691,"byte_end":128765,"line_start":3009,"line_end":3009,"column_start":5,"column_end":79}},{"value":"/ if decoding UTF-8 and the input is valid UTF-8, if decoding an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128770,"byte_end":128836,"line_start":3010,"line_end":3010,"column_start":5,"column_end":71}},{"value":"/ ASCII-compatible encoding and the input is ASCII-only, or when decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128841,"byte_end":128916,"line_start":3011,"line_end":3011,"column_start":5,"column_end":80}},{"value":"/ ISO-2022-JP and the input is entirely in the ASCII state without state","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":128921,"byte_end":128995,"line_start":3012,"line_end":3012,"column_start":5,"column_end":79}},{"value":"/ transitions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129000,"byte_end":129016,"line_start":3013,"line_end":3013,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129021,"byte_end":129024,"line_start":3014,"line_end":3014,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129029,"byte_end":129041,"line_start":3015,"line_end":3015,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129046,"byte_end":129049,"line_start":3016,"line_end":3016,"column_start":5,"column_end":8}},{"value":"/ If the size calculation for a heap-allocated backing buffer overflows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129054,"byte_end":129127,"line_start":3017,"line_end":3017,"column_start":5,"column_end":78}},{"value":"/ `usize`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129132,"byte_end":129144,"line_start":3018,"line_end":3018,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129149,"byte_end":129152,"line_start":3019,"line_end":3019,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":129157,"byte_end":129184,"line_start":3020,"line_end":3020,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133545,"byte_end":133596,"line_start":3116,"line_end":3116,"column_start":12,"column_end":63},"name":"decode_without_bom_handling_and_without_replacement","qualname":"<Encoding>::decode_without_bom_handling_and_without_replacement","value":"pub fn decode_without_bom_handling_and_without_replacement<'a>(&'static Self,\n                                                               &'a [u8])\n-> Option<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n _with malformed sequences treated as fatal_ when the entire input is\n available as a single buffer (i.e. the end of the buffer marks the end\n of the stream).","sig":null,"attributes":[{"value":"/ Decode complete input to `Cow<'a, str>` _without BOM handling_ and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132106,"byte_end":132176,"line_start":3086,"line_end":3086,"column_start":5,"column_end":75}},{"value":"/ _with malformed sequences treated as fatal_ when the entire input is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132181,"byte_end":132253,"line_start":3087,"line_end":3087,"column_start":5,"column_end":77}},{"value":"/ available as a single buffer (i.e. the end of the buffer marks the end","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132258,"byte_end":132332,"line_start":3088,"line_end":3088,"column_start":5,"column_end":79}},{"value":"/ of the stream).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132337,"byte_end":132356,"line_start":3089,"line_end":3089,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132361,"byte_end":132364,"line_start":3090,"line_end":3090,"column_start":5,"column_end":8}},{"value":"/ When invoked on `UTF_8`, this method implements the (non-streaming","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132369,"byte_end":132439,"line_start":3091,"line_end":3091,"column_start":5,"column_end":75}},{"value":"/ version of) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132444,"byte_end":132463,"line_start":3092,"line_end":3092,"column_start":5,"column_end":24}},{"value":"/ [_UTF-8 decode without BOM or fail_](https://encoding.spec.whatwg.org/#utf-8-decode-without-bom-or-fail)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132468,"byte_end":132576,"line_start":3093,"line_end":3093,"column_start":5,"column_end":113}},{"value":"/ spec concept.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132581,"byte_end":132598,"line_start":3094,"line_end":3094,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132603,"byte_end":132606,"line_start":3095,"line_end":3095,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if a malformed sequence was encountered and the result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132611,"byte_end":132684,"line_start":3096,"line_end":3096,"column_start":5,"column_end":78}},{"value":"/ of the decode as `Some(String)` otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132689,"byte_end":132735,"line_start":3097,"line_end":3097,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132740,"byte_end":132743,"line_start":3098,"line_end":3098,"column_start":5,"column_end":8}},{"value":"/ _Note:_ It is wrong to use this when the input buffer represents only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132748,"byte_end":132821,"line_start":3099,"line_end":3099,"column_start":5,"column_end":78}},{"value":"/ a segment of the input instead of the whole input. Use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132826,"byte_end":132884,"line_start":3100,"line_end":3100,"column_start":5,"column_end":63}},{"value":"/ `new_decoder_without_bom_handling()` when decoding segmented input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132889,"byte_end":132960,"line_start":3101,"line_end":3101,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132965,"byte_end":132968,"line_start":3102,"line_end":3102,"column_start":5,"column_end":8}},{"value":"/ This method performs a single heap allocation for the backing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":132973,"byte_end":133038,"line_start":3103,"line_end":3103,"column_start":5,"column_end":70}},{"value":"/ buffer of the `String` when unable to borrow. A borrow is performed if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133043,"byte_end":133117,"line_start":3104,"line_end":3104,"column_start":5,"column_end":79}},{"value":"/ decoding UTF-8 and the input is valid UTF-8, if decoding an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133122,"byte_end":133185,"line_start":3105,"line_end":3105,"column_start":5,"column_end":68}},{"value":"/ ASCII-compatible encoding and the input is ASCII-only, or when decoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133190,"byte_end":133265,"line_start":3106,"line_end":3106,"column_start":5,"column_end":80}},{"value":"/ ISO-2022-JP and the input is entirely in the ASCII state without state","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133270,"byte_end":133344,"line_start":3107,"line_end":3107,"column_start":5,"column_end":79}},{"value":"/ transitions.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133349,"byte_end":133365,"line_start":3108,"line_end":3108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133370,"byte_end":133373,"line_start":3109,"line_end":3109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133378,"byte_end":133390,"line_start":3110,"line_end":3110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133395,"byte_end":133398,"line_start":3111,"line_end":3111,"column_start":5,"column_end":8}},{"value":"/ If the size calculation for a heap-allocated backing buffer overflows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133403,"byte_end":133476,"line_start":3112,"line_end":3112,"column_start":5,"column_end":78}},{"value":"/ `usize`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133481,"byte_end":133493,"line_start":3113,"line_end":3113,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133498,"byte_end":133501,"line_start":3114,"line_end":3114,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":133506,"byte_end":133533,"line_start":3115,"line_end":3115,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137777,"byte_end":137783,"line_start":3211,"line_end":3211,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"pub fn encode<'a>(&'static Self, &'a str) -> (Cow, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Encode complete input to `Cow<'a, [u8]>` with unmappable characters\n replaced with decimal numeric character references when the entire input\n is available as a single buffer (i.e. the end of the buffer marks the\n end of the stream).","sig":null,"attributes":[{"value":"/ Encode complete input to `Cow<'a, [u8]>` with unmappable characters","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":135791,"byte_end":135862,"line_start":3172,"line_end":3172,"column_start":5,"column_end":76}},{"value":"/ replaced with decimal numeric character references when the entire input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":135867,"byte_end":135943,"line_start":3173,"line_end":3173,"column_start":5,"column_end":81}},{"value":"/ is available as a single buffer (i.e. the end of the buffer marks the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":135948,"byte_end":136021,"line_start":3174,"line_end":3174,"column_start":5,"column_end":78}},{"value":"/ end of the stream).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136026,"byte_end":136049,"line_start":3175,"line_end":3175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136054,"byte_end":136057,"line_start":3176,"line_end":3176,"column_start":5,"column_end":8}},{"value":"/ This method implements the (non-streaming version of) the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136062,"byte_end":136123,"line_start":3177,"line_end":3177,"column_start":5,"column_end":66}},{"value":"/ [_encode_](https://encoding.spec.whatwg.org/#encode) spec concept. For","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136128,"byte_end":136202,"line_start":3178,"line_end":3178,"column_start":5,"column_end":79}},{"value":"/ the [_UTF-8 encode_](https://encoding.spec.whatwg.org/#utf-8-encode)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136207,"byte_end":136279,"line_start":3179,"line_end":3179,"column_start":5,"column_end":77}},{"value":"/ spec concept, it is slightly more efficient to use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136284,"byte_end":136338,"line_start":3180,"line_end":3180,"column_start":5,"column_end":59}},{"value":"/ <code><var>string</var>.as_bytes()</code> instead of invoking this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136343,"byte_end":136413,"line_start":3181,"line_end":3181,"column_start":5,"column_end":75}},{"value":"/ method on `UTF_8`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136418,"byte_end":136440,"line_start":3182,"line_end":3182,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136445,"byte_end":136448,"line_start":3183,"line_end":3183,"column_start":5,"column_end":8}},{"value":"/ The second item in the returned tuple is the encoding that was actually","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136453,"byte_end":136528,"line_start":3184,"line_end":3184,"column_start":5,"column_end":80}},{"value":"/ used (which may differ from this encoding thanks to some encodings","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136533,"byte_end":136603,"line_start":3185,"line_end":3185,"column_start":5,"column_end":75}},{"value":"/ having UTF-8 as their output encoding).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136608,"byte_end":136651,"line_start":3186,"line_end":3186,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136656,"byte_end":136659,"line_start":3187,"line_end":3187,"column_start":5,"column_end":8}},{"value":"/ The third item in the returned tuple indicates whether there were","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136664,"byte_end":136733,"line_start":3188,"line_end":3188,"column_start":5,"column_end":74}},{"value":"/ unmappable characters (that were replaced with HTML numeric character","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136738,"byte_end":136811,"line_start":3189,"line_end":3189,"column_start":5,"column_end":78}},{"value":"/ references).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136816,"byte_end":136832,"line_start":3190,"line_end":3190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136837,"byte_end":136840,"line_start":3191,"line_end":3191,"column_start":5,"column_end":8}},{"value":"/ _Note:_ It is wrong to use this when the input buffer represents only","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136845,"byte_end":136918,"line_start":3192,"line_end":3192,"column_start":5,"column_end":78}},{"value":"/ a segment of the input instead of the whole input. Use `new_encoder()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":136923,"byte_end":136997,"line_start":3193,"line_end":3193,"column_start":5,"column_end":79}},{"value":"/ when encoding segmented output.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137002,"byte_end":137037,"line_start":3194,"line_end":3194,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137042,"byte_end":137045,"line_start":3195,"line_end":3195,"column_start":5,"column_end":8}},{"value":"/ When encoding to UTF-8 or when encoding an ASCII-only input to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137050,"byte_end":137118,"line_start":3196,"line_end":3196,"column_start":5,"column_end":73}},{"value":"/ ASCII-compatible encoding, this method returns a borrow of the input","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137123,"byte_end":137195,"line_start":3197,"line_end":3197,"column_start":5,"column_end":77}},{"value":"/ without a heap allocation. Otherwise, this method performs a single","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137200,"byte_end":137271,"line_start":3198,"line_end":3198,"column_start":5,"column_end":76}},{"value":"/ heap allocation for the backing buffer of the `Vec<u8>` if there are no","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137276,"byte_end":137351,"line_start":3199,"line_end":3199,"column_start":5,"column_end":80}},{"value":"/ unmappable characters and potentially multiple heap allocations if","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137356,"byte_end":137426,"line_start":3200,"line_end":3200,"column_start":5,"column_end":75}},{"value":"/ there are. These allocations are tuned for jemalloc and may not be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137431,"byte_end":137501,"line_start":3201,"line_end":3201,"column_start":5,"column_end":75}},{"value":"/ optimal when using a different allocator that doesn't use power-of-two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137506,"byte_end":137580,"line_start":3202,"line_end":3202,"column_start":5,"column_end":79}},{"value":"/ buckets.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137585,"byte_end":137597,"line_start":3203,"line_end":3203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137602,"byte_end":137605,"line_start":3204,"line_end":3204,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137610,"byte_end":137622,"line_start":3205,"line_end":3205,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137627,"byte_end":137630,"line_start":3206,"line_end":3206,"column_start":5,"column_end":8}},{"value":"/ If the size calculation for a heap-allocated backing buffer overflows","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137635,"byte_end":137708,"line_start":3207,"line_end":3207,"column_start":5,"column_end":78}},{"value":"/ `usize`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137713,"byte_end":137725,"line_start":3208,"line_end":3208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137730,"byte_end":137733,"line_start":3209,"line_end":3209,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":137738,"byte_end":137765,"line_start":3210,"line_end":3210,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140533,"byte_end":140544,"line_start":3277,"line_end":3277,"column_start":12,"column_end":23},"name":"new_decoder","qualname":"<Encoding>::new_decoder","value":"pub fn new_decoder(&'static Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM sniffing enabled.","sig":null,"attributes":[{"value":"/ Instantiates a new decoder for this encoding with BOM sniffing enabled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140237,"byte_end":140312,"line_start":3270,"line_end":3270,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140317,"byte_end":140320,"line_start":3271,"line_end":3271,"column_start":5,"column_end":8}},{"value":"/ BOM sniffing may cause the returned decoder to morph into a decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140325,"byte_end":140396,"line_start":3272,"line_end":3272,"column_start":5,"column_end":76}},{"value":"/ for UTF-8, UTF-16LE or UTF-16BE instead of this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140401,"byte_end":140462,"line_start":3273,"line_end":3273,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140467,"byte_end":140470,"line_start":3274,"line_end":3274,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140475,"byte_end":140507,"line_start":3275,"line_end":3275,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140512,"byte_end":140521,"line_start":3276,"line_end":3276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141123,"byte_end":141151,"line_start":3291,"line_end":3291,"column_start":12,"column_end":40},"name":"new_decoder_with_bom_removal","qualname":"<Encoding>::new_decoder_with_bom_removal","value":"pub fn new_decoder_with_bom_removal(&'static Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM removal.","sig":null,"attributes":[{"value":"/ Instantiates a new decoder for this encoding with BOM removal.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140659,"byte_end":140725,"line_start":3281,"line_end":3281,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140730,"byte_end":140733,"line_start":3282,"line_end":3282,"column_start":5,"column_end":8}},{"value":"/ If the input starts with bytes that are the BOM for this encoding,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140738,"byte_end":140808,"line_start":3283,"line_end":3283,"column_start":5,"column_end":75}},{"value":"/ those bytes are removed. However, the decoder never morphs into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140813,"byte_end":140882,"line_start":3284,"line_end":3284,"column_start":5,"column_end":74}},{"value":"/ decoder for another encoding: A BOM for another encoding is treated as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140887,"byte_end":140961,"line_start":3285,"line_end":3285,"column_start":5,"column_end":79}},{"value":"/ (potentially malformed) input to the decoding algorithm for this","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":140966,"byte_end":141034,"line_start":3286,"line_end":3286,"column_start":5,"column_end":73}},{"value":"/ encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141039,"byte_end":141052,"line_start":3287,"line_end":3287,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141057,"byte_end":141060,"line_start":3288,"line_end":3288,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141065,"byte_end":141097,"line_start":3289,"line_end":3289,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141102,"byte_end":141111,"line_start":3290,"line_end":3290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141839,"byte_end":141871,"line_start":3307,"line_end":3307,"column_start":12,"column_end":44},"name":"new_decoder_without_bom_handling","qualname":"<Encoding>::new_decoder_without_bom_handling","value":"pub fn new_decoder_without_bom_handling(&'static Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM handling disabled.","sig":null,"attributes":[{"value":"/ Instantiates a new decoder for this encoding with BOM handling disabled.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141267,"byte_end":141343,"line_start":3295,"line_end":3295,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141348,"byte_end":141351,"line_start":3296,"line_end":3296,"column_start":5,"column_end":8}},{"value":"/ If the input starts with bytes that look like a BOM, those bytes are","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141356,"byte_end":141428,"line_start":3297,"line_end":3297,"column_start":5,"column_end":77}},{"value":"/ not treated as a BOM. (Hence, the decoder never morphs into a decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141433,"byte_end":141506,"line_start":3298,"line_end":3298,"column_start":5,"column_end":78}},{"value":"/ for another encoding.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141511,"byte_end":141537,"line_start":3299,"line_end":3299,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141542,"byte_end":141545,"line_start":3300,"line_end":3300,"column_start":5,"column_end":8}},{"value":"/ _Note:_ If the caller has performed BOM sniffing on its own but has not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141550,"byte_end":141625,"line_start":3301,"line_end":3301,"column_start":5,"column_end":80}},{"value":"/ removed the BOM, the caller should use `new_decoder_with_bom_removal()`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141630,"byte_end":141705,"line_start":3302,"line_end":3302,"column_start":5,"column_end":80}},{"value":"/ instead of this method to cause the BOM to be removed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141710,"byte_end":141768,"line_start":3303,"line_end":3303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141773,"byte_end":141776,"line_start":3304,"line_end":3304,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141781,"byte_end":141813,"line_start":3305,"line_end":3305,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141818,"byte_end":141827,"line_start":3306,"line_end":3306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142127,"byte_end":142138,"line_start":3315,"line_end":3315,"column_start":12,"column_end":23},"name":"new_encoder","qualname":"<Encoding>::new_encoder","value":"pub fn new_encoder(&'static Self) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new encoder for the output encoding of this encoding.","sig":null,"attributes":[{"value":"/ Instantiates a new encoder for the output encoding of this encoding.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":141984,"byte_end":142056,"line_start":3311,"line_end":3311,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142061,"byte_end":142064,"line_start":3312,"line_end":3312,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142069,"byte_end":142101,"line_start":3313,"line_end":3313,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142106,"byte_end":142115,"line_start":3314,"line_end":3314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142711,"byte_end":142727,"line_start":3330,"line_end":3330,"column_start":12,"column_end":28},"name":"utf8_valid_up_to","qualname":"<Encoding>::utf8_valid_up_to","value":"pub fn utf8_valid_up_to(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates UTF-8.","sig":null,"attributes":[{"value":"/ Validates UTF-8.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142257,"byte_end":142277,"line_start":3320,"line_end":3320,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142282,"byte_end":142285,"line_start":3321,"line_end":3321,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the first byte that makes the input malformed as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142290,"byte_end":142363,"line_start":3322,"line_end":3322,"column_start":5,"column_end":78}},{"value":"/ UTF-8 or the length of the slice if the slice is entirely valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142368,"byte_end":142436,"line_start":3323,"line_end":3323,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142441,"byte_end":142444,"line_start":3324,"line_end":3324,"column_start":5,"column_end":8}},{"value":"/ This is currently faster than the corresponding standard library","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142449,"byte_end":142517,"line_start":3325,"line_end":3325,"column_start":5,"column_end":73}},{"value":"/ functionality. If this implementation gets upstreamed to the standard","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142522,"byte_end":142595,"line_start":3326,"line_end":3326,"column_start":5,"column_end":78}},{"value":"/ library, this method may be removed in the future.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142600,"byte_end":142654,"line_start":3327,"line_end":3327,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142659,"byte_end":142662,"line_start":3328,"line_end":3328,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142667,"byte_end":142699,"line_start":3329,"line_end":3329,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143032,"byte_end":143049,"line_start":3340,"line_end":3340,"column_start":12,"column_end":29},"name":"ascii_valid_up_to","qualname":"<Encoding>::ascii_valid_up_to","value":"pub fn ascii_valid_up_to(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ASCII.","sig":null,"attributes":[{"value":"/ Validates ASCII.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142796,"byte_end":142816,"line_start":3334,"line_end":3334,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142821,"byte_end":142824,"line_start":3335,"line_end":3335,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the first byte that makes the input malformed as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142829,"byte_end":142902,"line_start":3336,"line_end":3336,"column_start":5,"column_end":78}},{"value":"/ ASCII or the length of the slice if the slice is entirely valid.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142907,"byte_end":142975,"line_start":3337,"line_end":3337,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142980,"byte_end":142983,"line_start":3338,"line_end":3338,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":142988,"byte_end":143020,"line_start":3339,"line_end":3339,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143469,"byte_end":143498,"line_start":3352,"line_end":3352,"column_start":12,"column_end":41},"name":"iso_2022_jp_ascii_valid_up_to","qualname":"<Encoding>::iso_2022_jp_ascii_valid_up_to","value":"pub fn iso_2022_jp_ascii_valid_up_to(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ISO-2022-JP ASCII-state data.","sig":null,"attributes":[{"value":"/ Validates ISO-2022-JP ASCII-state data.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143119,"byte_end":143162,"line_start":3344,"line_end":3344,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143167,"byte_end":143170,"line_start":3345,"line_end":3345,"column_start":5,"column_end":8}},{"value":"/ Returns the index of the first byte that makes the input not","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143175,"byte_end":143239,"line_start":3346,"line_end":3346,"column_start":5,"column_end":69}},{"value":"/ representable in the ASCII state of ISO-2022-JP or the length of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143244,"byte_end":143316,"line_start":3347,"line_end":3347,"column_start":5,"column_end":77}},{"value":"/ slice if the slice is entirely representable in the ASCII state of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143321,"byte_end":143391,"line_start":3348,"line_end":3348,"column_start":5,"column_end":75}},{"value":"/ ISO-2022-JP.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143396,"byte_end":143412,"line_start":3349,"line_end":3349,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143417,"byte_end":143420,"line_start":3350,"line_end":3350,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143425,"byte_end":143457,"line_start":3351,"line_end":3351,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147271,"byte_end":147281,"line_start":3488,"line_end":3488,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::CoderResult::InputEmpty","value":"CoderResult::InputEmpty","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[{"value":"/ The input was exhausted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147020,"byte_end":147048,"line_start":3483,"line_end":3483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147053,"byte_end":147056,"line_start":3484,"line_end":3484,"column_start":5,"column_end":8}},{"value":"/ If this result was returned from a call where `last` was `true`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147061,"byte_end":147133,"line_start":3485,"line_end":3485,"column_start":5,"column_end":77}},{"value":"/ conversion process has completed. Otherwise, the caller should call a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147138,"byte_end":147211,"line_start":3486,"line_end":3486,"column_start":5,"column_end":78}},{"value":"/ decode or encode method again with more input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147216,"byte_end":147266,"line_start":3487,"line_end":3487,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147551,"byte_end":147561,"line_start":3495,"line_end":3495,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::CoderResult::OutputFull","value":"CoderResult::OutputFull","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":" The converter cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[{"value":"/ The converter cannot produce another unit of output, because the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147288,"byte_end":147363,"line_start":3490,"line_end":3490,"column_start":5,"column_end":80}},{"value":"/ buffer does not have enough space left.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147368,"byte_end":147411,"line_start":3491,"line_end":3491,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147416,"byte_end":147419,"line_start":3492,"line_end":3492,"column_start":5,"column_end":8}},{"value":"/ The caller must provide more output space upon the next call and re-push","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147424,"byte_end":147500,"line_start":3493,"line_end":3493,"column_start":5,"column_end":81}},{"value":"/ the remaining input to the converter.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147505,"byte_end":147546,"line_start":3494,"line_end":3494,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147002,"byte_end":147013,"line_start":3482,"line_end":3482,"column_start":10,"column_end":21},"name":"CoderResult","qualname":"::CoderResult","value":"pub enum CoderResult { InputEmpty, OutputFull, }","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1499}],"decl_id":null,"docs":" Result of a (potentially partial) decode or encode operation with\n replacement.\n","sig":null,"attributes":[{"value":"/ Result of a (potentially partial) decode or encode operation with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":146862,"byte_end":146931,"line_start":3478,"line_end":3478,"column_start":1,"column_end":70}},{"value":"/ replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":146932,"byte_end":146948,"line_start":3479,"line_end":3479,"column_start":1,"column_end":17}},{"value":"must_use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":146949,"byte_end":146960,"line_start":3480,"line_end":3480,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147954,"byte_end":147964,"line_start":3507,"line_end":3507,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::DecoderResult::InputEmpty","value":"DecoderResult::InputEmpty","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[{"value":"/ The input was exhausted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147715,"byte_end":147743,"line_start":3502,"line_end":3502,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147748,"byte_end":147751,"line_start":3503,"line_end":3503,"column_start":5,"column_end":8}},{"value":"/ If this result was returned from a call where `last` was `true`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147756,"byte_end":147828,"line_start":3504,"line_end":3504,"column_start":5,"column_end":77}},{"value":"/ decoding process has completed. Otherwise, the caller should call a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147833,"byte_end":147904,"line_start":3505,"line_end":3505,"column_start":5,"column_end":76}},{"value":"/ decode method again with more input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147909,"byte_end":147949,"line_start":3506,"line_end":3506,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148230,"byte_end":148240,"line_start":3514,"line_end":3514,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::DecoderResult::OutputFull","value":"DecoderResult::OutputFull","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" The decoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[{"value":"/ The decoder cannot produce another unit of output, because the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147971,"byte_end":148044,"line_start":3509,"line_end":3509,"column_start":5,"column_end":78}},{"value":"/ buffer does not have enough space left.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148049,"byte_end":148092,"line_start":3510,"line_end":3510,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148097,"byte_end":148100,"line_start":3511,"line_end":3511,"column_start":5,"column_end":8}},{"value":"/ The caller must provide more output space upon the next call and re-push","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148105,"byte_end":148181,"line_start":3512,"line_end":3512,"column_start":5,"column_end":81}},{"value":"/ the remaining input to the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148186,"byte_end":148225,"line_start":3513,"line_end":3513,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149148,"byte_end":149157,"line_start":3532,"line_end":3532,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::DecoderResult::Malformed","value":"DecoderResult::Malformed(u8, u8)","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" The decoder encountered a malformed byte sequence.","sig":null,"attributes":[{"value":"/ The decoder encountered a malformed byte sequence.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148247,"byte_end":148301,"line_start":3516,"line_end":3516,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148306,"byte_end":148309,"line_start":3517,"line_end":3517,"column_start":5,"column_end":8}},{"value":"/ The caller must either treat this as a fatal error or must append one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148314,"byte_end":148387,"line_start":3518,"line_end":3518,"column_start":5,"column_end":78}},{"value":"/ REPLACEMENT CHARACTER (U+FFFD) to the output and then re-push the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148392,"byte_end":148461,"line_start":3519,"line_end":3519,"column_start":5,"column_end":74}},{"value":"/ the remaining input to the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148466,"byte_end":148505,"line_start":3520,"line_end":3520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148510,"byte_end":148513,"line_start":3521,"line_end":3521,"column_start":5,"column_end":8}},{"value":"/ The first wrapped integer indicates the length of the malformed byte","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148518,"byte_end":148590,"line_start":3522,"line_end":3522,"column_start":5,"column_end":77}},{"value":"/ sequence. The second wrapped integer indicates the number of bytes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148595,"byte_end":148665,"line_start":3523,"line_end":3523,"column_start":5,"column_end":75}},{"value":"/ that were consumed after the malformed sequence. If the second","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148670,"byte_end":148736,"line_start":3524,"line_end":3524,"column_start":5,"column_end":71}},{"value":"/ integer is zero, the last byte that was consumed is the last byte of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148741,"byte_end":148813,"line_start":3525,"line_end":3525,"column_start":5,"column_end":77}},{"value":"/ the malformed sequence. Note that the malformed bytes may have been part","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148818,"byte_end":148894,"line_start":3526,"line_end":3526,"column_start":5,"column_end":81}},{"value":"/ of an earlier input buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148899,"byte_end":148930,"line_start":3527,"line_end":3527,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148935,"byte_end":148938,"line_start":3528,"line_end":3528,"column_start":5,"column_end":8}},{"value":"/ The first wrapped integer can have values 1, 2, 3 or 4. The second","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":148943,"byte_end":149013,"line_start":3529,"line_end":3529,"column_start":5,"column_end":75}},{"value":"/ wrapped integer can have values 0, 1, 2 or 3. The worst-case sum","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149018,"byte_end":149086,"line_start":3530,"line_end":3530,"column_start":5,"column_end":73}},{"value":"/ of the two is 6, which happens with ISO-2022-JP.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149091,"byte_end":149143,"line_start":3531,"line_end":3531,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147695,"byte_end":147708,"line_start":3501,"line_end":3501,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::DecoderResult","value":"pub enum DecoderResult { InputEmpty, OutputFull, Malformed(u8, u8), }","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514}],"decl_id":null,"docs":" Result of a (potentially partial) decode operation without replacement.\n","sig":null,"attributes":[{"value":"/ Result of a (potentially partial) decode operation without replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147566,"byte_end":147641,"line_start":3498,"line_end":3498,"column_start":1,"column_end":76}},{"value":"must_use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":147642,"byte_end":147653,"line_start":3499,"line_end":3499,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154389,"byte_end":154396,"line_start":3632,"line_end":3632,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":" A converter that decodes a byte stream into Unicode according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[{"value":"/ A converter that decodes a byte stream into Unicode according to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149216,"byte_end":149286,"line_start":3535,"line_end":3535,"column_start":1,"column_end":71}},{"value":"/ character encoding in a streaming (incremental) manner.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149287,"byte_end":149346,"line_start":3536,"line_end":3536,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149347,"byte_end":149350,"line_start":3537,"line_end":3537,"column_start":1,"column_end":4}},{"value":"/ The various `decode_*` methods take an input buffer (`src`) and an output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149351,"byte_end":149428,"line_start":3538,"line_end":3538,"column_start":1,"column_end":78}},{"value":"/ buffer `dst` both of which are caller-allocated. There are variants for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149429,"byte_end":149504,"line_start":3539,"line_end":3539,"column_start":1,"column_end":76}},{"value":"/ both UTF-8 and UTF-16 output buffers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149505,"byte_end":149546,"line_start":3540,"line_end":3540,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149547,"byte_end":149550,"line_start":3541,"line_end":3541,"column_start":1,"column_end":4}},{"value":"/ A `decode_*` method decodes bytes from `src` into Unicode characters stored","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149551,"byte_end":149630,"line_start":3542,"line_end":3542,"column_start":1,"column_end":80}},{"value":"/ into `dst` until one of the following three things happens:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149631,"byte_end":149694,"line_start":3543,"line_end":3543,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149695,"byte_end":149698,"line_start":3544,"line_end":3544,"column_start":1,"column_end":4}},{"value":"/ 1. A malformed byte sequence is encountered (`*_without_replacement`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149699,"byte_end":149771,"line_start":3545,"line_end":3545,"column_start":1,"column_end":73}},{"value":"/    variants only).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149772,"byte_end":149794,"line_start":3546,"line_end":3546,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149795,"byte_end":149798,"line_start":3547,"line_end":3547,"column_start":1,"column_end":4}},{"value":"/ 2. The output buffer has been filled so near capacity that the decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149799,"byte_end":149873,"line_start":3548,"line_end":3548,"column_start":1,"column_end":75}},{"value":"/    cannot be sure that processing an additional byte of input wouldn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149874,"byte_end":149948,"line_start":3549,"line_end":3549,"column_start":1,"column_end":75}},{"value":"/    cause so much output that the output buffer would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":149949,"byte_end":150015,"line_start":3550,"line_end":3550,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150016,"byte_end":150019,"line_start":3551,"line_end":3551,"column_start":1,"column_end":4}},{"value":"/ 3. All the input bytes have been processed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150020,"byte_end":150067,"line_start":3552,"line_end":3552,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150068,"byte_end":150071,"line_start":3553,"line_end":3553,"column_start":1,"column_end":4}},{"value":"/ The `decode_*` method then returns tuple of a status indicating which one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150072,"byte_end":150149,"line_start":3554,"line_end":3554,"column_start":1,"column_end":78}},{"value":"/ of the three reasons to return happened, how many input bytes were read,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150150,"byte_end":150226,"line_start":3555,"line_end":3555,"column_start":1,"column_end":77}},{"value":"/ how many output code units (`u8` when decoding into UTF-8 and `u16`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150227,"byte_end":150298,"line_start":3556,"line_end":3556,"column_start":1,"column_end":72}},{"value":"/ when decoding to UTF-16) were written (except when decoding into `String`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150299,"byte_end":150377,"line_start":3557,"line_end":3557,"column_start":1,"column_end":79}},{"value":"/ whose length change indicates this), and in the case of the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150378,"byte_end":150441,"line_start":3558,"line_end":3558,"column_start":1,"column_end":64}},{"value":"/ variants performing replacement, a boolean indicating whether an error was","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150442,"byte_end":150520,"line_start":3559,"line_end":3559,"column_start":1,"column_end":79}},{"value":"/ replaced with the REPLACEMENT CHARACTER during the call.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150521,"byte_end":150581,"line_start":3560,"line_end":3560,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150582,"byte_end":150585,"line_start":3561,"line_end":3561,"column_start":1,"column_end":4}},{"value":"/ The number of bytes \"written\" is what's logically written. Garbage may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150586,"byte_end":150663,"line_start":3562,"line_end":3562,"column_start":1,"column_end":78}},{"value":"/ written in the output buffer beyond the point logically written to.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150664,"byte_end":150735,"line_start":3563,"line_end":3563,"column_start":1,"column_end":72}},{"value":"/ Therefore, if you wish to decode into an `&mut str`, you should use the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150736,"byte_end":150811,"line_start":3564,"line_end":3564,"column_start":1,"column_end":76}},{"value":"/ methods that take an `&mut str` argument instead of the ones that take an","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150812,"byte_end":150889,"line_start":3565,"line_end":3565,"column_start":1,"column_end":78}},{"value":"/ `&mut [u8]` argument. The former take care of overwriting the trailing","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150890,"byte_end":150964,"line_start":3566,"line_end":3566,"column_start":1,"column_end":75}},{"value":"/ garbage to ensure the UTF-8 validity of the `&mut str` as a whole, but the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":150965,"byte_end":151043,"line_start":3567,"line_end":3567,"column_start":1,"column_end":79}},{"value":"/ latter don't.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151044,"byte_end":151061,"line_start":3568,"line_end":3568,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151062,"byte_end":151065,"line_start":3569,"line_end":3569,"column_start":1,"column_end":4}},{"value":"/ In the case of the `*_without_replacement` variants, the status is a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151066,"byte_end":151138,"line_start":3570,"line_end":3570,"column_start":1,"column_end":73}},{"value":"/ [`DecoderResult`][1] enumeration (possibilities `Malformed`, `OutputFull` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151139,"byte_end":151220,"line_start":3571,"line_end":3571,"column_start":1,"column_end":82}},{"value":"/ `InputEmpty` corresponding to the three cases listed above).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151221,"byte_end":151285,"line_start":3572,"line_end":3572,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151286,"byte_end":151289,"line_start":3573,"line_end":3573,"column_start":1,"column_end":4}},{"value":"/ In the case of methods whose name does not end with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151290,"byte_end":151345,"line_start":3574,"line_end":3574,"column_start":1,"column_end":56}},{"value":"/ `*_without_replacement`, malformed sequences are automatically replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151346,"byte_end":151421,"line_start":3575,"line_end":3575,"column_start":1,"column_end":76}},{"value":"/ with the REPLACEMENT CHARACTER and errors do not cause the methods to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151422,"byte_end":151495,"line_start":3576,"line_end":3576,"column_start":1,"column_end":74}},{"value":"/ return early.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151496,"byte_end":151513,"line_start":3577,"line_end":3577,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151514,"byte_end":151517,"line_start":3578,"line_end":3578,"column_start":1,"column_end":4}},{"value":"/ When decoding to UTF-8, the output buffer must have at least 4 bytes of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151518,"byte_end":151593,"line_start":3579,"line_end":3579,"column_start":1,"column_end":76}},{"value":"/ space. When decoding to UTF-16, the output buffer must have at least two","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151594,"byte_end":151670,"line_start":3580,"line_end":3580,"column_start":1,"column_end":77}},{"value":"/ UTF-16 code units (`u16`) of space.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151671,"byte_end":151710,"line_start":3581,"line_end":3581,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151711,"byte_end":151714,"line_start":3582,"line_end":3582,"column_start":1,"column_end":4}},{"value":"/ When decoding to UTF-8 without replacement, the methods are guaranteed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151715,"byte_end":151789,"line_start":3583,"line_end":3583,"column_start":1,"column_end":75}},{"value":"/ not to return indicating that more output space is needed if the length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151790,"byte_end":151865,"line_start":3584,"line_end":3584,"column_start":1,"column_end":76}},{"value":"/ of the output buffer is at least the length returned by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151866,"byte_end":151925,"line_start":3585,"line_end":3585,"column_start":1,"column_end":60}},{"value":"/ [`max_utf8_buffer_length_without_replacement()`][2]. When decoding to UTF-8","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":151926,"byte_end":152005,"line_start":3586,"line_end":3586,"column_start":1,"column_end":80}},{"value":"/ with replacement, the length of the output buffer that guarantees the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152006,"byte_end":152079,"line_start":3587,"line_end":3587,"column_start":1,"column_end":74}},{"value":"/ methods not to return indicating that more output space is needed is given","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152080,"byte_end":152158,"line_start":3588,"line_end":3588,"column_start":1,"column_end":79}},{"value":"/ by [`max_utf8_buffer_length()`][3]. When decoding to UTF-16 with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152159,"byte_end":152227,"line_start":3589,"line_end":3589,"column_start":1,"column_end":69}},{"value":"/ or without replacement, the length of the output buffer that guarantees","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152228,"byte_end":152303,"line_start":3590,"line_end":3590,"column_start":1,"column_end":76}},{"value":"/ the methods not to return indicating that more output space is needed is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152304,"byte_end":152380,"line_start":3591,"line_end":3591,"column_start":1,"column_end":77}},{"value":"/ given by [`max_utf16_buffer_length()`][4].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152381,"byte_end":152427,"line_start":3592,"line_end":3592,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152428,"byte_end":152431,"line_start":3593,"line_end":3593,"column_start":1,"column_end":4}},{"value":"/ The output written into `dst` is guaranteed to be valid UTF-8 or UTF-16,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152432,"byte_end":152508,"line_start":3594,"line_end":3594,"column_start":1,"column_end":77}},{"value":"/ and the output after each `decode_*` call is guaranteed to consist of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152509,"byte_end":152582,"line_start":3595,"line_end":3595,"column_start":1,"column_end":74}},{"value":"/ complete characters. (I.e. the code unit sequence for the last character is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152583,"byte_end":152662,"line_start":3596,"line_end":3596,"column_start":1,"column_end":80}},{"value":"/ guaranteed not to be split across output buffers.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152663,"byte_end":152717,"line_start":3597,"line_end":3597,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152718,"byte_end":152721,"line_start":3598,"line_end":3598,"column_start":1,"column_end":4}},{"value":"/ The boolean argument `last` indicates that the end of the stream is reached","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152722,"byte_end":152801,"line_start":3599,"line_end":3599,"column_start":1,"column_end":80}},{"value":"/ when all the bytes in `src` have been consumed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152802,"byte_end":152853,"line_start":3600,"line_end":3600,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152854,"byte_end":152857,"line_start":3601,"line_end":3601,"column_start":1,"column_end":4}},{"value":"/ A `Decoder` object can be used to incrementally decode a byte stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152858,"byte_end":152931,"line_start":3602,"line_end":3602,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152932,"byte_end":152935,"line_start":3603,"line_end":3603,"column_start":1,"column_end":4}},{"value":"/ During the processing of a single stream, the caller must call `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":152936,"byte_end":153013,"line_start":3604,"line_end":3604,"column_start":1,"column_end":78}},{"value":"/ zero or more times with `last` set to `false` and then call `decode_*` at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153014,"byte_end":153091,"line_start":3605,"line_end":3605,"column_start":1,"column_end":78}},{"value":"/ least once with `last` set to `true`. If `decode_*` returns `InputEmpty`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153092,"byte_end":153169,"line_start":3606,"line_end":3606,"column_start":1,"column_end":78}},{"value":"/ the processing of the stream has ended. Otherwise, the caller must call","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153170,"byte_end":153245,"line_start":3607,"line_end":3607,"column_start":1,"column_end":76}},{"value":"/ `decode_*` again with `last` set to `true` (or treat a `Malformed` result as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153246,"byte_end":153326,"line_start":3608,"line_end":3608,"column_start":1,"column_end":81}},{"value":"/  a fatal error).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153327,"byte_end":153347,"line_start":3609,"line_end":3609,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153348,"byte_end":153351,"line_start":3610,"line_end":3610,"column_start":1,"column_end":4}},{"value":"/ Once the stream has ended, the `Decoder` object must not be used anymore.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153352,"byte_end":153429,"line_start":3611,"line_end":3611,"column_start":1,"column_end":78}},{"value":"/ That is, you need to create another one to process another stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153430,"byte_end":153500,"line_start":3612,"line_end":3612,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153501,"byte_end":153504,"line_start":3613,"line_end":3613,"column_start":1,"column_end":4}},{"value":"/ When the decoder returns `OutputFull` or the decoder returns `Malformed` and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153505,"byte_end":153585,"line_start":3614,"line_end":3614,"column_start":1,"column_end":81}},{"value":"/ the caller does not wish to treat it as a fatal error, the input buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153586,"byte_end":153661,"line_start":3615,"line_end":3615,"column_start":1,"column_end":76}},{"value":"/ `src` may not have been completely consumed. In that case, the caller must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153662,"byte_end":153740,"line_start":3616,"line_end":3616,"column_start":1,"column_end":79}},{"value":"/ pass the unconsumed contents of `src` to `decode_*` again upon the next","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153741,"byte_end":153816,"line_start":3617,"line_end":3617,"column_start":1,"column_end":76}},{"value":"/ call.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153817,"byte_end":153826,"line_start":3618,"line_end":3618,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153827,"byte_end":153830,"line_start":3619,"line_end":3619,"column_start":1,"column_end":4}},{"value":"/ [1]: enum.DecoderResult.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153831,"byte_end":153863,"line_start":3620,"line_end":3620,"column_start":1,"column_end":33}},{"value":"/ [2]: #method.max_utf8_buffer_length_without_replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153864,"byte_end":153923,"line_start":3621,"line_end":3621,"column_start":1,"column_end":60}},{"value":"/ [3]: #method.max_utf8_buffer_length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153924,"byte_end":153963,"line_start":3622,"line_end":3622,"column_start":1,"column_end":40}},{"value":"/ [4]: #method.max_utf16_buffer_length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":153964,"byte_end":154004,"line_start":3623,"line_end":3623,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154005,"byte_end":154008,"line_start":3624,"line_end":3624,"column_start":1,"column_end":4}},{"value":"/ # Infinite loops","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154009,"byte_end":154029,"line_start":3625,"line_end":3625,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154030,"byte_end":154033,"line_start":3626,"line_end":3626,"column_start":1,"column_end":4}},{"value":"/ When converting with a fixed-size output buffer whose size is too small to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154034,"byte_end":154112,"line_start":3627,"line_end":3627,"column_start":1,"column_end":79}},{"value":"/ accommodate one character or (when applicable) one numeric character","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154113,"byte_end":154185,"line_start":3628,"line_end":3628,"column_start":1,"column_end":73}},{"value":"/ reference of output, an infinite loop ensues. When converting with a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154186,"byte_end":154258,"line_start":3629,"line_end":3629,"column_start":1,"column_end":73}},{"value":"/ fixed-size output buffer, it generally makes sense to make the buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154259,"byte_end":154332,"line_start":3630,"line_end":3630,"column_start":1,"column_end":74}},{"value":"/ fairly large (e.g. couple of kilobytes).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154333,"byte_end":154377,"line_start":3631,"line_end":3631,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155581,"byte_end":155589,"line_start":3668,"line_end":3668,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Decoder>::encoding","value":"pub fn encoding(&Self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Decoder` is for.","sig":null,"attributes":[{"value":"/ The `Encoding` this `Decoder` is for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155357,"byte_end":155398,"line_start":3661,"line_end":3661,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155403,"byte_end":155406,"line_start":3662,"line_end":3662,"column_start":5,"column_end":8}},{"value":"/ BOM sniffing can change the return value of this method during the life","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155411,"byte_end":155486,"line_start":3663,"line_end":3663,"column_start":5,"column_end":80}},{"value":"/ of the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155491,"byte_end":155510,"line_start":3664,"line_end":3664,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155515,"byte_end":155518,"line_start":3665,"line_end":3665,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155523,"byte_end":155555,"line_start":3666,"line_end":3666,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155560,"byte_end":155569,"line_start":3667,"line_end":3667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":156135,"byte_end":156157,"line_start":3681,"line_end":3681,"column_start":12,"column_end":34},"name":"max_utf8_buffer_length","qualname":"<Decoder>::max_utf8_buffer_length","value":"pub fn max_utf8_buffer_length(&Self, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _with replacement_.","sig":null,"attributes":[{"value":"/ Query the worst-case UTF-8 output size _with replacement_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155653,"byte_end":155715,"line_start":3672,"line_end":3672,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155720,"byte_end":155723,"line_start":3673,"line_end":3673,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in UTF-8 code units (`u8`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155728,"byte_end":155796,"line_start":3674,"line_end":3674,"column_start":5,"column_end":73}},{"value":"/ that will not overflow given the current state of the decoder and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155801,"byte_end":155870,"line_start":3675,"line_end":3675,"column_start":5,"column_end":74}},{"value":"/ `byte_length` number of additional input bytes when decoding with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155875,"byte_end":155944,"line_start":3676,"line_end":3676,"column_start":5,"column_end":74}},{"value":"/ errors handled by outputting a REPLACEMENT CHARACTER for each malformed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":155949,"byte_end":156024,"line_start":3677,"line_end":3677,"column_start":5,"column_end":80}},{"value":"/ sequence or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":156029,"byte_end":156078,"line_start":3678,"line_end":3678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":156083,"byte_end":156086,"line_start":3679,"line_end":3679,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":156091,"byte_end":156123,"line_start":3680,"line_end":3680,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":161074,"byte_end":161116,"line_start":3771,"line_end":3771,"column_start":12,"column_end":54},"name":"max_utf8_buffer_length_without_replacement","qualname":"<Decoder>::max_utf8_buffer_length_without_replacement","value":"pub fn max_utf8_buffer_length_without_replacement(&Self, usize)\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _without replacement_.","sig":null,"attributes":[{"value":"/ Query the worst-case UTF-8 output size _without replacement_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160506,"byte_end":160571,"line_start":3760,"line_end":3760,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160576,"byte_end":160579,"line_start":3761,"line_end":3761,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in UTF-8 code units (`u8`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160584,"byte_end":160652,"line_start":3762,"line_end":3762,"column_start":5,"column_end":73}},{"value":"/ that will not overflow given the current state of the decoder and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160657,"byte_end":160726,"line_start":3763,"line_end":3763,"column_start":5,"column_end":74}},{"value":"/ `byte_length` number of additional input bytes when decoding without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160731,"byte_end":160803,"line_start":3764,"line_end":3764,"column_start":5,"column_end":77}},{"value":"/ replacement error handling or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160808,"byte_end":160875,"line_start":3765,"line_end":3765,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160880,"byte_end":160883,"line_start":3766,"line_end":3766,"column_start":5,"column_end":8}},{"value":"/ Note that this value may be too small for the `_with_replacement` case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160888,"byte_end":160963,"line_start":3767,"line_end":3767,"column_start":5,"column_end":80}},{"value":"/ Use `max_utf8_buffer_length()` for that case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":160968,"byte_end":161017,"line_start":3768,"line_end":3768,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":161022,"byte_end":161025,"line_start":3769,"line_end":3769,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":161030,"byte_end":161062,"line_start":3770,"line_end":3770,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":166004,"byte_end":166018,"line_start":3864,"line_end":3864,"column_start":12,"column_end":26},"name":"decode_to_utf8","qualname":"<Decoder>::decode_to_utf8","value":"pub fn decode_to_utf8(&mut Self, &[u8], &mut [u8], bool)\n-> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-8 with malformed sequences","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165709,"byte_end":165783,"line_start":3857,"line_end":3857,"column_start":5,"column_end":79}},{"value":"/ replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165788,"byte_end":165832,"line_start":3858,"line_end":3858,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165837,"byte_end":165840,"line_start":3859,"line_end":3859,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165845,"byte_end":165917,"line_start":3860,"line_end":3860,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165922,"byte_end":165947,"line_start":3861,"line_end":3861,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165952,"byte_end":165955,"line_start":3862,"line_end":3862,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":165960,"byte_end":165992,"line_start":3863,"line_end":3863,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168404,"byte_end":168417,"line_start":3927,"line_end":3927,"column_start":12,"column_end":25},"name":"decode_to_str","qualname":"<Decoder>::decode_to_str","value":"pub fn decode_to_str(&mut Self, &[u8], &mut str, bool)\n-> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-8 with malformed sequences","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":167834,"byte_end":167908,"line_start":3915,"line_end":3915,"column_start":5,"column_end":79}},{"value":"/ replaced with the REPLACEMENT CHARACTER with type system signaling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":167913,"byte_end":167983,"line_start":3916,"line_end":3916,"column_start":5,"column_end":75}},{"value":"/ of UTF-8 validity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":167988,"byte_end":168010,"line_start":3917,"line_end":3917,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168015,"byte_end":168018,"line_start":3918,"line_end":3918,"column_start":5,"column_end":8}},{"value":"/ This methods calls `decode_to_utf8` and then zeroes","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168023,"byte_end":168078,"line_start":3919,"line_end":3919,"column_start":5,"column_end":60}},{"value":"/ out up to three bytes that aren't logically part of the write in order","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168083,"byte_end":168157,"line_start":3920,"line_end":3920,"column_start":5,"column_end":79}},{"value":"/ to retain the UTF-8 validity even for the unwritten part of the buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168162,"byte_end":168237,"line_start":3921,"line_end":3921,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168242,"byte_end":168245,"line_start":3922,"line_end":3922,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168250,"byte_end":168322,"line_start":3923,"line_end":3923,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168327,"byte_end":168352,"line_start":3924,"line_end":3924,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168357,"byte_end":168360,"line_start":3925,"line_end":3925,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":168365,"byte_end":168392,"line_start":3926,"line_end":3926,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170253,"byte_end":170269,"line_start":3971,"line_end":3971,"column_start":12,"column_end":28},"name":"decode_to_string","qualname":"<Decoder>::decode_to_string","value":"pub fn decode_to_string(&mut Self, &[u8], &mut String, bool)\n-> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER using a `String` receiver.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-8 with malformed sequences","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169376,"byte_end":169450,"line_start":3954,"line_end":3954,"column_start":5,"column_end":79}},{"value":"/ replaced with the REPLACEMENT CHARACTER using a `String` receiver.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169455,"byte_end":169525,"line_start":3955,"line_end":3955,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169530,"byte_end":169533,"line_start":3956,"line_end":3956,"column_start":5,"column_end":8}},{"value":"/ Like the others, this method follows the logic that the output buffer is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169538,"byte_end":169614,"line_start":3957,"line_end":3957,"column_start":5,"column_end":81}},{"value":"/ caller-allocated. This method treats the capacity of the `String` as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169619,"byte_end":169691,"line_start":3958,"line_end":3958,"column_start":5,"column_end":77}},{"value":"/ the output limit. That is, this method guarantees not to cause a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169696,"byte_end":169764,"line_start":3959,"line_end":3959,"column_start":5,"column_end":73}},{"value":"/ reallocation of the backing buffer of `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169769,"byte_end":169820,"line_start":3960,"line_end":3960,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169825,"byte_end":169828,"line_start":3961,"line_end":3961,"column_start":5,"column_end":8}},{"value":"/ The return value is a tuple that contains the `DecoderResult`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169833,"byte_end":169903,"line_start":3962,"line_end":3962,"column_start":5,"column_end":75}},{"value":"/ number of bytes read and a boolean indicating whether replacements","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169908,"byte_end":169978,"line_start":3963,"line_end":3963,"column_start":5,"column_end":75}},{"value":"/ were done. The number of bytes written is signaled via the length of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":169983,"byte_end":170055,"line_start":3964,"line_end":3964,"column_start":5,"column_end":77}},{"value":"/ the `String` changing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170060,"byte_end":170086,"line_start":3965,"line_end":3965,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170091,"byte_end":170094,"line_start":3966,"line_end":3966,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170099,"byte_end":170171,"line_start":3967,"line_end":3967,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170176,"byte_end":170201,"line_start":3968,"line_end":3968,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170206,"byte_end":170209,"line_start":3969,"line_end":3969,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":170214,"byte_end":170241,"line_start":3970,"line_end":3970,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171288,"byte_end":171322,"line_start":3998,"line_end":3998,"column_start":29,"column_end":63},"name":"decode_to_utf8_without_replacement","qualname":"<Decoder>::decode_to_utf8_without_replacement","value":"pub fn decode_to_utf8_without_replacement(&mut Self, &[u8], &mut [u8], bool)\n-> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8\n _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172180,"byte_end":172213,"line_start":4017,"line_end":4017,"column_start":12,"column_end":45},"name":"decode_to_str_without_replacement","qualname":"<Decoder>::decode_to_str_without_replacement","value":"pub fn decode_to_str_without_replacement(&mut Self, &[u8], &mut str, bool)\n-> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-8 with type system signaling","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171683,"byte_end":171759,"line_start":4006,"line_end":4006,"column_start":5,"column_end":81}},{"value":"/ of UTF-8 validity.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171764,"byte_end":171786,"line_start":4007,"line_end":4007,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171791,"byte_end":171794,"line_start":4008,"line_end":4008,"column_start":5,"column_end":8}},{"value":"/ This methods calls `decode_to_utf8` and then zeroes out up to three","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171799,"byte_end":171870,"line_start":4009,"line_end":4009,"column_start":5,"column_end":76}},{"value":"/ bytes that aren't logically part of the write in order to retain the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171875,"byte_end":171947,"line_start":4010,"line_end":4010,"column_start":5,"column_end":77}},{"value":"/ UTF-8 validity even for the unwritten part of the buffer.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":171952,"byte_end":172013,"line_start":4011,"line_end":4011,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172018,"byte_end":172021,"line_start":4012,"line_end":4012,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172026,"byte_end":172098,"line_start":4013,"line_end":4013,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172103,"byte_end":172128,"line_start":4014,"line_end":4014,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172133,"byte_end":172136,"line_start":4015,"line_end":4015,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":172141,"byte_end":172168,"line_start":4016,"line_end":4016,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173910,"byte_end":173946,"line_start":4059,"line_end":4059,"column_start":12,"column_end":48},"name":"decode_to_string_without_replacement","qualname":"<Decoder>::decode_to_string_without_replacement","value":"pub fn decode_to_string_without_replacement(&mut Self, &[u8], &mut String,\n                                            bool) -> (DecoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 using a `String` receiver.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-8 using a `String` receiver.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173168,"byte_end":173244,"line_start":4044,"line_end":4044,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173249,"byte_end":173252,"line_start":4045,"line_end":4045,"column_start":5,"column_end":8}},{"value":"/ Like the others, this method follows the logic that the output buffer is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173257,"byte_end":173333,"line_start":4046,"line_end":4046,"column_start":5,"column_end":81}},{"value":"/ caller-allocated. This method treats the capacity of the `String` as","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173338,"byte_end":173410,"line_start":4047,"line_end":4047,"column_start":5,"column_end":77}},{"value":"/ the output limit. That is, this method guarantees not to cause a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173415,"byte_end":173483,"line_start":4048,"line_end":4048,"column_start":5,"column_end":73}},{"value":"/ reallocation of the backing buffer of `String`.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173488,"byte_end":173539,"line_start":4049,"line_end":4049,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173544,"byte_end":173547,"line_start":4050,"line_end":4050,"column_start":5,"column_end":8}},{"value":"/ The return value is a pair that contains the `DecoderResult` and the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173552,"byte_end":173624,"line_start":4051,"line_end":4051,"column_start":5,"column_end":77}},{"value":"/ number of bytes read. The number of bytes written is signaled via","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173629,"byte_end":173698,"line_start":4052,"line_end":4052,"column_start":5,"column_end":74}},{"value":"/ the length of the `String` changing.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173703,"byte_end":173743,"line_start":4053,"line_end":4053,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173748,"byte_end":173751,"line_start":4054,"line_end":4054,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173756,"byte_end":173828,"line_start":4055,"line_end":4055,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173833,"byte_end":173858,"line_start":4056,"line_end":4056,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173863,"byte_end":173866,"line_start":4057,"line_end":4057,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":173871,"byte_end":173898,"line_start":4058,"line_end":4058,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":175027,"byte_end":175050,"line_start":4089,"line_end":4089,"column_start":12,"column_end":35},"name":"max_utf16_buffer_length","qualname":"<Decoder>::max_utf16_buffer_length","value":"pub fn max_utf16_buffer_length(&Self, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-16 output size (with or without replacement).","sig":null,"attributes":[{"value":"/ Query the worst-case UTF-16 output size (with or without replacement).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174462,"byte_end":174536,"line_start":4077,"line_end":4077,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174541,"byte_end":174544,"line_start":4078,"line_end":4078,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in UTF-16 code units (`u16`)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174549,"byte_end":174619,"line_start":4079,"line_end":4079,"column_start":5,"column_end":75}},{"value":"/ that will not overflow given the current state of the decoder and","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174624,"byte_end":174693,"line_start":4080,"line_end":4080,"column_start":5,"column_end":74}},{"value":"/ `byte_length` number of additional input bytes or `None` if `usize`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174698,"byte_end":174769,"line_start":4081,"line_end":4081,"column_start":5,"column_end":76}},{"value":"/ would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174774,"byte_end":174793,"line_start":4082,"line_end":4082,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174798,"byte_end":174801,"line_start":4083,"line_end":4083,"column_start":5,"column_end":8}},{"value":"/ Since the REPLACEMENT CHARACTER fits into one UTF-16 code unit, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174806,"byte_end":174877,"line_start":4084,"line_end":4084,"column_start":5,"column_end":76}},{"value":"/ return value of this method applies also in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174882,"byte_end":174933,"line_start":4085,"line_end":4085,"column_start":5,"column_end":56}},{"value":"/ `_without_replacement` case.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174938,"byte_end":174970,"line_start":4086,"line_end":4086,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174975,"byte_end":174978,"line_start":4087,"line_end":4087,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":174983,"byte_end":175015,"line_start":4088,"line_end":4088,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179565,"byte_end":179580,"line_start":4172,"line_end":4172,"column_start":12,"column_end":27},"name":"decode_to_utf16","qualname":"<Decoder>::decode_to_utf16","value":"pub fn decode_to_utf16(&mut Self, &[u8], &mut [u16], bool)\n-> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"/ Incrementally decode a byte stream into UTF-16 with malformed sequences","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179269,"byte_end":179344,"line_start":4165,"line_end":4165,"column_start":5,"column_end":80}},{"value":"/ replaced with the REPLACEMENT CHARACTER.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179349,"byte_end":179393,"line_start":4166,"line_end":4166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179398,"byte_end":179401,"line_start":4167,"line_end":4167,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `decode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179406,"byte_end":179478,"line_start":4168,"line_end":4168,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179483,"byte_end":179508,"line_start":4169,"line_end":4169,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179513,"byte_end":179516,"line_start":4170,"line_end":4170,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":179521,"byte_end":179553,"line_start":4171,"line_end":4171,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":181569,"byte_end":181604,"line_start":4226,"line_end":4226,"column_start":29,"column_end":64},"name":"decode_to_utf16_without_replacement","qualname":"<Decoder>::decode_to_utf16_without_replacement","value":"pub fn decode_to_utf16_without_replacement(&mut Self, &[u8], &mut [u16], bool)\n-> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16\n _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182804,"byte_end":182832,"line_start":4251,"line_end":4251,"column_start":12,"column_end":40},"name":"latin1_byte_compatible_up_to","qualname":"<Decoder>::latin1_byte_compatible_up_to","value":"pub fn latin1_byte_compatible_up_to(&Self, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Checks for compatibility with storing Unicode scalar values as unsigned\n bytes taking into account the state of the decoder.","sig":null,"attributes":[{"value":"/ Checks for compatibility with storing Unicode scalar values as unsigned","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":181971,"byte_end":182046,"line_start":4234,"line_end":4234,"column_start":5,"column_end":80}},{"value":"/ bytes taking into account the state of the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182051,"byte_end":182106,"line_start":4235,"line_end":4235,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182111,"byte_end":182114,"line_start":4236,"line_end":4236,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decoder is not in a neutral state, including waiting","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182119,"byte_end":182197,"line_start":4237,"line_end":4237,"column_start":5,"column_end":83}},{"value":"/ for the BOM, or if the encoding is never Latin1-byte-compatible.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182202,"byte_end":182270,"line_start":4238,"line_end":4238,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182275,"byte_end":182278,"line_start":4239,"line_end":4239,"column_start":5,"column_end":8}},{"value":"/ Otherwise returns the index of the first byte whose unsigned value doesn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182283,"byte_end":182361,"line_start":4240,"line_end":4240,"column_start":5,"column_end":83}},{"value":"/ directly correspond to the decoded Unicode scalar value, or the length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182366,"byte_end":182440,"line_start":4241,"line_end":4241,"column_start":5,"column_end":79}},{"value":"/ of the input if all bytes in the input decode directly to scalar values","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182445,"byte_end":182520,"line_start":4242,"line_end":4242,"column_start":5,"column_end":80}},{"value":"/ corresponding to the unsigned byte values.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182525,"byte_end":182571,"line_start":4243,"line_end":4243,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182576,"byte_end":182579,"line_start":4244,"line_end":4244,"column_start":5,"column_end":8}},{"value":"/ Does not change the state of the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182584,"byte_end":182629,"line_start":4245,"line_end":4245,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182634,"byte_end":182637,"line_start":4246,"line_end":4246,"column_start":5,"column_end":8}},{"value":"/ Do not use this unless you are supporting SpiderMonkey/V8-style string","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182642,"byte_end":182716,"line_start":4247,"line_end":4247,"column_start":5,"column_end":79}},{"value":"/ storage optimizations.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182721,"byte_end":182747,"line_start":4248,"line_end":4248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182752,"byte_end":182755,"line_start":4249,"line_end":4249,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":182760,"byte_end":182792,"line_start":4250,"line_end":4250,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183563,"byte_end":183573,"line_start":4271,"line_end":4271,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::EncoderResult::InputEmpty","value":"EncoderResult::InputEmpty","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[{"value":"/ The input was exhausted.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183324,"byte_end":183352,"line_start":4266,"line_end":4266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183357,"byte_end":183360,"line_start":4267,"line_end":4267,"column_start":5,"column_end":8}},{"value":"/ If this result was returned from a call where `last` was `true`, the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183365,"byte_end":183437,"line_start":4268,"line_end":4268,"column_start":5,"column_end":77}},{"value":"/ decoding process has completed. Otherwise, the caller should call a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183442,"byte_end":183513,"line_start":4269,"line_end":4269,"column_start":5,"column_end":76}},{"value":"/ decode method again with more input.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183518,"byte_end":183558,"line_start":4270,"line_end":4270,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183839,"byte_end":183849,"line_start":4278,"line_end":4278,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::EncoderResult::OutputFull","value":"EncoderResult::OutputFull","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The encoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[{"value":"/ The encoder cannot produce another unit of output, because the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183580,"byte_end":183653,"line_start":4273,"line_end":4273,"column_start":5,"column_end":78}},{"value":"/ buffer does not have enough space left.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183658,"byte_end":183701,"line_start":4274,"line_end":4274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183706,"byte_end":183709,"line_start":4275,"line_end":4275,"column_start":5,"column_end":8}},{"value":"/ The caller must provide more output space upon the next call and re-push","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183714,"byte_end":183790,"line_start":4276,"line_end":4276,"column_start":5,"column_end":81}},{"value":"/ the remaining input to the decoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183795,"byte_end":183834,"line_start":4277,"line_end":4277,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184092,"byte_end":184102,"line_start":4285,"line_end":4285,"column_start":5,"column_end":15},"name":"Unmappable","qualname":"::EncoderResult::Unmappable","value":"EncoderResult::Unmappable(char)","parent":{"krate":0,"index":1537},"children":[],"decl_id":null,"docs":" The encoder encountered an unmappable character.","sig":null,"attributes":[{"value":"/ The encoder encountered an unmappable character.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183856,"byte_end":183908,"line_start":4280,"line_end":4280,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183913,"byte_end":183916,"line_start":4281,"line_end":4281,"column_start":5,"column_end":8}},{"value":"/ The caller must either treat this as a fatal error or must append","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183921,"byte_end":183990,"line_start":4282,"line_end":4282,"column_start":5,"column_end":74}},{"value":"/ a placeholder to the output and then re-push the remaining input to the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183995,"byte_end":184070,"line_start":4283,"line_end":4283,"column_start":5,"column_end":80}},{"value":"/ encoder.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184075,"byte_end":184087,"line_start":4284,"line_end":4284,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183304,"byte_end":183317,"line_start":4265,"line_end":4265,"column_start":10,"column_end":23},"name":"EncoderResult","qualname":"::EncoderResult","value":"pub enum EncoderResult { InputEmpty, OutputFull, Unmappable(char), }","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542}],"decl_id":null,"docs":" Result of a (potentially partial) encode operation without replacement.\n","sig":null,"attributes":[{"value":"/ Result of a (potentially partial) encode operation without replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183175,"byte_end":183250,"line_start":4262,"line_end":4262,"column_start":1,"column_end":76}},{"value":"must_use","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":183251,"byte_end":183262,"line_start":4263,"line_end":4263,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190551,"byte_end":190558,"line_start":4404,"line_end":4404,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A converter that encodes a Unicode stream into bytes according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[{"value":"/ A converter that encodes a Unicode stream into bytes according to a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184282,"byte_end":184353,"line_start":4294,"line_end":4294,"column_start":1,"column_end":72}},{"value":"/ character encoding in a streaming (incremental) manner.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184354,"byte_end":184413,"line_start":4295,"line_end":4295,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184414,"byte_end":184417,"line_start":4296,"line_end":4296,"column_start":1,"column_end":4}},{"value":"/ The various `encode_*` methods take an input buffer (`src`) and an output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184418,"byte_end":184495,"line_start":4297,"line_end":4297,"column_start":1,"column_end":78}},{"value":"/ buffer `dst` both of which are caller-allocated. There are variants for","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184496,"byte_end":184571,"line_start":4298,"line_end":4298,"column_start":1,"column_end":76}},{"value":"/ both UTF-8 and UTF-16 input buffers.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184572,"byte_end":184612,"line_start":4299,"line_end":4299,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184613,"byte_end":184616,"line_start":4300,"line_end":4300,"column_start":1,"column_end":4}},{"value":"/ An `encode_*` method encode characters from `src` into bytes characters","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184617,"byte_end":184692,"line_start":4301,"line_end":4301,"column_start":1,"column_end":76}},{"value":"/ stored into `dst` until one of the following three things happens:","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184693,"byte_end":184763,"line_start":4302,"line_end":4302,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184764,"byte_end":184767,"line_start":4303,"line_end":4303,"column_start":1,"column_end":4}},{"value":"/ 1. An unmappable character is encountered (`*_without_replacement` variants","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184768,"byte_end":184847,"line_start":4304,"line_end":4304,"column_start":1,"column_end":80}},{"value":"/    only).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184848,"byte_end":184861,"line_start":4305,"line_end":4305,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184862,"byte_end":184865,"line_start":4306,"line_end":4306,"column_start":1,"column_end":4}},{"value":"/ 2. The output buffer has been filled so near capacity that the decoder","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184866,"byte_end":184940,"line_start":4307,"line_end":4307,"column_start":1,"column_end":75}},{"value":"/    cannot be sure that processing an additional character of input wouldn't","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184941,"byte_end":185020,"line_start":4308,"line_end":4308,"column_start":1,"column_end":80}},{"value":"/    cause so much output that the output buffer would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185021,"byte_end":185087,"line_start":4309,"line_end":4309,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185088,"byte_end":185091,"line_start":4310,"line_end":4310,"column_start":1,"column_end":4}},{"value":"/ 3. All the input characters have been processed.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185092,"byte_end":185144,"line_start":4311,"line_end":4311,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185145,"byte_end":185148,"line_start":4312,"line_end":4312,"column_start":1,"column_end":4}},{"value":"/ The `encode_*` method then returns tuple of a status indicating which one","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185149,"byte_end":185226,"line_start":4313,"line_end":4313,"column_start":1,"column_end":78}},{"value":"/ of the three reasons to return happened, how many input code units (`u8`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185227,"byte_end":185303,"line_start":4314,"line_end":4314,"column_start":1,"column_end":77}},{"value":"/ when encoding from UTF-8 and `u16` when encoding from UTF-16) were read,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185304,"byte_end":185380,"line_start":4315,"line_end":4315,"column_start":1,"column_end":77}},{"value":"/ how many output bytes were written (except when encoding into `Vec<u8>`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185381,"byte_end":185457,"line_start":4316,"line_end":4316,"column_start":1,"column_end":77}},{"value":"/ whose length change indicates this), and in the case of the variants that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185458,"byte_end":185535,"line_start":4317,"line_end":4317,"column_start":1,"column_end":78}},{"value":"/ perform replacement, a boolean indicating whether an unmappable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185536,"byte_end":185603,"line_start":4318,"line_end":4318,"column_start":1,"column_end":68}},{"value":"/ character was replaced with a numeric character reference during the call.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185604,"byte_end":185682,"line_start":4319,"line_end":4319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185683,"byte_end":185686,"line_start":4320,"line_end":4320,"column_start":1,"column_end":4}},{"value":"/ The number of bytes \"written\" is what's logically written. Garbage may be","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185687,"byte_end":185764,"line_start":4321,"line_end":4321,"column_start":1,"column_end":78}},{"value":"/ written in the output buffer beyond the point logically written to.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185765,"byte_end":185836,"line_start":4322,"line_end":4322,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185837,"byte_end":185840,"line_start":4323,"line_end":4323,"column_start":1,"column_end":4}},{"value":"/ In the case of the methods whose name ends with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185841,"byte_end":185892,"line_start":4324,"line_end":4324,"column_start":1,"column_end":52}},{"value":"/ `*_without_replacement`, the status is an [`EncoderResult`][1] enumeration","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185893,"byte_end":185971,"line_start":4325,"line_end":4325,"column_start":1,"column_end":79}},{"value":"/ (possibilities `Unmappable`, `OutputFull` and `InputEmpty` corresponding to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":185972,"byte_end":186051,"line_start":4326,"line_end":4326,"column_start":1,"column_end":80}},{"value":"/ the three cases listed above).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186052,"byte_end":186086,"line_start":4327,"line_end":4327,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186087,"byte_end":186090,"line_start":4328,"line_end":4328,"column_start":1,"column_end":4}},{"value":"/ In the case of methods whose name does not end with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186091,"byte_end":186146,"line_start":4329,"line_end":4329,"column_start":1,"column_end":56}},{"value":"/ `*_without_replacement`, unmappable characters are automatically replaced","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186147,"byte_end":186224,"line_start":4330,"line_end":4330,"column_start":1,"column_end":78}},{"value":"/ with the corresponding numeric character references and unmappable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186225,"byte_end":186295,"line_start":4331,"line_end":4331,"column_start":1,"column_end":71}},{"value":"/ characters do not cause the methods to return early.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186296,"byte_end":186352,"line_start":4332,"line_end":4332,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186353,"byte_end":186356,"line_start":4333,"line_end":4333,"column_start":1,"column_end":4}},{"value":"/ When encoding from UTF-8 without replacement, the methods are guaranteed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186357,"byte_end":186433,"line_start":4334,"line_end":4334,"column_start":1,"column_end":77}},{"value":"/ not to return indicating that more output space is needed if the length","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186434,"byte_end":186509,"line_start":4335,"line_end":4335,"column_start":1,"column_end":76}},{"value":"/ of the output buffer is at least the length returned by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186510,"byte_end":186569,"line_start":4336,"line_end":4336,"column_start":1,"column_end":60}},{"value":"/ [`max_buffer_length_from_utf8_without_replacement()`][2]. When encoding from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186570,"byte_end":186650,"line_start":4337,"line_end":4337,"column_start":1,"column_end":81}},{"value":"/ UTF-8 with replacement, the length of the output buffer that guarantees the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186651,"byte_end":186730,"line_start":4338,"line_end":4338,"column_start":1,"column_end":80}},{"value":"/ methods not to return indicating that more output space is needed in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186731,"byte_end":186807,"line_start":4339,"line_end":4339,"column_start":1,"column_end":77}},{"value":"/ absence of unmappable characters is given by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186808,"byte_end":186856,"line_start":4340,"line_end":4340,"column_start":1,"column_end":49}},{"value":"/ [`max_buffer_length_from_utf8_if_no_unmappables()`][3]. When encoding from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186857,"byte_end":186935,"line_start":4341,"line_end":4341,"column_start":1,"column_end":79}},{"value":"/ UTF-16 without replacement, the methods are guaranteed not to return","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":186936,"byte_end":187008,"line_start":4342,"line_end":4342,"column_start":1,"column_end":73}},{"value":"/ indicating that more output space is needed if the length of the output","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187009,"byte_end":187084,"line_start":4343,"line_end":4343,"column_start":1,"column_end":76}},{"value":"/ buffer is at least the length returned by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187085,"byte_end":187130,"line_start":4344,"line_end":4344,"column_start":1,"column_end":46}},{"value":"/ [`max_buffer_length_from_utf16_without_replacement()`][4]. When encoding","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187131,"byte_end":187207,"line_start":4345,"line_end":4345,"column_start":1,"column_end":77}},{"value":"/ from UTF-16 with replacement, the the length of the output buffer that","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187208,"byte_end":187282,"line_start":4346,"line_end":4346,"column_start":1,"column_end":75}},{"value":"/ guarantees the methods not to return indicating that more output space is","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187283,"byte_end":187360,"line_start":4347,"line_end":4347,"column_start":1,"column_end":78}},{"value":"/ needed in the absence of unmappable characters is given by","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187361,"byte_end":187423,"line_start":4348,"line_end":4348,"column_start":1,"column_end":63}},{"value":"/ [`max_buffer_length_from_utf16_if_no_unmappables()`][5].","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187424,"byte_end":187484,"line_start":4349,"line_end":4349,"column_start":1,"column_end":61}},{"value":"/ When encoding with replacement, applications are not expected to size the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187485,"byte_end":187562,"line_start":4350,"line_end":4350,"column_start":1,"column_end":78}},{"value":"/ buffer for the worst case ahead of time but to resize the buffer if there","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187563,"byte_end":187640,"line_start":4351,"line_end":4351,"column_start":1,"column_end":78}},{"value":"/ are unmappable characters. This is why max length queries are only available","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187641,"byte_end":187721,"line_start":4352,"line_end":4352,"column_start":1,"column_end":81}},{"value":"/ for the case where there are no unmappable characters.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187722,"byte_end":187780,"line_start":4353,"line_end":4353,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187781,"byte_end":187784,"line_start":4354,"line_end":4354,"column_start":1,"column_end":4}},{"value":"/ When encoding from UTF-8, each `src` buffer _must_ be valid UTF-8. (When","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187785,"byte_end":187861,"line_start":4355,"line_end":4355,"column_start":1,"column_end":77}},{"value":"/ calling from Rust, the type system takes care of this.) When encoding from","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187862,"byte_end":187940,"line_start":4356,"line_end":4356,"column_start":1,"column_end":79}},{"value":"/ UTF-16, unpaired surrogates in the input are treated as U+FFFD REPLACEMENT","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":187941,"byte_end":188019,"line_start":4357,"line_end":4357,"column_start":1,"column_end":79}},{"value":"/ CHARACTERS. Therefore, in order for astral characters not to turn into a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188020,"byte_end":188096,"line_start":4358,"line_end":4358,"column_start":1,"column_end":77}},{"value":"/ pair of REPLACEMENT CHARACTERS, the caller must ensure that surrogate pairs","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188097,"byte_end":188176,"line_start":4359,"line_end":4359,"column_start":1,"column_end":80}},{"value":"/ are not split across input buffer boundaries.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188177,"byte_end":188226,"line_start":4360,"line_end":4360,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188227,"byte_end":188230,"line_start":4361,"line_end":4361,"column_start":1,"column_end":4}},{"value":"/ After an `encode_*` call returns, the output produced so far, taken as a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188231,"byte_end":188307,"line_start":4362,"line_end":4362,"column_start":1,"column_end":77}},{"value":"/ whole from the start of the stream, is guaranteed to consist of a valid","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188308,"byte_end":188383,"line_start":4363,"line_end":4363,"column_start":1,"column_end":76}},{"value":"/ byte sequence in the target encoding. (I.e. the code unit sequence for a","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188384,"byte_end":188460,"line_start":4364,"line_end":4364,"column_start":1,"column_end":77}},{"value":"/ character is guaranteed not to be split across output buffers. However, due","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188461,"byte_end":188540,"line_start":4365,"line_end":4365,"column_start":1,"column_end":80}},{"value":"/ to the stateful nature of ISO-2022-JP, the stream needs to be considered","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188541,"byte_end":188617,"line_start":4366,"line_end":4366,"column_start":1,"column_end":77}},{"value":"/ from the start for it to be valid. For other encodings, the validity holds","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188618,"byte_end":188696,"line_start":4367,"line_end":4367,"column_start":1,"column_end":79}},{"value":"/ on a per-output buffer basis.)","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188697,"byte_end":188731,"line_start":4368,"line_end":4368,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188732,"byte_end":188735,"line_start":4369,"line_end":4369,"column_start":1,"column_end":4}},{"value":"/ The boolean argument `last` indicates that the end of the stream is reached","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188736,"byte_end":188815,"line_start":4370,"line_end":4370,"column_start":1,"column_end":80}},{"value":"/ when all the characters in `src` have been consumed. This argument is needed","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188816,"byte_end":188896,"line_start":4371,"line_end":4371,"column_start":1,"column_end":81}},{"value":"/ for ISO-2022-JP and is ignored for other encodings.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188897,"byte_end":188952,"line_start":4372,"line_end":4372,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188953,"byte_end":188956,"line_start":4373,"line_end":4373,"column_start":1,"column_end":4}},{"value":"/ An `Encoder` object can be used to incrementally encode a byte stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":188957,"byte_end":189031,"line_start":4374,"line_end":4374,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189032,"byte_end":189035,"line_start":4375,"line_end":4375,"column_start":1,"column_end":4}},{"value":"/ During the processing of a single stream, the caller must call `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189036,"byte_end":189113,"line_start":4376,"line_end":4376,"column_start":1,"column_end":78}},{"value":"/ zero or more times with `last` set to `false` and then call `encode_*` at","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189114,"byte_end":189191,"line_start":4377,"line_end":4377,"column_start":1,"column_end":78}},{"value":"/ least once with `last` set to `true`. If `encode_*` returns `InputEmpty`,","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189192,"byte_end":189269,"line_start":4378,"line_end":4378,"column_start":1,"column_end":78}},{"value":"/ the processing of the stream has ended. Otherwise, the caller must call","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189270,"byte_end":189345,"line_start":4379,"line_end":4379,"column_start":1,"column_end":76}},{"value":"/ `encode_*` again with `last` set to `true` (or treat an `Unmappable` result","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189346,"byte_end":189425,"line_start":4380,"line_end":4380,"column_start":1,"column_end":80}},{"value":"/ as a fatal error).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189426,"byte_end":189448,"line_start":4381,"line_end":4381,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189449,"byte_end":189452,"line_start":4382,"line_end":4382,"column_start":1,"column_end":4}},{"value":"/ Once the stream has ended, the `Encoder` object must not be used anymore.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189453,"byte_end":189530,"line_start":4383,"line_end":4383,"column_start":1,"column_end":78}},{"value":"/ That is, you need to create another one to process another stream.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189531,"byte_end":189601,"line_start":4384,"line_end":4384,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189602,"byte_end":189605,"line_start":4385,"line_end":4385,"column_start":1,"column_end":4}},{"value":"/ When the encoder returns `OutputFull` or the encoder returns `Unmappable`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189606,"byte_end":189683,"line_start":4386,"line_end":4386,"column_start":1,"column_end":78}},{"value":"/ and the caller does not wish to treat it as a fatal error, the input buffer","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189684,"byte_end":189763,"line_start":4387,"line_end":4387,"column_start":1,"column_end":80}},{"value":"/ `src` may not have been completely consumed. In that case, the caller must","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189764,"byte_end":189842,"line_start":4388,"line_end":4388,"column_start":1,"column_end":79}},{"value":"/ pass the unconsumed contents of `src` to `encode_*` again upon the next","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189843,"byte_end":189918,"line_start":4389,"line_end":4389,"column_start":1,"column_end":76}},{"value":"/ call.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189919,"byte_end":189928,"line_start":4390,"line_end":4390,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189929,"byte_end":189932,"line_start":4391,"line_end":4391,"column_start":1,"column_end":4}},{"value":"/ [1]: enum.EncoderResult.html","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189933,"byte_end":189965,"line_start":4392,"line_end":4392,"column_start":1,"column_end":33}},{"value":"/ [2]: #method.max_buffer_length_from_utf8_without_replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":189966,"byte_end":190030,"line_start":4393,"line_end":4393,"column_start":1,"column_end":65}},{"value":"/ [3]: #method.max_buffer_length_from_utf8_if_no_unmappables","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190031,"byte_end":190093,"line_start":4394,"line_end":4394,"column_start":1,"column_end":63}},{"value":"/ [4]: #method.max_buffer_length_from_utf16_without_replacement","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190094,"byte_end":190159,"line_start":4395,"line_end":4395,"column_start":1,"column_end":66}},{"value":"/ [5]: #method.max_buffer_length_from_utf16_if_no_unmappables","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190160,"byte_end":190223,"line_start":4396,"line_end":4396,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190224,"byte_end":190227,"line_start":4397,"line_end":4397,"column_start":1,"column_end":4}},{"value":"/ # Infinite loops","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190228,"byte_end":190248,"line_start":4398,"line_end":4398,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190249,"byte_end":190252,"line_start":4399,"line_end":4399,"column_start":1,"column_end":4}},{"value":"/ When converting with a fixed-size output buffer whose size is too small to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190253,"byte_end":190331,"line_start":4400,"line_end":4400,"column_start":1,"column_end":79}},{"value":"/ accommodate one character of output, an infinite loop ensues. When","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190332,"byte_end":190402,"line_start":4401,"line_end":4401,"column_start":1,"column_end":71}},{"value":"/ converting with a fixed-size output buffer, it generally makes sense to","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190403,"byte_end":190478,"line_start":4402,"line_end":4402,"column_start":1,"column_end":76}},{"value":"/ make the buffer fairly large (e.g. couple of kilobytes).","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190479,"byte_end":190539,"line_start":4403,"line_end":4403,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190877,"byte_end":190885,"line_start":4419,"line_end":4419,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Encoder>::encoding","value":"pub fn encoding(&Self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Encoder` is for.\n","sig":null,"attributes":[{"value":"/ The `Encoding` this `Encoder` is for.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190810,"byte_end":190851,"line_start":4417,"line_end":4417,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190856,"byte_end":190865,"line_start":4418,"line_end":4418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191088,"byte_end":191105,"line_start":4426,"line_end":4426,"column_start":12,"column_end":29},"name":"has_pending_state","qualname":"<Encoder>::has_pending_state","value":"pub fn has_pending_state(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is an ISO-2022-JP encoder that's not in the\n ASCII state and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is an ISO-2022-JP encoder that's not in the","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190949,"byte_end":191019,"line_start":4423,"line_end":4423,"column_start":5,"column_end":75}},{"value":"/ ASCII state and `false` otherwise.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191024,"byte_end":191062,"line_start":4424,"line_end":4424,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191067,"byte_end":191076,"line_start":4425,"line_end":4425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191612,"byte_end":191657,"line_start":4439,"line_end":4439,"column_start":12,"column_end":57},"name":"max_buffer_length_from_utf8_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf8_if_no_unmappables","value":"pub fn max_buffer_length_from_utf8_if_no_unmappables(&Self, usize)\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 with\n replacement.","sig":null,"attributes":[{"value":"/ Query the worst-case output size when encoding from UTF-8 with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191175,"byte_end":191241,"line_start":4430,"line_end":4430,"column_start":5,"column_end":71}},{"value":"/ replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191246,"byte_end":191262,"line_start":4431,"line_end":4431,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191267,"byte_end":191270,"line_start":4432,"line_end":4432,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in bytes that will not overflow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191275,"byte_end":191348,"line_start":4433,"line_end":4433,"column_start":5,"column_end":78}},{"value":"/ given the current state of the encoder and `byte_length` number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191353,"byte_end":191423,"line_start":4434,"line_end":4434,"column_start":5,"column_end":75}},{"value":"/ additional input code units if there are no unmappable characters in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191428,"byte_end":191500,"line_start":4435,"line_end":4435,"column_start":5,"column_end":77}},{"value":"/ the input or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191505,"byte_end":191555,"line_start":4436,"line_end":4436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191560,"byte_end":191563,"line_start":4437,"line_end":4437,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191568,"byte_end":191600,"line_start":4438,"line_end":4438,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192366,"byte_end":192413,"line_start":4461,"line_end":4461,"column_start":12,"column_end":59},"name":"max_buffer_length_from_utf8_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf8_without_replacement","value":"pub fn max_buffer_length_from_utf8_without_replacement(&Self, usize)\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 without\n replacement.","sig":null,"attributes":[{"value":"/ Query the worst-case output size when encoding from UTF-8 without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":191985,"byte_end":192054,"line_start":4453,"line_end":4453,"column_start":5,"column_end":74}},{"value":"/ replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192059,"byte_end":192075,"line_start":4454,"line_end":4454,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192080,"byte_end":192083,"line_start":4455,"line_end":4455,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in bytes that will not overflow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192088,"byte_end":192161,"line_start":4456,"line_end":4456,"column_start":5,"column_end":78}},{"value":"/ given the current state of the encoder and `byte_length` number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192166,"byte_end":192236,"line_start":4457,"line_end":4457,"column_start":5,"column_end":75}},{"value":"/ additional input code units or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192241,"byte_end":192309,"line_start":4458,"line_end":4458,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192314,"byte_end":192317,"line_start":4459,"line_end":4459,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192322,"byte_end":192354,"line_start":4460,"line_end":4460,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192907,"byte_end":192923,"line_start":4476,"line_end":4476,"column_start":12,"column_end":28},"name":"encode_from_utf8","qualname":"<Encoder>::encode_from_utf8","value":"pub fn encode_from_utf8(&mut Self, &str, &mut [u8], bool)\n-> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-8 with unmappable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192589,"byte_end":192657,"line_start":4469,"line_end":4469,"column_start":5,"column_end":73}},{"value":"/ characters replaced with HTML (decimal) numeric character references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192662,"byte_end":192735,"line_start":4470,"line_end":4470,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192740,"byte_end":192743,"line_start":4471,"line_end":4471,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192748,"byte_end":192820,"line_start":4472,"line_end":4472,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192825,"byte_end":192850,"line_start":4473,"line_end":4473,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192855,"byte_end":192858,"line_start":4474,"line_end":4474,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":192863,"byte_end":192895,"line_start":4475,"line_end":4475,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196146,"byte_end":196169,"line_start":4558,"line_end":4558,"column_start":12,"column_end":35},"name":"encode_from_utf8_to_vec","qualname":"<Encoder>::encode_from_utf8_to_vec","value":"pub fn encode_from_utf8_to_vec(&mut Self, &str, &mut Vec<u8>, bool)\n-> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-8 with unmappable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":195833,"byte_end":195901,"line_start":4551,"line_end":4551,"column_start":5,"column_end":73}},{"value":"/ characters replaced with HTML (decimal) numeric character references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":195906,"byte_end":195979,"line_start":4552,"line_end":4552,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":195984,"byte_end":195987,"line_start":4553,"line_end":4553,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":195992,"byte_end":196064,"line_start":4554,"line_end":4554,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196069,"byte_end":196094,"line_start":4555,"line_end":4555,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196099,"byte_end":196102,"line_start":4556,"line_end":4556,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196107,"byte_end":196134,"line_start":4557,"line_end":4557,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196898,"byte_end":196934,"line_start":4581,"line_end":4581,"column_start":12,"column_end":48},"name":"encode_from_utf8_without_replacement","qualname":"<Encoder>::encode_from_utf8_without_replacement","value":"pub fn encode_from_utf8_without_replacement(&mut Self, &str, &mut [u8], bool)\n-> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-8 _without replacement_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196651,"byte_end":196726,"line_start":4575,"line_end":4575,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196731,"byte_end":196734,"line_start":4576,"line_end":4576,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196739,"byte_end":196811,"line_start":4577,"line_end":4577,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196816,"byte_end":196841,"line_start":4578,"line_end":4578,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196846,"byte_end":196849,"line_start":4579,"line_end":4579,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":196854,"byte_end":196886,"line_start":4580,"line_end":4580,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197370,"byte_end":197413,"line_start":4596,"line_end":4596,"column_start":12,"column_end":55},"name":"encode_from_utf8_to_vec_without_replacement","qualname":"<Encoder>::encode_from_utf8_to_vec_without_replacement","value":"pub fn encode_from_utf8_to_vec_without_replacement(&mut Self, &str,\n                                                   &mut Vec<u8>, bool)\n-> (EncoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-8 _without replacement_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197128,"byte_end":197203,"line_start":4590,"line_end":4590,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197208,"byte_end":197211,"line_start":4591,"line_end":4591,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197216,"byte_end":197288,"line_start":4592,"line_end":4592,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197293,"byte_end":197318,"line_start":4593,"line_end":4593,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197323,"byte_end":197326,"line_start":4594,"line_end":4594,"column_start":5,"column_end":8}},{"value":"/ Available to Rust only.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197331,"byte_end":197358,"line_start":4595,"line_end":4595,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198328,"byte_end":198374,"line_start":4622,"line_end":4622,"column_start":12,"column_end":58},"name":"max_buffer_length_from_utf16_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf16_if_no_unmappables","value":"pub fn max_buffer_length_from_utf16_if_no_unmappables(&Self, usize)\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 with\n replacement.","sig":null,"attributes":[{"value":"/ Query the worst-case output size when encoding from UTF-16 with","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197891,"byte_end":197958,"line_start":4613,"line_end":4613,"column_start":5,"column_end":72}},{"value":"/ replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197963,"byte_end":197979,"line_start":4614,"line_end":4614,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197984,"byte_end":197987,"line_start":4615,"line_end":4615,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in bytes that will not overflow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":197992,"byte_end":198065,"line_start":4616,"line_end":4616,"column_start":5,"column_end":78}},{"value":"/ given the current state of the encoder and `u16_length` number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198070,"byte_end":198139,"line_start":4617,"line_end":4617,"column_start":5,"column_end":74}},{"value":"/ additional input code units if there are no unmappable characters in","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198144,"byte_end":198216,"line_start":4618,"line_end":4618,"column_start":5,"column_end":77}},{"value":"/ the input or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198221,"byte_end":198271,"line_start":4619,"line_end":4619,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198276,"byte_end":198279,"line_start":4620,"line_end":4620,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198284,"byte_end":198316,"line_start":4621,"line_end":4621,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199082,"byte_end":199130,"line_start":4644,"line_end":4644,"column_start":12,"column_end":60},"name":"max_buffer_length_from_utf16_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf16_without_replacement","value":"pub fn max_buffer_length_from_utf16_without_replacement(&Self, usize)\n-> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 without\n replacement.","sig":null,"attributes":[{"value":"/ Query the worst-case output size when encoding from UTF-16 without","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198701,"byte_end":198771,"line_start":4636,"line_end":4636,"column_start":5,"column_end":75}},{"value":"/ replacement.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198776,"byte_end":198792,"line_start":4637,"line_end":4637,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198797,"byte_end":198800,"line_start":4638,"line_end":4638,"column_start":5,"column_end":8}},{"value":"/ Returns the size of the output buffer in bytes that will not overflow","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198805,"byte_end":198878,"line_start":4639,"line_end":4639,"column_start":5,"column_end":78}},{"value":"/ given the current state of the encoder and `u16_length` number of","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198883,"byte_end":198952,"line_start":4640,"line_end":4640,"column_start":5,"column_end":74}},{"value":"/ additional input code units or `None` if `usize` would overflow.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":198957,"byte_end":199025,"line_start":4641,"line_end":4641,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199030,"byte_end":199033,"line_start":4642,"line_end":4642,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199038,"byte_end":199070,"line_start":4643,"line_end":4643,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199624,"byte_end":199641,"line_start":4659,"line_end":4659,"column_start":12,"column_end":29},"name":"encode_from_utf16","qualname":"<Encoder>::encode_from_utf16","value":"pub fn encode_from_utf16(&mut Self, &[u16], &mut [u8], bool)\n-> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-16 with unmappable","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199305,"byte_end":199374,"line_start":4652,"line_end":4652,"column_start":5,"column_end":74}},{"value":"/ characters replaced with HTML (decimal) numeric character references.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199379,"byte_end":199452,"line_start":4653,"line_end":4653,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199457,"byte_end":199460,"line_start":4654,"line_end":4654,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199465,"byte_end":199537,"line_start":4655,"line_end":4655,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199542,"byte_end":199567,"line_start":4656,"line_end":4656,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199572,"byte_end":199575,"line_start":4657,"line_end":4657,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":199580,"byte_end":199612,"line_start":4658,"line_end":4658,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203219,"byte_end":203256,"line_start":4746,"line_end":4746,"column_start":12,"column_end":49},"name":"encode_from_utf16_without_replacement","qualname":"<Encoder>::encode_from_utf16_without_replacement","value":"pub fn encode_from_utf16_without_replacement(&mut Self, &[u16], &mut [u8],\n                                             bool)\n-> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 _without replacement_.","sig":null,"attributes":[{"value":"/ Incrementally encode into byte stream from UTF-16 _without replacement_.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":202971,"byte_end":203047,"line_start":4740,"line_end":4740,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203052,"byte_end":203055,"line_start":4741,"line_end":4741,"column_start":5,"column_end":8}},{"value":"/ See the documentation of the struct for documentation for `encode_*`","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203060,"byte_end":203132,"line_start":4742,"line_end":4742,"column_start":5,"column_end":77}},{"value":"/ methods collectively.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203137,"byte_end":203162,"line_start":4743,"line_end":4743,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203167,"byte_end":203170,"line_start":4744,"line_end":4744,"column_start":5,"column_end":8}},{"value":"/ Available via the C wrapper.","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":203175,"byte_end":203207,"line_start":4745,"line_end":4745,"column_start":5,"column_end":37}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/big5.rs","byte_start":319576,"byte_end":319587,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/big5.rs","byte_start":325555,"byte_end":325566,"line_start":169,"line_end":169,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":334959,"byte_end":334971,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":335460,"byte_end":335472,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":343574,"byte_end":343586,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_kr.rs","byte_start":352541,"byte_end":352553,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_kr.rs","byte_start":364225,"byte_end":364237,"line_start":293,"line_end":293,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":369988,"byte_end":370002,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":370553,"byte_end":370567,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":387552,"byte_end":387566,"line_start":444,"line_end":444,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/iso_2022_jp.rs","byte_start":399864,"byte_end":399880,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/iso_2022_jp.rs","byte_start":417831,"byte_end":417847,"line_start":475,"line_end":475,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/replacement.rs","byte_start":445083,"byte_end":445101,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/shift_jis.rs","byte_start":448408,"byte_end":448423,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/shift_jis.rs","byte_start":456492,"byte_end":456507,"line_start":205,"line_end":205,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/single_byte.rs","byte_start":465374,"byte_end":465391,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/single_byte.rs","byte_start":476892,"byte_end":476909,"line_start":257,"line_end":257,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":1386},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_16.rs","byte_start":497784,"byte_end":497796,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_8.rs","byte_start":535524,"byte_end":535535,"line_start":458,"line_end":458,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_8.rs","byte_start":549403,"byte_end":549414,"line_start":827,"line_end":827,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/x_user_defined.rs","byte_start":580047,"byte_end":580065,"line_start":29,"line_end":29,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":1393},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/x_user_defined.rs","byte_start":583546,"byte_end":583564,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3232798,"byte_end":3232807,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3233008,"byte_end":3233020,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3233280,"byte_end":3233297,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3242447,"byte_end":3242457,"line_start":368,"line_end":368,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3243280,"byte_end":3243294,"line_start":405,"line_end":405,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3243871,"byte_end":3243887,"line_start":432,"line_end":432,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3244480,"byte_end":3244494,"line_start":463,"line_end":463,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3245779,"byte_end":3245796,"line_start":513,"line_end":513,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3247501,"byte_end":3247517,"line_start":575,"line_end":575,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3255722,"byte_end":3255735,"line_start":796,"line_end":796,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3257009,"byte_end":3257025,"line_start":846,"line_end":846,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3258717,"byte_end":3258732,"line_start":908,"line_end":908,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3267156,"byte_end":3267167,"line_start":1134,"line_end":1134,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3278435,"byte_end":3278450,"line_start":1380,"line_end":1380,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3279278,"byte_end":3279295,"line_start":1413,"line_end":1413,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3279873,"byte_end":3279883,"line_start":1443,"line_end":1443,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3291092,"byte_end":3291106,"line_start":1700,"line_end":1700,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3291925,"byte_end":3291941,"line_start":1733,"line_end":1733,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3292530,"byte_end":3292543,"line_start":1764,"line_end":1764,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3293065,"byte_end":3293078,"line_start":1790,"line_end":1790,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3293775,"byte_end":3293790,"line_start":1821,"line_end":1821,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3294883,"byte_end":3294897,"line_start":1862,"line_end":1862,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3295832,"byte_end":3295847,"line_start":1902,"line_end":1902,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3299689,"byte_end":3299703,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3307739,"byte_end":3307753,"line_start":224,"line_end":224,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3313069,"byte_end":3313084,"line_start":356,"line_end":356,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113937,"byte_end":113945,"line_start":2653,"line_end":2653,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143597,"byte_end":143605,"line_start":3357,"line_end":3357,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143752,"byte_end":143760,"line_start":3364,"line_end":3364,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":144164,"byte_end":144172,"line_start":3380,"line_end":3380,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":144318,"byte_end":144326,"line_start":3387,"line_end":3387,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154503,"byte_end":154510,"line_start":3638,"line_end":3638,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184118,"byte_end":184131,"line_start":4288,"line_end":4288,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190631,"byte_end":190638,"line_start":4409,"line_end":4409,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":42216,"byte_end":42219,"line_start":746,"line_end":746,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1062}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/big5.rs","byte_start":319576,"byte_end":319587,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/big5.rs","byte_start":325555,"byte_end":325566,"line_start":169,"line_end":169,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":334959,"byte_end":334971,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":335460,"byte_end":335472,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_jp.rs","byte_start":343574,"byte_end":343586,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_kr.rs","byte_start":352541,"byte_end":352553,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/euc_kr.rs","byte_start":364225,"byte_end":364237,"line_start":293,"line_end":293,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":369988,"byte_end":370002,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":370553,"byte_end":370567,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/gb18030.rs","byte_start":387552,"byte_end":387566,"line_start":444,"line_end":444,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/iso_2022_jp.rs","byte_start":399864,"byte_end":399880,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/iso_2022_jp.rs","byte_start":417831,"byte_end":417847,"line_start":475,"line_end":475,"column_start":6,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/replacement.rs","byte_start":445083,"byte_end":445101,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/shift_jis.rs","byte_start":448408,"byte_end":448423,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/shift_jis.rs","byte_start":456492,"byte_end":456507,"line_start":205,"line_end":205,"column_start":6,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/single_byte.rs","byte_start":465374,"byte_end":465391,"line_start":20,"line_end":20,"column_start":6,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/single_byte.rs","byte_start":476892,"byte_end":476909,"line_start":257,"line_end":257,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_16.rs","byte_start":497784,"byte_end":497796,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_8.rs","byte_start":535524,"byte_end":535535,"line_start":458,"line_end":458,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/utf_8.rs","byte_start":549403,"byte_end":549414,"line_start":827,"line_end":827,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/x_user_defined.rs","byte_start":580047,"byte_end":580065,"line_start":29,"line_end":29,"column_start":6,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/x_user_defined.rs","byte_start":583546,"byte_end":583564,"line_start":148,"line_end":148,"column_start":6,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3232798,"byte_end":3232807,"line_start":73,"line_end":73,"column_start":17,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":610},"to":{"krate":0,"index":608}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3233008,"byte_end":3233020,"line_start":83,"line_end":83,"column_start":17,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":608}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3233280,"byte_end":3233297,"line_start":97,"line_end":97,"column_start":6,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3242447,"byte_end":3242457,"line_start":368,"line_end":368,"column_start":10,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3243280,"byte_end":3243294,"line_start":405,"line_end":405,"column_start":14,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3243871,"byte_end":3243887,"line_start":432,"line_end":432,"column_start":14,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3244480,"byte_end":3244494,"line_start":463,"line_end":463,"column_start":14,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3245779,"byte_end":3245796,"line_start":513,"line_end":513,"column_start":14,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3247501,"byte_end":3247517,"line_start":575,"line_end":575,"column_start":10,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3255722,"byte_end":3255735,"line_start":796,"line_end":796,"column_start":14,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3257009,"byte_end":3257025,"line_start":846,"line_end":846,"column_start":14,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3258717,"byte_end":3258732,"line_start":908,"line_end":908,"column_start":10,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3267156,"byte_end":3267167,"line_start":1134,"line_end":1134,"column_start":10,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3278435,"byte_end":3278450,"line_start":1380,"line_end":1380,"column_start":14,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3279278,"byte_end":3279295,"line_start":1413,"line_end":1413,"column_start":14,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3279873,"byte_end":3279883,"line_start":1443,"line_end":1443,"column_start":10,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3291092,"byte_end":3291106,"line_start":1700,"line_end":1700,"column_start":14,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3291925,"byte_end":3291941,"line_start":1733,"line_end":1733,"column_start":14,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3292530,"byte_end":3292543,"line_start":1764,"line_end":1764,"column_start":14,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3293065,"byte_end":3293078,"line_start":1790,"line_end":1790,"column_start":14,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3293775,"byte_end":3293790,"line_start":1821,"line_end":1821,"column_start":14,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3294883,"byte_end":3294897,"line_start":1862,"line_end":1862,"column_start":14,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/handles.rs","byte_start":3295832,"byte_end":3295847,"line_start":1902,"line_end":1902,"column_start":10,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3299689,"byte_end":3299703,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3307739,"byte_end":3307753,"line_start":224,"line_end":224,"column_start":6,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/variant.rs","byte_start":3313069,"byte_end":3313084,"line_start":356,"line_end":356,"column_start":6,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":113937,"byte_end":113945,"line_start":2653,"line_end":2653,"column_start":6,"column_end":14},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143597,"byte_end":143605,"line_start":3357,"line_end":3357,"column_start":20,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1250},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":143752,"byte_end":143760,"line_start":3364,"line_end":3364,"column_start":13,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1250},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":144164,"byte_end":144172,"line_start":3380,"line_end":3380,"column_start":15,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1250},"to":{"krate":1,"index":9501}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":144318,"byte_end":144326,"line_start":3387,"line_end":3387,"column_start":27,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1250},"to":{"krate":1,"index":9295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":154503,"byte_end":154510,"line_start":3638,"line_end":3638,"column_start":6,"column_end":13},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":184118,"byte_end":184131,"line_start":4288,"line_end":4288,"column_start":6,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zhangshaozhi/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.8.28/src/lib.rs","byte_start":190631,"byte_end":190638,"line_start":4409,"line_end":4409,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1310},"to":{"krate":4294967295,"index":4294967295}}]}